{"question": "where is the headquarter of Star Film Company?", "answer": "Montreuil", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Montreuil"], "entity_annotations": ["Star Film Company"], "answer_entity_name": null, "predicted_answer": "France", "extracted_entity": "Star_Film_Company"}
{"question": "where is the headquarter of Land Securities?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Land Securities"], "answer_entity_name": null, "predicted_answer": "London, England", "extracted_entity": "Land_Securities"}
{"question": "where is the headquarter of Novartis?", "answer": "Basel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Basel"], "entity_annotations": ["Novartis"], "answer_entity_name": null, "predicted_answer": "Basel, Switzerland.", "extracted_entity": "Novartis"}
{"question": "where is the headquarter of FamilyMart?", "answer": "Toshima-ku", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toshima-ku"], "entity_annotations": ["FamilyMart"], "answer_entity_name": null, "predicted_answer": "Japan", "extracted_entity": "FamilyMart"}
{"question": "where is the headquarter of Eisenbahnen und Verkehrsbetriebe Elbe-Weser?", "answer": "Zeven", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zeven"], "entity_annotations": ["Eisenbahnen und Verkehrsbetriebe Elbe-Weser"], "answer_entity_name": null, "predicted_answer": "Zeven and Bremerv\u00f6rde.", "extracted_entity": "Eisenbahnen_und_Verkehrsbetriebe_Elbe-Weser"}
{"question": "where is the headquarter of Qintex?", "answer": "Brisbane", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brisbane"], "entity_annotations": ["Qintex"], "answer_entity_name": null, "predicted_answer": "Brisbane, Australia", "extracted_entity": "Qintex"}
{"question": "where is the headquarter of SEB Group?", "answer": "Stockholm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stockholm"], "entity_annotations": ["SEB Group"], "answer_entity_name": null, "predicted_answer": "Stockholm, Sweden", "extracted_entity": "SEB_Group"}
{"question": "where is the headquarter of TC PipeLines?", "answer": "Calgary", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Calgary"], "entity_annotations": ["TC PipeLines"], "answer_entity_name": null, "predicted_answer": "Calgary, Alberta", "extracted_entity": "TC_PipeLines"}
{"question": "where is the headquarter of Bryn Mawr College?", "answer": "Bryn Mawr", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bryn Mawr"], "entity_annotations": ["Bryn Mawr College"], "answer_entity_name": null, "predicted_answer": "Bryn Mawr, Pennsylvania, United States", "extracted_entity": "Bryn_Mawr_College"}
{"question": "where is the headquarter of Right Stuf Inc.?", "answer": "Grimes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Grimes"], "entity_annotations": ["Right Stuf Inc."], "answer_entity_name": null, "predicted_answer": "Right Stuf Inc. (formerly known as The", "extracted_entity": "Right_Stuf_Inc."}
{"question": "where is the headquarter of In-Q-Tel?", "answer": "Arlington County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arlington County"], "entity_annotations": ["In-Q-Tel"], "answer_entity_name": null, "predicted_answer": "lington, Virginia", "extracted_entity": "In-Q-Tel"}
{"question": "where is the headquarter of FC Fakel Voronezh?", "answer": "Voronezh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Voronezh"], "entity_annotations": ["FC Fakel Voronezh"], "answer_entity_name": null, "predicted_answer": "Voronezh, Russia", "extracted_entity": "FC_Fakel_Voronezh"}
{"question": "where is the headquarter of Syncrude?", "answer": "Fort McMurray", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fort McMurray"], "entity_annotations": ["Syncrude"], "answer_entity_name": null, "predicted_answer": "Fort McMurray", "extracted_entity": "Syncrude"}
{"question": "where is the headquarter of Girl Scouts of the USA?", "answer": "New York", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York"], "entity_annotations": ["Girl Scouts of the USA"], "answer_entity_name": null, "predicted_answer": "New York, New York, United States", "extracted_entity": "Girl_Scouts_of_the_USA"}
{"question": "where is the headquarter of Nordhordland?", "answer": "Knarvik", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Knarvik"], "entity_annotations": ["Nordhordland"], "answer_entity_name": null, "predicted_answer": "Nordhordland is a traditional district in the", "extracted_entity": "Nordhordland"}
{"question": "where is the headquarter of African Handball Confederation?", "answer": "Abidjan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Abidjan"], "entity_annotations": ["African Handball Confederation"], "answer_entity_name": null, "predicted_answer": "Abidjan, Ivory Coast", "extracted_entity": "African_Handball_Confederation"}
{"question": "where is the headquarter of Canadian Northern Railway?", "answer": "Toronto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toronto"], "entity_annotations": ["Canadian Northern Railway"], "answer_entity_name": null, "predicted_answer": "the headquarter of Canadian Northern Railway is in Canada", "extracted_entity": "Canadian_Northern_Railway"}
{"question": "where is the headquarter of Plaid Cymru?", "answer": "Cardiff", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cardiff"], "entity_annotations": ["Plaid Cymru"], "answer_entity_name": null, "predicted_answer": "Plaid Cymru is based in Cardiff", "extracted_entity": "Plaid_Cymru"}
{"question": "where is the headquarter of R. Talsorian Games?", "answer": "Renton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Renton"], "entity_annotations": ["R. Talsorian Games"], "answer_entity_name": null, "predicted_answer": "Renton, Washington", "extracted_entity": "R._Talsorian_Games"}
{"question": "where is the headquarter of HSBC Bank USA?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["HSBC Bank USA"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "HSBC_Bank_USA"}
{"question": "where is the headquarter of Browning Arms Company?", "answer": "Morgan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Morgan"], "entity_annotations": ["Browning Arms Company"], "answer_entity_name": null, "predicted_answer": "Ogden, Utah, United States", "extracted_entity": "Browning_Arms_Company"}
{"question": "where is the headquarter of Michelin?", "answer": "Clermont-Ferrand", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clermont-Ferrand"], "entity_annotations": ["Michelin"], "answer_entity_name": null, "predicted_answer": "Clermont-Ferrand in the Auvergne", "extracted_entity": "Michelin"}
{"question": "where is the headquarter of Gulf Oil?", "answer": "Pittsburgh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pittsburgh"], "entity_annotations": ["Gulf Oil"], "answer_entity_name": null, "predicted_answer": "Wellesley, Massachusetts", "extracted_entity": "Gulf_Oil"}
{"question": "where is the headquarter of Baruch College?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Baruch College"], "answer_entity_name": null, "predicted_answer": "New York City, United States", "extracted_entity": "Baruch_College"}
{"question": "where is the headquarter of Nordic Council?", "answer": "Copenhagen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Copenhagen"], "entity_annotations": ["Nordic Council"], "answer_entity_name": null, "predicted_answer": "Copenhagen, Denmark", "extracted_entity": "Nordic_Council"}
{"question": "where is the headquarter of Canadian Hurricane Centre?", "answer": "Dartmouth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dartmouth"], "entity_annotations": ["Canadian Hurricane Centre"], "answer_entity_name": null, "predicted_answer": "Dartmouth, Nova Scotia", "extracted_entity": "Canadian_Hurricane_Centre"}
{"question": "where is the headquarter of CAT Telecom?", "answer": "Bangkok", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bangkok"], "entity_annotations": ["CAT Telecom"], "answer_entity_name": null, "predicted_answer": "Thailand", "extracted_entity": "CAT_Telecom"}
{"question": "where is the headquarter of Guerrilla Girls?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Guerrilla Girls"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "Guerrilla_Girls"}
{"question": "where is the headquarter of Grimsby Town F.C.?", "answer": "Cleethorpes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cleethorpes"], "entity_annotations": ["Grimsby Town F.C."], "answer_entity_name": null, "predicted_answer": "Cleethorpes, North East Lincolnshire,", "extracted_entity": "Grimsby_Town_F.C."}
{"question": "where is the headquarter of British Satellite Broadcasting?", "answer": "Marco Polo House", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Marco Polo House"], "entity_annotations": ["British Satellite Broadcasting"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "British_Satellite_Broadcasting"}
{"question": "where is the headquarter of Industri Kereta Api?", "answer": "Madiun", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Madiun"], "entity_annotations": ["Industri Kereta Api"], "answer_entity_name": null, "predicted_answer": "PT Industri Kereta Api (Persero),", "extracted_entity": "Industri_Kereta_Api"}
{"question": "where is the headquarter of Ministry of Foreign Affairs?", "answer": "Nouakchott", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nouakchott"], "entity_annotations": ["Ministry of Foreign Affairs"], "answer_entity_name": null, "predicted_answer": "The headquarter of Ministry of Foreign Affairs is in", "extracted_entity": "Ministry_of_Foreign_Affairs"}
{"question": "where is the headquarter of Maccabi Haifa?", "answer": "Haifa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Haifa"], "entity_annotations": ["Maccabi Haifa"], "answer_entity_name": null, "predicted_answer": "Haifa", "extracted_entity": "Maccabi_Haifa"}
{"question": "where is the headquarter of Cork City F.C.?", "answer": "Cork", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cork"], "entity_annotations": ["Cork City F.C."], "answer_entity_name": null, "predicted_answer": "Cork", "extracted_entity": "Cork_City_F.C."}
{"question": "where is the headquarter of AFC Ajax?", "answer": "Amsterdam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amsterdam"], "entity_annotations": ["AFC Ajax"], "answer_entity_name": null, "predicted_answer": "terdam", "extracted_entity": "AFC_Ajax"}
{"question": "where is the headquarter of A.S.D. Castel di Sangro Calcio?", "answer": "Castel di Sangro", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Castel di Sangro"], "entity_annotations": ["A.S.D. Castel di Sangro Calcio"], "answer_entity_name": null, "predicted_answer": "Castel di Sangro, Italy", "extracted_entity": "A.S.D._Castel_di_Sangro_Calcio"}
{"question": "where is the headquarter of Deutsche Bahn?", "answer": "Berlin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Berlin"], "entity_annotations": ["Deutsche Bahn"], "answer_entity_name": null, "predicted_answer": "he headquarter of Deutsche Bahn is in the", "extracted_entity": "Deutsche_Bahn"}
{"question": "where is the headquarter of Summerhill College?", "answer": "Sligo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sligo"], "entity_annotations": ["Summerhill College"], "answer_entity_name": null, "predicted_answer": "Summerhill College is a Roman Catholic voluntary secondary school", "extracted_entity": "Summerhill_College"}
{"question": "where is the headquarter of FN Herstal?", "answer": "Herstal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Herstal"], "entity_annotations": ["FN Herstal"], "answer_entity_name": null, "predicted_answer": "erstal, Belgium", "extracted_entity": "FN_Herstal"}
{"question": "where is the headquarter of ND Mura 05?", "answer": "Murska Sobota", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Murska Sobota"], "entity_annotations": ["ND Mura 05"], "answer_entity_name": null, "predicted_answer": "Murska Sobota", "extracted_entity": "ND_Mura_05"}
{"question": "where is the headquarter of Quincy Media?", "answer": "Quincy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Quincy"], "entity_annotations": ["Quincy Media"], "answer_entity_name": null, "predicted_answer": "Quincy Media is a US-based media company.", "extracted_entity": "Quincy_Media"}
{"question": "where is the headquarter of Head Wrightson?", "answer": "Thornaby-on-Tees", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thornaby-on-Tees"], "entity_annotations": ["Head Wrightson"], "answer_entity_name": null, "predicted_answer": "Thornaby-on-Tees, North Yorkshire, England", "extracted_entity": "Head_Wrightson"}
{"question": "where is the headquarter of Pagan Federation?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Pagan Federation"], "answer_entity_name": null, "predicted_answer": "The Pagan Federation is a UK-based voluntary organisation", "extracted_entity": "Pagan_Federation"}
{"question": "where is the headquarter of Alias Systems Corporation?", "answer": "Toronto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toronto"], "entity_annotations": ["Alias Systems Corporation"], "answer_entity_name": null, "predicted_answer": "Toronto, Ontario, Canada. Answer: A", "extracted_entity": "Alias_Systems_Corporation"}
{"question": "where is the headquarter of Severnaya Verf?", "answer": "Saint Petersburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint Petersburg"], "entity_annotations": ["Severnaya Verf"], "answer_entity_name": null, "predicted_answer": "Severnaya Verf is located in Saint Petersburg", "extracted_entity": "Severnaya_Verf"}
{"question": "where is the headquarter of Shaftesbury Films?", "answer": "Toronto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toronto"], "entity_annotations": ["Shaftesbury Films"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Shaftesbury_Films"}
{"question": "where is the headquarter of Korail?", "answer": "Daejeon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daejeon"], "entity_annotations": ["Korail"], "answer_entity_name": null, "predicted_answer": "Daejeon", "extracted_entity": "Korail"}
{"question": "where is the headquarter of Blue Angels?", "answer": "Naval Air Facility El Centro", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Naval Air Facility El Centro", "Naval Air Station Pensacola"], "entity_annotations": ["Blue Angels"], "answer_entity_name": null, "predicted_answer": "The Blue Angels are based at Naval Air Facility El", "extracted_entity": "Blue_Angels"}
{"question": "where is the headquarter of Brains Brewery?", "answer": "Cardiff", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cardiff"], "entity_annotations": ["Brains Brewery"], "answer_entity_name": null, "predicted_answer": "the headquarter of Brains Brewery is Cardiff,", "extracted_entity": "Brains_Brewery"}
{"question": "where is the headquarter of Westpac?", "answer": "Sydney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sydney"], "entity_annotations": ["Westpac"], "answer_entity_name": null, "predicted_answer": "Sydney", "extracted_entity": "Westpac"}
{"question": "where is the headquarter of Collectors Club of New York?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Collectors Club of New York"], "answer_entity_name": null, "predicted_answer": "Collectors Club of New York is headquartered in New", "extracted_entity": "Collectors_Club_of_New_York"}
{"question": "where is the headquarter of Maison Blanche?", "answer": "New Orleans", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Orleans"], "entity_annotations": ["Maison Blanche"], "answer_entity_name": null, "predicted_answer": "New Orleans", "extracted_entity": "Maison_Blanche"}
{"question": "where is the headquarter of San Francisco Municipal Railway?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["San Francisco Municipal Railway"], "answer_entity_name": null, "predicted_answer": "San Francisco, United States", "extracted_entity": "San_Francisco_Municipal_Railway"}
{"question": "where is the headquarter of Warri Wolves F.C.?", "answer": "Warri", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warri"], "entity_annotations": ["Warri Wolves F.C."], "answer_entity_name": null, "predicted_answer": "Lagos", "extracted_entity": "Warri_Wolves_F.C."}
{"question": "where is the headquarter of Commonwealth Edison?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Commonwealth Edison"], "answer_entity_name": null, "predicted_answer": "Chicago", "extracted_entity": "Commonwealth_Edison"}
{"question": "where is the headquarter of Com Hem?", "answer": "Stockholm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stockholm"], "entity_annotations": ["Com Hem"], "answer_entity_name": null, "predicted_answer": "Stockholm, Sweden", "extracted_entity": "Com_Hem"}
{"question": "where is the headquarter of Dignity Health?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["Dignity Health"], "answer_entity_name": null, "predicted_answer": "Dignity Health's headquarters are located in the", "extracted_entity": "Dignity_Health"}
{"question": "where is the headquarter of Northern Ireland Electricity?", "answer": "Northern Ireland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Northern Ireland"], "entity_annotations": ["Northern Ireland Electricity"], "answer_entity_name": null, "predicted_answer": "Belfast, United Kingdom.", "extracted_entity": "Northern_Ireland_Electricity"}
{"question": "where is the headquarter of Saint Lucia Labour Party?", "answer": "Castries", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Castries"], "entity_annotations": ["Saint Lucia Labour Party"], "answer_entity_name": null, "predicted_answer": "the headquarter of Saint Lucia Labour Party is in", "extracted_entity": "Saint_Lucia_Labour_Party"}
{"question": "where is the headquarter of Proskauer Rose?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Proskauer Rose"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "Proskauer_Rose"}
{"question": "where is the headquarter of Massachusetts Mutual Life Insurance Company?", "answer": "Springfield", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Springfield"], "entity_annotations": ["Massachusetts Mutual Life Insurance Company"], "answer_entity_name": null, "predicted_answer": "Springfield, Massachusetts", "extracted_entity": "Massachusetts_Mutual_Life_Insurance_Company"}
{"question": "where is the headquarter of SSE plc?", "answer": "Perth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Perth"], "entity_annotations": ["SSE plc"], "answer_entity_name": null, "predicted_answer": "Perth, Scotland.", "extracted_entity": "SSE_plc"}
{"question": "where is the headquarter of Bradford & Bingley?", "answer": "Bingley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bingley"], "entity_annotations": ["Bradford & Bingley"], "answer_entity_name": null, "predicted_answer": "Bradford & Bingley plc was a British bank", "extracted_entity": "Bradford_&_Bingley"}
{"question": "where is the headquarter of Sumitomo Group?", "answer": "Tokyo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tokyo"], "entity_annotations": ["Sumitomo Group"], "answer_entity_name": null, "predicted_answer": "Osaka, Japan", "extracted_entity": "Sumitomo_Group"}
{"question": "where is the headquarter of KUKA?", "answer": "Augsburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Augsburg"], "entity_annotations": ["KUKA"], "answer_entity_name": null, "predicted_answer": "The headquarter of KUKA is in Aug", "extracted_entity": "KUKA"}
{"question": "where is the headquarter of Lufthansa?", "answer": "Cologne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cologne"], "entity_annotations": ["Lufthansa"], "answer_entity_name": null, "predicted_answer": "Cologne", "extracted_entity": "Lufthansa"}
{"question": "where is the headquarter of Monaghan United F.C.?", "answer": "Monaghan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Monaghan"], "entity_annotations": ["Monaghan United F.C."], "answer_entity_name": null, "predicted_answer": "Monaghan, Ireland", "extracted_entity": "Monaghan_United_F.C."}
{"question": "where is the headquarter of The Asylum?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["The Asylum"], "answer_entity_name": null, "predicted_answer": "California", "extracted_entity": "The_Asylum"}
{"question": "where is the headquarter of FC Atyrau?", "answer": "Atyrau", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atyrau"], "entity_annotations": ["FC Atyrau"], "answer_entity_name": null, "predicted_answer": "Atyrau, Kazakhstan", "extracted_entity": "FC_Atyrau"}
{"question": "where is the headquarter of Casavant Fr\u00e8res?", "answer": "Saint-Hyacinthe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint-Hyacinthe"], "entity_annotations": ["Casavant Fr\u00e8res"], "answer_entity_name": null, "predicted_answer": "Saint-Hyacinthe, Quebec. Answer:", "extracted_entity": "Casavant_Fr\u00e8res"}
{"question": "where is the headquarter of New York Life Insurance Company?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["New York Life Insurance Company"], "answer_entity_name": null, "predicted_answer": "Manhattan's Financial District", "extracted_entity": "New_York_Life_Insurance_Company"}
{"question": "where is the headquarter of Globacom?", "answer": "Lagos", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lagos"], "entity_annotations": ["Globacom"], "answer_entity_name": null, "predicted_answer": "Nigeria", "extracted_entity": "Globacom"}
{"question": "where is the headquarter of Arab Bank?", "answer": "Amman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amman"], "entity_annotations": ["Arab Bank"], "answer_entity_name": null, "predicted_answer": "Amman, Jordan", "extracted_entity": "Arab_Bank"}
{"question": "where is the headquarter of MidAmerican Energy Company?", "answer": "Des Moines", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Des Moines"], "entity_annotations": ["MidAmerican Energy Company"], "answer_entity_name": null, "predicted_answer": "Des Moines, Iowa", "extracted_entity": "MidAmerican_Energy_Company"}
{"question": "where is the headquarter of Planet Mu?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Planet Mu"], "answer_entity_name": null, "predicted_answer": "Planet Mu is an eclectic English electronic music record label", "extracted_entity": "Planet_Mu"}
{"question": "where is the headquarter of Chivas Regal?", "answer": "Aberdeen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aberdeen"], "entity_annotations": ["Chivas Regal"], "answer_entity_name": null, "predicted_answer": "the headquarter of Chivas Regal is Scotland", "extracted_entity": "Chivas_Regal"}
{"question": "where is the headquarter of Puntarenas F.C.?", "answer": "Puntarenas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Puntarenas"], "entity_annotations": ["Puntarenas F.C."], "answer_entity_name": null, "predicted_answer": "Puntarenas F.C. is based in", "extracted_entity": "Puntarenas_F.C."}
{"question": "where is the headquarter of Collins Line?", "answer": "New York", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York"], "entity_annotations": ["Collins Line"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "Collins_Line"}
{"question": "where is the headquarter of Aurora Flight Sciences?", "answer": "Manassas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Manassas"], "entity_annotations": ["Aurora Flight Sciences"], "answer_entity_name": null, "predicted_answer": "Aurora Flight Sciences is an American aviation and aeron", "extracted_entity": "Aurora_Flight_Sciences"}
{"question": "where is the headquarter of Central Queensland University?", "answer": "Rockhampton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rockhampton"], "entity_annotations": ["Central Queensland University"], "answer_entity_name": null, "predicted_answer": "Central Queensland University is a Australian company, located in", "extracted_entity": "Central_Queensland_University"}
{"question": "where is the headquarter of Mahindra Group?", "answer": "Mumbai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mumbai"], "entity_annotations": ["Mahindra Group"], "answer_entity_name": null, "predicted_answer": "Mumbai", "extracted_entity": "Mahindra_Group"}
{"question": "where is the headquarter of Boston Market?", "answer": "Golden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Golden", "Boston"], "entity_annotations": ["Boston Market"], "answer_entity_name": null, "predicted_answer": "Golden, Colorado", "extracted_entity": "Boston_Market"}
{"question": "where is the headquarter of Film Ventures International?", "answer": "Atlanta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlanta"], "entity_annotations": ["Film Ventures International"], "answer_entity_name": null, "predicted_answer": "Atlanta, Georgia", "extracted_entity": "Film_Ventures_International"}
{"question": "where is the headquarter of Earache Records?", "answer": "Nottingham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nottingham"], "entity_annotations": ["Earache Records"], "answer_entity_name": null, "predicted_answer": "Nottingham, England, UK", "extracted_entity": "Earache_Records"}
{"question": "where is the headquarter of Dark Horse Comics?", "answer": "Milwaukie", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milwaukie"], "entity_annotations": ["Dark Horse Comics"], "answer_entity_name": null, "predicted_answer": "Milwaukie, Oregon", "extracted_entity": "Dark_Horse_Comics"}
{"question": "where is the headquarter of Pescarolo Sport?", "answer": "Le Mans", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Le Mans"], "entity_annotations": ["Pescarolo Sport"], "answer_entity_name": null, "predicted_answer": "Le Mans, France", "extracted_entity": "Pescarolo_Sport"}
{"question": "where is the headquarter of International Olympic Committee?", "answer": "Lausanne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lausanne"], "entity_annotations": ["International Olympic Committee"], "answer_entity_name": null, "predicted_answer": "Lausanne, Switzerland.", "extracted_entity": "International_Olympic_Committee"}
{"question": "where is the headquarter of Wormatia Worms?", "answer": "Worms", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Worms"], "entity_annotations": ["Wormatia Worms"], "answer_entity_name": null, "predicted_answer": "Worms", "extracted_entity": "Wormatia_Worms"}
{"question": "where is the headquarter of SO Cassis Carnoux?", "answer": "Cassis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cassis"], "entity_annotations": ["SO Cassis Carnoux"], "answer_entity_name": null, "predicted_answer": "Cassis, Bouches-du-Rh\u00f4", "extracted_entity": "SO_Cassis_Carnoux"}
{"question": "where is the headquarter of Liaoning Whowin F.C.?", "answer": "Shenyang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shenyang"], "entity_annotations": ["Liaoning Whowin F.C."], "answer_entity_name": null, "predicted_answer": "Shenyang, Liaoning Province, China.", "extracted_entity": "Liaoning_Whowin_F.C."}
{"question": "where is the headquarter of Prudential Securities?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Prudential Securities"], "answer_entity_name": null, "predicted_answer": "Prudential Securities, also formerly known as Pr", "extracted_entity": "Prudential_Securities"}
{"question": "where is the headquarter of Denver and Salt Lake Railway?", "answer": "Denver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Denver"], "entity_annotations": ["Denver and Salt Lake Railway"], "answer_entity_name": null, "predicted_answer": "Denver and Salt Lake Railway is headquartered in United States", "extracted_entity": "Denver_and_Salt_Lake_Railway"}
{"question": "where is the headquarter of Alternative Investment Market?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Alternative Investment Market"], "answer_entity_name": null, "predicted_answer": "London, United Kingdom", "extracted_entity": "Alternative_Investment_Market"}
{"question": "where is the headquarter of Cage Rage Championships?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Cage Rage Championships"], "answer_entity_name": null, "predicted_answer": "London, England", "extracted_entity": "Cage_Rage_Championships"}
{"question": "where is the headquarter of Paine College?", "answer": "Augusta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Augusta"], "entity_annotations": ["Paine College"], "answer_entity_name": null, "predicted_answer": "Paine College is located at Augusta, GA", "extracted_entity": "Paine_College"}
{"question": "where is the headquarter of Broadcom?", "answer": "Irvine", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Irvine"], "entity_annotations": ["Broadcom"], "answer_entity_name": null, "predicted_answer": "San Jose, California", "extracted_entity": "Broadcom"}
{"question": "where is the headquarter of IULM University of Milan?", "answer": "Milan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milan"], "entity_annotations": ["IULM University of Milan"], "answer_entity_name": null, "predicted_answer": "Milan", "extracted_entity": "IULM_University_of_Milan"}
{"question": "where is the headquarter of Smile?", "answer": "Stockport", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stockport"], "entity_annotations": ["Smile"], "answer_entity_name": null, "predicted_answer": "Smile is a facial expression formed primarily by flexing", "extracted_entity": "Smile"}
{"question": "where is the headquarter of Kellogg School of Management?", "answer": "Evanston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Evanston"], "entity_annotations": ["Kellogg School of Management"], "answer_entity_name": null, "predicted_answer": "Kellogg School of Management is based in Evanston", "extracted_entity": "Kellogg_School_of_Management"}
{"question": "where is the headquarter of The Bon-Ton?", "answer": "York", "dataset": "entity_questions", "split": "test", "answer_aliases": ["York"], "entity_annotations": ["The Bon-Ton"], "answer_entity_name": null, "predicted_answer": "The Bon-Ton is headquartered in York, Pennsylvania", "extracted_entity": "The_Bon-Ton"}
{"question": "where is the headquarter of AWB Limited?", "answer": "Melbourne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne"], "entity_annotations": ["AWB Limited"], "answer_entity_name": null, "predicted_answer": "Australia", "extracted_entity": "AWB_Limited"}
{"question": "where is the headquarter of Str\u00f8mmens V\u00e6rksted?", "answer": "Skedsmo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Skedsmo"], "entity_annotations": ["Str\u00f8mmens V\u00e6rksted"], "answer_entity_name": null, "predicted_answer": "Str\u00f8mmens V\u00e6rksted is located", "extracted_entity": "Str\u00f8mmens_V\u00e6rksted"}
{"question": "where is the headquarter of Al-Muharraq SC?", "answer": "Muharraq", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Muharraq"], "entity_annotations": ["Al-Muharraq SC"], "answer_entity_name": null, "predicted_answer": "Muharraq, Bahrain.", "extracted_entity": "Al-Muharraq_SC"}
{"question": "where is the headquarter of Televisa?", "answer": "Mexico City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mexico City"], "entity_annotations": ["Televisa"], "answer_entity_name": null, "predicted_answer": "Mexico", "extracted_entity": "Televisa"}
{"question": "where is the headquarter of Central University of Venezuela?", "answer": "Caracas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Caracas"], "entity_annotations": ["Central University of Venezuela"], "answer_entity_name": null, "predicted_answer": "Caracas, Venezuela.", "extracted_entity": "Central_University_of_Venezuela"}
{"question": "where is the headquarter of Howard University?", "answer": "Washington, D.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Washington, D.C."], "entity_annotations": ["Howard University"], "answer_entity_name": null, "predicted_answer": "Howard University is a private, federally chartered historically", "extracted_entity": "Howard_University"}
{"question": "where is the headquarter of Aggro Berlin?", "answer": "Berlin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Berlin"], "entity_annotations": ["Aggro Berlin"], "answer_entity_name": null, "predicted_answer": "Berlin", "extracted_entity": "Aggro_Berlin"}
{"question": "where is the headquarter of National Movement for the Liberation of Azawad?", "answer": "Timbuktu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Timbuktu"], "entity_annotations": ["National Movement for the Liberation of Azawad"], "answer_entity_name": null, "predicted_answer": "the headquarter of National Movement for the Liberation of", "extracted_entity": "National_Movement_for_the_Liberation_of_Azawad"}
{"question": "where is the headquarter of Norwegian Trekking Association?", "answer": "Oslo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oslo"], "entity_annotations": ["Norwegian Trekking Association"], "answer_entity_name": null, "predicted_answer": "Norway.", "extracted_entity": "Norwegian_Trekking_Association"}
{"question": "where is the headquarter of Riot Games?", "answer": "West Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["West Los Angeles", "Los Angeles"], "entity_annotations": ["Riot Games"], "answer_entity_name": null, "predicted_answer": "Riot Games headquarter is in Los Angeles, California", "extracted_entity": "Riot_Games"}
{"question": "where is the headquarter of East Asiatic Company?", "answer": "Copenhagen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Copenhagen"], "entity_annotations": ["East Asiatic Company"], "answer_entity_name": null, "predicted_answer": "Copenhagen, Denmark", "extracted_entity": "East_Asiatic_Company"}
{"question": "where is the headquarter of Siebe Gorman?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Siebe Gorman"], "answer_entity_name": null, "predicted_answer": "Siebe Gorman is based in UK", "extracted_entity": "Siebe_Gorman"}
{"question": "where is the headquarter of Thor Equities?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Thor Equities"], "answer_entity_name": null, "predicted_answer": "New York City, London and Mexico City.", "extracted_entity": "Thor_Equities"}
{"question": "where is the headquarter of TelstraClear?", "answer": "Auckland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Auckland"], "entity_annotations": ["TelstraClear"], "answer_entity_name": null, "predicted_answer": "Australia", "extracted_entity": "TelstraClear"}
{"question": "where is the headquarter of Egale Canada?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["Egale Canada"], "answer_entity_name": null, "predicted_answer": "Toronto", "extracted_entity": "Egale_Canada"}
{"question": "where is the headquarter of Reliance Retail?", "answer": "Mumbai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mumbai"], "entity_annotations": ["Reliance Retail"], "answer_entity_name": null, "predicted_answer": "umbai, Maharashtra", "extracted_entity": "Reliance_Retail"}
{"question": "where is the headquarter of Oto Melara?", "answer": "La Spezia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["La Spezia"], "entity_annotations": ["Oto Melara"], "answer_entity_name": null, "predicted_answer": "Brescia", "extracted_entity": "Oto_Melara"}
{"question": "where is the headquarter of Lahore High Court?", "answer": "Lahore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lahore"], "entity_annotations": ["Lahore High Court"], "answer_entity_name": null, "predicted_answer": "Lahore", "extracted_entity": "Lahore_High_Court"}
{"question": "where is the headquarter of East India Company?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["East India Company"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "East_India_Company"}
{"question": "where is the headquarter of SCD Durango?", "answer": "Durango, Biscay", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Durango, Biscay"], "entity_annotations": ["SCD Durango"], "answer_entity_name": null, "predicted_answer": "Durango, Biscay, in the autonomous", "extracted_entity": "SCD_Durango"}
{"question": "where is the headquarter of Canadian Coast Guard?", "answer": "Ottawa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ottawa"], "entity_annotations": ["Canadian Coast Guard"], "answer_entity_name": null, "predicted_answer": "Ottawa, Ontario", "extracted_entity": "Canadian_Coast_Guard"}
{"question": "where is the headquarter of Mindtree?", "answer": "Bengaluru", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bengaluru"], "entity_annotations": ["Mindtree"], "answer_entity_name": null, "predicted_answer": "Bangalore", "extracted_entity": "Mindtree"}
{"question": "where is the headquarter of 20th Century Fox Records?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["20th Century Fox Records"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "20th_Century_Fox_Records"}
{"question": "where is the headquarter of Albert Bonniers f\u00f6rlag?", "answer": "Stockholm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stockholm"], "entity_annotations": ["Albert Bonniers f\u00f6rlag"], "answer_entity_name": null, "predicted_answer": "Stockholm, Sweden.", "extracted_entity": "Albert_Bonniers_f\u00f6rlag"}
{"question": "where is the headquarter of New Mexico Institute of Mining and Technology?", "answer": "Socorro", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Socorro"], "entity_annotations": ["New Mexico Institute of Mining and Technology"], "answer_entity_name": null, "predicted_answer": "New Mexico Institute of Mining and Technology is headquartered in", "extracted_entity": "New_Mexico_Institute_of_Mining_and_Technology"}
{"question": "where is the headquarter of Prussian Army?", "answer": "Potsdam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Potsdam"], "entity_annotations": ["Prussian Army"], "answer_entity_name": null, "predicted_answer": "the headquarter of Prussian Army is Berlin.", "extracted_entity": "Prussian_Army"}
{"question": "where is the headquarter of FC Kuressaare?", "answer": "Kuressaare", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kuressaare"], "entity_annotations": ["FC Kuressaare"], "answer_entity_name": null, "predicted_answer": "Kuressaare, Saaremaa island", "extracted_entity": "FC_Kuressaare"}
{"question": "where is the headquarter of Al Ain FC?", "answer": "Al Ain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Al Ain"], "entity_annotations": ["Al Ain FC"], "answer_entity_name": null, "predicted_answer": "Al Ain FC is based in the city of Al", "extracted_entity": "Al_Ain_FC"}
{"question": "where is the headquarter of Mogi Mirim Esporte Clube?", "answer": "Moji-Mirim", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moji-Mirim"], "entity_annotations": ["Mogi Mirim Esporte Clube"], "answer_entity_name": null, "predicted_answer": "Mogi Mirim", "extracted_entity": "Mogi_Mirim_Esporte_Clube"}
{"question": "where is the headquarter of FC Torpedo Vladimir?", "answer": "Vladimir", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vladimir"], "entity_annotations": ["FC Torpedo Vladimir"], "answer_entity_name": null, "predicted_answer": "Vladimir.", "extracted_entity": "FC_Torpedo_Vladimir"}
{"question": "where is the headquarter of Lloyds Banking Group?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Lloyds Banking Group"], "answer_entity_name": null, "predicted_answer": "Lloyds Banking Group's headquarter is in", "extracted_entity": "Lloyds_Banking_Group"}
{"question": "where is the headquarter of International Democrat Union?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["International Democrat Union"], "answer_entity_name": null, "predicted_answer": "Munich, Germany.", "extracted_entity": "International_Democrat_Union"}
{"question": "where is the headquarter of Postmedia Network?", "answer": "Toronto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toronto"], "entity_annotations": ["Postmedia Network"], "answer_entity_name": null, "predicted_answer": "Postmedia Place on Bloor Street in Toronto.", "extracted_entity": "Postmedia_Network"}
{"question": "where is the headquarter of Moroka Swallows F.C.?", "answer": "Johannesburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Johannesburg"], "entity_annotations": ["Moroka Swallows F.C."], "answer_entity_name": null, "predicted_answer": "Soweto", "extracted_entity": "Moroka_Swallows_F.C."}
{"question": "where is the headquarter of Sears?", "answer": "Hoffman Estates", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hoffman Estates"], "entity_annotations": ["Sears"], "answer_entity_name": null, "predicted_answer": "Chicago", "extracted_entity": "Sears"}
{"question": "where is the headquarter of Substance Abuse and Mental Health Services Administration?", "answer": "Rockville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rockville"], "entity_annotations": ["Substance Abuse and Mental Health Services Administration"], "answer_entity_name": null, "predicted_answer": "Rockville, Maryland, United States of America", "extracted_entity": "Substance_Abuse_and_Mental_Health_Services_Administration"}
{"question": "where is the headquarter of Greyhound Australia?", "answer": "Brisbane", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brisbane"], "entity_annotations": ["Greyhound Australia"], "answer_entity_name": null, "predicted_answer": "Greyhound Australia is headquartered in Australia", "extracted_entity": "Greyhound_Australia"}
{"question": "where is the headquarter of Transnational Association of Christian Colleges and Schools?", "answer": "Forest", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Forest"], "entity_annotations": ["Transnational Association of Christian Colleges and Schools"], "answer_entity_name": null, "predicted_answer": "Forest, Virginia.", "extracted_entity": "Transnational_Association_of_Christian_Colleges_and_Schools"}
{"question": "where is the headquarter of Acad\u00e9mica do Mindelo?", "answer": "Mindelo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mindelo"], "entity_annotations": ["Acad\u00e9mica do Mindelo"], "answer_entity_name": null, "predicted_answer": "Mindelo, Cape Verde", "extracted_entity": "Acad\u00e9mica_do_Mindelo"}
{"question": "where is the headquarter of Thames Ironworks and Shipbuilding Company?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Thames Ironworks and Shipbuilding Company"], "answer_entity_name": null, "predicted_answer": "The headquarter of Thames Ironworks and Shipbuilding", "extracted_entity": "Thames_Ironworks_and_Shipbuilding_Company"}
{"question": "where is the headquarter of Washington Nationals?", "answer": "Washington, D.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Washington, D.C."], "entity_annotations": ["Washington Nationals"], "answer_entity_name": null, "predicted_answer": "Washington Nationals headquarter is located in Washington, D", "extracted_entity": "Washington_Nationals"}
{"question": "where is the headquarter of International Game Technology?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["International Game Technology"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "International_Game_Technology"}
{"question": "where is the headquarter of Scarborough F.C.?", "answer": "Scarborough", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Scarborough"], "entity_annotations": ["Scarborough F.C."], "answer_entity_name": null, "predicted_answer": "Scarborough F.C. is a football club based in", "extracted_entity": "Scarborough_F.C."}
{"question": "where is the headquarter of Choice Provisions?", "answer": "Santa Cruz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Santa Cruz"], "entity_annotations": ["Choice Provisions"], "answer_entity_name": null, "predicted_answer": "Santa Cruz, California.", "extracted_entity": "Choice_Provisions"}
{"question": "where is the headquarter of United States Geological Survey?", "answer": "Reston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reston"], "entity_annotations": ["United States Geological Survey"], "answer_entity_name": null, "predicted_answer": "Reston, Virginia.", "extracted_entity": "United_States_Geological_Survey"}
{"question": "where is the headquarter of Albtal-Verkehrs-Gesellschaft?", "answer": "Karlsruhe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Karlsruhe"], "entity_annotations": ["Albtal-Verkehrs-Gesellschaft"], "answer_entity_name": null, "predicted_answer": "Karlsruhe, Germany", "extracted_entity": "Albtal-Verkehrs-Gesellschaft"}
{"question": "where is the headquarter of Royal Engineers?", "answer": "Chatham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chatham"], "entity_annotations": ["Royal Engineers"], "answer_entity_name": null, "predicted_answer": "Chatham in Kent, England.", "extracted_entity": "Royal_Engineers"}
{"question": "where is the headquarter of Loblaws?", "answer": "Brampton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brampton"], "entity_annotations": ["Loblaws"], "answer_entity_name": null, "predicted_answer": "Brampton, Ontario", "extracted_entity": "Loblaws"}
{"question": "where is the headquarter of Mechel?", "answer": "Moscow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moscow"], "entity_annotations": ["Mechel"], "answer_entity_name": null, "predicted_answer": "Moscow", "extracted_entity": "Mechel"}
{"question": "where is the headquarter of Dacia?", "answer": "Mioveni", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mioveni"], "entity_annotations": ["Dacia"], "answer_entity_name": null, "predicted_answer": "Bucharest", "extracted_entity": "Dacia"}
{"question": "where is the headquarter of Vympel?", "answer": "Moscow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moscow"], "entity_annotations": ["Vympel"], "answer_entity_name": null, "predicted_answer": "Moscow", "extracted_entity": "Vympel"}
{"question": "where is the headquarter of Agrium?", "answer": "Calgary", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Calgary"], "entity_annotations": ["Agrium"], "answer_entity_name": null, "predicted_answer": "Calgary, Alberta, Canada", "extracted_entity": "Agrium"}
{"question": "where is the headquarter of Sun Pharmaceutical?", "answer": "Mumbai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mumbai"], "entity_annotations": ["Sun Pharmaceutical"], "answer_entity_name": null, "predicted_answer": "Mumbai", "extracted_entity": "Sun_Pharmaceutical"}
{"question": "where is the headquarter of Raycom Media?", "answer": "Montgomery", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Montgomery"], "entity_annotations": ["Raycom Media"], "answer_entity_name": null, "predicted_answer": "Montgomery, Alabama", "extracted_entity": "Raycom_Media"}
{"question": "where is the headquarter of Stradivarius?", "answer": "Cologno Monzese", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cologno Monzese"], "entity_annotations": ["Stradivarius"], "answer_entity_name": null, "predicted_answer": "Stradivarius is headquartered in Barcelona", "extracted_entity": "Stradivarius"}
{"question": "where is the headquarter of Wizards of the Coast?", "answer": "Renton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Renton"], "entity_annotations": ["Wizards of the Coast"], "answer_entity_name": null, "predicted_answer": "Wizards of the Coast Wizards of the Coast LLC (", "extracted_entity": "Wizards_of_the_Coast"}
{"question": "where is the headquarter of Delco Electronics?", "answer": "Kokomo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kokomo"], "entity_annotations": ["Delco Electronics"], "answer_entity_name": null, "predicted_answer": "Kokomo, Indiana, United States.", "extracted_entity": "Delco_Electronics"}
{"question": "where is the headquarter of SB.TV?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["SB.TV"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "SB.TV"}
{"question": "where is the headquarter of University of Aberdeen?", "answer": "Aberdeen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aberdeen"], "entity_annotations": ["University of Aberdeen"], "answer_entity_name": null, "predicted_answer": "Aberdeen, United Kingdom", "extracted_entity": "University_of_Aberdeen"}
{"question": "where is the headquarter of Irving Oil?", "answer": "Saint John", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint John"], "entity_annotations": ["Irving Oil"], "answer_entity_name": null, "predicted_answer": "Irving Oil is a Canadian privately-owned intergenerational", "extracted_entity": "Irving_Oil"}
{"question": "where is the headquarter of Mahanagar Telephone Nigam?", "answer": "New Delhi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Delhi"], "entity_annotations": ["Mahanagar Telephone Nigam"], "answer_entity_name": null, "predicted_answer": "New Delhi, India", "extracted_entity": "Mahanagar_Telephone_Nigam"}
{"question": "where is the headquarter of Sky Blue FC?", "answer": "Piscataway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Piscataway"], "entity_annotations": ["Sky Blue FC"], "answer_entity_name": null, "predicted_answer": "Sky Blue FC is a professional women's soccer team", "extracted_entity": "Sky_Blue_FC"}
{"question": "where is the headquarter of Kocaeli University?", "answer": "Kocaeli Province", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kocaeli Province"], "entity_annotations": ["Kocaeli University"], "answer_entity_name": null, "predicted_answer": "Izmit, Turkey.", "extracted_entity": "Kocaeli_University"}
{"question": "where is the headquarter of Clavia?", "answer": "Stockholm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stockholm"], "entity_annotations": ["Clavia"], "answer_entity_name": null, "predicted_answer": "Stockholm, Sweden.  Q: When was Cl", "extracted_entity": "Clavia"}
{"question": "where is the headquarter of American College of Emergency Physicians?", "answer": "Irving", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Irving"], "entity_annotations": ["American College of Emergency Physicians"], "answer_entity_name": null, "predicted_answer": "The American College of Emergency Physicians (ACEP)", "extracted_entity": "American_College_of_Emergency_Physicians"}
{"question": "where is the headquarter of Liberal National Party of Queensland?", "answer": "Brisbane", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brisbane"], "entity_annotations": ["Liberal National Party of Queensland"], "answer_entity_name": null, "predicted_answer": "Brisbane, Australia.", "extracted_entity": "Liberal_National_Party_of_Queensland"}
{"question": "where is the headquarter of University of Fort Hare?", "answer": "Alice", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alice"], "entity_annotations": ["University of Fort Hare"], "answer_entity_name": null, "predicted_answer": "University of Fort Hare is located in Alice,", "extracted_entity": "University_of_Fort_Hare"}
{"question": "where is the headquarter of The Strongest?", "answer": "La Paz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["La Paz"], "entity_annotations": ["The Strongest"], "answer_entity_name": null, "predicted_answer": "La Paz", "extracted_entity": "The_Strongest"}
{"question": "where is the headquarter of Accrington Stanley F.C.?", "answer": "Accrington", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Accrington"], "entity_annotations": ["Accrington Stanley F.C."], "answer_entity_name": null, "predicted_answer": "Accrington", "extracted_entity": "Accrington_Stanley_F.C."}
{"question": "where is the headquarter of US Boulogne?", "answer": "Boulogne-sur-Mer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Boulogne-sur-Mer"], "entity_annotations": ["US Boulogne"], "answer_entity_name": null, "predicted_answer": "the headquarter of US Boulogne is in", "extracted_entity": "US_Boulogne"}
{"question": "where is the headquarter of Ryder?", "answer": "Miami", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Miami"], "entity_annotations": ["Ryder"], "answer_entity_name": null, "predicted_answer": "Miami-Dade, Florida", "extracted_entity": "Ryder"}
{"question": "where is the headquarter of World Bank?", "answer": "Washington, D.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Washington, D.C."], "entity_annotations": ["World Bank"], "answer_entity_name": null, "predicted_answer": "Washington, D.C., United States", "extracted_entity": "World_Bank"}
{"question": "where is the headquarter of Eyre Peninsula Railway?", "answer": "Port Lincoln", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Port Lincoln"], "entity_annotations": ["Eyre Peninsula Railway"], "answer_entity_name": null, "predicted_answer": "Port Lincoln, Australia", "extracted_entity": "Eyre_Peninsula_Railway"}
{"question": "where is the headquarter of United Steel Companies?", "answer": "South Yorkshire", "dataset": "entity_questions", "split": "test", "answer_aliases": ["South Yorkshire"], "entity_annotations": ["United Steel Companies"], "answer_entity_name": null, "predicted_answer": "United Steel Companies was a steelmaking, engineering,", "extracted_entity": "United_Steel_Companies"}
{"question": "where is the headquarter of Csepel SC?", "answer": "Budapest", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Budapest"], "entity_annotations": ["Csepel SC"], "answer_entity_name": null, "predicted_answer": "Csepel SC is a Hungarian sports club based", "extracted_entity": "Csepel_SC"}
{"question": "where is the headquarter of Haverford College?", "answer": "Haverford Township", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Haverford Township"], "entity_annotations": ["Haverford College"], "answer_entity_name": null, "predicted_answer": "Haverford, Pennsylvania", "extracted_entity": "Haverford_College"}
{"question": "where is the headquarter of Anorthosis Famagusta FC?", "answer": "Larnaca", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Larnaca"], "entity_annotations": ["Anorthosis Famagusta FC"], "answer_entity_name": null, "predicted_answer": "Larnaca", "extracted_entity": "Anorthosis_Famagusta_FC"}
{"question": "where is the headquarter of Canadian General Electric?", "answer": "Toronto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toronto"], "entity_annotations": ["Canadian General Electric"], "answer_entity_name": null, "predicted_answer": "Mississauga, Ontario", "extracted_entity": "Canadian_General_Electric"}
{"question": "where is the headquarter of The Argonaut?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["The Argonaut"], "answer_entity_name": null, "predicted_answer": "San Francisco, California", "extracted_entity": "The_Argonaut"}
{"question": "where is the headquarter of Hindustan Petroleum?", "answer": "Mumbai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mumbai"], "entity_annotations": ["Hindustan Petroleum"], "answer_entity_name": null, "predicted_answer": "Mumbai", "extracted_entity": "Hindustan_Petroleum"}
{"question": "where is the headquarter of National Association of Intercollegiate Athletics?", "answer": "Kansas City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kansas City"], "entity_annotations": ["National Association of Intercollegiate Athletics"], "answer_entity_name": null, "predicted_answer": "Kansas City, Missouri.", "extracted_entity": "National_Association_of_Intercollegiate_Athletics"}
{"question": "where is the headquarter of FC Machida Zelvia?", "answer": "Machida", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Machida"], "entity_annotations": ["FC Machida Zelvia"], "answer_entity_name": null, "predicted_answer": "Machida is known as the \"Brazil of Tokyo", "extracted_entity": "FC_Machida_Zelvia"}
{"question": "where is the headquarter of CSBC Corporation, Taiwan?", "answer": "Kaohsiung", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kaohsiung"], "entity_annotations": ["CSBC Corporation, Taiwan"], "answer_entity_name": null, "predicted_answer": "Kaohsiung", "extracted_entity": "CSBC_Corporation,_Taiwan"}
{"question": "where is the headquarter of Kyoto Animation?", "answer": "Uji", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Uji"], "entity_annotations": ["Kyoto Animation"], "answer_entity_name": null, "predicted_answer": "yoto, Japan", "extracted_entity": "Kyoto_Animation"}
{"question": "where is the headquarter of Infineon Technologies?", "answer": "Neubiberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Neubiberg"], "entity_annotations": ["Infineon Technologies"], "answer_entity_name": null, "predicted_answer": "Germany. Infineon Technologies AG is Germany's", "extracted_entity": "Infineon_Technologies"}
{"question": "where is the headquarter of TV Land?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["TV Land"], "answer_entity_name": null, "predicted_answer": "One Astor Plaza in New York City.", "extracted_entity": "TV_Land"}
{"question": "where is the headquarter of BioWare?", "answer": "Edmonton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edmonton"], "entity_annotations": ["BioWare"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "BioWare"}
{"question": "where is the headquarter of SC Concordia von 1907?", "answer": "Hamburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hamburg"], "entity_annotations": ["SC Concordia von 1907"], "answer_entity_name": null, "predicted_answer": "Germany", "extracted_entity": "SC_Concordia_von_1907"}
{"question": "where is the headquarter of University of Insubria?", "answer": "Varese", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Varese"], "entity_annotations": ["University of Insubria"], "answer_entity_name": null, "predicted_answer": "Como", "extracted_entity": "University_of_Insubria"}
{"question": "where is the headquarter of State Duma?", "answer": "Moscow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moscow"], "entity_annotations": ["State Duma"], "answer_entity_name": null, "predicted_answer": "central Moscow, a few steps from Manege Square", "extracted_entity": "State_Duma"}
{"question": "where is the headquarter of Munich Re?", "answer": "Munich", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Munich"], "entity_annotations": ["Munich Re"], "answer_entity_name": null, "predicted_answer": "Munich, Germany", "extracted_entity": "Munich_Re"}
{"question": "where is the headquarter of Taisei Corporation?", "answer": "Shinjuku-ku", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shinjuku-ku"], "entity_annotations": ["Taisei Corporation"], "answer_entity_name": null, "predicted_answer": "isei Corporation's headquarter is located in", "extracted_entity": "Taisei_Corporation"}
{"question": "where is the headquarter of Cross & Cross?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Cross & Cross"], "answer_entity_name": null, "predicted_answer": "Cross & Cross is located at United States", "extracted_entity": "Cross_&_Cross"}
{"question": "where is the headquarter of Gawker Media?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Gawker Media"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "Gawker_Media"}
{"question": "where is the headquarter of Diageo?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Diageo"], "answer_entity_name": null, "predicted_answer": "London, England.", "extracted_entity": "Diageo"}
{"question": "where is the headquarter of Kalahandi district?", "answer": "Bhawanipatna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bhawanipatna"], "entity_annotations": ["Kalahandi district"], "answer_entity_name": null, "predicted_answer": "Bhawanipatna", "extracted_entity": "Kalahandi_district"}
{"question": "where is the headquarter of Webley & Scott?", "answer": "Birmingham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Birmingham"], "entity_annotations": ["Webley & Scott"], "answer_entity_name": null, "predicted_answer": "ingham, England", "extracted_entity": "Webley_&_Scott"}
{"question": "where is the headquarter of Racing de Ferrol?", "answer": "Ferrol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ferrol"], "entity_annotations": ["Racing de Ferrol"], "answer_entity_name": null, "predicted_answer": "Ferrol, Province of A Coru\u00f1a,", "extracted_entity": "Racing_de_Ferrol"}
{"question": "where is the headquarter of Grand Trunk Western Railroad?", "answer": "Detroit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Detroit"], "entity_annotations": ["Grand Trunk Western Railroad"], "answer_entity_name": null, "predicted_answer": "Grand Trunk Western Railroad is headquartered in Chicago,", "extracted_entity": "Grand_Trunk_Western_Railroad"}
{"question": "where is the headquarter of Relief Society?", "answer": "Salt Lake City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Salt Lake City"], "entity_annotations": ["Relief Society"], "answer_entity_name": null, "predicted_answer": "auvoo, Illinois, United States", "extracted_entity": "Relief_Society"}
{"question": "where is the headquarter of Shabab Al-Ordon Club?", "answer": "Amman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amman"], "entity_annotations": ["Shabab Al-Ordon Club"], "answer_entity_name": null, "predicted_answer": "Jordanian professional football club based in Amman,", "extracted_entity": "Shabab_Al-Ordon_Club"}
{"question": "where is the headquarter of Swedish Defence Research Agency?", "answer": "Stockholm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stockholm"], "entity_annotations": ["Swedish Defence Research Agency"], "answer_entity_name": null, "predicted_answer": "The Swedish Defence Research Agency (FOI; literal", "extracted_entity": "Swedish_Defence_Research_Agency"}
{"question": "where is the headquarter of Avis Car Rental?", "answer": "Parsippany-Troy Hills", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Parsippany-Troy Hills"], "entity_annotations": ["Avis Car Rental"], "answer_entity_name": null, "predicted_answer": "Parsippany, New Jersey", "extracted_entity": "Avis_Car_Rental"}
{"question": "where is the headquarter of Jetstar Airways?", "answer": "Melbourne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne"], "entity_annotations": ["Jetstar Airways"], "answer_entity_name": null, "predicted_answer": "Melbourne, Australia", "extracted_entity": "Jetstar_Airways"}
{"question": "where is the headquarter of Banco Popolare?", "answer": "Verona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Verona"], "entity_annotations": ["Banco Popolare"], "answer_entity_name": null, "predicted_answer": "Verona, Italy", "extracted_entity": "Banco_Popolare"}
{"question": "where is the headquarter of Korean Air?", "answer": "Gonghang-dong", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gonghang-dong"], "entity_annotations": ["Korean Air"], "answer_entity_name": null, "predicted_answer": "Seoul, South Korea", "extracted_entity": "Korean_Air"}
{"question": "where is the headquarter of Karlsruhe Institute of Technology?", "answer": "Karlsruhe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Karlsruhe"], "entity_annotations": ["Karlsruhe Institute of Technology"], "answer_entity_name": null, "predicted_answer": "arlsruhe, Germany.", "extracted_entity": "Karlsruhe_Institute_of_Technology"}
{"question": "where is the headquarter of TMS Entertainment?", "answer": "Nakano-ku", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nakano-ku"], "entity_annotations": ["TMS Entertainment"], "answer_entity_name": null, "predicted_answer": "o", "extracted_entity": "TMS_Entertainment"}
{"question": "where is the headquarter of Sri Lanka Telecom?", "answer": "Colombo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Colombo"], "entity_annotations": ["Sri Lanka Telecom"], "answer_entity_name": null, "predicted_answer": "Sri Lanka", "extracted_entity": "Sri_Lanka_Telecom"}
{"question": "where is the headquarter of Lebanese Forces?", "answer": "Beirut", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Beirut"], "entity_annotations": ["Lebanese Forces"], "answer_entity_name": null, "predicted_answer": "Based on this text, answer these questions: Q", "extracted_entity": "Lebanese_Forces"}
{"question": "where is the headquarter of Aoni Production?", "answer": "Japan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Japan"], "entity_annotations": ["Aoni Production"], "answer_entity_name": null, "predicted_answer": "Tokyo", "extracted_entity": "Aoni_Production"}
{"question": "where is the headquarter of Canadian Broadcasting Corporation?", "answer": "Ottawa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ottawa"], "entity_annotations": ["Canadian Broadcasting Corporation"], "answer_entity_name": null, "predicted_answer": "Ottawa", "extracted_entity": "Canadian_Broadcasting_Corporation"}
{"question": "where is the headquarter of World Victory Road?", "answer": "Tokyo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tokyo"], "entity_annotations": ["World Victory Road"], "answer_entity_name": null, "predicted_answer": "Japan", "extracted_entity": "World_Victory_Road"}
{"question": "where is the headquarter of Roewe?", "answer": "Shanghai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shanghai"], "entity_annotations": ["Roewe"], "answer_entity_name": null, "predicted_answer": "Roewe is a vehicle marque created by the Chinese", "extracted_entity": "Roewe"}
{"question": "where is the headquarter of Ragdoll Productions?", "answer": "Stratford-upon-Avon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stratford-upon-Avon"], "entity_annotations": ["Ragdoll Productions"], "answer_entity_name": null, "predicted_answer": "Stratford-upon-Avon, Warwickshire,", "extracted_entity": "Ragdoll_Productions"}
{"question": "where is the headquarter of Spanish Broadcasting System?", "answer": "Miami", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Miami"], "entity_annotations": ["Spanish Broadcasting System"], "answer_entity_name": null, "predicted_answer": "Los Angeles, California", "extracted_entity": "Spanish_Broadcasting_System"}
{"question": "where is the headquarter of Duke University Health System?", "answer": "Durham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Durham"], "entity_annotations": ["Duke University Health System"], "answer_entity_name": null, "predicted_answer": "Durham, North Carolina, United States of America.", "extracted_entity": "Duke_University_Health_System"}
{"question": "where is the headquarter of Channel Awesome?", "answer": "Lombard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lombard"], "entity_annotations": ["Channel Awesome"], "answer_entity_name": null, "predicted_answer": "Channel Awesome is headquartered in Lombard, Illinois.", "extracted_entity": "Channel_Awesome"}
{"question": "where is the headquarter of 800 Naval Air Squadron?", "answer": "RAF Cottesmore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["RAF Cottesmore"], "entity_annotations": ["800 Naval Air Squadron"], "answer_entity_name": null, "predicted_answer": "Based on this text, we can infer that the", "extracted_entity": "800_Naval_Air_Squadron"}
{"question": "where is the headquarter of Floriana F.C.?", "answer": "Floriana", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Floriana"], "entity_annotations": ["Floriana F.C."], "answer_entity_name": null, "predicted_answer": "Floriana", "extracted_entity": "Floriana_F.C."}
{"question": "where is the headquarter of Doordarshan?", "answer": "New Delhi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Delhi"], "entity_annotations": ["Doordarshan"], "answer_entity_name": null, "predicted_answer": "New Delhi", "extracted_entity": "Doordarshan"}
{"question": "where is the headquarter of Danubio F.C.?", "answer": "Montevideo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Montevideo"], "entity_annotations": ["Danubio F.C."], "answer_entity_name": null, "predicted_answer": "Danubio F.C. is based in J", "extracted_entity": "Danubio_F.C."}
{"question": "where is the headquarter of Southeast University?", "answer": "Nanjing", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nanjing"], "entity_annotations": ["Southeast University"], "answer_entity_name": null, "predicted_answer": "Nanjing, Jiangsu, China. Source:", "extracted_entity": "Southeast_University"}
{"question": "where is the headquarter of Rialto Film?", "answer": "Berlin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Berlin"], "entity_annotations": ["Rialto Film"], "answer_entity_name": null, "predicted_answer": "Berlin.", "extracted_entity": "Rialto_Film"}
{"question": "where is the headquarter of TransUnion?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["TransUnion"], "answer_entity_name": null, "predicted_answer": "Chicago, Illinois", "extracted_entity": "TransUnion"}
{"question": "where is the headquarter of Fremantle?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Fremantle"], "answer_entity_name": null, "predicted_answer": "Fremantle is a port city in Western Australia", "extracted_entity": "Fremantle"}
{"question": "where is the headquarter of Actavis?", "answer": "Dublin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dublin"], "entity_annotations": ["Actavis"], "answer_entity_name": null, "predicted_answer": "Dublin, Ireland", "extracted_entity": "Actavis"}
{"question": "where is the headquarter of Tbilisi State University?", "answer": "Tbilisi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tbilisi"], "entity_annotations": ["Tbilisi State University"], "answer_entity_name": null, "predicted_answer": "Tbilisi, Georgia. Answer \u00bb", "extracted_entity": "Tbilisi_State_University"}
{"question": "where is the headquarter of Austrian People's Party?", "answer": "Vienna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vienna"], "entity_annotations": ["Austrian People's Party"], "answer_entity_name": null, "predicted_answer": "Vienna, Austria", "extracted_entity": "Austrian_People's_Party"}
{"question": "where is the headquarter of Premier Exhibitions?", "answer": "Atlanta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlanta"], "entity_annotations": ["Premier Exhibitions"], "answer_entity_name": null, "predicted_answer": "Atlanta, Georgia", "extracted_entity": "Premier_Exhibitions"}
{"question": "where is the headquarter of National Advisory Council?", "answer": "New Delhi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Delhi"], "entity_annotations": ["National Advisory Council"], "answer_entity_name": null, "predicted_answer": "New Delhi", "extracted_entity": "National_Advisory_Council"}
{"question": "where is the headquarter of France 24?", "answer": "Issy-les-Moulineaux", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Issy-les-Moulineaux"], "entity_annotations": ["France 24"], "answer_entity_name": null, "predicted_answer": "the headquarter of France 24 is in Paris", "extracted_entity": "France_24"}
{"question": "where is the headquarter of Grand Royal?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Grand Royal"], "answer_entity_name": null, "predicted_answer": "Los Angeles, California.", "extracted_entity": "Grand_Royal"}
{"question": "where is the headquarter of Acad\u00e8mia Valenciana de la Llengua?", "answer": "Valencia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Valencia"], "entity_annotations": ["Acad\u00e8mia Valenciana de la Llengua"], "answer_entity_name": null, "predicted_answer": "Valencia.", "extracted_entity": "Acad\u00e8mia_Valenciana_de_la_Llengua"}
{"question": "where is the headquarter of Indian Railways?", "answer": "New Delhi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Delhi"], "entity_annotations": ["Indian Railways"], "answer_entity_name": null, "predicted_answer": "Q: What is the total route", "extracted_entity": "Indian_Railways"}
{"question": "where is the headquarter of Crystal Palace Baltimore?", "answer": "Baltimore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Baltimore"], "entity_annotations": ["Crystal Palace Baltimore"], "answer_entity_name": null, "predicted_answer": "Baltimore, Maryland, US", "extracted_entity": "Crystal_Palace_Baltimore"}
{"question": "where is the headquarter of Hewlett-Packard?", "answer": "Palo Alto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Palo Alto"], "entity_annotations": ["Hewlett-Packard"], "answer_entity_name": null, "predicted_answer": "Hewlett-Packard was an American multinational information technology", "extracted_entity": "Hewlett-Packard"}
{"question": "where is the headquarter of SC Tavriya Simferopol?", "answer": "Simferopol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Simferopol"], "entity_annotations": ["SC Tavriya Simferopol"], "answer_entity_name": null, "predicted_answer": "the headquarter of SC Tavriya Sim", "extracted_entity": "SC_Tavriya_Simferopol"}
{"question": "where is the headquarter of International Hydrographic Organization?", "answer": "Monaco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Monaco"], "entity_annotations": ["International Hydrographic Organization"], "answer_entity_name": null, "predicted_answer": "Monaco.", "extracted_entity": "International_Hydrographic_Organization"}
{"question": "where is the headquarter of Kering?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Kering"], "answer_entity_name": null, "predicted_answer": "France", "extracted_entity": "Kering"}
{"question": "where is the headquarter of PSFC Chernomorets Burgas?", "answer": "Burgas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Burgas"], "entity_annotations": ["PSFC Chernomorets Burgas"], "answer_entity_name": null, "predicted_answer": "Bulgaria", "extracted_entity": "PSFC_Chernomorets_Burgas"}
{"question": "where is the headquarter of Peckett and Sons?", "answer": "Bristol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bristol"], "entity_annotations": ["Peckett and Sons"], "answer_entity_name": null, "predicted_answer": "istol, England", "extracted_entity": "Peckett_and_Sons"}
{"question": "where is the headquarter of Defensa y Justicia?", "answer": "Florencio Varela", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florencio Varela"], "entity_annotations": ["Defensa y Justicia"], "answer_entity_name": null, "predicted_answer": "Florencio Varela, Buenos Aires,", "extracted_entity": "Defensa_y_Justicia"}
{"question": "where is the headquarter of Popeyes Louisiana Kitchen?", "answer": "Atlanta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlanta"], "entity_annotations": ["Popeyes Louisiana Kitchen"], "answer_entity_name": null, "predicted_answer": "Miami", "extracted_entity": "Popeyes_Louisiana_Kitchen"}
{"question": "where is the headquarter of William Doxford & Sons?", "answer": "Sunderland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sunderland"], "entity_annotations": ["William Doxford & Sons"], "answer_entity_name": null, "predicted_answer": "William Doxford & Sons is headquartered in United Kingdom", "extracted_entity": "William_Doxford_&_Sons"}
{"question": "where is the headquarter of Kenya Airways?", "answer": "Embakasi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Embakasi"], "entity_annotations": ["Kenya Airways"], "answer_entity_name": null, "predicted_answer": "a Airways headquarter is in Embakasi,", "extracted_entity": "Kenya_Airways"}
{"question": "where is the headquarter of Shonan Bellmare?", "answer": "Hiratsuka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hiratsuka"], "entity_annotations": ["Shonan Bellmare"], "answer_entity_name": null, "predicted_answer": "Shonan Bellmare is a Japanese professional football", "extracted_entity": "Shonan_Bellmare"}
{"question": "where is the headquarter of Ferrocarrils de la Generalitat de Catalunya?", "answer": "Barcelona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barcelona"], "entity_annotations": ["Ferrocarrils de la Generalitat de Catalunya"], "answer_entity_name": null, "predicted_answer": "Barcelona, Spain", "extracted_entity": "Ferrocarrils_de_la_Generalitat_de_Catalunya"}
{"question": "where is the headquarter of Aviadvigatel?", "answer": "Perm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Perm"], "entity_annotations": ["Aviadvigatel"], "answer_entity_name": null, "predicted_answer": "Perm, Russia.", "extracted_entity": "Aviadvigatel"}
{"question": "where is the headquarter of James Purdey & Sons?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["James Purdey & Sons"], "answer_entity_name": null, "predicted_answer": "London, England", "extracted_entity": "James_Purdey_&_Sons"}
{"question": "where is the headquarter of St. Modwen Properties?", "answer": "Birmingham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Birmingham"], "entity_annotations": ["St. Modwen Properties"], "answer_entity_name": null, "predicted_answer": "Birmingham", "extracted_entity": "St._Modwen_Properties"}
{"question": "where is the headquarter of Tsingtao Brewery?", "answer": "Qingdao", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Qingdao"], "entity_annotations": ["Tsingtao Brewery"], "answer_entity_name": null, "predicted_answer": "Tsingtao Brewery is headquartered in Qingdao", "extracted_entity": "Tsingtao_Brewery"}
{"question": "where is the headquarter of Universit\u00e0 Cattolica del Sacro Cuore?", "answer": "Milan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milan"], "entity_annotations": ["Universit\u00e0 Cattolica del Sacro Cuore"], "answer_entity_name": null, "predicted_answer": "Universit\u00e0 Cattolica del Sacro Cu", "extracted_entity": "Universit\u00e0_Cattolica_del_Sacro_Cuore"}
{"question": "where is the headquarter of Samuel Enderby & Sons?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Samuel Enderby & Sons"], "answer_entity_name": null, "predicted_answer": "London, England", "extracted_entity": "Samuel_Enderby_&_Sons"}
{"question": "where is the headquarter of RENAMO?", "answer": "Maputo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maputo"], "entity_annotations": ["RENAMO"], "answer_entity_name": null, "predicted_answer": "RENAMO headquarter is located in Map", "extracted_entity": "RENAMO"}
{"question": "where is the headquarter of Bayerische Oberlandbahn?", "answer": "Holzkirchen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Holzkirchen"], "entity_annotations": ["Bayerische Oberlandbahn"], "answer_entity_name": null, "predicted_answer": "Bayerische Oberlandbahn is a German railway", "extracted_entity": "Bayerische_Oberlandbahn"}
{"question": "where is the headquarter of Croatian Peasant Party?", "answer": "Zagreb", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zagreb"], "entity_annotations": ["Croatian Peasant Party"], "answer_entity_name": null, "predicted_answer": "The Croatian Peasant Party (, HSS)", "extracted_entity": "Croatian_Peasant_Party"}
{"question": "where is the headquarter of Millicom?", "answer": "Luxembourg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Luxembourg"], "entity_annotations": ["Millicom"], "answer_entity_name": null, "predicted_answer": "Luxembourg", "extracted_entity": "Millicom"}
{"question": "where is the headquarter of Chef?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Chef"], "answer_entity_name": null, "predicted_answer": "Chef is headquartered in San Francisco, California, United", "extracted_entity": "Chef"}
{"question": "where is the headquarter of Digital Equipment Corporation?", "answer": "Maynard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maynard"], "entity_annotations": ["Digital Equipment Corporation"], "answer_entity_name": null, "predicted_answer": "Digital Equipment Corporation is a company, located in United", "extracted_entity": "Digital_Equipment_Corporation"}
{"question": "where is the headquarter of Gernika Club?", "answer": "Gernika", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gernika"], "entity_annotations": ["Gernika Club"], "answer_entity_name": null, "predicted_answer": "Gernika, Basque Country, Spain", "extracted_entity": "Gernika_Club"}
{"question": "where is the headquarter of Nation Media Group?", "answer": "Nairobi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nairobi"], "entity_annotations": ["Nation Media Group"], "answer_entity_name": null, "predicted_answer": "Nairobi, Kenya", "extracted_entity": "Nation_Media_Group"}
{"question": "where is the headquarter of B\u00e4renreiter?", "answer": "Kassel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kassel"], "entity_annotations": ["B\u00e4renreiter"], "answer_entity_name": null, "predicted_answer": "Kassel, Germany.", "extracted_entity": "B\u00e4renreiter"}
{"question": "where is the headquarter of Danish Meteorological Institute?", "answer": "Copenhagen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Copenhagen"], "entity_annotations": ["Danish Meteorological Institute"], "answer_entity_name": null, "predicted_answer": "Copenhagen, Denmark.", "extracted_entity": "Danish_Meteorological_Institute"}
{"question": "where is the headquarter of University of Lyon?", "answer": "Lyon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lyon"], "entity_annotations": ["University of Lyon"], "answer_entity_name": null, "predicted_answer": "Lyon, France.", "extracted_entity": "University_of_Lyon"}
{"question": "where is the headquarter of Lucent?", "answer": "Murray Hill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Murray Hill"], "entity_annotations": ["Lucent"], "answer_entity_name": null, "predicted_answer": "Murray Hill, New Jersey.", "extracted_entity": "Lucent"}
{"question": "where is the headquarter of Lionhead Studios?", "answer": "Guildford", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guildford"], "entity_annotations": ["Lionhead Studios"], "answer_entity_name": null, "predicted_answer": "Lionhead Studios headquarter is in England.", "extracted_entity": "Lionhead_Studios"}
{"question": "where is the headquarter of Mary Kay?", "answer": "Addison", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Addison"], "entity_annotations": ["Mary Kay"], "answer_entity_name": null, "predicted_answer": "Mary Kay is based in Addison, Texas.", "extracted_entity": "Mary_Kay"}
{"question": "where is the headquarter of Co-operative Commonwealth Federation?", "answer": "Ottawa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ottawa"], "entity_annotations": ["Co-operative Commonwealth Federation"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Co-operative_Commonwealth_Federation"}
{"question": "where is the headquarter of Silicon Graphics?", "answer": "Mountain View", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mountain View"], "entity_annotations": ["Silicon Graphics"], "answer_entity_name": null, "predicted_answer": "Silicon Graphics, Inc. (stylized as Silicon", "extracted_entity": "Silicon_Graphics"}
{"question": "where is the headquarter of Lebanese Communist Party?", "answer": "Beirut", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Beirut"], "entity_annotations": ["Lebanese Communist Party"], "answer_entity_name": null, "predicted_answer": "Beirut", "extracted_entity": "Lebanese_Communist_Party"}
{"question": "where is the headquarter of Technical University of Denmark?", "answer": "Kongens Lyngby", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kongens Lyngby"], "entity_annotations": ["Technical University of Denmark"], "answer_entity_name": null, "predicted_answer": "Kongens Lyngby, Denmark.", "extracted_entity": "Technical_University_of_Denmark"}
{"question": "where is the headquarter of UE Santa Coloma?", "answer": "Santa Coloma d'Andorra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Santa Coloma d'Andorra"], "entity_annotations": ["UE Santa Coloma"], "answer_entity_name": null, "predicted_answer": "UE Santa Coloma is based in Andorra la", "extracted_entity": "UE_Santa_Coloma"}
{"question": "where is the headquarter of University of Erlangen-Nuremberg?", "answer": "Erlangen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Erlangen"], "entity_annotations": ["University of Erlangen-Nuremberg"], "answer_entity_name": null, "predicted_answer": "Erlangen, Germany.", "extracted_entity": "University_of_Erlangen-Nuremberg"}
{"question": "where is the headquarter of FC Eindhoven?", "answer": "Eindhoven", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eindhoven"], "entity_annotations": ["FC Eindhoven"], "answer_entity_name": null, "predicted_answer": "Eindhoven, Netherlands. Source: wikipedia.org", "extracted_entity": "FC_Eindhoven"}
{"question": "where is the headquarter of BYD Auto?", "answer": "Shenzhen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shenzhen"], "entity_annotations": ["BYD Auto"], "answer_entity_name": null, "predicted_answer": "Xi'an, Shaanxi Province, China", "extracted_entity": "BYD_Auto"}
{"question": "where is the headquarter of Ottawa Fury FC?", "answer": "Ottawa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ottawa"], "entity_annotations": ["Ottawa Fury FC"], "answer_entity_name": null, "predicted_answer": "Ottawa Fury FC is headquartered in Ottawa, Canada", "extracted_entity": "Ottawa_Fury_FC"}
{"question": "where is the headquarter of Douglas & McIntyre?", "answer": "Vancouver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vancouver"], "entity_annotations": ["Douglas & McIntyre"], "answer_entity_name": null, "predicted_answer": "Douglas & McIntyre is based in Vancouver", "extracted_entity": "Douglas_&_McIntyre"}
{"question": "where is the headquarter of Motor Sich?", "answer": "Zaporizhzhia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zaporizhzhia"], "entity_annotations": ["Motor Sich"], "answer_entity_name": null, "predicted_answer": "Zaporizhzhia", "extracted_entity": "Motor_Sich"}
{"question": "where is the headquarter of Amiens SC?", "answer": "Amiens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amiens"], "entity_annotations": ["Amiens SC"], "answer_entity_name": null, "predicted_answer": "Amiens, France", "extracted_entity": "Amiens_SC"}
{"question": "where is the headquarter of Marinship?", "answer": "Sausalito", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sausalito"], "entity_annotations": ["Marinship"], "answer_entity_name": null, "predicted_answer": "Marinship is the shipbuilding company of the United", "extracted_entity": "Marinship"}
{"question": "where is the headquarter of The Pok\u00e9mon Company?", "answer": "Minato-ku", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Minato-ku"], "entity_annotations": ["The Pok\u00e9mon Company"], "answer_entity_name": null, "predicted_answer": "The Pok\u00e9mon Company is headquartered in Tokyo, Japan.", "extracted_entity": "The_Pok\u00e9mon_Company"}
{"question": "where is the headquarter of Tokyopop?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Tokyopop"], "answer_entity_name": null, "predicted_answer": "The headquarter of Tokyopop is in", "extracted_entity": "Tokyopop"}
{"question": "where is the headquarter of FC Mendrisio-Stabio?", "answer": "Mendrisio", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mendrisio"], "entity_annotations": ["FC Mendrisio-Stabio"], "answer_entity_name": null, "predicted_answer": "The headquarter of FC Mendrisio-Stab", "extracted_entity": "FC_Mendrisio-Stabio"}
{"question": "where is the headquarter of Aniplex?", "answer": "Tokyo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tokyo"], "entity_annotations": ["Aniplex"], "answer_entity_name": null, "predicted_answer": "Tokyo, Japan", "extracted_entity": "Aniplex"}
{"question": "where is the headquarter of Slingsby Aviation?", "answer": "Kirkbymoorside", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kirkbymoorside"], "entity_annotations": ["Slingsby Aviation"], "answer_entity_name": null, "predicted_answer": "Slingsby Aviation headquarter is Scarborough.", "extracted_entity": "Slingsby_Aviation"}
{"question": "where is the headquarter of Henning Larsen Architects?", "answer": "Copenhagen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Copenhagen"], "entity_annotations": ["Henning Larsen Architects"], "answer_entity_name": null, "predicted_answer": "Copenhagen, Denmark.", "extracted_entity": "Henning_Larsen_Architects"}
{"question": "where is the headquarter of Pontifical Academy of Sciences?", "answer": "Casina Pio IV", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Casina Pio IV"], "entity_annotations": ["Pontifical Academy of Sciences"], "answer_entity_name": null, "predicted_answer": "The headquarter of Pontifical Academy of Sciences", "extracted_entity": "Pontifical_Academy_of_Sciences"}
{"question": "where is the headquarter of Arkansas Tech University?", "answer": "Russellville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russellville"], "entity_annotations": ["Arkansas Tech University"], "answer_entity_name": null, "predicted_answer": "Arkansas Tech University is located at 400 West O", "extracted_entity": "Arkansas_Tech_University"}
{"question": "where is the headquarter of Radical Cause?", "answer": "Caracas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Caracas"], "entity_annotations": ["Radical Cause"], "answer_entity_name": null, "predicted_answer": "Venezuela", "extracted_entity": "Radical_Cause"}
{"question": "where is the headquarter of Gerber Products Company?", "answer": "Fremont", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fremont"], "entity_annotations": ["Gerber Products Company"], "answer_entity_name": null, "predicted_answer": "Florham Park, New Jersey, with plans to", "extracted_entity": "Gerber_Products_Company"}
{"question": "where is the headquarter of Northwestern Elevated Railroad?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Northwestern Elevated Railroad"], "answer_entity_name": null, "predicted_answer": "The headquarter of Northwestern Elevated Railroad is in Chicago", "extracted_entity": "Northwestern_Elevated_Railroad"}
{"question": "where is the headquarter of Nippon Cultural Broadcasting?", "answer": "Tokyo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tokyo", "Minato-ku"], "entity_annotations": ["Nippon Cultural Broadcasting"], "answer_entity_name": null, "predicted_answer": "31, Hamamatsuch\u014d 1", "extracted_entity": "Nippon_Cultural_Broadcasting"}
{"question": "where is the headquarter of Mohun Bagan A.C.?", "answer": "Kolkata", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kolkata"], "entity_annotations": ["Mohun Bagan A.C."], "answer_entity_name": null, "predicted_answer": "Kolkata, West Bengal", "extracted_entity": "Mohun_Bagan_A.C."}
{"question": "where is the headquarter of Italian Football Federation?", "answer": "Rome", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rome"], "entity_annotations": ["Italian Football Federation"], "answer_entity_name": null, "predicted_answer": "the headquarter of Italian Football Federation is in Rome", "extracted_entity": "Italian_Football_Federation"}
{"question": "where is the headquarter of Uganda Revenue Authority SC?", "answer": "Kampala", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kampala"], "entity_annotations": ["Uganda Revenue Authority SC"], "answer_entity_name": null, "predicted_answer": "Uganda Revenue Authority SC is the headquarter of Uganda", "extracted_entity": "Uganda_Revenue_Authority_SC"}
{"question": "where is the headquarter of FC Daugava?", "answer": "Daugavpils", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daugavpils"], "entity_annotations": ["FC Daugava"], "answer_entity_name": null, "predicted_answer": "Daugavpils, Latvia", "extracted_entity": "FC_Daugava"}
{"question": "where is the headquarter of Norges Bank?", "answer": "Oslo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oslo"], "entity_annotations": ["Norges Bank"], "answer_entity_name": null, "predicted_answer": "Oslo, Norway", "extracted_entity": "Norges_Bank"}
{"question": "where is the headquarter of A.S. Pescina Valle del Giovenco?", "answer": "Pescina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pescina"], "entity_annotations": ["A.S. Pescina Valle del Giovenco"], "answer_entity_name": null, "predicted_answer": "Pescina, Abruzzo", "extracted_entity": "A.S._Pescina_Valle_del_Giovenco"}
{"question": "where is the headquarter of Cognita?", "answer": "Milton Keynes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milton Keynes"], "entity_annotations": ["Cognita"], "answer_entity_name": null, "predicted_answer": "United Kingdom", "extracted_entity": "Cognita"}
{"question": "where is the headquarter of Vans?", "answer": "Cypress", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cypress"], "entity_annotations": ["Vans"], "answer_entity_name": null, "predicted_answer": "Anaheim, California, United States", "extracted_entity": "Vans"}
{"question": "where is the headquarter of Saks Fifth Avenue?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Saks Fifth Avenue"], "answer_entity_name": null, "predicted_answer": "New York City, USA.", "extracted_entity": "Saks_Fifth_Avenue"}
{"question": "where is the headquarter of Mushroom Group?", "answer": "Melbourne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne"], "entity_annotations": ["Mushroom Group"], "answer_entity_name": null, "predicted_answer": "Melbourne", "extracted_entity": "Mushroom_Group"}
{"question": "where is the headquarter of Budapest Honv\u00e9d FC?", "answer": "Budapest", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Budapest"], "entity_annotations": ["Budapest Honv\u00e9d FC"], "answer_entity_name": null, "predicted_answer": "Budapest, Hungary", "extracted_entity": "Budapest_Honv\u00e9d_FC"}
{"question": "where is the headquarter of University of Bordeaux 1?", "answer": "Bordeaux", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bordeaux"], "entity_annotations": ["University of Bordeaux 1"], "answer_entity_name": null, "predicted_answer": "University of Bordeaux 1 is headquartered in Talence", "extracted_entity": "University_of_Bordeaux_1"}
{"question": "where is the headquarter of Red River College?", "answer": "Winnipeg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Winnipeg"], "entity_annotations": ["Red River College"], "answer_entity_name": null, "predicted_answer": "Red River College is located in Winnipeg, Manitoba,", "extracted_entity": "Red_River_College"}
{"question": "where is the headquarter of Guildhall School of Music and Drama?", "answer": "Barbican Centre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barbican Centre"], "entity_annotations": ["Guildhall School of Music and Drama"], "answer_entity_name": null, "predicted_answer": "Guildhall School of Music and Drama is located in", "extracted_entity": "Guildhall_School_of_Music_and_Drama"}
{"question": "where is the headquarter of Lamborghini?", "answer": "Sant'Agata Bolognese", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sant'Agata Bolognese"], "entity_annotations": ["Lamborghini"], "answer_entity_name": null, "predicted_answer": "Sant'Agata Bolognese", "extracted_entity": "Lamborghini"}
{"question": "where is the headquarter of Beitar Tel Aviv Ramla F.C.?", "answer": "Tel Aviv", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tel Aviv"], "entity_annotations": ["Beitar Tel Aviv Ramla F.C."], "answer_entity_name": null, "predicted_answer": "Beitar Tel Aviv Ramla F.C. is", "extracted_entity": "Beitar_Tel_Aviv_Ramla_F.C."}
{"question": "where is the headquarter of Skeid Fotball?", "answer": "Oslo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oslo"], "entity_annotations": ["Skeid Fotball"], "answer_entity_name": null, "predicted_answer": "Oslo, Norway.", "extracted_entity": "Skeid_Fotball"}
{"question": "where is the headquarter of Steinkjer FK?", "answer": "Steinkjer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Steinkjer"], "entity_annotations": ["Steinkjer FK"], "answer_entity_name": null, "predicted_answer": "Steinkjer FK is a Norwegian football club from", "extracted_entity": "Steinkjer_FK"}
{"question": "where is the headquarter of Hamas?", "answer": "Gaza City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gaza City"], "entity_annotations": ["Hamas"], "answer_entity_name": null, "predicted_answer": "aza Strip", "extracted_entity": "Hamas"}
{"question": "which company is Kleenex produced by?", "answer": "Kimberly-Clark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kimberly-Clark"], "entity_annotations": ["Kleenex"], "answer_entity_name": null, "predicted_answer": "Kimberly-Clark", "extracted_entity": "Kleenex"}
{"question": "which company is Cadillac Escalade produced by?", "answer": "General Motors", "dataset": "entity_questions", "split": "test", "answer_aliases": ["General Motors", "Cadillac"], "entity_annotations": ["Cadillac Escalade"], "answer_entity_name": null, "predicted_answer": "General Motors", "extracted_entity": "Cadillac_Escalade"}
{"question": "which company is Marina produced by?", "answer": "Fincantieri", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fincantieri"], "entity_annotations": ["Marina"], "answer_entity_name": null, "predicted_answer": "The company that produced Marina is.", "extracted_entity": "Marina"}
{"question": "which company is Ford Mustang produced by?", "answer": "Ford Motor Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ford Motor Company"], "entity_annotations": ["Ford Mustang"], "answer_entity_name": null, "predicted_answer": "Ford", "extracted_entity": "Ford_Mustang"}
{"question": "which company is Soyuz-FG produced by?", "answer": "Progress State Research and Production Rocket Space Center", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Progress State Research and Production Rocket Space Center"], "entity_annotations": ["Soyuz-FG"], "answer_entity_name": null, "predicted_answer": "TsSKB-Progress", "extracted_entity": "Soyuz-FG"}
{"question": "which company is Alfa Romeo 164 produced by?", "answer": "Fiat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fiat", "Alfa Romeo"], "entity_annotations": ["Alfa Romeo 164"], "answer_entity_name": null, "predicted_answer": "Italian automaker Alfa Romeo", "extracted_entity": "Alfa_Romeo_164"}
{"question": "which company is Nissan Bluebird produced by?", "answer": "Nissan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nissan"], "entity_annotations": ["Nissan Bluebird"], "answer_entity_name": null, "predicted_answer": "Nissan", "extracted_entity": "Nissan_Bluebird"}
{"question": "which company is Southern Pacific 4449 produced by?", "answer": "Lima Locomotive Works", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lima Locomotive Works"], "entity_annotations": ["Southern Pacific 4449"], "answer_entity_name": null, "predicted_answer": "Southern Pacific 4449 is produced by Southern Pacific", "extracted_entity": "Southern_Pacific_4449"}
{"question": "which company is Jaguar XK120 produced by?", "answer": "Jaguar Cars", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jaguar Cars"], "entity_annotations": ["Jaguar XK120"], "answer_entity_name": null, "predicted_answer": "Jaguar XK120 is produced by Jaguar", "extracted_entity": "Jaguar_XK120"}
{"question": "which company is Ferrari 375 MM produced by?", "answer": "Ferrari", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ferrari"], "entity_annotations": ["Ferrari 375 MM"], "answer_entity_name": null, "predicted_answer": "Ferrari", "extracted_entity": "Ferrari_375_MM"}
{"question": "which company is CDC Cyber produced by?", "answer": "Control Data Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Control Data Corporation"], "entity_annotations": ["CDC Cyber"], "answer_entity_name": null, "predicted_answer": "Control Data Corporation (CDC)", "extracted_entity": "CDC_Cyber"}
{"question": "which company is Cessna 404 Titan produced by?", "answer": "Cessna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cessna"], "entity_annotations": ["Cessna 404 Titan"], "answer_entity_name": null, "predicted_answer": "Cessna.", "extracted_entity": "Cessna_404_Titan"}
{"question": "which company is Nikon F-mount produced by?", "answer": "Nikon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nikon"], "entity_annotations": ["Nikon F-mount"], "answer_entity_name": null, "predicted_answer": "Nikon. The Nikon F-mount is a type of", "extracted_entity": "Nikon_F-mount"}
{"question": "which company is Toyota Camry produced by?", "answer": "Toyota", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toyota"], "entity_annotations": ["Toyota Camry"], "answer_entity_name": null, "predicted_answer": "Toyota", "extracted_entity": "Toyota_Camry"}
{"question": "which company is Remington Model 8 produced by?", "answer": "Remington Arms", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Remington Arms"], "entity_annotations": ["Remington Model 8"], "answer_entity_name": null, "predicted_answer": "Remington", "extracted_entity": "Remington_Model_8"}
{"question": "which company is FN Five-seven produced by?", "answer": "FN Herstal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["FN Herstal"], "entity_annotations": ["FN Five-seven"], "answer_entity_name": null, "predicted_answer": "FN Herstal", "extracted_entity": "FN_Five-seven"}
{"question": "which company is Cadillac Brougham produced by?", "answer": "Cadillac", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cadillac"], "entity_annotations": ["Cadillac Brougham"], "answer_entity_name": null, "predicted_answer": "Cadillac Brougham is produced by Cadillac.", "extracted_entity": "Cadillac_Brougham"}
{"question": "which company is 7.5 cm Pak 40 produced by?", "answer": "Rheinmetall AG", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rheinmetall AG"], "entity_annotations": ["7.5 cm Pak 40"], "answer_entity_name": null, "predicted_answer": "Krupp and Rheinmetall", "extracted_entity": "7.5_cm_Pak_40"}
{"question": "which company is Lincoln Continental produced by?", "answer": "Lincoln Motor Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lincoln Motor Company"], "entity_annotations": ["Lincoln Continental"], "answer_entity_name": null, "predicted_answer": "Lincoln Continental is produced by Ford Motor Company", "extracted_entity": "Lincoln_Continental"}
{"question": "which company is Tupolev Tu-160 produced by?", "answer": "Tupolev", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tupolev"], "entity_annotations": ["Tupolev Tu-160"], "answer_entity_name": null, "predicted_answer": "Tupolev Tu-160 is produced by Tup", "extracted_entity": "Tupolev_Tu-160"}
{"question": "which company is BTR-40 produced by?", "answer": "GAZ", "dataset": "entity_questions", "split": "test", "answer_aliases": ["GAZ"], "entity_annotations": ["BTR-40"], "answer_entity_name": null, "predicted_answer": "GAZ", "extracted_entity": "BTR-40"}
{"question": "which company is Space Shuttle Solid Rocket Booster produced by?", "answer": "Alliant Techsystems", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alliant Techsystems"], "entity_annotations": ["Space Shuttle Solid Rocket Booster"], "answer_entity_name": null, "predicted_answer": "Space Shuttle Solid Rocket Booster is produced by Thiokol", "extracted_entity": "Space_Shuttle_Solid_Rocket_Booster"}
{"question": "which company is Volkswagen Scirocco produced by?", "answer": "Volkswagen Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Volkswagen Group"], "entity_annotations": ["Volkswagen Scirocco"], "answer_entity_name": null, "predicted_answer": "Volkswagen Scirocco is produced by Volkswagen.", "extracted_entity": "Volkswagen_Scirocco"}
{"question": "which company is Wing Coaster produced by?", "answer": "Bolliger & Mabillard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bolliger & Mabillard"], "entity_annotations": ["Wing Coaster"], "answer_entity_name": null, "predicted_answer": "Wing Coaster is produced by Bolliger &", "extracted_entity": "Wing_Coaster"}
{"question": "which company is Aquafina produced by?", "answer": "PepsiCo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["PepsiCo"], "entity_annotations": ["Aquafina"], "answer_entity_name": null, "predicted_answer": "PepsiCo", "extracted_entity": "Aquafina"}
{"question": "which company is Type 206 submarine produced by?", "answer": "Howaldtswerke-Deutsche Werft", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Howaldtswerke-Deutsche Werft"], "entity_annotations": ["Type 206 submarine"], "answer_entity_name": null, "predicted_answer": "Howaldtswerke-Deutsche Werft", "extracted_entity": "Type_206_submarine"}
{"question": "which company is Pepsi Max produced by?", "answer": "PepsiCo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["PepsiCo"], "entity_annotations": ["Pepsi Max"], "answer_entity_name": null, "predicted_answer": "Pepsi Max is produced by PepsiCo", "extracted_entity": "Pepsi_Max"}
{"question": "which company is Skanderbeg produced by?", "answer": "Trieste", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Trieste"], "entity_annotations": ["Skanderbeg"], "answer_entity_name": null, "predicted_answer": "nderbeg is produced by Skanderbeg", "extracted_entity": "Skanderbeg"}
{"question": "which company is Zenith produced by?", "answer": "Zenair", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zenair"], "entity_annotations": ["Zenith"], "answer_entity_name": null, "predicted_answer": "Zenith is produced by the company Zenith.", "extracted_entity": "Zenith"}
{"question": "which company is Nissan X-Trail produced by?", "answer": "Nissan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nissan"], "entity_annotations": ["Nissan X-Trail"], "answer_entity_name": null, "predicted_answer": "issan", "extracted_entity": "Nissan_X-Trail"}
{"question": "which company is Hyundai Tucson produced by?", "answer": "Hyundai Motor Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hyundai Motor Company"], "entity_annotations": ["Hyundai Tucson"], "answer_entity_name": null, "predicted_answer": "South Korean manufacturer Hyundai", "extracted_entity": "Hyundai_Tucson"}
{"question": "which company is Game Gear produced by?", "answer": "Sega", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sega"], "entity_annotations": ["Game Gear"], "answer_entity_name": null, "predicted_answer": "Sega", "extracted_entity": "Game_Gear"}
{"question": "which company is Lamborghini Gallardo produced by?", "answer": "Lamborghini", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lamborghini"], "entity_annotations": ["Lamborghini Gallardo"], "answer_entity_name": null, "predicted_answer": "Lamborghini Gallardo is produced by Lamborghini.", "extracted_entity": "Lamborghini_Gallardo"}
{"question": "which company is Siemens Desiro produced by?", "answer": "Siemens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Siemens", "Siemens Mobility"], "entity_annotations": ["Siemens Desiro"], "answer_entity_name": null, "predicted_answer": "Siemens AG", "extracted_entity": "Siemens_Desiro"}
{"question": "which company is PGM-17 Thor produced by?", "answer": "Douglas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Douglas"], "entity_annotations": ["PGM-17 Thor"], "answer_entity_name": null, "predicted_answer": "The PGM-17A Thor: for the", "extracted_entity": "PGM-17_Thor"}
{"question": "which company is Bell 206 produced by?", "answer": "Bell Flight", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bell Flight"], "entity_annotations": ["Bell 206"], "answer_entity_name": null, "predicted_answer": "Bell Helicopter", "extracted_entity": "Bell_206"}
{"question": "which company is Chevrolet Corvette (C4) produced by?", "answer": "Chevrolet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chevrolet"], "entity_annotations": ["Chevrolet Corvette (C4)"], "answer_entity_name": null, "predicted_answer": "American automobile manufacturer Chevrolet", "extracted_entity": "Chevrolet_Corvette_(C4)"}
{"question": "which company is Ford Escort produced by?", "answer": "Ford Motor Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ford Motor Company"], "entity_annotations": ["Ford Escort"], "answer_entity_name": null, "predicted_answer": "Ford", "extracted_entity": "Ford_Escort"}
{"question": "which company is Crow produced by?", "answer": "Pacific Missile Test Center", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pacific Missile Test Center"], "entity_annotations": ["Crow"], "answer_entity_name": null, "predicted_answer": "Crow is produced by.", "extracted_entity": "Crow"}
{"question": "which company is Fairchild Channel F produced by?", "answer": "Fairchild Semiconductor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fairchild Semiconductor"], "entity_annotations": ["Fairchild Channel F"], "answer_entity_name": null, "predicted_answer": "Fairchild Camera and Instrument", "extracted_entity": "Fairchild_Channel_F"}
{"question": "which company is Suzuki Wagon R produced by?", "answer": "Suzuki", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Suzuki"], "entity_annotations": ["Suzuki Wagon R"], "answer_entity_name": null, "predicted_answer": "Suzuki Wagon R is produced by Suzuki.", "extracted_entity": "Suzuki_Wagon_R"}
{"question": "which company is Bugatti Type 51 produced by?", "answer": "Automobiles Ettore Bugatti", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Automobiles Ettore Bugatti"], "entity_annotations": ["Bugatti Type 51"], "answer_entity_name": null, "predicted_answer": "Bugatti.", "extracted_entity": "Bugatti_Type_51"}
{"question": "which company is Kia Picanto produced by?", "answer": "Kia Motors", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kia Motors"], "entity_annotations": ["Kia Picanto"], "answer_entity_name": null, "predicted_answer": "a", "extracted_entity": "Kia_Picanto"}
{"question": "which company is HTC Dream produced by?", "answer": "HTC Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["HTC Corporation"], "entity_annotations": ["HTC Dream"], "answer_entity_name": null, "predicted_answer": "HTC", "extracted_entity": "HTC_Dream"}
{"question": "which company is Porsche Panamera produced by?", "answer": "Porsche", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Porsche"], "entity_annotations": ["Porsche Panamera"], "answer_entity_name": null, "predicted_answer": "orsche", "extracted_entity": "Porsche_Panamera"}
{"question": "which company is VAX produced by?", "answer": "Digital Equipment Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Digital Equipment Corporation"], "entity_annotations": ["VAX"], "answer_entity_name": null, "predicted_answer": "DEC", "extracted_entity": "VAX"}
{"question": "which company is EMD SD70 series produced by?", "answer": "Electro-Motive Diesel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Electro-Motive Diesel"], "entity_annotations": ["EMD SD70 series"], "answer_entity_name": null, "predicted_answer": "he EMD SD70 is a series of diesel", "extracted_entity": "EMD_SD70_series"}
{"question": "which company is Mazda 787B produced by?", "answer": "Mazda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mazda"], "entity_annotations": ["Mazda 787B"], "answer_entity_name": null, "predicted_answer": "Mazda", "extracted_entity": "Mazda_787B"}
{"question": "which company is Hyundai Pony produced by?", "answer": "Hyundai Motor Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hyundai Motor Company"], "entity_annotations": ["Hyundai Pony"], "answer_entity_name": null, "predicted_answer": "Hyundai", "extracted_entity": "Hyundai_Pony"}
{"question": "which company is Mercedes-Benz W120 produced by?", "answer": "Mercedes-Benz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mercedes-Benz"], "entity_annotations": ["Mercedes-Benz W120"], "answer_entity_name": null, "predicted_answer": "Mercedes-Benz W120 is produced by Daimler", "extracted_entity": "Mercedes-Benz_W120"}
{"question": "which company is Mazda6 produced by?", "answer": "Mazda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mazda"], "entity_annotations": ["Mazda6"], "answer_entity_name": null, "predicted_answer": "Mazda", "extracted_entity": "Mazda6"}
{"question": "which company is Ford Fusion Hybrid produced by?", "answer": "Ford Motor Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ford Motor Company"], "entity_annotations": ["Ford Fusion Hybrid"], "answer_entity_name": null, "predicted_answer": "rd", "extracted_entity": "Ford_Fusion_Hybrid"}
{"question": "which company is GAM-87 Skybolt produced by?", "answer": "Douglas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Douglas"], "entity_annotations": ["GAM-87 Skybolt"], "answer_entity_name": null, "predicted_answer": "Douglas.", "extracted_entity": "GAM-87_Skybolt"}
{"question": "which company is Grumman G-44 Widgeon produced by?", "answer": "Grumman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Grumman"], "entity_annotations": ["Grumman G-44 Widgeon"], "answer_entity_name": null, "predicted_answer": "Grumman", "extracted_entity": "Grumman_G-44_Widgeon"}
{"question": "which company is Renault Trafic produced by?", "answer": "Renault", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Renault", "Opel"], "entity_annotations": ["Renault Trafic"], "answer_entity_name": null, "predicted_answer": "the French automaker Renault", "extracted_entity": "Renault_Trafic"}
{"question": "which company is Audi R15 TDI produced by?", "answer": "Audi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Audi"], "entity_annotations": ["Audi R15 TDI"], "answer_entity_name": null, "predicted_answer": "Audi R15 TDI is produced by Audi AG", "extracted_entity": "Audi_R15_TDI"}
{"question": "which company is Saturn AL-31 produced by?", "answer": "NPO Saturn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["NPO Saturn"], "entity_annotations": ["Saturn AL-31"], "answer_entity_name": null, "predicted_answer": "NPO Saturn", "extracted_entity": "Saturn_AL-31"}
{"question": "which company is Nissan Cedric produced by?", "answer": "Nissan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nissan"], "entity_annotations": ["Nissan Cedric"], "answer_entity_name": null, "predicted_answer": "Nissan", "extracted_entity": "Nissan_Cedric"}
{"question": "which company is Volvo B18 engine produced by?", "answer": "Volvo Cars", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Volvo Cars"], "entity_annotations": ["Volvo B18 engine"], "answer_entity_name": null, "predicted_answer": "lvo B18 engine is produced by Volvo.", "extracted_entity": "Volvo_B18_engine"}
{"question": "which company is McLaren F1 produced by?", "answer": "McLaren Automotive", "dataset": "entity_questions", "split": "test", "answer_aliases": ["McLaren Automotive"], "entity_annotations": ["McLaren F1"], "answer_entity_name": null, "predicted_answer": "McLaren Cars", "extracted_entity": "McLaren_F1"}
{"question": "which company is Unimog produced by?", "answer": "Mercedes-Benz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mercedes-Benz"], "entity_annotations": ["Unimog"], "answer_entity_name": null, "predicted_answer": "Daimler Truck", "extracted_entity": "Unimog"}
{"question": "which company is Lexus SC produced by?", "answer": "Toyota", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toyota"], "entity_annotations": ["Lexus SC"], "answer_entity_name": null, "predicted_answer": "Lexus", "extracted_entity": "Lexus_SC"}
{"question": "which company is DIGIC produced by?", "answer": "Canon Inc.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canon Inc."], "entity_annotations": ["DIGIC"], "answer_entity_name": null, "predicted_answer": "Canon Inc.", "extracted_entity": "DIGIC"}
{"question": "which company is Audi A5 produced by?", "answer": "Audi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Audi"], "entity_annotations": ["Audi A5"], "answer_entity_name": null, "predicted_answer": "Audi", "extracted_entity": "Audi_A5"}
{"question": "which company is Scania N-series produced by?", "answer": "Scania", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Scania"], "entity_annotations": ["Scania N-series"], "answer_entity_name": null, "predicted_answer": "Scania", "extracted_entity": "Scania_N-series"}
{"question": "which company is British Rail Class 86 produced by?", "answer": "English Electric", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English Electric", "Doncaster Works", "Vulcan Foundry"], "entity_annotations": ["British Rail Class 86"], "answer_entity_name": null, "predicted_answer": "ish Rail Class 86 is produced by British Rail", "extracted_entity": "British_Rail_Class_86"}
{"question": "which company is Atari 8-bit family produced by?", "answer": "Atari", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atari"], "entity_annotations": ["Atari 8-bit family"], "answer_entity_name": null, "predicted_answer": "Atari, Inc.", "extracted_entity": "Atari_8-bit_family"}
{"question": "which company is Toyota Avalon produced by?", "answer": "Toyota", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toyota"], "entity_annotations": ["Toyota Avalon"], "answer_entity_name": null, "predicted_answer": "Toyota", "extracted_entity": "Toyota_Avalon"}
{"question": "which company is Chevrolet Corvette C6.R produced by?", "answer": "Chevrolet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chevrolet"], "entity_annotations": ["Chevrolet Corvette C6.R"], "answer_entity_name": null, "predicted_answer": "Chevrolet", "extracted_entity": "Chevrolet_Corvette_C6.R"}
{"question": "which company is General Electric J85 produced by?", "answer": "General Electric", "dataset": "entity_questions", "split": "test", "answer_aliases": ["General Electric"], "entity_annotations": ["General Electric J85"], "answer_entity_name": null, "predicted_answer": "eneral Electric J85 is produced by General Electric.", "extracted_entity": "General_Electric_J85"}
{"question": "which company is Jeep Patriot produced by?", "answer": "Jeep", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jeep"], "entity_annotations": ["Jeep Patriot"], "answer_entity_name": null, "predicted_answer": "Jeep", "extracted_entity": "Jeep_Patriot"}
{"question": "which company is Honda CBR600RR produced by?", "answer": "Honda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Honda"], "entity_annotations": ["Honda CBR600RR"], "answer_entity_name": null, "predicted_answer": "Honda", "extracted_entity": "Honda_CBR600RR"}
{"question": "which company is Albacore produced by?", "answer": "Fairey Aviation Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fairey Aviation Company"], "entity_annotations": ["Albacore"], "answer_entity_name": null, "predicted_answer": "Albacore is produced by the company Albac", "extracted_entity": "Albacore"}
{"question": "which company is Virtual Boy produced by?", "answer": "Nintendo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nintendo"], "entity_annotations": ["Virtual Boy"], "answer_entity_name": null, "predicted_answer": "Nintendo", "extracted_entity": "Virtual_Boy"}
{"question": "which company is Isetta produced by?", "answer": "Arman Ansari", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arman Ansari"], "entity_annotations": ["Isetta"], "answer_entity_name": null, "predicted_answer": "BMW", "extracted_entity": "Isetta"}
{"question": "which company is Datsun Truck produced by?", "answer": "Nissan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nissan"], "entity_annotations": ["Datsun Truck"], "answer_entity_name": null, "predicted_answer": "Nissan", "extracted_entity": "Datsun_Truck"}
{"question": "which company is V-2 rocket produced by?", "answer": "Mittelwerk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mittelwerk"], "entity_annotations": ["V-2 rocket"], "answer_entity_name": null, "predicted_answer": "Opel-RAK", "extracted_entity": "V-2_rocket"}
{"question": "which company is FGM-148 Javelin produced by?", "answer": "Raytheon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Raytheon", "Lockheed Martin"], "entity_annotations": ["FGM-148 Javelin"], "answer_entity_name": null, "predicted_answer": "ytheon", "extracted_entity": "FGM-148_Javelin"}
{"question": "which company is Alexander von Humboldt produced by?", "answer": "AG Weser", "dataset": "entity_questions", "split": "test", "answer_aliases": ["AG Weser"], "entity_annotations": ["Alexander von Humboldt"], "answer_entity_name": null, "predicted_answer": "Alexander von Humboldt is produced by Alexander von Humb", "extracted_entity": "Alexander_von_Humboldt"}
{"question": "which company is Pilatus PC-21 produced by?", "answer": "Pilatus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pilatus"], "entity_annotations": ["Pilatus PC-21"], "answer_entity_name": null, "predicted_answer": "Pilatus Aircraft of Switzerland", "extracted_entity": "Pilatus_PC-21"}
{"question": "which company is Aston Martin DB5 produced by?", "answer": "Aston Martin Lagonda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aston Martin Lagonda"], "entity_annotations": ["Aston Martin DB5"], "answer_entity_name": null, "predicted_answer": "ston Martin", "extracted_entity": "Aston_Martin_DB5"}
{"question": "which company is Mercedes-Benz buses produced by?", "answer": "EvoBus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["EvoBus"], "entity_annotations": ["Mercedes-Benz buses"], "answer_entity_name": null, "predicted_answer": "Mercedes-Benz buses is produced by EvoBus GmbH.", "extracted_entity": "Mercedes-Benz_buses"}
{"question": "which company is LNER Class A4 produced by?", "answer": "Doncaster Works", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Doncaster Works"], "entity_annotations": ["LNER Class A4"], "answer_entity_name": null, "predicted_answer": "London and North Eastern Railway", "extracted_entity": "LNER_Class_A4"}
{"question": "which company is Advanced Combat Optical Gunsight produced by?", "answer": "Trijicon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Trijicon"], "entity_annotations": ["Advanced Combat Optical Gunsight"], "answer_entity_name": null, "predicted_answer": "Trijicon", "extracted_entity": "Advanced_Combat_Optical_Gunsight"}
{"question": "which company is Porsche 959 produced by?", "answer": "Porsche", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Porsche"], "entity_annotations": ["Porsche 959"], "answer_entity_name": null, "predicted_answer": "erman automobile manufacturer Porsche", "extracted_entity": "Porsche_959"}
{"question": "which company is 6.5mm Creedmoor produced by?", "answer": "Hornady", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hornady"], "entity_annotations": ["6.5mm Creedmoor"], "answer_entity_name": null, "predicted_answer": "dy", "extracted_entity": "6.5mm_Creedmoor"}
{"question": "which company is Head & Shoulders produced by?", "answer": "Procter & Gamble", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Procter & Gamble"], "entity_annotations": ["Head & Shoulders"], "answer_entity_name": null, "predicted_answer": "Procter & Gamble", "extracted_entity": "Head_&_Shoulders"}
{"question": "which company is Nomad produced by?", "answer": "Government Aircraft Factories", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Government Aircraft Factories"], "entity_annotations": ["Nomad"], "answer_entity_name": null, "predicted_answer": "omad is produced by Nomad.", "extracted_entity": "Nomad"}
{"question": "which company is Saab 29 Tunnan produced by?", "answer": "Saab Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saab Group"], "entity_annotations": ["Saab 29 Tunnan"], "answer_entity_name": null, "predicted_answer": "Saab", "extracted_entity": "Saab_29_Tunnan"}
{"question": "which company is Lexus RX produced by?", "answer": "Toyota", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toyota"], "entity_annotations": ["Lexus RX"], "answer_entity_name": null, "predicted_answer": "Toyota", "extracted_entity": "Lexus_RX"}
{"question": "which company is FV107 Scimitar produced by?", "answer": "Alvis Car and Engineering Company Ltd", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alvis Car and Engineering Company Ltd"], "entity_annotations": ["FV107 Scimitar"], "answer_entity_name": null, "predicted_answer": "Alvis", "extracted_entity": "FV107_Scimitar"}
{"question": "which company is US-K produced by?", "answer": "Lavochkin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lavochkin"], "entity_annotations": ["US-K"], "answer_entity_name": null, "predicted_answer": "NPO Lavochkin", "extracted_entity": "US-K"}
{"question": "which company is EMD SD45 produced by?", "answer": "Electro-Motive Diesel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Electro-Motive Diesel"], "entity_annotations": ["EMD SD45"], "answer_entity_name": null, "predicted_answer": "EMD", "extracted_entity": "EMD_SD45"}
{"question": "which company is Fiat Cinquecento produced by?", "answer": "Fiat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fiat"], "entity_annotations": ["Fiat Cinquecento"], "answer_entity_name": null, "predicted_answer": "Fiat Cinquecento is produced by Fiat", "extracted_entity": "Fiat_Cinquecento"}
{"question": "which company is Honda Civic (ninth generation) produced by?", "answer": "Honda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Honda"], "entity_annotations": ["Honda Civic (ninth generation)"], "answer_entity_name": null, "predicted_answer": "Honda", "extracted_entity": "Honda_Civic_(ninth_generation)"}
{"question": "which company is Short 360 produced by?", "answer": "Short Brothers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Short Brothers"], "entity_annotations": ["Short 360"], "answer_entity_name": null, "predicted_answer": "UK manufacturer Short Brothers", "extracted_entity": "Short_360"}
{"question": "which company is IBM 5250 produced by?", "answer": "IBM", "dataset": "entity_questions", "split": "test", "answer_aliases": ["IBM"], "entity_annotations": ["IBM 5250"], "answer_entity_name": null, "predicted_answer": "IBM. Click the link for more information.", "extracted_entity": "IBM_5250"}
{"question": "which company is Alouette 1 produced by?", "answer": "National Aeronautics and Space Administration", "dataset": "entity_questions", "split": "test", "answer_aliases": ["National Aeronautics and Space Administration"], "entity_annotations": ["Alouette 1"], "answer_entity_name": null, "predicted_answer": "Alouette 1 is produced by Canada", "extracted_entity": "Alouette_1"}
{"question": "which company is Ford Orion produced by?", "answer": "Ford Motor Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ford Motor Company"], "entity_annotations": ["Ford Orion"], "answer_entity_name": null, "predicted_answer": "Ford Orion is produced by Ford Europe.", "extracted_entity": "Ford_Orion"}
{"question": "which company is Chevrolet Tahoe produced by?", "answer": "Chevrolet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chevrolet", "General Motors"], "entity_annotations": ["Chevrolet Tahoe"], "answer_entity_name": null, "predicted_answer": "Chevrolet Tahoe is produced by Chevrolet.", "extracted_entity": "Chevrolet_Tahoe"}
{"question": "which company is Enzo Ferrari produced by?", "answer": "Ferrari", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ferrari"], "entity_annotations": ["Enzo Ferrari"], "answer_entity_name": null, "predicted_answer": "Ferrari", "extracted_entity": "Enzo_Ferrari"}
{"question": "which company is Ford Laser produced by?", "answer": "Ford Motor Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ford Motor Company"], "entity_annotations": ["Ford Laser"], "answer_entity_name": null, "predicted_answer": "Mazda", "extracted_entity": "Ford_Laser"}
{"question": "which company is Mitsubishi Magna produced by?", "answer": "Mitsubishi Motors", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mitsubishi Motors"], "entity_annotations": ["Mitsubishi Magna"], "answer_entity_name": null, "predicted_answer": "Mitsubishi Motors Australia Limited", "extracted_entity": "Mitsubishi_Magna"}
{"question": "which company is Pontiac Solstice produced by?", "answer": "General Motors", "dataset": "entity_questions", "split": "test", "answer_aliases": ["General Motors"], "entity_annotations": ["Pontiac Solstice"], "answer_entity_name": null, "predicted_answer": "Pontiac", "extracted_entity": "Pontiac_Solstice"}
{"question": "which company is ALCO FA produced by?", "answer": "American Locomotive Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["American Locomotive Company"], "entity_annotations": ["ALCO FA"], "answer_entity_name": null, "predicted_answer": "ALCO FA is produced by ALCO", "extracted_entity": "ALCO_FA"}
{"question": "which company is Dodge Viper produced by?", "answer": "Dodge", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dodge"], "entity_annotations": ["Dodge Viper"], "answer_entity_name": null, "predicted_answer": "Dodge", "extracted_entity": "Dodge_Viper"}
{"question": "which company is Chevrolet Biscayne produced by?", "answer": "Chevrolet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chevrolet"], "entity_annotations": ["Chevrolet Biscayne"], "answer_entity_name": null, "predicted_answer": "American manufacturer", "extracted_entity": "Chevrolet_Biscayne"}
{"question": "which company is ICE 3 produced by?", "answer": "Siemens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Siemens"], "entity_annotations": ["ICE 3"], "answer_entity_name": null, "predicted_answer": "Siemens", "extracted_entity": "ICE_3"}
{"question": "which company is Mercedes-Benz T2 produced by?", "answer": "Daimler-Benz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daimler-Benz"], "entity_annotations": ["Mercedes-Benz T2"], "answer_entity_name": null, "predicted_answer": "Daimler-Benz", "extracted_entity": "Mercedes-Benz_T2"}
{"question": "which company is Mercedes-Benz A-Class produced by?", "answer": "Mercedes-Benz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mercedes-Benz"], "entity_annotations": ["Mercedes-Benz A-Class"], "answer_entity_name": null, "predicted_answer": "Mercedes-Benz", "extracted_entity": "Mercedes-Benz_A-Class"}
{"question": "which company is Martin B-10 produced by?", "answer": "Glenn L. Martin Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Glenn L. Martin Company"], "entity_annotations": ["Martin B-10"], "answer_entity_name": null, "predicted_answer": "Glenn L. Martin Company", "extracted_entity": "Martin_B-10"}
{"question": "which company is Lotus Elite produced by?", "answer": "Lotus Cars", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lotus Cars"], "entity_annotations": ["Lotus Elite"], "answer_entity_name": null, "predicted_answer": "British automobile manufacturer Lotus Cars", "extracted_entity": "Lotus_Elite"}
{"question": "which company is Vought VE-7 produced by?", "answer": "Vought", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vought"], "entity_annotations": ["Vought VE-7"], "answer_entity_name": null, "predicted_answer": "Vought", "extracted_entity": "Vought_VE-7"}
{"question": "which company is Airbus A380 produced by?", "answer": "Airbus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Airbus"], "entity_annotations": ["Airbus A380"], "answer_entity_name": null, "predicted_answer": "rbus", "extracted_entity": "Airbus_A380"}
{"question": "which company is Auster produced by?", "answer": "Auster Aircraft Limited", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Auster Aircraft Limited"], "entity_annotations": ["Auster"], "answer_entity_name": null, "predicted_answer": "Auster Auster Aircraft Limited was a British aircraft", "extracted_entity": "Auster"}
{"question": "which company is Jeep Cherokee (XJ) produced by?", "answer": "Jeep", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jeep"], "entity_annotations": ["Jeep Cherokee (XJ)"], "answer_entity_name": null, "predicted_answer": "Jeep.", "extracted_entity": "Jeep_Cherokee_(XJ)"}
{"question": "which company is Espresso produced by?", "answer": "IBM", "dataset": "entity_questions", "split": "test", "answer_aliases": ["IBM"], "entity_annotations": ["Espresso"], "answer_entity_name": null, "predicted_answer": "Espresso is produced by Espresso.", "extracted_entity": "Espresso"}
{"question": "which company is Mitsubishi Challenger produced by?", "answer": "Mitsubishi Motors", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mitsubishi Motors"], "entity_annotations": ["Mitsubishi Challenger"], "answer_entity_name": null, "predicted_answer": "Mitsubishi Motors", "extracted_entity": "Mitsubishi_Challenger"}
{"question": "which company is GWR 4300 Class produced by?", "answer": "Swindon Works", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Swindon Works"], "entity_annotations": ["GWR 4300 Class"], "answer_entity_name": null, "predicted_answer": "Great Western Railway (GWR) 4300", "extracted_entity": "GWR_4300_Class"}
{"question": "which company is Bournville produced by?", "answer": "Cadbury", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cadbury"], "entity_annotations": ["Bournville"], "answer_entity_name": null, "predicted_answer": "Cadbury", "extracted_entity": "Bournville"}
{"question": "which company is Lotus Esprit produced by?", "answer": "Lotus Cars", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lotus Cars"], "entity_annotations": ["Lotus Esprit"], "answer_entity_name": null, "predicted_answer": "Lotus Esprit is produced by Lotus", "extracted_entity": "Lotus_Esprit"}
{"question": "which company is Samsung Galaxy S5 produced by?", "answer": "Samsung Electronics", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Samsung Electronics"], "entity_annotations": ["Samsung Galaxy S5"], "answer_entity_name": null, "predicted_answer": "Samsung", "extracted_entity": "Samsung_Galaxy_S5"}
{"question": "which company is Mercury Eight produced by?", "answer": "Mercury", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mercury"], "entity_annotations": ["Mercury Eight"], "answer_entity_name": null, "predicted_answer": "Ford", "extracted_entity": "Mercury_Eight"}
{"question": "which company is Lotus 79 produced by?", "answer": "Lotus Cars", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lotus Cars"], "entity_annotations": ["Lotus 79"], "answer_entity_name": null, "predicted_answer": "Lotus.  Answer", "extracted_entity": "Lotus_79"}
{"question": "which company is Peugeot 908 HDi FAP produced by?", "answer": "Peugeot", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peugeot"], "entity_annotations": ["Peugeot 908 HDi FAP"], "answer_entity_name": null, "predicted_answer": "Peugeot", "extracted_entity": "Peugeot_908_HDi_FAP"}
{"question": "which company is Audi RS 4 produced by?", "answer": "Audi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Audi"], "entity_annotations": ["Audi RS 4"], "answer_entity_name": null, "predicted_answer": "Audi Sport GmbH for AUDI AG, a division", "extracted_entity": "Audi_RS_4"}
{"question": "which company is Farman MF.11 produced by?", "answer": "Fiat Aviazione", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fiat Aviazione", "Farman Aviation Works"], "entity_annotations": ["Farman MF.11"], "answer_entity_name": null, "predicted_answer": "Farman Aviation Works.", "extracted_entity": "Farman_MF.11"}
{"question": "which company is Windows 8 produced by?", "answer": "Microsoft", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Microsoft"], "entity_annotations": ["Windows 8"], "answer_entity_name": null, "predicted_answer": "Microsoft", "extracted_entity": "Windows_8"}
{"question": "which company is 3DO Interactive Multiplayer produced by?", "answer": "Panasonic Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Panasonic Corporation", "LG Corporation"], "entity_annotations": ["3DO Interactive Multiplayer"], "answer_entity_name": null, "predicted_answer": "Panasonic", "extracted_entity": "3DO_Interactive_Multiplayer"}
{"question": "which company is Ford Edge produced by?", "answer": "Ford Motor Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ford Motor Company"], "entity_annotations": ["Ford Edge"], "answer_entity_name": null, "predicted_answer": "Ford Motor Company.", "extracted_entity": "Ford_Edge"}
{"question": "which company is SECR N class produced by?", "answer": "Ashford Works", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ashford Works"], "entity_annotations": ["SECR N class"], "answer_entity_name": null, "predicted_answer": "SECR N class is produced by South Eastern and", "extracted_entity": "SECR_N_class"}
{"question": "which company is Electone produced by?", "answer": "Yamaha Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yamaha Corporation"], "entity_annotations": ["Electone"], "answer_entity_name": null, "predicted_answer": "Yamaha", "extracted_entity": "Electone"}
{"question": "which company is ALCO 251 produced by?", "answer": "American Locomotive Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["American Locomotive Company"], "entity_annotations": ["ALCO 251"], "answer_entity_name": null, "predicted_answer": "erican Locomotive Company", "extracted_entity": "ALCO_251"}
{"question": "which company is Isuzu Trooper produced by?", "answer": "Isuzu Motors", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Isuzu Motors"], "entity_annotations": ["Isuzu Trooper"], "answer_entity_name": null, "predicted_answer": "Isuzu", "extracted_entity": "Isuzu_Trooper"}
{"question": "which company is Renault 4 produced by?", "answer": "Renault", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Renault"], "entity_annotations": ["Renault 4"], "answer_entity_name": null, "predicted_answer": "Renault", "extracted_entity": "Renault_4"}
{"question": "which company is Toyota LiteAce produced by?", "answer": "Toyota", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toyota"], "entity_annotations": ["Toyota LiteAce"], "answer_entity_name": null, "predicted_answer": "Toyota", "extracted_entity": "Toyota_LiteAce"}
{"question": "which company is Honda Fit produced by?", "answer": "Honda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Honda"], "entity_annotations": ["Honda Fit"], "answer_entity_name": null, "predicted_answer": "Honda", "extracted_entity": "Honda_Fit"}
{"question": "which company is T-34 produced by?", "answer": "Malyshev Factory", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Malyshev Factory"], "entity_annotations": ["T-34"], "answer_entity_name": null, "predicted_answer": "T-34 is produced by the Soviet Union.", "extracted_entity": "T-34"}
{"question": "which company is Oldsmobile Starfire produced by?", "answer": "General Motors", "dataset": "entity_questions", "split": "test", "answer_aliases": ["General Motors"], "entity_annotations": ["Oldsmobile Starfire"], "answer_entity_name": null, "predicted_answer": "Oldsmobile.", "extracted_entity": "Oldsmobile_Starfire"}
{"question": "which company is Peugeot 205 produced by?", "answer": "Peugeot", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peugeot"], "entity_annotations": ["Peugeot 205"], "answer_entity_name": null, "predicted_answer": "the French manufacturer Peugeot", "extracted_entity": "Peugeot_205"}
{"question": "which company is Dodge Journey produced by?", "answer": "Dodge", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dodge"], "entity_annotations": ["Dodge Journey"], "answer_entity_name": null, "predicted_answer": "Fiat Chrysler Automobiles", "extracted_entity": "Dodge_Journey"}
{"question": "which company is Windows Phone 8.1 produced by?", "answer": "Microsoft", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Microsoft"], "entity_annotations": ["Windows Phone 8.1"], "answer_entity_name": null, "predicted_answer": "Microsoft", "extracted_entity": "Windows_Phone_8.1"}
{"question": "which company is Triumph Acclaim produced by?", "answer": "Triumph", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Triumph"], "entity_annotations": ["Triumph Acclaim"], "answer_entity_name": null, "predicted_answer": "Triumph Acclaim is produced by British Leyland (", "extracted_entity": "Triumph_Acclaim"}
{"question": "which company is Webley Revolver produced by?", "answer": "Webley & Scott", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Webley & Scott", "Royal Small Arms Factory"], "entity_annotations": ["Webley Revolver"], "answer_entity_name": null, "predicted_answer": "bley Revolver is produced by Weble", "extracted_entity": "Webley_Revolver"}
{"question": "which company is Atari Jaguar produced by?", "answer": "Atari Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atari Corporation"], "entity_annotations": ["Atari Jaguar"], "answer_entity_name": null, "predicted_answer": "Atari Corporation", "extracted_entity": "Atari_Jaguar"}
{"question": "which company is British Rail Class 101 produced by?", "answer": "Metro Cammell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Metro Cammell"], "entity_annotations": ["British Rail Class 101"], "answer_entity_name": null, "predicted_answer": "Metro-Cammell", "extracted_entity": "British_Rail_Class_101"}
{"question": "which company is Jaguar produced by?", "answer": "Breguet Aviation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Breguet Aviation", "British Aircraft Corporation"], "entity_annotations": ["Jaguar"], "answer_entity_name": null, "predicted_answer": "Jaguar", "extracted_entity": "Jaguar"}
{"question": "what kind of work does Epicurus do?", "answer": "philosopher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["philosopher"], "entity_annotations": ["Epicurus"], "answer_entity_name": null, "predicted_answer": "Epicurus was an ancient Greek philosopher and sage who", "extracted_entity": "Epicurus"}
{"question": "what kind of work does Rodney Clawson do?", "answer": "songwriter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["songwriter"], "entity_annotations": ["Rodney Clawson"], "answer_entity_name": null, "predicted_answer": "Rodney Clawson is an American country music songwriter.", "extracted_entity": "Rodney_Clawson"}
{"question": "what kind of work does George Martin do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["George Martin"], "answer_entity_name": null, "predicted_answer": "He is a record producer, arranger, composer", "extracted_entity": "George_Martin"}
{"question": "what kind of work does Arthur Rackham do?", "answer": "illustrator", "dataset": "entity_questions", "split": "test", "answer_aliases": ["illustrator"], "entity_annotations": ["Arthur Rackham"], "answer_entity_name": null, "predicted_answer": "he is an English book illustrator.", "extracted_entity": "Arthur_Rackham"}
{"question": "what kind of work does Koloman Moser do?", "answer": "architect", "dataset": "entity_questions", "split": "test", "answer_aliases": ["architect"], "entity_annotations": ["Koloman Moser"], "answer_entity_name": null, "predicted_answer": "Koloman Moser is an Austrian artist who exert", "extracted_entity": "Koloman_Moser"}
{"question": "what kind of work does Ulrich von Hassell do?", "answer": "diplomat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["diplomat"], "entity_annotations": ["Ulrich von Hassell"], "answer_entity_name": null, "predicted_answer": "He is a German diplomat during World War II.", "extracted_entity": "Ulrich_von_Hassell"}
{"question": "what kind of work does Bruce Foxton do?", "answer": "songwriter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["songwriter"], "entity_annotations": ["Bruce Foxton"], "answer_entity_name": null, "predicted_answer": "Bruce Foxton is a musician.", "extracted_entity": "Bruce_Foxton"}
{"question": "what kind of work does Rustam Minnikhanov do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Rustam Minnikhanov"], "answer_entity_name": null, "predicted_answer": "He is a Russian politician who has served as the", "extracted_entity": "Rustam_Minnikhanov"}
{"question": "what kind of work does Leela Mishra do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Leela Mishra"], "answer_entity_name": null, "predicted_answer": "She worked as a character actor in over 200", "extracted_entity": "Leela_Mishra"}
{"question": "what kind of work does Sharif Hassan Sheikh Aden do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Sharif Hassan Sheikh Aden"], "answer_entity_name": null, "predicted_answer": "Sharif Hassan Sheikh Aden is a Somali politician", "extracted_entity": "Sharif_Hassan_Sheikh_Aden"}
{"question": "what kind of work does Charles Watson-Wentworth, 2nd Marquess of Rockingham do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Charles Watson-Wentworth, 2nd Marquess of Rockingham"], "answer_entity_name": null, "predicted_answer": "He was a British Whig statesman and magn", "extracted_entity": "Charles_Watson-Wentworth,_2nd_Marquess_of_Rockingham"}
{"question": "what kind of work does Terry Jones do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor", "film director", "comedian", "composer", "screenwriter"], "entity_annotations": ["Terry Jones"], "answer_entity_name": null, "predicted_answer": "Terry Jones is an actor, comedian, director,", "extracted_entity": "Terry_Jones"}
{"question": "what kind of work does Mabel Howard do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Mabel Howard"], "answer_entity_name": null, "predicted_answer": "she works in a union", "extracted_entity": "Mabel_Howard"}
{"question": "what kind of work does Marsha Blackburn do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Marsha Blackburn"], "answer_entity_name": null, "predicted_answer": "Marsha Blackburn is a politician and businesswoman.", "extracted_entity": "Marsha_Blackburn"}
{"question": "what kind of work does John Bull do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["John Bull"], "answer_entity_name": null, "predicted_answer": "he is a national personification of the United Kingdom", "extracted_entity": "John_Bull"}
{"question": "what kind of work does Konkona Sen Sharma do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Konkona Sen Sharma"], "answer_entity_name": null, "predicted_answer": "She is an actress and filmmaker.", "extracted_entity": "Konkona_Sen_Sharma"}
{"question": "what kind of work does Thomas Jefferson Rusk do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Thomas Jefferson Rusk"], "answer_entity_name": null, "predicted_answer": "He was a Senator from Texas from 1846", "extracted_entity": "Thomas_Jefferson_Rusk"}
{"question": "what kind of work does Rob Cohen do?", "answer": "film director", "dataset": "entity_questions", "split": "test", "answer_aliases": ["film director", "screenwriter"], "entity_annotations": ["Rob Cohen"], "answer_entity_name": null, "predicted_answer": "he is a director and producer of film and television", "extracted_entity": "Rob_Cohen"}
{"question": "what kind of work does Mark Roth do?", "answer": "biochemist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["biochemist"], "entity_annotations": ["Mark Roth"], "answer_entity_name": null, "predicted_answer": "He is a professional bowler.", "extracted_entity": "Mark_Roth"}
{"question": "what kind of work does Franti\u0161ek Kupka do?", "answer": "graphic designer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["graphic designer"], "entity_annotations": ["Franti\u0161ek Kupka"], "answer_entity_name": null, "predicted_answer": "He is a painter and graphic artist.", "extracted_entity": "Franti\u0161ek_Kupka"}
{"question": "what kind of work does Tom Ammiano do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Tom Ammiano"], "answer_entity_name": null, "predicted_answer": "Tom Ammiano is a politician and LGBT rights", "extracted_entity": "Tom_Ammiano"}
{"question": "what kind of work does Flori\u00e1n Rey do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor", "screenwriter"], "entity_annotations": ["Flori\u00e1n Rey"], "answer_entity_name": null, "predicted_answer": "director, actor, and screenwriter", "extracted_entity": "Flori\u00e1n_Rey"}
{"question": "what kind of work does Thomas Pope do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Thomas Pope"], "answer_entity_name": null, "predicted_answer": "He was a public servant, member of parliament,", "extracted_entity": "Thomas_Pope"}
{"question": "what kind of work does Dom Moraes do?", "answer": "poet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["poet"], "entity_annotations": ["Dom Moraes"], "answer_entity_name": null, "predicted_answer": "Dom Moraes is a writer and poet who", "extracted_entity": "Dom_Moraes"}
{"question": "what kind of work does Frank Morley do?", "answer": "mathematician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["mathematician"], "entity_annotations": ["Frank Morley"], "answer_entity_name": null, "predicted_answer": "Frank Morley is a leading mathematician, known", "extracted_entity": "Frank_Morley"}
{"question": "what kind of work does Vasco Rossi do?", "answer": "singer-songwriter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["singer-songwriter"], "entity_annotations": ["Vasco Rossi"], "answer_entity_name": null, "predicted_answer": "Vasco Rossi is a singer-songwriter.", "extracted_entity": "Vasco_Rossi"}
{"question": "what kind of work does Zbigniew Herbert do?", "answer": "poet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["poet"], "entity_annotations": ["Zbigniew Herbert"], "answer_entity_name": null, "predicted_answer": "Zbigniew Herbert is a poet, essay", "extracted_entity": "Zbigniew_Herbert"}
{"question": "what kind of work does John Francis Daley do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor", "film director", "screenwriter"], "entity_annotations": ["John Francis Daley"], "answer_entity_name": null, "predicted_answer": "John Francis Daley is a musician, actor,", "extracted_entity": "John_Francis_Daley"}
{"question": "what kind of work does Leslie Grantham do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Leslie Grantham"], "answer_entity_name": null, "predicted_answer": "He was a convicted murderer, having served 10", "extracted_entity": "Leslie_Grantham"}
{"question": "what kind of work does Phyllis Schlafly do?", "answer": "lawyer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["lawyer"], "entity_annotations": ["Phyllis Schlafly"], "answer_entity_name": null, "predicted_answer": "Phyllis Schlafly is an American attorney", "extracted_entity": "Phyllis_Schlafly"}
{"question": "what kind of work does Jim Ed Norman do?", "answer": "record producer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["record producer"], "entity_annotations": ["Jim Ed Norman"], "answer_entity_name": null, "predicted_answer": "Jim Ed Norman is an American musician, multi-pl", "extracted_entity": "Jim_Ed_Norman"}
{"question": "what kind of work does Kim Jong-pil do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Kim Jong-pil"], "answer_entity_name": null, "predicted_answer": "He was a South Korean politician and the founder/", "extracted_entity": "Kim_Jong-pil"}
{"question": "what kind of work does Harvey Schmidt do?", "answer": "composer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["composer"], "entity_annotations": ["Harvey Schmidt"], "answer_entity_name": null, "predicted_answer": "Schmidt is an American composer for musical theatre and illustrator", "extracted_entity": "Harvey_Schmidt"}
{"question": "what kind of work does Rajyavardhan Singh Rathore do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Rajyavardhan Singh Rathore"], "answer_entity_name": null, "predicted_answer": "Rajyavardhan Singh Rathore is a", "extracted_entity": "Rajyavardhan_Singh_Rathore"}
{"question": "what kind of work does Jeremy Herrin do?", "answer": "theater director", "dataset": "entity_questions", "split": "test", "answer_aliases": ["theater director"], "entity_annotations": ["Jeremy Herrin"], "answer_entity_name": null, "predicted_answer": "Jeremy Herrin is an English theatre director. He", "extracted_entity": "Jeremy_Herrin"}
{"question": "what kind of work does James Mooney do?", "answer": "anthropologist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["anthropologist"], "entity_annotations": ["James Mooney"], "answer_entity_name": null, "predicted_answer": "He worked with the Bureau of American Ethnology", "extracted_entity": "James_Mooney"}
{"question": "what kind of work does Francisco Silvela do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Francisco Silvela"], "answer_entity_name": null, "predicted_answer": "politician", "extracted_entity": "Francisco_Silvela"}
{"question": "what kind of work does Michael Shrieve do?", "answer": "composer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["composer"], "entity_annotations": ["Michael Shrieve"], "answer_entity_name": null, "predicted_answer": "He is a drummer, percussionist, and composer", "extracted_entity": "Michael_Shrieve"}
{"question": "what kind of work does John McCallum do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["John McCallum"], "answer_entity_name": null, "predicted_answer": "He is a Canadian politician, economist, diplomat and", "extracted_entity": "John_McCallum"}
{"question": "what kind of work does Mikey McCleary do?", "answer": "songwriter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["songwriter", "composer"], "entity_annotations": ["Mikey McCleary"], "answer_entity_name": null, "predicted_answer": "Mikey McCleary is a New Zealand songwriter", "extracted_entity": "Mikey_McCleary"}
{"question": "what kind of work does Fran Wilde do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Fran Wilde"], "answer_entity_name": null, "predicted_answer": "Fran Wilde is a New Zealand politician, and former", "extracted_entity": "Fran_Wilde"}
{"question": "what kind of work does Larry Clinton do?", "answer": "bandleader", "dataset": "entity_questions", "split": "test", "answer_aliases": ["bandleader"], "entity_annotations": ["Larry Clinton"], "answer_entity_name": null, "predicted_answer": "he is a musician.", "extracted_entity": "Larry_Clinton"}
{"question": "what kind of work does Tom Eyen do?", "answer": "playwright", "dataset": "entity_questions", "split": "test", "answer_aliases": ["playwright", "lyricist", "theater director"], "entity_annotations": ["Tom Eyen"], "answer_entity_name": null, "predicted_answer": "Tom Eyen is an American playwright, lyricist", "extracted_entity": "Tom_Eyen"}
{"question": "what kind of work does Andr\u00e9s Bello do?", "answer": "diplomat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["diplomat", "philosopher", "poet"], "entity_annotations": ["Andr\u00e9s Bello"], "answer_entity_name": null, "predicted_answer": "He is a diplomat, poet, legislator,", "extracted_entity": "Andr\u00e9s_Bello"}
{"question": "what kind of work does Gary P. Nunn do?", "answer": "songwriter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["songwriter"], "entity_annotations": ["Gary P. Nunn"], "answer_entity_name": null, "predicted_answer": "Gary P. Nunn is a singer-songwriter", "extracted_entity": "Gary_P._Nunn"}
{"question": "what kind of work does Li Qiang do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Li Qiang"], "answer_entity_name": null, "predicted_answer": "Li Qiang is a Chinese politician.", "extracted_entity": "Li_Qiang"}
{"question": "what kind of work does Ben Bradshaw do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician", "journalist"], "entity_annotations": ["Ben Bradshaw"], "answer_entity_name": null, "predicted_answer": "Ben Bradshaw is a British politician who served as", "extracted_entity": "Ben_Bradshaw"}
{"question": "what kind of work does Gregory Bateson do?", "answer": "anthropologist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["anthropologist"], "entity_annotations": ["Gregory Bateson"], "answer_entity_name": null, "predicted_answer": "Gregory Bateson is a English anthropologist, social", "extracted_entity": "Gregory_Bateson"}
{"question": "what kind of work does Veljo Tormis do?", "answer": "composer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["composer"], "entity_annotations": ["Veljo Tormis"], "answer_entity_name": null, "predicted_answer": "a composer", "extracted_entity": "Veljo_Tormis"}
{"question": "what kind of work does Mohamed Nazri Abdul Aziz do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Mohamed Nazri Abdul Aziz"], "answer_entity_name": null, "predicted_answer": "He is a Malaysian politician and diplomat who has served", "extracted_entity": "Mohamed_Nazri_Abdul_Aziz"}
{"question": "what kind of work does Anthony Haden-Guest do?", "answer": "journalist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["journalist"], "entity_annotations": ["Anthony Haden-Guest"], "answer_entity_name": null, "predicted_answer": "he is a British-American writer, reporter, cartoon", "extracted_entity": "Anthony_Haden-Guest"}
{"question": "what kind of work does George Thomas Smart do?", "answer": "composer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["composer"], "entity_annotations": ["George Thomas Smart"], "answer_entity_name": null, "predicted_answer": "George Thomas Smart is a composer.", "extracted_entity": "George_Thomas_Smart"}
{"question": "what kind of work does Francis E. McGovern do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Francis E. McGovern"], "answer_entity_name": null, "predicted_answer": "He is a lawyer and politician.", "extracted_entity": "Francis_E._McGovern"}
{"question": "what kind of work does Erick El\u00edas do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Erick El\u00edas"], "answer_entity_name": null, "predicted_answer": "Erick El\u00edas is an actor.", "extracted_entity": "Erick_El\u00edas"}
{"question": "what kind of work does Rhea Perlman do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Rhea Perlman"], "answer_entity_name": null, "predicted_answer": "Rhea Perlman is an American actress. She", "extracted_entity": "Rhea_Perlman"}
{"question": "what kind of work does Arion do?", "answer": "poet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["poet"], "entity_annotations": ["Arion"], "answer_entity_name": null, "predicted_answer": "rion was a kitharode in ancient", "extracted_entity": "Arion"}
{"question": "what kind of work does Paul Fr\u00e8re do?", "answer": "journalist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["journalist"], "entity_annotations": ["Paul Fr\u00e8re"], "answer_entity_name": null, "predicted_answer": "He is a racing driver and journalist.", "extracted_entity": "Paul_Fr\u00e8re"}
{"question": "what kind of work does Richard Pitman do?", "answer": "jockey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["jockey"], "entity_annotations": ["Richard Pitman"], "answer_entity_name": null, "predicted_answer": "Richard Pitman is a retired British jump jockey", "extracted_entity": "Richard_Pitman"}
{"question": "what kind of work does Henry Kissinger do?", "answer": "diplomat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["diplomat", "politician"], "entity_annotations": ["Henry Kissinger"], "answer_entity_name": null, "predicted_answer": "He is a diplomat, political theorist, geopolitical", "extracted_entity": "Henry_Kissinger"}
{"question": "what kind of work does Chanchal Chowdhury do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Chanchal Chowdhury"], "answer_entity_name": null, "predicted_answer": "He is an actor.", "extracted_entity": "Chanchal_Chowdhury"}
{"question": "what kind of work does Maurice Tourneur do?", "answer": "screenwriter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["screenwriter", "film director"], "entity_annotations": ["Maurice Tourneur"], "answer_entity_name": null, "predicted_answer": "He is a film director and screenwriter.", "extracted_entity": "Maurice_Tourneur"}
{"question": "what kind of work does Ossip Gabrilowitsch do?", "answer": "pianist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pianist", "composer"], "entity_annotations": ["Ossip Gabrilowitsch"], "answer_entity_name": null, "predicted_answer": "Ossip Gabrilowitsch is a", "extracted_entity": "Ossip_Gabrilowitsch"}
{"question": "what kind of work does Jorge de Montemor do?", "answer": "novelist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["novelist", "poet"], "entity_annotations": ["Jorge de Montemor"], "answer_entity_name": null, "predicted_answer": "He is a poet.", "extracted_entity": "Jorge_de_Montemor"}
{"question": "what kind of work does Freddie Perren do?", "answer": "record producer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["record producer"], "entity_annotations": ["Freddie Perren"], "answer_entity_name": null, "predicted_answer": "songwriter, record producer, arranger, and orchestra", "extracted_entity": "Freddie_Perren"}
{"question": "what kind of work does Joseph O'Connor do?", "answer": "journalist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["journalist"], "entity_annotations": ["Joseph O'Connor"], "answer_entity_name": null, "predicted_answer": "He is a novelist.", "extracted_entity": "Joseph_O'Connor"}
{"question": "what kind of work does Joe Absolom do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Joe Absolom"], "answer_entity_name": null, "predicted_answer": "He is an English actor.", "extracted_entity": "Joe_Absolom"}
{"question": "what kind of work does Sophie Raworth do?", "answer": "news presenter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["news presenter", "journalist"], "entity_annotations": ["Sophie Raworth"], "answer_entity_name": null, "predicted_answer": "She is a journalist, newsreader and broadcaster working", "extracted_entity": "Sophie_Raworth"}
{"question": "what kind of work does Alfred B. Mullett do?", "answer": "architect", "dataset": "entity_questions", "split": "test", "answer_aliases": ["architect"], "entity_annotations": ["Alfred B. Mullett"], "answer_entity_name": null, "predicted_answer": "Mullett was a British-American architect who served", "extracted_entity": "Alfred_B._Mullett"}
{"question": "what kind of work does Tom Ford do?", "answer": "journalist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["journalist"], "entity_annotations": ["Tom Ford"], "answer_entity_name": null, "predicted_answer": "Tom Ford is a fashion designer and filmmaker.", "extracted_entity": "Tom_Ford"}
{"question": "what kind of work does Se\u00e1n \u00d3 Riada do?", "answer": "composer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["composer"], "entity_annotations": ["Se\u00e1n \u00d3 Riada"], "answer_entity_name": null, "predicted_answer": "Se\u00e1n \u00d3 Riada is a composer and", "extracted_entity": "Se\u00e1n_\u00d3_Riada"}
{"question": "what kind of work does Roddy Woomble do?", "answer": "songwriter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["songwriter"], "entity_annotations": ["Roddy Woomble"], "answer_entity_name": null, "predicted_answer": "He is a singer, songwriter and writer.", "extracted_entity": "Roddy_Woomble"}
{"question": "what kind of work does Robert Cosgrove do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Robert Cosgrove"], "answer_entity_name": null, "predicted_answer": "Robert Cosgrove is a politician who was the", "extracted_entity": "Robert_Cosgrove"}
{"question": "what kind of work does Lee Friedlander do?", "answer": "film director", "dataset": "entity_questions", "split": "test", "answer_aliases": ["film director", "screenwriter"], "entity_annotations": ["Lee Friedlander"], "answer_entity_name": null, "predicted_answer": "Lee Friedlander is an American photographer and artist.", "extracted_entity": "Lee_Friedlander"}
{"question": "what kind of work does Gustav Nossal do?", "answer": "biologist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["biologist"], "entity_annotations": ["Gustav Nossal"], "answer_entity_name": null, "predicted_answer": "Gustav Nossal is a research biologist.", "extracted_entity": "Gustav_Nossal"}
{"question": "what kind of work does Dio Chrysostom do?", "answer": "philosopher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["philosopher", "orator"], "entity_annotations": ["Dio Chrysostom"], "answer_entity_name": null, "predicted_answer": "He is a philosopher.", "extracted_entity": "Dio_Chrysostom"}
{"question": "what kind of work does Hannah Storm do?", "answer": "disc jockey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["disc jockey"], "entity_annotations": ["Hannah Storm"], "answer_entity_name": null, "predicted_answer": "Hannah Storm is a sports journalist.", "extracted_entity": "Hannah_Storm"}
{"question": "what kind of work does Scott L. Fitzgerald do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Scott L. Fitzgerald"], "answer_entity_name": null, "predicted_answer": "He is an American politician and former newspaper publisher.", "extracted_entity": "Scott_L._Fitzgerald"}
{"question": "what kind of work does Gene Evans do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Gene Evans"], "answer_entity_name": null, "predicted_answer": "Gene Evans is an actor who appeared in numerous television", "extracted_entity": "Gene_Evans"}
{"question": "what kind of work does Takehito Koyasu do?", "answer": "seiy\u016b", "dataset": "entity_questions", "split": "test", "answer_aliases": ["seiy\u016b"], "entity_annotations": ["Takehito Koyasu"], "answer_entity_name": null, "predicted_answer": "He is a voice actor.", "extracted_entity": "Takehito_Koyasu"}
{"question": "what kind of work does Tom Ridge do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Tom Ridge"], "answer_entity_name": null, "predicted_answer": "Tom Ridge is an American politician and author who served", "extracted_entity": "Tom_Ridge"}
{"question": "what kind of work does Milarepa do?", "answer": "poet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["poet"], "entity_annotations": ["Milarepa"], "answer_entity_name": null, "predicted_answer": "Milarepa is a Tibetan siddha,", "extracted_entity": "Milarepa"}
{"question": "what kind of work does Frederick Hobson Leslie do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Frederick Hobson Leslie"], "answer_entity_name": null, "predicted_answer": "Frederick Hobson Leslie is a singer and actor.", "extracted_entity": "Frederick_Hobson_Leslie"}
{"question": "what kind of work does David Angell do?", "answer": "television producer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["television producer"], "entity_annotations": ["David Angell"], "answer_entity_name": null, "predicted_answer": "David Angell is a screenwriter and television producer", "extracted_entity": "David_Angell"}
{"question": "what kind of work does Kalevi Aho do?", "answer": "composer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["composer"], "entity_annotations": ["Kalevi Aho"], "answer_entity_name": null, "predicted_answer": "Kalevi Aho is a Finnish composer.", "extracted_entity": "Kalevi_Aho"}
{"question": "what kind of work does Abdelilah Benkirane do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Abdelilah Benkirane"], "answer_entity_name": null, "predicted_answer": "He was a Prime Minister of Morocco.", "extracted_entity": "Abdelilah_Benkirane"}
{"question": "what kind of work does Jack Broughton do?", "answer": "navigator", "dataset": "entity_questions", "split": "test", "answer_aliases": ["navigator"], "entity_annotations": ["Jack Broughton"], "answer_entity_name": null, "predicted_answer": "Jack Broughton is an English bare-kn", "extracted_entity": "Jack_Broughton"}
{"question": "what kind of work does Cherami Leigh do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Cherami Leigh"], "answer_entity_name": null, "predicted_answer": "She is an American actress.", "extracted_entity": "Cherami_Leigh"}
{"question": "what kind of work does Aaron Jeffery do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Aaron Jeffery"], "answer_entity_name": null, "predicted_answer": "He is an actor.", "extracted_entity": "Aaron_Jeffery"}
{"question": "what kind of work does Peter von Cornelius do?", "answer": "illustrator", "dataset": "entity_questions", "split": "test", "answer_aliases": ["illustrator"], "entity_annotations": ["Peter von Cornelius"], "answer_entity_name": null, "predicted_answer": "he is a painter", "extracted_entity": "Peter_von_Cornelius"}
{"question": "what kind of work does Pascual Cervera y Topete do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Pascual Cervera y Topete"], "answer_entity_name": null, "predicted_answer": "Pascual Cervera y Topete is", "extracted_entity": "Pascual_Cervera_y_Topete"}
{"question": "what kind of work does Sefer Halilovi\u0107 do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Sefer Halilovi\u0107"], "answer_entity_name": null, "predicted_answer": "He is a Bosnian former general and commanding", "extracted_entity": "Sefer_Halilovi\u0107"}
{"question": "what kind of work does George Pataki do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician", "lawyer"], "entity_annotations": ["George Pataki"], "answer_entity_name": null, "predicted_answer": "George Pataki is a lawyer and politician", "extracted_entity": "George_Pataki"}
{"question": "what kind of work does Jack Lowden do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Jack Lowden"], "answer_entity_name": null, "predicted_answer": "He is an actor.", "extracted_entity": "Jack_Lowden"}
{"question": "what kind of work does Rutherford Alcock do?", "answer": "diplomat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["diplomat"], "entity_annotations": ["Rutherford Alcock"], "answer_entity_name": null, "predicted_answer": "he is a diplomat.", "extracted_entity": "Rutherford_Alcock"}
{"question": "what kind of work does Davie Fulton do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Davie Fulton"], "answer_entity_name": null, "predicted_answer": "politician and judge", "extracted_entity": "Davie_Fulton"}
{"question": "what kind of work does Frank Pembleton do?", "answer": "detective", "dataset": "entity_questions", "split": "test", "answer_aliases": ["detective"], "entity_annotations": ["Frank Pembleton"], "answer_entity_name": null, "predicted_answer": "Frank Pembleton is a fictional homicide detective on", "extracted_entity": "Frank_Pembleton"}
{"question": "what kind of work does Thomas Coventry, 1st Baron Coventry do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Thomas Coventry, 1st Baron Coventry"], "answer_entity_name": null, "predicted_answer": "Thomas Coventry, 1st Baron Coventry", "extracted_entity": "Thomas_Coventry,_1st_Baron_Coventry"}
{"question": "what kind of work does Colin Morgan do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Colin Morgan"], "answer_entity_name": null, "predicted_answer": "actor", "extracted_entity": "Colin_Morgan"}
{"question": "what kind of work does Y\u016b Aku do?", "answer": "poet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["poet", "lyricist", "novelist"], "entity_annotations": ["Y\u016b Aku"], "answer_entity_name": null, "predicted_answer": "He is a lyricist, poet, and novelist", "extracted_entity": "Y\u016b_Aku"}
{"question": "what kind of work does Isabella of France do?", "answer": "queen consort", "dataset": "entity_questions", "split": "test", "answer_aliases": ["queen consort"], "entity_annotations": ["Isabella of France"], "answer_entity_name": null, "predicted_answer": "Isabella of France is a Queen of England", "extracted_entity": "Isabella_of_France"}
{"question": "what kind of work does Marcel Griaule do?", "answer": "anthropologist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["anthropologist"], "entity_annotations": ["Marcel Griaule"], "answer_entity_name": null, "predicted_answer": "He works as an anthropologist. He studies the", "extracted_entity": "Marcel_Griaule"}
{"question": "what kind of work does June Elvidge do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["June Elvidge"], "answer_entity_name": null, "predicted_answer": "June Elvidge is an early 20th", "extracted_entity": "June_Elvidge"}
{"question": "what kind of work does Sathaar do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Sathaar"], "answer_entity_name": null, "predicted_answer": "He is an actor", "extracted_entity": "Sathaar"}
{"question": "what kind of work does James Adams do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["James Adams"], "answer_entity_name": null, "predicted_answer": "He is a(n) /.", "extracted_entity": "James_Adams"}
{"question": "what kind of work does Kathleen Brennan do?", "answer": "songwriter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["songwriter", "record producer"], "entity_annotations": ["Kathleen Brennan"], "answer_entity_name": null, "predicted_answer": "Kathleen Brennan is an American musician, songwriter, record", "extracted_entity": "Kathleen_Brennan"}
{"question": "what kind of work does Frank Vincent do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Frank Vincent"], "answer_entity_name": null, "predicted_answer": "Frank Vincent is an actor and musician.", "extracted_entity": "Frank_Vincent"}
{"question": "what kind of work does Nicole Ari Parker do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Nicole Ari Parker"], "answer_entity_name": null, "predicted_answer": "she is an actress and model.", "extracted_entity": "Nicole_Ari_Parker"}
{"question": "what kind of work does Karthik Kumar do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Karthik Kumar"], "answer_entity_name": null, "predicted_answer": "Karthik Kumar is a stand-up comedian and", "extracted_entity": "Karthik_Kumar"}
{"question": "what kind of work does Giovannino Guareschi do?", "answer": "journalist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["journalist"], "entity_annotations": ["Giovannino Guareschi"], "answer_entity_name": null, "predicted_answer": "Giovannino Guareschi is a journalist", "extracted_entity": "Giovannino_Guareschi"}
{"question": "what kind of work does Jean Gr\u00e9millon do?", "answer": "film director", "dataset": "entity_questions", "split": "test", "answer_aliases": ["film director"], "entity_annotations": ["Jean Gr\u00e9millon"], "answer_entity_name": null, "predicted_answer": "he directs films", "extracted_entity": "Jean_Gr\u00e9millon"}
{"question": "what kind of work does Albert Von Tilzer do?", "answer": "songwriter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["songwriter"], "entity_annotations": ["Albert Von Tilzer"], "answer_entity_name": null, "predicted_answer": "Albert Von Tilzer is a songwriter.", "extracted_entity": "Albert_Von_Tilzer"}
{"question": "what kind of work does Gough Whitlam do?", "answer": "politician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["politician"], "entity_annotations": ["Gough Whitlam"], "answer_entity_name": null, "predicted_answer": "Gough Whitlam is an air navigator in the", "extracted_entity": "Gough_Whitlam"}
{"question": "what kind of work does Richard Brauer do?", "answer": "mathematician", "dataset": "entity_questions", "split": "test", "answer_aliases": ["mathematician"], "entity_annotations": ["Richard Brauer"], "answer_entity_name": null, "predicted_answer": "Richard Brauer is a mathematician.", "extracted_entity": "Richard_Brauer"}
{"question": "what kind of work does Robert H. Justman do?", "answer": "television producer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["television producer"], "entity_annotations": ["Robert H. Justman"], "answer_entity_name": null, "predicted_answer": "He is an American television producer, director, and", "extracted_entity": "Robert_H._Justman"}
{"question": "what kind of work does Paul McGann do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Paul McGann"], "answer_entity_name": null, "predicted_answer": "He is an actor.", "extracted_entity": "Paul_McGann"}
{"question": "what kind of work does Chandra Sekhar Yeleti do?", "answer": "film director", "dataset": "entity_questions", "split": "test", "answer_aliases": ["film director"], "entity_annotations": ["Chandra Sekhar Yeleti"], "answer_entity_name": null, "predicted_answer": "He is a film director.", "extracted_entity": "Chandra_Sekhar_Yeleti"}
{"question": "what kind of work does Louis Jacques Th\u00e9nard do?", "answer": "chemist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["chemist"], "entity_annotations": ["Louis Jacques Th\u00e9nard"], "answer_entity_name": null, "predicted_answer": "Louis Jacques Th\u00e9nard is a chemist.", "extracted_entity": "Louis_Jacques_Th\u00e9nard"}
{"question": "what kind of work does Ludwig von Bertalanffy do?", "answer": "biologist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["biologist"], "entity_annotations": ["Ludwig von Bertalanffy"], "answer_entity_name": null, "predicted_answer": "Ludwig von Bertalanffy is a scientist", "extracted_entity": "Ludwig_von_Bertalanffy"}
{"question": "what kind of work does Cerrone do?", "answer": "composer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["composer", "record producer"], "entity_annotations": ["Cerrone"], "answer_entity_name": null, "predicted_answer": "He is a composer, record producer and creator of", "extracted_entity": "Cerrone"}
{"question": "what kind of work does Peter Jeffrey do?", "answer": "actor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["actor"], "entity_annotations": ["Peter Jeffrey"], "answer_entity_name": null, "predicted_answer": "Peter Jeffrey is a character actor.", "extracted_entity": "Peter_Jeffrey"}
{"question": "what kind of work does Toshio Furukawa do?", "answer": "seiy\u016b", "dataset": "entity_questions", "split": "test", "answer_aliases": ["seiy\u016b"], "entity_annotations": ["Toshio Furukawa"], "answer_entity_name": null, "predicted_answer": "Toshio Furukawa is a veteran who", "extracted_entity": "Toshio_Furukawa"}
{"question": "what is Jean Racine famous for?", "answer": "Andromaque", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Andromaque", "Esther", "Athalie", "Les Plaideurs", "Alexandre le Grand", "Berenice"], "entity_annotations": ["Jean Racine"], "answer_entity_name": null, "predicted_answer": "Jean Racine was a French dramatist,", "extracted_entity": "Jean_Racine"}
{"question": "what is Frank Norris famous for?", "answer": "McTeague", "dataset": "entity_questions", "split": "test", "answer_aliases": ["McTeague"], "entity_annotations": ["Frank Norris"], "answer_entity_name": null, "predicted_answer": "American journalist and novelist during the Progressive Era, whose", "extracted_entity": "Frank_Norris"}
{"question": "what is Philip Reeve famous for?", "answer": "Mortal Engines Quartet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mortal Engines Quartet"], "entity_annotations": ["Philip Reeve"], "answer_entity_name": null, "predicted_answer": "Philip Reeve is famous for the 2001", "extracted_entity": "Philip_Reeve"}
{"question": "what is John von Neumann famous for?", "answer": "von Neumann regular ring", "dataset": "entity_questions", "split": "test", "answer_aliases": ["von Neumann regular ring", "von Neumann algebra", "Von Neumann universal constructor", "Von Neumann cellular automaton", "set theory", "von Neumann architecture", "ergodic theory", "game theory"], "entity_annotations": ["John von Neumann"], "answer_entity_name": null, "predicted_answer": "John von Neumann is famous for his work in", "extracted_entity": "John_von_Neumann"}
{"question": "what is James Gibbs famous for?", "answer": "St Martin-in-the-Fields", "dataset": "entity_questions", "split": "test", "answer_aliases": ["St Martin-in-the-Fields", "Radcliffe Camera"], "entity_annotations": ["James Gibbs"], "answer_entity_name": null, "predicted_answer": "James Gibbs is famous for being an architect.", "extracted_entity": "James_Gibbs"}
{"question": "what is Naoko Takeuchi famous for?", "answer": "Sailor Moon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sailor Moon"], "entity_annotations": ["Naoko Takeuchi"], "answer_entity_name": null, "predicted_answer": "Naoko Takeuchi is famous for being the author", "extracted_entity": "Naoko_Takeuchi"}
{"question": "what is W\u0142adys\u0142aw Reymont famous for?", "answer": "The Peasants", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Peasants"], "entity_annotations": ["W\u0142adys\u0142aw Reymont"], "answer_entity_name": null, "predicted_answer": "W\u0142adys\u0142aw Reymont was a Polish", "extracted_entity": "W\u0142adys\u0142aw_Reymont"}
{"question": "what is Wim Wenders famous for?", "answer": "Faraway, So Close!", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Faraway, So Close!", "Wings of Desire"], "entity_annotations": ["Wim Wenders"], "answer_entity_name": null, "predicted_answer": "German filmmaker, playwright, author, and photographer.", "extracted_entity": "Wim_Wenders"}
{"question": "what is Tite Kubo famous for?", "answer": "Bleach", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bleach"], "entity_annotations": ["Tite Kubo"], "answer_entity_name": null, "predicted_answer": "ite Kubo is a Japanese manga artist and", "extracted_entity": "Tite_Kubo"}
{"question": "what is Stanley G. Weinbaum famous for?", "answer": "A Martian Odyssey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["A Martian Odyssey"], "entity_annotations": ["Stanley G. Weinbaum"], "answer_entity_name": null, "predicted_answer": "Stanley G. Weinbaum is famous for his groundbreaking", "extracted_entity": "Stanley_G._Weinbaum"}
{"question": "what is Beatrix Potter famous for?", "answer": "The Tale of Jemima Puddle-Duck", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Tale of Jemima Puddle-Duck", "The Tale of Mr. Jeremy Fisher", "The Tale of Benjamin Bunny", "The Tale of Peter Rabbit", "The Tale of Squirrel Nutkin"], "entity_annotations": ["Beatrix Potter"], "answer_entity_name": null, "predicted_answer": "she is famous for her children's books featuring animals", "extracted_entity": "Beatrix_Potter"}
{"question": "what is Bertolt Brecht famous for?", "answer": "The Threepenny Opera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Threepenny Opera", "The Caucasian Chalk Circle", "Life of Galileo"], "entity_annotations": ["Bertolt Brecht"], "answer_entity_name": null, "predicted_answer": "Bertolt Brecht was a German theatre practitioner,", "extracted_entity": "Bertolt_Brecht"}
{"question": "what is E. M. Forster famous for?", "answer": "Howards End", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Howards End"], "entity_annotations": ["E. M. Forster"], "answer_entity_name": null, "predicted_answer": "E. M. Forster was an English author", "extracted_entity": "E._M._Forster"}
{"question": "what is Harper Lee famous for?", "answer": "To Kill a Mockingbird", "dataset": "entity_questions", "split": "test", "answer_aliases": ["To Kill a Mockingbird"], "entity_annotations": ["Harper Lee"], "answer_entity_name": null, "predicted_answer": "she is famous for her novel \"To Kill a", "extracted_entity": "Harper_Lee"}
{"question": "what is Edmund Spenser famous for?", "answer": "The Faerie Queene", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Faerie Queene"], "entity_annotations": ["Edmund Spenser"], "answer_entity_name": null, "predicted_answer": "Edmund Spenser was an English poet best known for", "extracted_entity": "Edmund_Spenser"}
{"question": "what is Dario Fo famous for?", "answer": "Mistero Buffo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mistero Buffo"], "entity_annotations": ["Dario Fo"], "answer_entity_name": null, "predicted_answer": "he was an Italian playwright, actor, theatre director", "extracted_entity": "Dario_Fo"}
{"question": "what is The New York Times Company famous for?", "answer": "International New York Times", "dataset": "entity_questions", "split": "test", "answer_aliases": ["International New York Times", "The New York Times"], "entity_annotations": ["The New York Times Company"], "answer_entity_name": null, "predicted_answer": "It is famous for publishing \"The New York Times", "extracted_entity": "The_New_York_Times_Company"}
{"question": "what is Mikl\u00f3s Ybl famous for?", "answer": "Hungarian State Opera House", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hungarian State Opera House"], "entity_annotations": ["Mikl\u00f3s Ybl"], "answer_entity_name": null, "predicted_answer": "one of Europe's leading architects in the mid to", "extracted_entity": "Mikl\u00f3s_Ybl"}
{"question": "what is John Kennedy Toole famous for?", "answer": "A Confederacy of Dunces", "dataset": "entity_questions", "split": "test", "answer_aliases": ["A Confederacy of Dunces"], "entity_annotations": ["John Kennedy Toole"], "answer_entity_name": null, "predicted_answer": "John Kennedy Toole was an American novelist from New", "extracted_entity": "John_Kennedy_Toole"}
{"question": "what is Rick Riordan famous for?", "answer": "The Kane Chronicles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Kane Chronicles"], "entity_annotations": ["Rick Riordan"], "answer_entity_name": null, "predicted_answer": "Rick Riordan is famous for writing the \"P", "extracted_entity": "Rick_Riordan"}
{"question": "what is Nadine Gordimer famous for?", "answer": "The Conservationist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Conservationist"], "entity_annotations": ["Nadine Gordimer"], "answer_entity_name": null, "predicted_answer": "Nadine Gordimer was a South African writer and", "extracted_entity": "Nadine_Gordimer"}
{"question": "what is Anselm of Canterbury famous for?", "answer": "Cur Deus homo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cur Deus homo"], "entity_annotations": ["Anselm of Canterbury"], "answer_entity_name": null, "predicted_answer": "Anselm of Canterbury was a Benedictine monk", "extracted_entity": "Anselm_of_Canterbury"}
{"question": "what is Rustichello da Pisa famous for?", "answer": "The Travels of Marco Polo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Travels of Marco Polo"], "entity_annotations": ["Rustichello da Pisa"], "answer_entity_name": null, "predicted_answer": "He is best known for co-writing Marco Polo's", "extracted_entity": "Rustichello_da_Pisa"}
{"question": "what is Thomas Rickman famous for?", "answer": "St Matthew's Church, Cotham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["St Matthew's Church, Cotham"], "entity_annotations": ["Thomas Rickman"], "answer_entity_name": null, "predicted_answer": "Thomas Rickman was an English architect and architectural antiqu", "extracted_entity": "Thomas_Rickman"}
{"question": "what is Discovery Committee famous for?", "answer": "Discovery Investigations", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Discovery Investigations"], "entity_annotations": ["Discovery Committee"], "answer_entity_name": null, "predicted_answer": "The Discovery Committee was a popular name for the Inter", "extracted_entity": "Discovery_Committee"}
{"question": "what is Miguel Sapochnik famous for?", "answer": "Repo Men", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Repo Men"], "entity_annotations": ["Miguel Sapochnik"], "answer_entity_name": null, "predicted_answer": "Miguel Sapochnik is an English film and", "extracted_entity": "Miguel_Sapochnik"}
{"question": "what is Johann Wolfgang von Goethe famous for?", "answer": "The Sorrows of Young Werther", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Sorrows of Young Werther", "Faust", "Wilhelm Meister's Apprenticeship", "Elective Affinities", "Der Erlk\u00f6nig", "Italian Journey"], "entity_annotations": ["Johann Wolfgang von Goethe"], "answer_entity_name": null, "predicted_answer": "German poet, playwright, novelist, scientist, states", "extracted_entity": "Johann_Wolfgang_von_Goethe"}
{"question": "what is Gordon Murray famous for?", "answer": "Trumpton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Trumpton"], "entity_annotations": ["Gordon Murray"], "answer_entity_name": null, "predicted_answer": "Gordon Murray is famous for designing Formula One racing cars", "extracted_entity": "Gordon_Murray"}
{"question": "what is Ray Bradbury famous for?", "answer": "Fahrenheit 451", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fahrenheit 451"], "entity_annotations": ["Ray Bradbury"], "answer_entity_name": null, "predicted_answer": "He was an American author and screenwriter.", "extracted_entity": "Ray_Bradbury"}
{"question": "what is Ernest J. Gaines famous for?", "answer": "A Lesson Before Dying", "dataset": "entity_questions", "split": "test", "answer_aliases": ["A Lesson Before Dying"], "entity_annotations": ["Ernest J. Gaines"], "answer_entity_name": null, "predicted_answer": "He was a MacArthur Foundation fellow, was awarded", "extracted_entity": "Ernest_J._Gaines"}
{"question": "what is Richmal Crompton famous for?", "answer": "Just William", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Just William"], "entity_annotations": ["Richmal Crompton"], "answer_entity_name": null, "predicted_answer": "Richmal Crompton was a popular English writer", "extracted_entity": "Richmal_Crompton"}
{"question": "what is Robert Lowell famous for?", "answer": "Life Studies", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Life Studies"], "entity_annotations": ["Robert Lowell"], "answer_entity_name": null, "predicted_answer": "merican poet", "extracted_entity": "Robert_Lowell"}
{"question": "what is Christopher Marlowe famous for?", "answer": "The Tragical History of Doctor Faustus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Tragical History of Doctor Faustus"], "entity_annotations": ["Christopher Marlowe"], "answer_entity_name": null, "predicted_answer": "He was a playwright, poet and translator of the", "extracted_entity": "Christopher_Marlowe"}
{"question": "what is Mervyn Peake famous for?", "answer": "Gormenghast trilogy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gormenghast trilogy"], "entity_annotations": ["Mervyn Peake"], "answer_entity_name": null, "predicted_answer": "Mervyn Peake is famous for being an", "extracted_entity": "Mervyn_Peake"}
{"question": "what is William Butterfield famous for?", "answer": "St James' Church, Christleton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["St James' Church, Christleton", "All Saints, Margaret Street"], "entity_annotations": ["William Butterfield"], "answer_entity_name": null, "predicted_answer": "William Butterfield is famous for his use of pol", "extracted_entity": "William_Butterfield"}
{"question": "what is Peter Parler famous for?", "answer": "St. Vitus Cathedral", "dataset": "entity_questions", "split": "test", "answer_aliases": ["St. Vitus Cathedral"], "entity_annotations": ["Peter Parler"], "answer_entity_name": null, "predicted_answer": "Peter Parler was a German-Bohemian", "extracted_entity": "Peter_Parler"}
{"question": "what is Moshe Safdie famous for?", "answer": "Habitat 67", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Habitat 67"], "entity_annotations": ["Moshe Safdie"], "answer_entity_name": null, "predicted_answer": "Moshe Safdie is famous for incorporating principles of", "extracted_entity": "Moshe_Safdie"}
{"question": "what is Neil Cross famous for?", "answer": "Doctor Who", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Doctor Who"], "entity_annotations": ["Neil Cross"], "answer_entity_name": null, "predicted_answer": "Neil Cross is famous for creating the drama series \"", "extracted_entity": "Neil_Cross"}
{"question": "what is Elizabeth Goudge famous for?", "answer": "The Little White Horse", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Little White Horse"], "entity_annotations": ["Elizabeth Goudge"], "answer_entity_name": null, "predicted_answer": "Elizabeth Goudge was an English writer of fiction", "extracted_entity": "Elizabeth_Goudge"}
{"question": "what is Guy Fieri famous for?", "answer": "Diners, Drive-Ins and Dives", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Diners, Drive-Ins and Dives"], "entity_annotations": ["Guy Fieri"], "answer_entity_name": null, "predicted_answer": "He is a famous American restaurateur, author,", "extracted_entity": "Guy_Fieri"}
{"question": "what is Joan Blaeu famous for?", "answer": "Atlas Maior", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlas Maior"], "entity_annotations": ["Joan Blaeu"], "answer_entity_name": null, "predicted_answer": "Joan Blaeu was a Dutch cartographer born", "extracted_entity": "Joan_Blaeu"}
{"question": "what is Angus Wilson famous for?", "answer": "Anglo-Saxon Attitudes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anglo-Saxon Attitudes"], "entity_annotations": ["Angus Wilson"], "answer_entity_name": null, "predicted_answer": "He was a novelist and short story writer.", "extracted_entity": "Angus_Wilson"}
{"question": "what is Hikaru Nakamura famous for?", "answer": "Saint Young Men", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint Young Men"], "entity_annotations": ["Hikaru Nakamura"], "answer_entity_name": null, "predicted_answer": "Hikaru Nakamura is famous for being a", "extracted_entity": "Hikaru_Nakamura"}
{"question": "what is John Steinbeck famous for?", "answer": "The Grapes of Wrath", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Grapes of Wrath"], "entity_annotations": ["John Steinbeck"], "answer_entity_name": null, "predicted_answer": "John Steinbeck is famous for his realistic and imaginative", "extracted_entity": "John_Steinbeck"}
{"question": "what is Dan Dworsky famous for?", "answer": "Crisler Center", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Crisler Center"], "entity_annotations": ["Dan Dworsky"], "answer_entity_name": null, "predicted_answer": "He is famous for being an American architect.", "extracted_entity": "Dan_Dworsky"}
{"question": "what is Timbaland famous for?", "answer": "If We Ever Meet Again", "dataset": "entity_questions", "split": "test", "answer_aliases": ["If We Ever Meet Again"], "entity_annotations": ["Timbaland"], "answer_entity_name": null, "predicted_answer": "he is a rapper, singer, songwriter, and", "extracted_entity": "Timbaland"}
{"question": "what is Jan van Eyck famous for?", "answer": "Arnolfini Portrait", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arnolfini Portrait", "Lucca Madonna", "Dresden Triptych"], "entity_annotations": ["Jan van Eyck"], "answer_entity_name": null, "predicted_answer": "He was a painter active in Bruges who was", "extracted_entity": "Jan_van_Eyck"}
{"question": "what is Ren\u00e9 Clair famous for?", "answer": "Le Million", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Le Million"], "entity_annotations": ["Ren\u00e9 Clair"], "answer_entity_name": null, "predicted_answer": "Ren\u00e9 Clair was a French filmmaker and writer.", "extracted_entity": "Ren\u00e9_Clair"}
{"question": "what is Aleksey Konstantinovich Tolstoy famous for?", "answer": "Tsar Fyodor Ioannovich", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tsar Fyodor Ioannovich"], "entity_annotations": ["Aleksey Konstantinovich Tolstoy"], "answer_entity_name": null, "predicted_answer": "Aleksey Konstantinovich Tolstoy", "extracted_entity": "Aleksey_Konstantinovich_Tolstoy"}
{"question": "what is Robert de Brus, 1st Lord of Annandale famous for?", "answer": "Gisborough Priory", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gisborough Priory"], "entity_annotations": ["Robert de Brus, 1st Lord of Annandale"], "answer_entity_name": null, "predicted_answer": "Robert de Brus, 1st Lord of", "extracted_entity": "Robert_de_Brus,_1st_Lord_of_Annandale"}
{"question": "what is Michael Cristofer famous for?", "answer": "The Shadow Box", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Shadow Box"], "entity_annotations": ["Michael Cristofer"], "answer_entity_name": null, "predicted_answer": "Michael Cristofer is famous for his work as", "extracted_entity": "Michael_Cristofer"}
{"question": "what is Percy Thomas Partnership famous for?", "answer": "Wales Millennium Centre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wales Millennium Centre"], "entity_annotations": ["Percy Thomas Partnership"], "answer_entity_name": null, "predicted_answer": "Percy Thomas Partnership is famous for the award-winning British", "extracted_entity": "Percy_Thomas_Partnership"}
{"question": "what is Lemon Jelly famous for?", "answer": "Lost Horizons", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lost Horizons"], "entity_annotations": ["Lemon Jelly"], "answer_entity_name": null, "predicted_answer": "Lemon Jelly is famous for their electronic music and their", "extracted_entity": "Lemon_Jelly"}
{"question": "what is Carl Ludvig Engel famous for?", "answer": "Helsinki Senate Square", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Helsinki Senate Square"], "entity_annotations": ["Carl Ludvig Engel"], "answer_entity_name": null, "predicted_answer": "he is famous for being a German architect whose most", "extracted_entity": "Carl_Ludvig_Engel"}
{"question": "what is Ron Grainer famous for?", "answer": "Doctor Who theme music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Doctor Who theme music"], "entity_annotations": ["Ron Grainer"], "answer_entity_name": null, "predicted_answer": "Ron Grainer is famous for his theme music for", "extracted_entity": "Ron_Grainer"}
{"question": "what is Emma Goldman famous for?", "answer": "Living My Life", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Living My Life"], "entity_annotations": ["Emma Goldman"], "answer_entity_name": null, "predicted_answer": "she was a famous political activist and writer", "extracted_entity": "Emma_Goldman"}
{"question": "what is Aline Brosh McKenna famous for?", "answer": "27 Dresses", "dataset": "entity_questions", "split": "test", "answer_aliases": ["27 Dresses"], "entity_annotations": ["Aline Brosh McKenna"], "answer_entity_name": null, "predicted_answer": "Aline Brosh McKenna is famous for being", "extracted_entity": "Aline_Brosh_McKenna"}
{"question": "what is Richard Dawkins famous for?", "answer": "The Selfish Gene", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Selfish Gene"], "entity_annotations": ["Richard Dawkins"], "answer_entity_name": null, "predicted_answer": "He is an emeritus fellow of New College", "extracted_entity": "Richard_Dawkins"}
{"question": "what is Gertrude Stein famous for?", "answer": "Tender buttons: objects, food, rooms", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tender buttons: objects, food, rooms"], "entity_annotations": ["Gertrude Stein"], "answer_entity_name": null, "predicted_answer": "Gertrude Stein was an American novelist, poet", "extracted_entity": "Gertrude_Stein"}
{"question": "what is Andy Warhol famous for?", "answer": "Exploding Plastic Inevitable", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Exploding Plastic Inevitable", "Chelsea Girls"], "entity_annotations": ["Andy Warhol"], "answer_entity_name": null, "predicted_answer": "He is famous for being a visual artist, film", "extracted_entity": "Andy_Warhol"}
{"question": "what is H. A. Rey famous for?", "answer": "Curious George", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Curious George"], "entity_annotations": ["H. A. Rey"], "answer_entity_name": null, "predicted_answer": "H. A. Rey is famous for the series", "extracted_entity": "H._A._Rey"}
{"question": "what is Shneur Zalman of Liadi famous for?", "answer": "Tanya", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tanya", "Niggun of Four Stanzas", "Shulchan Aruch HaRav"], "entity_annotations": ["Shneur Zalman of Liadi"], "answer_entity_name": null, "predicted_answer": "Shneur Zalman of Liadi was", "extracted_entity": "Shneur_Zalman_of_Liadi"}
{"question": "what is Larry Niven famous for?", "answer": "Ringworld", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ringworld"], "entity_annotations": ["Larry Niven"], "answer_entity_name": null, "predicted_answer": "he is an American science fiction writer.", "extracted_entity": "Larry_Niven"}
{"question": "what is Kamahl famous for?", "answer": "The Elephant Song", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Elephant Song"], "entity_annotations": ["Kamahl"], "answer_entity_name": null, "predicted_answer": "Kamahl was a finalist in the Sydney Eisted", "extracted_entity": "Kamahl"}
{"question": "what is Juan Luna famous for?", "answer": "Spoliarium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spoliarium"], "entity_annotations": ["Juan Luna"], "answer_entity_name": null, "predicted_answer": "Juan Luna was a Filipino painter, sculptor and", "extracted_entity": "Juan_Luna"}
{"question": "what is V\u00e4in\u00f6 Linna famous for?", "answer": "Under the North Star", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Under the North Star"], "entity_annotations": ["V\u00e4in\u00f6 Linna"], "answer_entity_name": null, "predicted_answer": "V\u00e4in\u00f6 Linna was a Finnish author", "extracted_entity": "V\u00e4in\u00f6_Linna"}
{"question": "what is G\u00fcnter Grass famous for?", "answer": "The Tin Drum", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Tin Drum"], "entity_annotations": ["G\u00fcnter Grass"], "answer_entity_name": null, "predicted_answer": "G\u00fcnter Grass is famous for being a novelist", "extracted_entity": "G\u00fcnter_Grass"}
{"question": "what is R. D. Blackmore famous for?", "answer": "Lorna Doone", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lorna Doone"], "entity_annotations": ["R. D. Blackmore"], "answer_entity_name": null, "predicted_answer": "he is famous for vivid descriptions and personification of", "extracted_entity": "R._D._Blackmore"}
{"question": "what is Tom Taylor famous for?", "answer": "Our American Cousin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Our American Cousin"], "entity_annotations": ["Tom Taylor"], "answer_entity_name": null, "predicted_answer": "Tom Taylor was an English dramatist, critic", "extracted_entity": "Tom_Taylor"}
{"question": "what is Tomson Highway famous for?", "answer": "The Rez Sisters", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Rez Sisters"], "entity_annotations": ["Tomson Highway"], "answer_entity_name": null, "predicted_answer": "Tomson Highway is famous for his plays \"The", "extracted_entity": "Tomson_Highway"}
{"question": "what is David Almond famous for?", "answer": "Skellig", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Skellig", "The Fire-Eaters"], "entity_annotations": ["David Almond"], "answer_entity_name": null, "predicted_answer": "David Almond is famous for being a British author", "extracted_entity": "David_Almond"}
{"question": "what is Richard Rodgers famous for?", "answer": "The Sweetest Sounds", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Sweetest Sounds"], "entity_annotations": ["Richard Rodgers"], "answer_entity_name": null, "predicted_answer": "Rodgers is known for his songwriting partnerships, first", "extracted_entity": "Richard_Rodgers"}
{"question": "what is Irvine Welsh famous for?", "answer": "The Acid House", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Acid House"], "entity_annotations": ["Irvine Welsh"], "answer_entity_name": null, "predicted_answer": "Irvine Welsh is famous for being a Scottish novelist,", "extracted_entity": "Irvine_Welsh"}
{"question": "what is Giambattista Vico famous for?", "answer": "The New Science", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The New Science"], "entity_annotations": ["Giambattista Vico"], "answer_entity_name": null, "predicted_answer": "Giambattista Vico is famous for being", "extracted_entity": "Giambattista_Vico"}
{"question": "what is Wes Anderson famous for?", "answer": "The Darjeeling Limited", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Darjeeling Limited", "Rushmore", "Moonrise Kingdom", "The Royal Tenenbaums", "Hotel Chevalier", "The Grand Budapest Hotel", "Bottle Rocket", "The Life Aquatic with Steve Zissou"], "entity_annotations": ["Wes Anderson"], "answer_entity_name": null, "predicted_answer": "Wes Anderson is famous for his eccentricity, unique", "extracted_entity": "Wes_Anderson"}
{"question": "what is Robert A. Heinlein famous for?", "answer": "Starship Troopers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Starship Troopers"], "entity_annotations": ["Robert A. Heinlein"], "answer_entity_name": null, "predicted_answer": "Robert A. Heinlein was an American science fiction", "extracted_entity": "Robert_A._Heinlein"}
{"question": "what is Henry N. Cobb famous for?", "answer": "John Hancock Tower", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Hancock Tower"], "entity_annotations": ["Henry N. Cobb"], "answer_entity_name": null, "predicted_answer": "Henry N. Cobb was a famous American architect,", "extracted_entity": "Henry_N._Cobb"}
{"question": "what is James Joyce famous for?", "answer": "Finnegans Wake", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Finnegans Wake", "Dubliners", "Stephen Hero"], "entity_annotations": ["James Joyce"], "answer_entity_name": null, "predicted_answer": "James Joyce is famous for his novel Ulyss", "extracted_entity": "James_Joyce"}
{"question": "what is John Turturro famous for?", "answer": "Barton Fink", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barton Fink", "The Big Lebowski", "Quiz Show"], "entity_annotations": ["John Turturro"], "answer_entity_name": null, "predicted_answer": "He is known for his varied complex roles in independent", "extracted_entity": "John_Turturro"}
{"question": "what is Kazi Nazrul Islam famous for?", "answer": "Notuner Gaan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Notuner Gaan"], "entity_annotations": ["Kazi Nazrul Islam"], "answer_entity_name": null, "predicted_answer": "Kazi Nazrul Islam was a Bengali", "extracted_entity": "Kazi_Nazrul_Islam"}
{"question": "what is Roy Clarke famous for?", "answer": "Last of the Summer Wine", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Last of the Summer Wine"], "entity_annotations": ["Roy Clarke"], "answer_entity_name": null, "predicted_answer": "Roy Clarke is famous for creating the sitcoms \"", "extracted_entity": "Roy_Clarke"}
{"question": "what is J\u00f8rn Utzon famous for?", "answer": "Kuwait National Assembly Building", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kuwait National Assembly Building", "Sydney Opera House"], "entity_annotations": ["J\u00f8rn Utzon"], "answer_entity_name": null, "predicted_answer": "J\u00f8rn Utzon is famous for his design", "extracted_entity": "J\u00f8rn_Utzon"}
{"question": "what is Claude Joseph Rouget de Lisle famous for?", "answer": "La Marseillaise", "dataset": "entity_questions", "split": "test", "answer_aliases": ["La Marseillaise"], "entity_annotations": ["Claude Joseph Rouget de Lisle"], "answer_entity_name": null, "predicted_answer": "he is famous for writing the words and music of", "extracted_entity": "Claude_Joseph_Rouget_de_Lisle"}
{"question": "what is James Hoban famous for?", "answer": "White House", "dataset": "entity_questions", "split": "test", "answer_aliases": ["White House"], "entity_annotations": ["James Hoban"], "answer_entity_name": null, "predicted_answer": "James Hoban was an Irish-American architect, best", "extracted_entity": "James_Hoban"}
{"question": "what is Laurynas Gucevi\u010dius famous for?", "answer": "Vilnius Cathedral", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vilnius Cathedral"], "entity_annotations": ["Laurynas Gucevi\u010dius"], "answer_entity_name": null, "predicted_answer": "He was an 18th-century architect from the", "extracted_entity": "Laurynas_Gucevi\u010dius"}
{"question": "what is Felix Mendelssohn famous for?", "answer": "Symphony No. 4", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Symphony No. 4"], "entity_annotations": ["Felix Mendelssohn"], "answer_entity_name": null, "predicted_answer": "Felix Mendelssohn is famous for being a", "extracted_entity": "Felix_Mendelssohn"}
{"question": "what is Ai Yazawa famous for?", "answer": "Paradise Kiss", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paradise Kiss", "Nana", "Neighborhood Story"], "entity_annotations": ["Ai Yazawa"], "answer_entity_name": null, "predicted_answer": "Ai Yazawa is famous for her hip sense of", "extracted_entity": "Ai_Yazawa"}
{"question": "what is Alfred D\u00f6blin famous for?", "answer": "Berlin Alexanderplatz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Berlin Alexanderplatz"], "entity_annotations": ["Alfred D\u00f6blin"], "answer_entity_name": null, "predicted_answer": "Alfred D\u00f6blin was a German novelist,", "extracted_entity": "Alfred_D\u00f6blin"}
{"question": "what is Grant Wood famous for?", "answer": "American Gothic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["American Gothic"], "entity_annotations": ["Grant Wood"], "answer_entity_name": null, "predicted_answer": "Grant Wood was an American painter and representative of Regional", "extracted_entity": "Grant_Wood"}
{"question": "what is Gustav Mahler famous for?", "answer": "Symphony No. 2", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Symphony No. 2", "Symphony No. 1", "Symphony No. 8"], "entity_annotations": ["Gustav Mahler"], "answer_entity_name": null, "predicted_answer": "Gustav Mahler was an Austrian composer and conductor", "extracted_entity": "Gustav_Mahler"}
{"question": "what is Ya\u015far Kemal famous for?", "answer": "Memed, My Hawk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Memed, My Hawk"], "entity_annotations": ["Ya\u015far Kemal"], "answer_entity_name": null, "predicted_answer": "Ya\u015far Kemal was a Kurdish writer and human rights", "extracted_entity": "Ya\u015far_Kemal"}
{"question": "what is Mike Patton famous for?", "answer": "Adult Themes for Voice", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Adult Themes for Voice"], "entity_annotations": ["Mike Patton"], "answer_entity_name": null, "predicted_answer": "Mike Patton is a singer, songwriter, producer,", "extracted_entity": "Mike_Patton"}
{"question": "what is Colette famous for?", "answer": "Gigi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gigi"], "entity_annotations": ["Colette"], "answer_entity_name": null, "predicted_answer": "Colette is best known in the English-speaking world", "extracted_entity": "Colette"}
{"question": "what is Juan de Herrera famous for?", "answer": "Cathedral of Valladolid", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cathedral of Valladolid"], "entity_annotations": ["Juan de Herrera"], "answer_entity_name": null, "predicted_answer": "Juan de Herrera is famous for being a Spanish architect", "extracted_entity": "Juan_de_Herrera"}
{"question": "what is James Frey famous for?", "answer": "Lorien Legacies", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lorien Legacies"], "entity_annotations": ["James Frey"], "answer_entity_name": null, "predicted_answer": "James Frey is famous for being an American writer", "extracted_entity": "James_Frey"}
{"question": "what is Christopher Paolini famous for?", "answer": "Inheritance Cycle tetralogy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Inheritance Cycle tetralogy"], "entity_annotations": ["Christopher Paolini"], "answer_entity_name": null, "predicted_answer": "He is best known for \"The Inheritance Cycle", "extracted_entity": "Christopher_Paolini"}
{"question": "what is Isidore of Miletus famous for?", "answer": "Hagia Sophia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hagia Sophia"], "entity_annotations": ["Isidore of Miletus"], "answer_entity_name": null, "predicted_answer": "Isidore of Miletus was a renowned", "extracted_entity": "Isidore_of_Miletus"}
{"question": "what is Paul Magrs famous for?", "answer": "Doctor Who", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Doctor Who"], "entity_annotations": ["Paul Magrs"], "answer_entity_name": null, "predicted_answer": "He is famous for being an English writer and lecturer", "extracted_entity": "Paul_Magrs"}
{"question": "what is Alan Warner famous for?", "answer": "Morvern Callar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Morvern Callar"], "entity_annotations": ["Alan Warner"], "answer_entity_name": null, "predicted_answer": "Alan Warner is a Scottish novelist who grew up in", "extracted_entity": "Alan_Warner"}
{"question": "what is Brandon Sanderson famous for?", "answer": "Elantris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elantris", "The Stormlight Archive", "Mistborn"], "entity_annotations": ["Brandon Sanderson"], "answer_entity_name": null, "predicted_answer": "Brandon Sanderson is an American author of high fantasy", "extracted_entity": "Brandon_Sanderson"}
{"question": "what is Rumiko Takahashi famous for?", "answer": "Maison Ikkoku", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maison Ikkoku", "Rin-ne", "Inuyasha", "Urusei Yatsura"], "entity_annotations": ["Rumiko Takahashi"], "answer_entity_name": null, "predicted_answer": "Rumiko Takahashi is famous for creating manga", "extracted_entity": "Rumiko_Takahashi"}
{"question": "what is Kurt Vonnegut famous for?", "answer": "Slaughterhouse-Five", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Slaughterhouse-Five"], "entity_annotations": ["Kurt Vonnegut"], "answer_entity_name": null, "predicted_answer": "Kurt Vonnegut is famous for his sat", "extracted_entity": "Kurt_Vonnegut"}
{"question": "what is Ilango Adigal famous for?", "answer": "Silappatikaram", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Silappatikaram"], "entity_annotations": ["Ilango Adigal"], "answer_entity_name": null, "predicted_answer": "Ilango Adigal is famous for being a", "extracted_entity": "Ilango_Adigal"}
{"question": "what is Matth\u00e4us Daniel P\u00f6ppelmann famous for?", "answer": "Zwinger", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zwinger"], "entity_annotations": ["Matth\u00e4us Daniel P\u00f6ppelmann"], "answer_entity_name": null, "predicted_answer": "He was a German master builder and architect who helped", "extracted_entity": "Matth\u00e4us_Daniel_P\u00f6ppelmann"}
{"question": "what is Vince Gilligan famous for?", "answer": "Breaking Bad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Breaking Bad"], "entity_annotations": ["Vince Gilligan"], "answer_entity_name": null, "predicted_answer": "Vince Gilligan is known for his television work,", "extracted_entity": "Vince_Gilligan"}
{"question": "what is Mario Botta famous for?", "answer": "San Francisco Museum of Modern Art", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco Museum of Modern Art"], "entity_annotations": ["Mario Botta"], "answer_entity_name": null, "predicted_answer": "Mario Botta is a Swiss architect.", "extracted_entity": "Mario_Botta"}
{"question": "what is Michael Haydn famous for?", "answer": "Symphony No. 1", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Symphony No. 1"], "entity_annotations": ["Michael Haydn"], "answer_entity_name": null, "predicted_answer": "he was a famous composer of the classical period", "extracted_entity": "Michael_Haydn"}
{"question": "what is Horace famous for?", "answer": "Ars Poetica", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ars Poetica"], "entity_annotations": ["Horace"], "answer_entity_name": null, "predicted_answer": "Horace is famous for being the leading Roman lyric", "extracted_entity": "Horace"}
{"question": "what is Zora Neale Hurston famous for?", "answer": "Their Eyes Were Watching God", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Their Eyes Were Watching God"], "entity_annotations": ["Zora Neale Hurston"], "answer_entity_name": null, "predicted_answer": "Zora Neale Hurston is famous for her", "extracted_entity": "Zora_Neale_Hurston"}
{"question": "what is Leon Battista Alberti famous for?", "answer": "De pictura", "dataset": "entity_questions", "split": "test", "answer_aliases": ["De pictura"], "entity_annotations": ["Leon Battista Alberti"], "answer_entity_name": null, "predicted_answer": "he is known mostly as an artist, he was", "extracted_entity": "Leon_Battista_Alberti"}
{"question": "what is Stephen King famous for?", "answer": "The Dark Tower", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Dark Tower", "From a Buick 8", "Needful Things", "The Girl Who Loved Tom Gordon", "It", "Cujo", "The Stand", "Pet Sematary", "The Shining", "Dolores Claiborne", "Doctor Sleep", "The Colorado Kid", "Misery"], "entity_annotations": ["Stephen King"], "answer_entity_name": null, "predicted_answer": "He is famous for writing horror, supernatural fiction,", "extracted_entity": "Stephen_King"}
{"question": "what is Radclyffe Hall famous for?", "answer": "The Well of Loneliness", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Well of Loneliness"], "entity_annotations": ["Radclyffe Hall"], "answer_entity_name": null, "predicted_answer": "Radclyffe Hall is famous for being a poet", "extracted_entity": "Radclyffe_Hall"}
{"question": "what is Jerry Holkins famous for?", "answer": "Penny Arcade", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Penny Arcade"], "entity_annotations": ["Jerry Holkins"], "answer_entity_name": null, "predicted_answer": "Jerry Holkins is famous for being a writer.", "extracted_entity": "Jerry_Holkins"}
{"question": "what is John Cowper Powys famous for?", "answer": "Porius: A Romance of the Dark Ages", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Porius: A Romance of the Dark Ages", "Wolf Solent", "A Glastonbury Romance"], "entity_annotations": ["John Cowper Powys"], "answer_entity_name": null, "predicted_answer": "John Cowper Powys is famous for being a", "extracted_entity": "John_Cowper_Powys"}
{"question": "what is Bernard Malamud famous for?", "answer": "The Magic Barrel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Magic Barrel"], "entity_annotations": ["Bernard Malamud"], "answer_entity_name": null, "predicted_answer": "Bernard Malamud was an American novelist and short", "extracted_entity": "Bernard_Malamud"}
{"question": "what is Werner March famous for?", "answer": "Olympiastadion Berlin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Olympiastadion Berlin", "Carinhall"], "entity_annotations": ["Werner March"], "answer_entity_name": null, "predicted_answer": "Werner March is famous for being an architect.", "extracted_entity": "Werner_March"}
{"question": "what is Jan Werich famous for?", "answer": "The Emperor and the Golem", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Emperor and the Golem"], "entity_annotations": ["Jan Werich"], "answer_entity_name": null, "predicted_answer": "Czech actor, playwright and writer", "extracted_entity": "Jan_Werich"}
{"question": "what is Lois Lowry famous for?", "answer": "The Giver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Giver"], "entity_annotations": ["Lois Lowry"], "answer_entity_name": null, "predicted_answer": "Lois Lowry is famous for writing about difficult subject", "extracted_entity": "Lois_Lowry"}
{"question": "what is Melissa McBride famous for?", "answer": "The Walking Dead", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Walking Dead"], "entity_annotations": ["Melissa McBride"], "answer_entity_name": null, "predicted_answer": "Melissa McBride is an American actress who is best", "extracted_entity": "Melissa_McBride"}
{"question": "what is Auguste Escoffier famous for?", "answer": "Le guide culinaire", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Le guide culinaire"], "entity_annotations": ["Auguste Escoffier"], "answer_entity_name": null, "predicted_answer": "Auguste Escoffier is famous for being", "extracted_entity": "Auguste_Escoffier"}
{"question": "what is Louise Erdrich famous for?", "answer": "Love Medicine", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Love Medicine"], "entity_annotations": ["Louise Erdrich"], "answer_entity_name": null, "predicted_answer": "Louise Erdrich is an American author of novels", "extracted_entity": "Louise_Erdrich"}
{"question": "what is The Distillers famous for?", "answer": "Coral Fang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Coral Fang"], "entity_annotations": ["The Distillers"], "answer_entity_name": null, "predicted_answer": "punk rock", "extracted_entity": "The_Distillers"}
{"question": "what is Ian Tracey famous for?", "answer": "Huckleberry Finn and His Friends", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Huckleberry Finn and His Friends"], "entity_annotations": ["Ian Tracey"], "answer_entity_name": null, "predicted_answer": "Ian Tracey is a Canadian actor.", "extracted_entity": "Ian_Tracey"}
{"question": "what is Antonio Salieri famous for?", "answer": "Europa riconosciuta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Europa riconosciuta"], "entity_annotations": ["Antonio Salieri"], "answer_entity_name": null, "predicted_answer": "Antonio Salieri was an Italian composer and teacher of", "extracted_entity": "Antonio_Salieri"}
{"question": "what is Edward Bellamy famous for?", "answer": "Looking Backward", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Looking Backward"], "entity_annotations": ["Edward Bellamy"], "answer_entity_name": null, "predicted_answer": "Edward Bellamy is famous for his utopian novel", "extracted_entity": "Edward_Bellamy"}
{"question": "what is Widukind of Corvey famous for?", "answer": "Res gestae saxonicae sive annalium libri tres", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Res gestae saxonicae sive annalium libri tres"], "entity_annotations": ["Widukind of Corvey"], "answer_entity_name": null, "predicted_answer": "Widukind of Corvey is famous for being", "extracted_entity": "Widukind_of_Corvey"}
{"question": "what is Sunthorn Phu famous for?", "answer": "Phra Aphai Mani", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Phra Aphai Mani"], "entity_annotations": ["Sunthorn Phu"], "answer_entity_name": null, "predicted_answer": "unthorn Phu is famous for being Thailand", "extracted_entity": "Sunthorn_Phu"}
{"question": "what is Katherine Paterson famous for?", "answer": "Jacob Have I Loved", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jacob Have I Loved", "Bridge to Terabithia"], "entity_annotations": ["Katherine Paterson"], "answer_entity_name": null, "predicted_answer": "Katherine Paterson is famous for being an American writer", "extracted_entity": "Katherine_Paterson"}
{"question": "where is Wormsley Park located?", "answer": "Stokenchurch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stokenchurch"], "entity_annotations": ["Wormsley Park"], "answer_entity_name": null, "predicted_answer": "Chiltern Hills of Buckinghamshire (formerly Oxford", "extracted_entity": "Wormsley_Park"}
{"question": "where is County Cork located?", "answer": "Munster", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Munster"], "entity_annotations": ["County Cork"], "answer_entity_name": null, "predicted_answer": "County Cork is located in Ireland.", "extracted_entity": "County_Cork"}
{"question": "where is Rawtenstall located?", "answer": "England", "dataset": "entity_questions", "split": "test", "answer_aliases": ["England"], "entity_annotations": ["Rawtenstall"], "answer_entity_name": null, "predicted_answer": "15 miles/24 km north of Manchester,", "extracted_entity": "Rawtenstall"}
{"question": "where is Edge\u00f8ya located?", "answer": "Svalbard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Svalbard"], "entity_annotations": ["Edge\u00f8ya"], "answer_entity_name": null, "predicted_answer": "Edge\u00f8ya is a Norwegian island located in southeast", "extracted_entity": "Edge\u00f8ya"}
{"question": "where is Bucks County Playhouse located?", "answer": "Pennsylvania", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pennsylvania"], "entity_annotations": ["Bucks County Playhouse"], "answer_entity_name": null, "predicted_answer": "New Hope, Pennsylvania.", "extracted_entity": "Bucks_County_Playhouse"}
{"question": "where is Bosanski Petrovac located?", "answer": "Una-Sana Canton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Una-Sana Canton"], "entity_annotations": ["Bosanski Petrovac"], "answer_entity_name": null, "predicted_answer": "Bosanski Petrovac is a town and municipality", "extracted_entity": "Bosanski_Petrovac"}
{"question": "where is Lalbag subdivision located?", "answer": "Murshidabad district", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Murshidabad district"], "entity_annotations": ["Lalbag subdivision"], "answer_entity_name": null, "predicted_answer": "it is located in Murshidabad district", "extracted_entity": "Lalbag_subdivision"}
{"question": "where is Prairie Chapel Ranch located?", "answer": "Texas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Texas"], "entity_annotations": ["Prairie Chapel Ranch"], "answer_entity_name": null, "predicted_answer": "Prairie Chapel Ranch is located in unincorporated", "extracted_entity": "Prairie_Chapel_Ranch"}
{"question": "where is Humberside Airport located?", "answer": "North Lincolnshire", "dataset": "entity_questions", "split": "test", "answer_aliases": ["North Lincolnshire"], "entity_annotations": ["Humberside Airport"], "answer_entity_name": null, "predicted_answer": "in the Borough of North Lincolnshire, England", "extracted_entity": "Humberside_Airport"}
{"question": "where is Leiden University Library located?", "answer": "Leiden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leiden"], "entity_annotations": ["Leiden University Library"], "answer_entity_name": null, "predicted_answer": "Leiden University Libraries is a library founded in", "extracted_entity": "Leiden_University_Library"}
{"question": "where is Stillwater Area High School located?", "answer": "Oak Park Heights", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oak Park Heights"], "entity_annotations": ["Stillwater Area High School"], "answer_entity_name": null, "predicted_answer": "Oak Park Heights, Minnesota, United States", "extracted_entity": "Stillwater_Area_High_School"}
{"question": "where is Mayflower located?", "answer": "Lee County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lee County"], "entity_annotations": ["Mayflower"], "answer_entity_name": null, "predicted_answer": "Mayflower was located in Plymouth, Massachusetts.", "extracted_entity": "Mayflower"}
{"question": "where is Gitega Province located?", "answer": "Burundi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Burundi"], "entity_annotations": ["Gitega Province"], "answer_entity_name": null, "predicted_answer": "itega Province is located in central Burundi", "extracted_entity": "Gitega_Province"}
{"question": "where is United Nations International School located?", "answer": "Manhattan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Manhattan"], "entity_annotations": ["United Nations International School"], "answer_entity_name": null, "predicted_answer": "United Nations International School is located in New York City", "extracted_entity": "United_Nations_International_School"}
{"question": "where is Manipal Institute of Technology located?", "answer": "Manipal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Manipal"], "entity_annotations": ["Manipal Institute of Technology"], "answer_entity_name": null, "predicted_answer": "Manipal Institute of Technology is located in Manipal", "extracted_entity": "Manipal_Institute_of_Technology"}
{"question": "where is Serval located?", "answer": "Aisne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aisne"], "entity_annotations": ["Serval"], "answer_entity_name": null, "predicted_answer": "frica", "extracted_entity": "Serval"}
{"question": "where is Acropolis Museum located?", "answer": "Athens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Athens"], "entity_annotations": ["Acropolis Museum"], "answer_entity_name": null, "predicted_answer": "in Athens, Greece", "extracted_entity": "Acropolis_Museum"}
{"question": "where is Jacob located?", "answer": "Jackson County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jackson County"], "entity_annotations": ["Jacob"], "answer_entity_name": null, "predicted_answer": "Jacob is located in Egypt", "extracted_entity": "Jacob"}
{"question": "where is Hajipur located?", "answer": "Vaishali district", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vaishali district"], "entity_annotations": ["Hajipur"], "answer_entity_name": null, "predicted_answer": "Hajipur is located in Vaishali district of", "extracted_entity": "Hajipur"}
{"question": "where is Gmina Garwolin located?", "answer": "Garwolin County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Garwolin County"], "entity_annotations": ["Gmina Garwolin"], "answer_entity_name": null, "predicted_answer": "Gmina Garwolin is a rural gmina", "extracted_entity": "Gmina_Garwolin"}
{"question": "where is Birkebeineren Ski Stadium located?", "answer": "Lillehammer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lillehammer"], "entity_annotations": ["Birkebeineren Ski Stadium"], "answer_entity_name": null, "predicted_answer": "Lillehammer, Norway.", "extracted_entity": "Birkebeineren_Ski_Stadium"}
{"question": "where is Coogan's Bluff located?", "answer": "Manhattan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Manhattan"], "entity_annotations": ["Coogan's Bluff"], "answer_entity_name": null, "predicted_answer": "Coogan's Bluff is a promontory", "extracted_entity": "Coogan's_Bluff"}
{"question": "where is Mustang Island located?", "answer": "Texas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Texas"], "entity_annotations": ["Mustang Island"], "answer_entity_name": null, "predicted_answer": "Mustang Island is located in the United States, on", "extracted_entity": "Mustang_Island"}
{"question": "where is Walters Art Museum located?", "answer": "Maryland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maryland"], "entity_annotations": ["Walters Art Museum"], "answer_entity_name": null, "predicted_answer": "Baltimore, Maryland.", "extracted_entity": "Walters_Art_Museum"}
{"question": "where is Gorodishchensky District, Volgograd Oblast located?", "answer": "Volgograd Oblast", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Volgograd Oblast"], "entity_annotations": ["Gorodishchensky District, Volgograd Oblast"], "answer_entity_name": null, "predicted_answer": "Gorodishchensky District, Volg", "extracted_entity": "Gorodishchensky_District,_Volgograd_Oblast"}
{"question": "where is Nazarabad County located?", "answer": "Alborz Province", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alborz Province"], "entity_annotations": ["Nazarabad County"], "answer_entity_name": null, "predicted_answer": "Nazarabad County is in Alborz province", "extracted_entity": "Nazarabad_County"}
{"question": "where is Huancavelica located?", "answer": "Peru", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peru"], "entity_annotations": ["Huancavelica"], "answer_entity_name": null, "predicted_answer": "Huancavelica is located in Peru", "extracted_entity": "Huancavelica"}
{"question": "where is Moravia located?", "answer": "Appanoose County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Appanoose County"], "entity_annotations": ["Moravia"], "answer_entity_name": null, "predicted_answer": "oravia is located in the east of the Czech", "extracted_entity": "Moravia"}
{"question": "where is Euroa located?", "answer": "Victoria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Victoria"], "entity_annotations": ["Euroa"], "answer_entity_name": null, "predicted_answer": "Euroa is located in the Shire of Str", "extracted_entity": "Euroa"}
{"question": "where is Barciany located?", "answer": "Gmina Barciany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gmina Barciany"], "entity_annotations": ["Barciany"], "answer_entity_name": null, "predicted_answer": "Barciany is located in K\u0119tr", "extracted_entity": "Barciany"}
{"question": "where is Brighton railway station located?", "answer": "Brighton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brighton"], "entity_annotations": ["Brighton railway station"], "answer_entity_name": null, "predicted_answer": "Brighton railway station is the southern terminus of the", "extracted_entity": "Brighton_railway_station"}
{"question": "where is The Oval located?", "answer": "Belfast", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belfast"], "entity_annotations": ["The Oval"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "The_Oval"}
{"question": "where is Obligation located?", "answer": "Anne Arundel County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anne Arundel County"], "entity_annotations": ["Obligation"], "answer_entity_name": null, "predicted_answer": "Obligation is located in the Obligation category.", "extracted_entity": "Obligation"}
{"question": "where is Farallon Islands located?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["Farallon Islands"], "answer_entity_name": null, "predicted_answer": "Farallon Islands are located in the Gulf of the", "extracted_entity": "Farallon_Islands"}
{"question": "where is Marquette University High School located?", "answer": "Milwaukee", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milwaukee"], "entity_annotations": ["Marquette University High School"], "answer_entity_name": null, "predicted_answer": "Marquette University High School is located at 340", "extracted_entity": "Marquette_University_High_School"}
{"question": "where is Bamble located?", "answer": "Telemark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Telemark"], "entity_annotations": ["Bamble"], "answer_entity_name": null, "predicted_answer": "Vestfold og Telemark county", "extracted_entity": "Bamble"}
{"question": "where is \u0130skenderun located?", "answer": "Hatay Province", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hatay Province"], "entity_annotations": ["\u0130skenderun"], "answer_entity_name": null, "predicted_answer": "\u0130skenderun is located in Hatay Province", "extracted_entity": "\u0130skenderun"}
{"question": "where is Calais located?", "answer": "canton of Calais-Nord-Ouest", "dataset": "entity_questions", "split": "test", "answer_aliases": ["canton of Calais-Nord-Ouest", "Pas-de-Calais", "canton of Calais-Centre"], "entity_annotations": ["Calais"], "answer_entity_name": null, "predicted_answer": "lais is located in the Pas-de-Calais", "extracted_entity": "Calais"}
{"question": "where is Idstein located?", "answer": "Rheingau-Taunus-Kreis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rheingau-Taunus-Kreis"], "entity_annotations": ["Idstein"], "answer_entity_name": null, "predicted_answer": "Hesse, Germany", "extracted_entity": "Idstein"}
{"question": "where is San Francisco Theological Seminary located?", "answer": "California", "dataset": "entity_questions", "split": "test", "answer_aliases": ["California"], "entity_annotations": ["San Francisco Theological Seminary"], "answer_entity_name": null, "predicted_answer": "San Francisco Theological Seminary is located in San", "extracted_entity": "San_Francisco_Theological_Seminary"}
{"question": "where is Farim Rural District located?", "answer": "Dodangeh District", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dodangeh District"], "entity_annotations": ["Farim Rural District"], "answer_entity_name": null, "predicted_answer": "Farim Rural District is located in Dodangeh", "extracted_entity": "Farim_Rural_District"}
{"question": "where is Gotha located?", "answer": "Gotha", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gotha"], "entity_annotations": ["Gotha"], "answer_entity_name": null, "predicted_answer": "Gotha is located in Thuringia.", "extracted_entity": "Gotha"}
{"question": "where is Empire State College located?", "answer": "New York", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York"], "entity_annotations": ["Empire State College"], "answer_entity_name": null, "predicted_answer": "Empire State College is located in Saratoga Springs", "extracted_entity": "Empire_State_College"}
{"question": "where is Toynbee Hall located?", "answer": "London Borough of Tower Hamlets", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London Borough of Tower Hamlets"], "entity_annotations": ["Toynbee Hall"], "answer_entity_name": null, "predicted_answer": "Toynbee Hall is located in the East End", "extracted_entity": "Toynbee_Hall"}
{"question": "where is New York State Route 77 located?", "answer": "New York", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York"], "entity_annotations": ["New York State Route 77"], "answer_entity_name": null, "predicted_answer": "New York State Route 77 is located in the", "extracted_entity": "New_York_State_Route_77"}
{"question": "where is Torgau located?", "answer": "Nordsachsen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nordsachsen"], "entity_annotations": ["Torgau"], "answer_entity_name": null, "predicted_answer": "Torgau is located in northwestern Saxony", "extracted_entity": "Torgau"}
{"question": "where is Eastern Norway located?", "answer": "Norway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Norway"], "entity_annotations": ["Eastern Norway"], "answer_entity_name": null, "predicted_answer": "Eastern Norway is located in the south-eastern part", "extracted_entity": "Eastern_Norway"}
{"question": "where is 1966 European Aquatics Championships located?", "answer": "Utrecht", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Utrecht"], "entity_annotations": ["1966 European Aquatics Championships"], "answer_entity_name": null, "predicted_answer": "1966 European Aquatics Championships is located in", "extracted_entity": "1966_European_Aquatics_Championships"}
{"question": "where is Alexander Island located?", "answer": "Western Australia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Western Australia"], "entity_annotations": ["Alexander Island"], "answer_entity_name": null, "predicted_answer": "Alexander Island is located in Antarctica.", "extracted_entity": "Alexander_Island"}
{"question": "where is Crocker Art Museum located?", "answer": "Sacramento", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sacramento"], "entity_annotations": ["Crocker Art Museum"], "answer_entity_name": null, "predicted_answer": "Sacramento, California.", "extracted_entity": "Crocker_Art_Museum"}
{"question": "where is Kinnitty GAA located?", "answer": "County Offaly", "dataset": "entity_questions", "split": "test", "answer_aliases": ["County Offaly"], "entity_annotations": ["Kinnitty GAA"], "answer_entity_name": null, "predicted_answer": "Kinnitty, County Offaly, Republic of", "extracted_entity": "Kinnitty_GAA"}
{"question": "where is Chaharmahal and Bakhtiari Province located?", "answer": "Iran", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Iran"], "entity_annotations": ["Chaharmahal and Bakhtiari Province"], "answer_entity_name": null, "predicted_answer": "Chaharmahal and Bakhtiari Province", "extracted_entity": "Chaharmahal_and_Bakhtiari_Province"}
{"question": "where is Putty located?", "answer": "New South Wales", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New South Wales"], "entity_annotations": ["Putty"], "answer_entity_name": null, "predicted_answer": "Putty is located in the United States", "extracted_entity": "Putty"}
{"question": "where is Kalbajar District located?", "answer": "Azerbaijan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Azerbaijan"], "entity_annotations": ["Kalbajar District"], "answer_entity_name": null, "predicted_answer": "Kalbajar District is located in the west of", "extracted_entity": "Kalbajar_District"}
{"question": "where is Mount Hasan located?", "answer": "Aksaray Province", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aksaray Province"], "entity_annotations": ["Mount Hasan"], "answer_entity_name": null, "predicted_answer": "Mount Hasan is located in Turkey.", "extracted_entity": "Mount_Hasan"}
{"question": "where is Sarthe located?", "answer": "Orne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Orne"], "entity_annotations": ["Sarthe"], "answer_entity_name": null, "predicted_answer": "Sarthe is located in the \"Grand-Ouest", "extracted_entity": "Sarthe"}
{"question": "where is Bangalore Medical College and Research Institute located?", "answer": "Bengaluru", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bengaluru"], "entity_annotations": ["Bangalore Medical College and Research Institute"], "answer_entity_name": null, "predicted_answer": "Bangalore Medical College and Research Institute is located in Bangalore", "extracted_entity": "Bangalore_Medical_College_and_Research_Institute"}
{"question": "where is Ford, West Sussex located?", "answer": "Arun", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arun"], "entity_annotations": ["Ford, West Sussex"], "answer_entity_name": null, "predicted_answer": "Ford, West Sussex is located south by south-west", "extracted_entity": "Ford,_West_Sussex"}
{"question": "where is CKFM-FM located?", "answer": "Ontario", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ontario"], "entity_annotations": ["CKFM-FM"], "answer_entity_name": null, "predicted_answer": "Toronto, Ontario", "extracted_entity": "CKFM-FM"}
{"question": "where is Mehdishahr County located?", "answer": "Semnan Province", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Semnan Province"], "entity_annotations": ["Mehdishahr County"], "answer_entity_name": null, "predicted_answer": "Mehdishahr County is in Semnan province", "extracted_entity": "Mehdishahr_County"}
{"question": "where is South Benfleet located?", "answer": "Essex", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Essex"], "entity_annotations": ["South Benfleet"], "answer_entity_name": null, "predicted_answer": "it is in the Castle Point district of Essex,", "extracted_entity": "South_Benfleet"}
{"question": "where is Pakdasht County located?", "answer": "Tehran Province", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tehran Province"], "entity_annotations": ["Pakdasht County"], "answer_entity_name": null, "predicted_answer": "Pakdasht County is located in Tehran province,", "extracted_entity": "Pakdasht_County"}
{"question": "where is Quttinirpaaq National Park located?", "answer": "Qikiqtaaluk Region", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Qikiqtaaluk Region"], "entity_annotations": ["Quttinirpaaq National Park"], "answer_entity_name": null, "predicted_answer": "on the northeastern corner of Ellesmere Island in", "extracted_entity": "Quttinirpaaq_National_Park"}
{"question": "where is Ulmen located?", "answer": "Cochem-Zell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cochem-Zell"], "entity_annotations": ["Ulmen"], "answer_entity_name": null, "predicted_answer": "Ulmen is located in the Cochem-Zell", "extracted_entity": "Ulmen"}
{"question": "where is Paamiut located?", "answer": "Sermersooq", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sermersooq"], "entity_annotations": ["Paamiut"], "answer_entity_name": null, "predicted_answer": "southwestern Greenland in the Sermersooq municipality", "extracted_entity": "Paamiut"}
{"question": "where is Saint-Cloud located?", "answer": "Hauts-de-Seine", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hauts-de-Seine"], "entity_annotations": ["Saint-Cloud"], "answer_entity_name": null, "predicted_answer": "it is located in the western suburbs of Paris,", "extracted_entity": "Saint-Cloud"}
{"question": "where is Lisson Grove located?", "answer": "City of Westminster", "dataset": "entity_questions", "split": "test", "answer_aliases": ["City of Westminster"], "entity_annotations": ["Lisson Grove"], "answer_entity_name": null, "predicted_answer": "Lisson Grove is a street and district in Mary", "extracted_entity": "Lisson_Grove"}
{"question": "where is Lane located?", "answer": "Franklin County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Franklin County"], "entity_annotations": ["Lane"], "answer_entity_name": null, "predicted_answer": "In road transport, a lane is part of a", "extracted_entity": "Lane"}
{"question": "where is Fukuoka located?", "answer": "Fukuoka Prefecture", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fukuoka Prefecture"], "entity_annotations": ["Fukuoka"], "answer_entity_name": null, "predicted_answer": "kuoka is the sixth-largest city in Japan", "extracted_entity": "Fukuoka"}
{"question": "where is Saint Vincent's Catholic Medical Center located?", "answer": "Manhattan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Manhattan"], "entity_annotations": ["Saint Vincent's Catholic Medical Center"], "answer_entity_name": null, "predicted_answer": "Saint Vincent's Catholic Medical Center is located in New", "extracted_entity": "Saint_Vincent's_Catholic_Medical_Center"}
{"question": "where is Steinberg located?", "answer": "Schleswig-Flensburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Schleswig-Flensburg"], "entity_annotations": ["Steinberg"], "answer_entity_name": null, "predicted_answer": "Hamburg", "extracted_entity": "Steinberg"}
{"question": "where is Perth located?", "answer": "Western Australia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Western Australia"], "entity_annotations": ["Perth"], "answer_entity_name": null, "predicted_answer": "Perth is located in Australia", "extracted_entity": "Perth"}
{"question": "where is East Bengal Ground located?", "answer": "Maidan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maidan"], "entity_annotations": ["East Bengal Ground"], "answer_entity_name": null, "predicted_answer": "The stadium lies in the Kolkata Maidan area on", "extracted_entity": "East_Bengal_Ground"}
{"question": "where is Pasadena City College located?", "answer": "California", "dataset": "entity_questions", "split": "test", "answer_aliases": ["California"], "entity_annotations": ["Pasadena City College"], "answer_entity_name": null, "predicted_answer": "Pasadena, California", "extracted_entity": "Pasadena_City_College"}
{"question": "where is Albury located?", "answer": "Guildford", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guildford"], "entity_annotations": ["Albury"], "answer_entity_name": null, "predicted_answer": "Albury is located on the Hume Highway and", "extracted_entity": "Albury"}
{"question": "where is Still located?", "answer": "Bas-Rhin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bas-Rhin"], "entity_annotations": ["Still"], "answer_entity_name": null, "predicted_answer": "Still is located in USA", "extracted_entity": "Still"}
{"question": "where is UNLV Rebels football located?", "answer": "Las Vegas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Las Vegas"], "entity_annotations": ["UNLV Rebels football"], "answer_entity_name": null, "predicted_answer": "UNLV Rebels football is located in Paradise, Nevada", "extracted_entity": "UNLV_Rebels_football"}
{"question": "where is UNC Health Care located?", "answer": "North Carolina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["North Carolina"], "entity_annotations": ["UNC Health Care"], "answer_entity_name": null, "predicted_answer": "Chapel Hill, North Carolina", "extracted_entity": "UNC_Health_Care"}
{"question": "where is John F. Kennedy Presidential Library and Museum located?", "answer": "Boston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Boston"], "entity_annotations": ["John F. Kennedy Presidential Library and Museum"], "answer_entity_name": null, "predicted_answer": "The John F. Kennedy Presidential Library and Museum is", "extracted_entity": "John_F._Kennedy_Presidential_Library_and_Museum"}
{"question": "where is Fleetwood located?", "answer": "Wyre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wyre"], "entity_annotations": ["Fleetwood"], "answer_entity_name": null, "predicted_answer": "Fleetwood is a coastal town in the Borough of", "extracted_entity": "Fleetwood"}
{"question": "where is Harwich International Port located?", "answer": "Essex", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Essex"], "entity_annotations": ["Harwich International Port"], "answer_entity_name": null, "predicted_answer": "Harwich International Port is located in Essex, England", "extracted_entity": "Harwich_International_Port"}
{"question": "where is John Wayne Airport located?", "answer": "Santa Ana", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Santa Ana"], "entity_annotations": ["John Wayne Airport"], "answer_entity_name": null, "predicted_answer": "John Wayne Airport is located in an unincorpor", "extracted_entity": "John_Wayne_Airport"}
{"question": "where is Osan located?", "answer": "Gyeonggi Province", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gyeonggi Province"], "entity_annotations": ["Osan"], "answer_entity_name": null, "predicted_answer": "Osan is located in Gyeonggi Province", "extracted_entity": "Osan"}
{"question": "where is Drumnadrochit located?", "answer": "Highland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Highland"], "entity_annotations": ["Drumnadrochit"], "answer_entity_name": null, "predicted_answer": "Drumnadrochit is located in the Highland", "extracted_entity": "Drumnadrochit"}
{"question": "where is California State Route 166 located?", "answer": "California", "dataset": "entity_questions", "split": "test", "answer_aliases": ["California"], "entity_annotations": ["California State Route 166"], "answer_entity_name": null, "predicted_answer": "alifornia State Route 166 is located in the United", "extracted_entity": "California_State_Route_166"}
{"question": "where is Pallant House Gallery located?", "answer": "Chichester", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chichester"], "entity_annotations": ["Pallant House Gallery"], "answer_entity_name": null, "predicted_answer": "Pallant House Gallery is located in Chichester", "extracted_entity": "Pallant_House_Gallery"}
{"question": "where is Magazine located?", "answer": "Logan County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Logan County"], "entity_annotations": ["Magazine"], "answer_entity_name": null, "predicted_answer": "A magazine is a periodical publication, generally published", "extracted_entity": "Magazine"}
{"question": "where is Galle Face Green located?", "answer": "Colombo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Colombo"], "entity_annotations": ["Galle Face Green"], "answer_entity_name": null, "predicted_answer": "Galle Face Green is located in the heart of", "extracted_entity": "Galle_Face_Green"}
{"question": "where is Samut Sakhon located?", "answer": "Thailand", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thailand"], "entity_annotations": ["Samut Sakhon"], "answer_entity_name": null, "predicted_answer": "It is a City in Thailand, capital of Sam", "extracted_entity": "Samut_Sakhon"}
{"question": "where is Offutt Air Force Base located?", "answer": "Sarpy County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sarpy County"], "entity_annotations": ["Offutt Air Force Base"], "answer_entity_name": null, "predicted_answer": "Offutt Air Force Base is located south of Omaha", "extracted_entity": "Offutt_Air_Force_Base"}
{"question": "where is Dadri located?", "answer": "Gautam Buddh Nagar district", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gautam Buddh Nagar district"], "entity_annotations": ["Dadri"], "answer_entity_name": null, "predicted_answer": "Dadri is located in Gautam Buddha Nagar District", "extracted_entity": "Dadri"}
{"question": "where is Hickory located?", "answer": "Harford County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harford County"], "entity_annotations": ["Hickory"], "answer_entity_name": null, "predicted_answer": "Hickory is located in the United States", "extracted_entity": "Hickory"}
{"question": "where is New Jersey Meadowlands located?", "answer": "New Jersey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Jersey"], "entity_annotations": ["New Jersey Meadowlands"], "answer_entity_name": null, "predicted_answer": "in northeastern New Jersey in the United States, a", "extracted_entity": "New_Jersey_Meadowlands"}
{"question": "where is Pennsylvania Route 462 located?", "answer": "Pennsylvania", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pennsylvania"], "entity_annotations": ["Pennsylvania Route 462"], "answer_entity_name": null, "predicted_answer": "Pennsylvania Route 462 is located in York and Lancaster", "extracted_entity": "Pennsylvania_Route_462"}
{"question": "where is Yakutsk located?", "answer": "Yakut Autonomous Soviet Socialist Republic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yakut Autonomous Soviet Socialist Republic", "Sakha Republic"], "entity_annotations": ["Yakutsk"], "answer_entity_name": null, "predicted_answer": "utsk is the capital city of Sakha", "extracted_entity": "Yakutsk"}
{"question": "where is Wawer located?", "answer": "Warsaw", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warsaw"], "entity_annotations": ["Wawer"], "answer_entity_name": null, "predicted_answer": "Wawer is one of the districts of Warsaw", "extracted_entity": "Wawer"}
{"question": "where is Oneida Lake located?", "answer": "New York", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York"], "entity_annotations": ["Oneida Lake"], "answer_entity_name": null, "predicted_answer": "eida Lake is located northeast of Syracuse and near", "extracted_entity": "Oneida_Lake"}
{"question": "where is Champasak Province located?", "answer": "Laos", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Laos"], "entity_annotations": ["Champasak Province"], "answer_entity_name": null, "predicted_answer": "it is located in southwestern Laos", "extracted_entity": "Champasak_Province"}
{"question": "where is Save Mart Center located?", "answer": "Fresno", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fresno"], "entity_annotations": ["Save Mart Center"], "answer_entity_name": null, "predicted_answer": "Fresno, California", "extracted_entity": "Save_Mart_Center"}
{"question": "where is Eastern Illinois University located?", "answer": "Illinois", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Illinois", "Charleston"], "entity_annotations": ["Eastern Illinois University"], "answer_entity_name": null, "predicted_answer": "Eastern Illinois University is located in Charleston, Illinois.", "extracted_entity": "Eastern_Illinois_University"}
{"question": "where is University of Antwerp located?", "answer": "Antwerp", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Antwerp"], "entity_annotations": ["University of Antwerp"], "answer_entity_name": null, "predicted_answer": "University of Antwerp is located in Antwerp", "extracted_entity": "University_of_Antwerp"}
{"question": "where is Lesser Slave Lake located?", "answer": "Alberta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alberta"], "entity_annotations": ["Lesser Slave Lake"], "answer_entity_name": null, "predicted_answer": "in central Alberta, Canada, northwest of Edmonton.", "extracted_entity": "Lesser_Slave_Lake"}
{"question": "where is Egypt located?", "answer": "South Bucks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["South Bucks"], "entity_annotations": ["Egypt"], "answer_entity_name": null, "predicted_answer": "Egypt is a transcontinental country spanning the northeast corner", "extracted_entity": "Egypt"}
{"question": "where is Kalatrazan District located?", "answer": "Kurdistan Province", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kurdistan Province"], "entity_annotations": ["Kalatrazan District"], "answer_entity_name": null, "predicted_answer": "Kalatrazan District is located in Sanand", "extracted_entity": "Kalatrazan_District"}
{"question": "where is Daund located?", "answer": "Pune district", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pune district"], "entity_annotations": ["Daund"], "answer_entity_name": null, "predicted_answer": "Daund is located in the Pune district in the", "extracted_entity": "Daund"}
{"question": "where is Svitavy District located?", "answer": "Pardubice Region", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pardubice Region"], "entity_annotations": ["Svitavy District"], "answer_entity_name": null, "predicted_answer": "Svitavy District is located in the Pard", "extracted_entity": "Svitavy_District"}
{"question": "where is Museum of Contemporary Canadian Art located?", "answer": "Ontario", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ontario"], "entity_annotations": ["Museum of Contemporary Canadian Art"], "answer_entity_name": null, "predicted_answer": "The Museum of Contemporary Canadian Art is located in Toronto", "extracted_entity": "Museum_of_Contemporary_Canadian_Art"}
{"question": "where is Ghent University located?", "answer": "Ghent", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ghent"], "entity_annotations": ["Ghent University"], "answer_entity_name": null, "predicted_answer": "Ghent, Belgium", "extracted_entity": "Ghent_University"}
{"question": "where is City of Greater Shepparton located?", "answer": "Victoria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Victoria"], "entity_annotations": ["City of Greater Shepparton"], "answer_entity_name": null, "predicted_answer": "City of Greater Shepparton is located in the", "extracted_entity": "City_of_Greater_Shepparton"}
{"question": "where is Bras d'Or Lake located?", "answer": "Nova Scotia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nova Scotia"], "entity_annotations": ["Bras d'Or Lake"], "answer_entity_name": null, "predicted_answer": "Bras d'Or Lake is located in the center", "extracted_entity": "Bras_d'Or_Lake"}
{"question": "where is Garrison located?", "answer": "McLean County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["McLean County"], "entity_annotations": ["Garrison"], "answer_entity_name": null, "predicted_answer": "Garrison is located in the United Kingdom", "extracted_entity": "Garrison"}
{"question": "where is Nevis located?", "answer": "Hubbard County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hubbard County"], "entity_annotations": ["Nevis"], "answer_entity_name": null, "predicted_answer": "Nevis is located near the northern end of the", "extracted_entity": "Nevis"}
{"question": "where is Vr\u0161ovice located?", "answer": "Prague 10", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prague 10"], "entity_annotations": ["Vr\u0161ovice"], "answer_entity_name": null, "predicted_answer": "Vr\u0161ovice is located south-east of the", "extracted_entity": "Vr\u0161ovice"}
{"question": "who owns Purchasing?", "answer": "Reed Business Information", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reed Business Information"], "entity_annotations": ["Purchasing"], "answer_entity_name": null, "predicted_answer": "The Purchasing Department is an administrative unit that is", "extracted_entity": "Purchasing"}
{"question": "who owns Asylum Records?", "answer": "Warner Music Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Music Group"], "entity_annotations": ["Asylum Records"], "answer_entity_name": null, "predicted_answer": "Warner Music Group", "extracted_entity": "Asylum_Records"}
{"question": "who owns Virgin Galactic?", "answer": "Virgin Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Virgin Group"], "entity_annotations": ["Virgin Galactic"], "answer_entity_name": null, "predicted_answer": "irgin Galactic is an American spaceflight company founded by", "extracted_entity": "Virgin_Galactic"}
{"question": "who owns Walt Disney Pictures?", "answer": "The Walt Disney Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Walt Disney Company"], "entity_annotations": ["Walt Disney Pictures"], "answer_entity_name": null, "predicted_answer": "The Walt Disney Company", "extracted_entity": "Walt_Disney_Pictures"}
{"question": "who owns Bundesautobahn 1?", "answer": "Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germany"], "entity_annotations": ["Bundesautobahn 1"], "answer_entity_name": null, "predicted_answer": "The Bundesautobahn 1 is owned by", "extracted_entity": "Bundesautobahn_1"}
{"question": "who owns Marston Vale Line?", "answer": "Network Rail", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Network Rail"], "entity_annotations": ["Marston Vale Line"], "answer_entity_name": null, "predicted_answer": "arston Vale Line is owned by Marston Vale", "extracted_entity": "Marston_Vale_Line"}
{"question": "who owns Citizens Bank Park?", "answer": "Philadelphia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philadelphia"], "entity_annotations": ["Citizens Bank Park"], "answer_entity_name": null, "predicted_answer": "The Phillies and the Eagles", "extracted_entity": "Citizens_Bank_Park"}
{"question": "who owns Cyberport?", "answer": "Government of Hong Kong", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Government of Hong Kong"], "entity_annotations": ["Cyberport"], "answer_entity_name": null, "predicted_answer": "Cyberport is owned by the Hong Kong SAR Government", "extracted_entity": "Cyberport"}
{"question": "who owns FiveThirtyEight?", "answer": "ESPN", "dataset": "entity_questions", "split": "test", "answer_aliases": ["ESPN"], "entity_annotations": ["FiveThirtyEight"], "answer_entity_name": null, "predicted_answer": "ABC News", "extracted_entity": "FiveThirtyEight"}
{"question": "who owns Naval Group?", "answer": "Thales Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thales Group"], "entity_annotations": ["Naval Group"], "answer_entity_name": null, "predicted_answer": "Naval Group's two main shareholders are the French State", "extracted_entity": "Naval_Group"}
{"question": "who owns Headquarters of the United Nations?", "answer": "United Nations", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United Nations"], "entity_annotations": ["Headquarters of the United Nations"], "answer_entity_name": null, "predicted_answer": "The United Nations", "extracted_entity": "Headquarters_of_the_United_Nations"}
{"question": "who owns Central Park, Cowdenbeath?", "answer": "Cowdenbeath F.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cowdenbeath F.C."], "entity_annotations": ["Central Park, Cowdenbeath"], "answer_entity_name": null, "predicted_answer": "ntral Park is a multi-use stadium in Cowden", "extracted_entity": "Central_Park,_Cowdenbeath"}
{"question": "who owns Horizon Air?", "answer": "Alaska Air Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alaska Air Group"], "entity_annotations": ["Horizon Air"], "answer_entity_name": null, "predicted_answer": "Horizon Air is an American regional airline headquartered in Sea", "extracted_entity": "Horizon_Air"}
{"question": "who owns Pete Maravich Assembly Center?", "answer": "Louisiana State University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Louisiana State University"], "entity_annotations": ["Pete Maravich Assembly Center"], "answer_entity_name": null, "predicted_answer": "LSU owns Pete Maravich Assembly Center", "extracted_entity": "Pete_Maravich_Assembly_Center"}
{"question": "who owns TeenNick?", "answer": "ViacomCBS Domestic Media Networks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["ViacomCBS Domestic Media Networks"], "entity_annotations": ["TeenNick"], "answer_entity_name": null, "predicted_answer": "Paramount Media Networks", "extracted_entity": "TeenNick"}
{"question": "who owns Easter Road?", "answer": "Hibernian F.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hibernian F.C."], "entity_annotations": ["Easter Road"], "answer_entity_name": null, "predicted_answer": "Hibernian Football Club", "extracted_entity": "Easter_Road"}
{"question": "who owns Lufthansa Cargo?", "answer": "Lufthansa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lufthansa"], "entity_annotations": ["Lufthansa Cargo"], "answer_entity_name": null, "predicted_answer": "German cargo airline and a wholly owned subsidiary of L", "extracted_entity": "Lufthansa_Cargo"}
{"question": "who owns The Wall Street Journal Europe?", "answer": "Dow Jones & Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dow Jones & Company"], "entity_annotations": ["The Wall Street Journal Europe"], "answer_entity_name": null, "predicted_answer": "Dow Jones & Company, a News Corp company", "extracted_entity": "The_Wall_Street_Journal_Europe"}
{"question": "who owns PlayStation?", "answer": "Sony Interactive Entertainment", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sony Interactive Entertainment"], "entity_annotations": ["PlayStation"], "answer_entity_name": null, "predicted_answer": "Sony", "extracted_entity": "PlayStation"}
{"question": "who owns CBC Music?", "answer": "Canadian Broadcasting Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canadian Broadcasting Corporation"], "entity_annotations": ["CBC Music"], "answer_entity_name": null, "predicted_answer": "The Canadian Broadcasting Corporation owns CBC Music.", "extracted_entity": "CBC_Music"}
{"question": "who owns Village Roadshow Pictures?", "answer": "Village Roadshow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Village Roadshow"], "entity_annotations": ["Village Roadshow Pictures"], "answer_entity_name": null, "predicted_answer": "Village Roadshow Pictures is owned by Village Roadshow", "extracted_entity": "Village_Roadshow_Pictures"}
{"question": "who owns Celtic Park?", "answer": "Derry GAA", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Derry GAA"], "entity_annotations": ["Celtic Park"], "answer_entity_name": null, "predicted_answer": "The club owns the stadium", "extracted_entity": "Celtic_Park"}
{"question": "who owns Miller Park?", "answer": "Milwaukee Brewers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milwaukee Brewers"], "entity_annotations": ["Miller Park"], "answer_entity_name": null, "predicted_answer": "The Milwaukee Brewers", "extracted_entity": "Miller_Park"}
{"question": "who owns Downtown Tunnel?", "answer": "Virginia Department of Transportation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Virginia Department of Transportation"], "entity_annotations": ["Downtown Tunnel"], "answer_entity_name": null, "predicted_answer": "The Virginia Department of Transportation (VDOT).", "extracted_entity": "Downtown_Tunnel"}
{"question": "who owns Die Welt?", "answer": "Axel Springer SE", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Axel Springer SE"], "entity_annotations": ["Die Welt"], "answer_entity_name": null, "predicted_answer": "Axel Springer", "extracted_entity": "Die_Welt"}
{"question": "who owns Fort Lauderdale\u2013Hollywood International Airport?", "answer": "Broward County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Broward County"], "entity_annotations": ["Fort Lauderdale\u2013Hollywood International Airport"], "answer_entity_name": null, "predicted_answer": "the airport is owned by Broward County", "extracted_entity": "Fort_Lauderdale\u2013Hollywood_International_Airport"}
{"question": "who owns Robert K. Kraft Field at Lawrence A. Wien Stadium?", "answer": "Columbia University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia University"], "entity_annotations": ["Robert K. Kraft Field at Lawrence A. Wien Stadium"], "answer_entity_name": null, "predicted_answer": "Columbia University", "extracted_entity": "Robert_K._Kraft_Field_at_Lawrence_A._Wien_Stadium"}
{"question": "who owns Winnipeg Route 85?", "answer": "Winnipeg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Winnipeg"], "entity_annotations": ["Winnipeg Route 85"], "answer_entity_name": null, "predicted_answer": "The province of Manitoba owns and maintains Winnipeg Route", "extracted_entity": "Winnipeg_Route_85"}
{"question": "who owns Wizards of the Coast?", "answer": "Hasbro, Inc.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hasbro, Inc."], "entity_annotations": ["Wizards of the Coast"], "answer_entity_name": null, "predicted_answer": "Hasbro", "extracted_entity": "Wizards_of_the_Coast"}
{"question": "who owns Walla!?", "answer": "Bezeq", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bezeq"], "entity_annotations": ["Walla!"], "answer_entity_name": null, "predicted_answer": "Hudson's Bay Company", "extracted_entity": "Walla!"}
{"question": "who owns Oracle Hyperion?", "answer": "Oracle Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oracle Corporation"], "entity_annotations": ["Oracle Hyperion"], "answer_entity_name": null, "predicted_answer": "Oracle Corporation", "extracted_entity": "Oracle_Hyperion"}
{"question": "who owns Bundesautobahn 7?", "answer": "Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germany"], "entity_annotations": ["Bundesautobahn 7"], "answer_entity_name": null, "predicted_answer": "Federal Republic of Germany", "extracted_entity": "Bundesautobahn_7"}
{"question": "who owns Tales of Suspense?", "answer": "Marvel Comics", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Marvel Comics"], "entity_annotations": ["Tales of Suspense"], "answer_entity_name": null, "predicted_answer": "Stan Lee, Larry Lieber, Jack Kirby,", "extracted_entity": "Tales_of_Suspense"}
{"question": "who owns Zdzis\u0142aw Krzyszkowiak Stadium?", "answer": "Bydgoszcz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bydgoszcz"], "entity_annotations": ["Zdzis\u0142aw Krzyszkowiak Stadium"], "answer_entity_name": null, "predicted_answer": "Zdzis\u0142aw Krzyszkowiak", "extracted_entity": "Zdzis\u0142aw_Krzyszkowiak_Stadium"}
{"question": "who owns Kezar Stadium?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["Kezar Stadium"], "answer_entity_name": null, "predicted_answer": "Kezar Stadium is owned by the City and County", "extracted_entity": "Kezar_Stadium"}
{"question": "who owns National Postal Museum?", "answer": "Smithsonian Institution", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Smithsonian Institution"], "entity_annotations": ["National Postal Museum"], "answer_entity_name": null, "predicted_answer": "Smithsonian Institution", "extracted_entity": "National_Postal_Museum"}
{"question": "who owns White Sewing Machine Company?", "answer": "Electrolux", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Electrolux"], "entity_annotations": ["White Sewing Machine Company"], "answer_entity_name": null, "predicted_answer": "Electrolux", "extracted_entity": "White_Sewing_Machine_Company"}
{"question": "who owns ABC News?", "answer": "Australian Broadcasting Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Australian Broadcasting Corporation"], "entity_annotations": ["ABC News"], "answer_entity_name": null, "predicted_answer": "The Walt Disney Company", "extracted_entity": "ABC_News"}
{"question": "who owns World Memorial Hall?", "answer": "K\u014dbe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["K\u014dbe"], "entity_annotations": ["World Memorial Hall"], "answer_entity_name": null, "predicted_answer": "Kobe City", "extracted_entity": "World_Memorial_Hall"}
{"question": "who owns Estadio Chamart\u00edn?", "answer": "Real Madrid CF", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Real Madrid CF"], "entity_annotations": ["Estadio Chamart\u00edn"], "answer_entity_name": null, "predicted_answer": "Estadio Chamart\u00edn was a multi-use stadium", "extracted_entity": "Estadio_Chamart\u00edn"}
{"question": "who owns WWE Network?", "answer": "WWE", "dataset": "entity_questions", "split": "test", "answer_aliases": ["WWE"], "entity_annotations": ["WWE Network"], "answer_entity_name": null, "predicted_answer": "American professional wrestling promotion WWE", "extracted_entity": "WWE_Network"}
{"question": "who owns Longman?", "answer": "Pearson plc", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pearson plc"], "entity_annotations": ["Longman"], "answer_entity_name": null, "predicted_answer": "Pearson PLC", "extracted_entity": "Longman"}
{"question": "who owns Agere Systems?", "answer": "LSI Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["LSI Corporation"], "entity_annotations": ["Agere Systems"], "answer_entity_name": null, "predicted_answer": "gere Systems Agere Systems, Inc. was", "extracted_entity": "Agere_Systems"}
{"question": "who owns Rotten Tomatoes?", "answer": "Warner Bros.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Bros."], "entity_annotations": ["Rotten Tomatoes"], "answer_entity_name": null, "predicted_answer": "Rotten Tomatoes has been owned by Flix", "extracted_entity": "Rotten_Tomatoes"}
{"question": "who owns Picton Castle?", "answer": "Philipps baronets", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philipps baronets"], "entity_annotations": ["Picton Castle"], "answer_entity_name": null, "predicted_answer": "the Picton Castle Trust", "extracted_entity": "Picton_Castle"}
{"question": "who owns Frankfurt Airport?", "answer": "Fraport", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fraport"], "entity_annotations": ["Frankfurt Airport"], "answer_entity_name": null, "predicted_answer": "Frankfurt Airport is owned by Fraport", "extracted_entity": "Frankfurt_Airport"}
{"question": "who owns Northampton Castle?", "answer": "Simon I de Senlis, Earl of Huntingdon-Northampton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Simon I de Senlis, Earl of Huntingdon-Northampton"], "entity_annotations": ["Northampton Castle"], "answer_entity_name": null, "predicted_answer": "The castle was built under the stewardship of Simon", "extracted_entity": "Northampton_Castle"}
{"question": "who owns Bloomfield Road?", "answer": "Blackpool F.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Blackpool F.C."], "entity_annotations": ["Bloomfield Road"], "answer_entity_name": null, "predicted_answer": "Gamble", "extracted_entity": "Bloomfield_Road"}
{"question": "who owns TNK-BP?", "answer": "Rosneft", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rosneft"], "entity_annotations": ["TNK-BP"], "answer_entity_name": null, "predicted_answer": "it is owned by AAR and BP", "extracted_entity": "TNK-BP"}
{"question": "who owns West Coast Main Line?", "answer": "Network Rail", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Network Rail"], "entity_annotations": ["West Coast Main Line"], "answer_entity_name": null, "predicted_answer": "West Coast Main Line is owned by Network Rail.", "extracted_entity": "West_Coast_Main_Line"}
{"question": "who owns National Geographic?", "answer": "National Geographic Society", "dataset": "entity_questions", "split": "test", "answer_aliases": ["National Geographic Society"], "entity_annotations": ["National Geographic"], "answer_entity_name": null, "predicted_answer": "e Walt Disney Company", "extracted_entity": "National_Geographic"}
{"question": "who owns Murrayfield Stadium?", "answer": "Scottish Rugby Union", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Scottish Rugby Union"], "entity_annotations": ["Murrayfield Stadium"], "answer_entity_name": null, "predicted_answer": "Murrayfield Stadium is owned by the Scottish Rugby Union", "extracted_entity": "Murrayfield_Stadium"}
{"question": "who owns World of Coca-Cola?", "answer": "The Coca-Cola Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Coca-Cola Company"], "entity_annotations": ["World of Coca-Cola"], "answer_entity_name": null, "predicted_answer": "The Coca-Cola Company", "extracted_entity": "World_of_Coca-Cola"}
{"question": "who owns Sapporo Dome?", "answer": "Sapporo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sapporo"], "entity_annotations": ["Sapporo Dome"], "answer_entity_name": null, "predicted_answer": "Sapporo Dome is owned by Sapporo", "extracted_entity": "Sapporo_Dome"}
{"question": "who owns Yankee Stadium?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Yankee Stadium"], "answer_entity_name": null, "predicted_answer": "New York Yankees", "extracted_entity": "Yankee_Stadium"}
{"question": "who owns Johnnie Walker?", "answer": "Diageo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Diageo"], "entity_annotations": ["Johnnie Walker"], "answer_entity_name": null, "predicted_answer": "Diageo", "extracted_entity": "Johnnie_Walker"}
{"question": "who owns Mark Taper Forum?", "answer": "Los Angeles Music Center", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles Music Center"], "entity_annotations": ["Mark Taper Forum"], "answer_entity_name": null, "predicted_answer": "Mark Taper Forum is owned by Center Theatre Group", "extracted_entity": "Mark_Taper_Forum"}
{"question": "who owns Gotthard Road Tunnel?", "answer": "Switzerland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Switzerland"], "entity_annotations": ["Gotthard Road Tunnel"], "answer_entity_name": null, "predicted_answer": "Gotthard Road Tunnel is owned by the", "extracted_entity": "Gotthard_Road_Tunnel"}
{"question": "who owns Mile High Stadium?", "answer": "New Orleans Baby Cakes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Orleans Baby Cakes"], "entity_annotations": ["Mile High Stadium"], "answer_entity_name": null, "predicted_answer": "The stadium was owned by the City of Denver.", "extracted_entity": "Mile_High_Stadium"}
{"question": "who owns Sanford Stadium?", "answer": "University of Georgia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Georgia"], "entity_annotations": ["Sanford Stadium"], "answer_entity_name": null, "predicted_answer": "University of Georgia", "extracted_entity": "Sanford_Stadium"}
{"question": "who owns Fox Business Network?", "answer": "Fox Entertainment Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fox Entertainment Group"], "entity_annotations": ["Fox Business Network"], "answer_entity_name": null, "predicted_answer": "Rupert Murdoch", "extracted_entity": "Fox_Business_Network"}
{"question": "who owns Rhode Island Route 114?", "answer": "Rhode Island Department of Transportation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rhode Island Department of Transportation"], "entity_annotations": ["Rhode Island Route 114"], "answer_entity_name": null, "predicted_answer": "Rhode Island Route 114 is a numbered state highway", "extracted_entity": "Rhode_Island_Route_114"}
{"question": "who owns Lord & Taylor?", "answer": "Hudson's Bay Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hudson's Bay Company"], "entity_annotations": ["Lord & Taylor"], "answer_entity_name": null, "predicted_answer": "The company was acquired by Hudson's Bay Company in", "extracted_entity": "Lord_&_Taylor"}
{"question": "who owns Celebrity Cruises?", "answer": "Royal Caribbean International", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Royal Caribbean International"], "entity_annotations": ["Celebrity Cruises"], "answer_entity_name": null, "predicted_answer": "Celebrity Cruises is a cruise line headquartered in Miami", "extracted_entity": "Celebrity_Cruises"}
{"question": "who owns Denver Broncos?", "answer": "Pat Bowlen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pat Bowlen"], "entity_annotations": ["Denver Broncos"], "answer_entity_name": null, "predicted_answer": "n-Penner group", "extracted_entity": "Denver_Broncos"}
{"question": "who owns Cerrej\u00f3n?", "answer": "Colombia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Colombia"], "entity_annotations": ["Cerrej\u00f3n"], "answer_entity_name": null, "predicted_answer": "Glencore", "extracted_entity": "Cerrej\u00f3n"}
{"question": "who owns United Launch Alliance?", "answer": "Boeing", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Boeing"], "entity_annotations": ["United Launch Alliance"], "answer_entity_name": null, "predicted_answer": "United Launch Alliance is a joint venture between Lockheed Martin", "extracted_entity": "United_Launch_Alliance"}
{"question": "who owns Saturn Corporation?", "answer": "General Motors", "dataset": "entity_questions", "split": "test", "answer_aliases": ["General Motors"], "entity_annotations": ["Saturn Corporation"], "answer_entity_name": null, "predicted_answer": "General Motors.", "extracted_entity": "Saturn_Corporation"}
{"question": "who owns Pentium III?", "answer": "Intel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Intel"], "entity_annotations": ["Pentium III"], "answer_entity_name": null, "predicted_answer": "Intel", "extracted_entity": "Pentium_III"}
{"question": "who owns Bank of America Stadium?", "answer": "Carolina Panthers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carolina Panthers"], "entity_annotations": ["Bank of America Stadium"], "answer_entity_name": null, "predicted_answer": "Bank of America", "extracted_entity": "Bank_of_America_Stadium"}
{"question": "who owns Stadio Artemio Franchi?", "answer": "Florence", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florence"], "entity_annotations": ["Stadio Artemio Franchi"], "answer_entity_name": null, "predicted_answer": "ACF Fiorentina", "extracted_entity": "Stadio_Artemio_Franchi"}
{"question": "who owns Castel Nuovo?", "answer": "Charles I of Naples", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles I of Naples"], "entity_annotations": ["Castel Nuovo"], "answer_entity_name": null, "predicted_answer": "The city of Naples.", "extracted_entity": "Castel_Nuovo"}
{"question": "who owns Rio Tinto Stadium?", "answer": "Salt Lake County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Salt Lake County"], "entity_annotations": ["Rio Tinto Stadium"], "answer_entity_name": null, "predicted_answer": "Rio Tinto Stadium is owned by Real Salt Lake", "extracted_entity": "Rio_Tinto_Stadium"}
{"question": "who owns Kazakhstan Temir Zholy?", "answer": "Kazakhstan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kazakhstan"], "entity_annotations": ["Kazakhstan Temir Zholy"], "answer_entity_name": null, "predicted_answer": "The state owns 100% of the shares of", "extracted_entity": "Kazakhstan_Temir_Zholy"}
{"question": "who owns Fairy?", "answer": "Procter & Gamble", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Procter & Gamble"], "entity_annotations": ["Fairy"], "answer_entity_name": null, "predicted_answer": "Fairy is owned by Procter & Gamble.", "extracted_entity": "Fairy"}
{"question": "who owns Hallmark Channel?", "answer": "Crown Media Holdings", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Crown Media Holdings"], "entity_annotations": ["Hallmark Channel"], "answer_entity_name": null, "predicted_answer": "Hallmark Cards", "extracted_entity": "Hallmark_Channel"}
{"question": "who owns Super \u00c9cran?", "answer": "Bell Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bell Media"], "entity_annotations": ["Super \u00c9cran"], "answer_entity_name": null, "predicted_answer": "Bell Media", "extracted_entity": "Super_\u00c9cran"}
{"question": "who owns Puma SE?", "answer": "Kering", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kering"], "entity_annotations": ["Puma SE"], "answer_entity_name": null, "predicted_answer": "Puma SE is owned by the Dassler", "extracted_entity": "Puma_SE"}
{"question": "who owns Pacific Central Station?", "answer": "Via Rail", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Via Rail"], "entity_annotations": ["Pacific Central Station"], "answer_entity_name": null, "predicted_answer": "Pacific Central Station is owned by Via Rail.", "extracted_entity": "Pacific_Central_Station"}
{"question": "who owns Nigger?", "answer": "Guy Gibson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guy Gibson"], "entity_annotations": ["Nigger"], "answer_entity_name": null, "predicted_answer": "The author of the text", "extracted_entity": "Nigger"}
{"question": "who owns RecordTV?", "answer": "Grupo Record", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Grupo Record"], "entity_annotations": ["RecordTV"], "answer_entity_name": null, "predicted_answer": "Grupo Record", "extracted_entity": "RecordTV"}
{"question": "who owns Castrol?", "answer": "BP", "dataset": "entity_questions", "split": "test", "answer_aliases": ["BP"], "entity_annotations": ["Castrol"], "answer_entity_name": null, "predicted_answer": "BP", "extracted_entity": "Castrol"}
{"question": "who owns Dowdy\u2013Ficklen Stadium?", "answer": "East Carolina University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["East Carolina University"], "entity_annotations": ["Dowdy\u2013Ficklen Stadium"], "answer_entity_name": null, "predicted_answer": "East Carolina University", "extracted_entity": "Dowdy\u2013Ficklen_Stadium"}
{"question": "who owns Fort Stanwix?", "answer": "National Park Service", "dataset": "entity_questions", "split": "test", "answer_aliases": ["National Park Service"], "entity_annotations": ["Fort Stanwix"], "answer_entity_name": null, "predicted_answer": "National Park Service", "extracted_entity": "Fort_Stanwix"}
{"question": "who owns Wolfram Alpha?", "answer": "Wolfram Research", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wolfram Research"], "entity_annotations": ["Wolfram Alpha"], "answer_entity_name": null, "predicted_answer": "Stephen Wolfram owns Wolfram Alpha.", "extracted_entity": "Wolfram_Alpha"}
{"question": "who owns Charlton Athletic F.C.?", "answer": "Roland Duch\u00e2telet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Roland Duch\u00e2telet"], "entity_annotations": ["Charlton Athletic F.C."], "answer_entity_name": null, "predicted_answer": "Charlton Athletic F.C. is owned by Charl", "extracted_entity": "Charlton_Athletic_F.C."}
{"question": "who owns Cognos?", "answer": "IBM", "dataset": "entity_questions", "split": "test", "answer_aliases": ["IBM"], "entity_annotations": ["Cognos"], "answer_entity_name": null, "predicted_answer": "IBM", "extracted_entity": "Cognos"}
{"question": "who owns Studio 54?", "answer": "Roundabout Theatre Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Roundabout Theatre Company", "Ian Schrager", "Steve Rubell"], "entity_annotations": ["Studio 54"], "answer_entity_name": null, "predicted_answer": "Roundabout Theatre Company", "extracted_entity": "Studio_54"}
{"question": "who owns Cliftonhill?", "answer": "Albion Rovers F.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Albion Rovers F.C."], "entity_annotations": ["Cliftonhill"], "answer_entity_name": null, "predicted_answer": "Albion Rovers F.C.", "extracted_entity": "Cliftonhill"}
{"question": "who owns \u0160tadi\u00f3n pod Zoborom?", "answer": "FC Nitra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["FC Nitra"], "entity_annotations": ["\u0160tadi\u00f3n pod Zoborom"], "answer_entity_name": null, "predicted_answer": "The stadium is owned by the city of Nitra", "extracted_entity": "\u0160tadi\u00f3n_pod_Zoborom"}
{"question": "who owns Coliseum Alfonso P\u00e9rez?", "answer": "Getafe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Getafe"], "entity_annotations": ["Coliseum Alfonso P\u00e9rez"], "answer_entity_name": null, "predicted_answer": "municipally-owned", "extracted_entity": "Coliseum_Alfonso_P\u00e9rez"}
{"question": "who owns U.S. Route 27 in Michigan?", "answer": "Michigan Department of Transportation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michigan Department of Transportation"], "entity_annotations": ["U.S. Route 27 in Michigan"], "answer_entity_name": null, "predicted_answer": "the US Highway System", "extracted_entity": "U.S._Route_27_in_Michigan"}
{"question": "who owns Annapurna Studios?", "answer": "Akkineni Nagarjuna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Akkineni Nagarjuna"], "entity_annotations": ["Annapurna Studios"], "answer_entity_name": null, "predicted_answer": "he actor Akkineni Nageswara Rao", "extracted_entity": "Annapurna_Studios"}
{"question": "who owns Circuit de la Sarthe?", "answer": "Le Mans", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Le Mans", "Automobile Club de l'Ouest"], "entity_annotations": ["Circuit de la Sarthe"], "answer_entity_name": null, "predicted_answer": "Circuit de la Sarthe is owned by Automobile Club", "extracted_entity": "Circuit_de_la_Sarthe"}
{"question": "who owns The State Journal-Register?", "answer": "GateHouse Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["GateHouse Media"], "entity_annotations": ["The State Journal-Register"], "answer_entity_name": null, "predicted_answer": "GateHouse Media", "extracted_entity": "The_State_Journal-Register"}
{"question": "who owns Interstate 696?", "answer": "Michigan Department of Transportation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michigan Department of Transportation"], "entity_annotations": ["Interstate 696"], "answer_entity_name": null, "predicted_answer": "The Michigan Department of Transportation owns Interstate 696.", "extracted_entity": "Interstate_696"}
{"question": "who owns Colas Rail?", "answer": "Colas Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Colas Group"], "entity_annotations": ["Colas Rail"], "answer_entity_name": null, "predicted_answer": "Bouygues", "extracted_entity": "Colas_Rail"}
{"question": "who owns La Libre Parole?", "answer": "\u00c9douard Drumont", "dataset": "entity_questions", "split": "test", "answer_aliases": ["\u00c9douard Drumont"], "entity_annotations": ["La Libre Parole"], "answer_entity_name": null, "predicted_answer": "La Libre Parole was founded by journalist and pole", "extracted_entity": "La_Libre_Parole"}
{"question": "who owns Irish Distillers?", "answer": "Pernod Ricard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pernod Ricard"], "entity_annotations": ["Irish Distillers"], "answer_entity_name": null, "predicted_answer": "French drinks conglomerate Pernod Ricard.", "extracted_entity": "Irish_Distillers"}
{"question": "who owns Brussels-South railway station?", "answer": "SNCB/NMBS", "dataset": "entity_questions", "split": "test", "answer_aliases": ["SNCB/NMBS"], "entity_annotations": ["Brussels-South railway station"], "answer_entity_name": null, "predicted_answer": "e Belgian state", "extracted_entity": "Brussels-South_railway_station"}
{"question": "who owns TechTV?", "answer": "Ziff Davis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ziff Davis"], "entity_annotations": ["TechTV"], "answer_entity_name": null, "predicted_answer": "Vulcan Ventures", "extracted_entity": "TechTV"}
{"question": "who owns Pantin?", "answer": "SNCF", "dataset": "entity_questions", "split": "test", "answer_aliases": ["SNCF"], "entity_annotations": ["Pantin"], "answer_entity_name": null, "predicted_answer": "The French state owns Pantin.", "extracted_entity": "Pantin"}
{"question": "who owns Liacouras Center?", "answer": "Temple University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Temple University"], "entity_annotations": ["Liacouras Center"], "answer_entity_name": null, "predicted_answer": "Temple University", "extracted_entity": "Liacouras_Center"}
{"question": "who owns Edinburgh Waverley railway station?", "answer": "Network Rail", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Network Rail"], "entity_annotations": ["Edinburgh Waverley railway station"], "answer_entity_name": null, "predicted_answer": "the station is owned by Network Rail", "extracted_entity": "Edinburgh_Waverley_railway_station"}
{"question": "who owns Credito Italiano?", "answer": "UniCredit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["UniCredit"], "entity_annotations": ["Credito Italiano"], "answer_entity_name": null, "predicted_answer": "UniCredit", "extracted_entity": "Credito_Italiano"}
{"question": "who owns Boston Dynamics?", "answer": "Google", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Google"], "entity_annotations": ["Boston Dynamics"], "answer_entity_name": null, "predicted_answer": "Hyundai Motor Group", "extracted_entity": "Boston_Dynamics"}
{"question": "who owns Rogers Place?", "answer": "Edmonton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edmonton"], "entity_annotations": ["Rogers Place"], "answer_entity_name": null, "predicted_answer": "the Katz Group", "extracted_entity": "Rogers_Place"}
{"question": "who owns Leicester City F.C.?", "answer": "King Power", "dataset": "entity_questions", "split": "test", "answer_aliases": ["King Power"], "entity_annotations": ["Leicester City F.C."], "answer_entity_name": null, "predicted_answer": "King Power", "extracted_entity": "Leicester_City_F.C."}
{"question": "who owns ABC Daytime?", "answer": "The Walt Disney Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Walt Disney Company"], "entity_annotations": ["ABC Daytime"], "answer_entity_name": null, "predicted_answer": "ABC Daytime is a division responsible for the daytime", "extracted_entity": "ABC_Daytime"}
{"question": "who owns Schuylkill Expressway?", "answer": "Pennsylvania Department of Transportation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pennsylvania Department of Transportation"], "entity_annotations": ["Schuylkill Expressway"], "answer_entity_name": null, "predicted_answer": "Pennsylvania Department of Transportation", "extracted_entity": "Schuylkill_Expressway"}
{"question": "who owns Dunvegan Castle?", "answer": "Clan MacLeod", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clan MacLeod"], "entity_annotations": ["Dunvegan Castle"], "answer_entity_name": null, "predicted_answer": "the MacLeod of MacLeod, chief of the", "extracted_entity": "Dunvegan_Castle"}
{"question": "who owns Vale Park?", "answer": "Port Vale F.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Port Vale F.C."], "entity_annotations": ["Vale Park"], "answer_entity_name": null, "predicted_answer": "Port Vale F.C.", "extracted_entity": "Vale_Park"}
{"question": "who owns Hallmark Channel?", "answer": "NBCUniversal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["NBCUniversal"], "entity_annotations": ["Hallmark Channel"], "answer_entity_name": null, "predicted_answer": "Hallmark Media, a subsidiary of Hallmark Cards", "extracted_entity": "Hallmark_Channel"}
{"question": "who owns New Town Plaza?", "answer": "Sun Hung Kai Properties Limited", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sun Hung Kai Properties Limited"], "entity_annotations": ["New Town Plaza"], "answer_entity_name": null, "predicted_answer": "Sun Hung Kai Properties", "extracted_entity": "New_Town_Plaza"}
{"question": "who owns Beagle?", "answer": "Port Authority of Allegheny County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Port Authority of Allegheny County"], "entity_annotations": ["Beagle"], "answer_entity_name": null, "predicted_answer": "the Beagle is owned by the United States", "extracted_entity": "Beagle"}
{"question": "who owns Durham Bulls Athletic Park?", "answer": "Durham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Durham"], "entity_annotations": ["Durham Bulls Athletic Park"], "answer_entity_name": null, "predicted_answer": "The Durham Bulls Athletic Park is owned by the Durham", "extracted_entity": "Durham_Bulls_Athletic_Park"}
{"question": "who owns Princess Cruises?", "answer": "Carnival Corporation & plc", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carnival Corporation & plc"], "entity_annotations": ["Princess Cruises"], "answer_entity_name": null, "predicted_answer": "Carnival Corporation & plc", "extracted_entity": "Princess_Cruises"}
{"question": "who owns Volcom?", "answer": "Kering", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kering"], "entity_annotations": ["Volcom"], "answer_entity_name": null, "predicted_answer": "Kering", "extracted_entity": "Volcom"}
{"question": "who owns Star-News?", "answer": "GateHouse Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["GateHouse Media"], "entity_annotations": ["Star-News"], "answer_entity_name": null, "predicted_answer": "New Media Investment Group", "extracted_entity": "Star-News"}
{"question": "who owns Stanford Stadium?", "answer": "Stanford University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stanford University"], "entity_annotations": ["Stanford Stadium"], "answer_entity_name": null, "predicted_answer": "Stanford University", "extracted_entity": "Stanford_Stadium"}
{"question": "who owns Ram Trucks?", "answer": "Fiat Chrysler Automobiles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fiat Chrysler Automobiles"], "entity_annotations": ["Ram Trucks"], "answer_entity_name": null, "predicted_answer": "Stellantis", "extracted_entity": "Ram_Trucks"}
{"question": "who owns The Daily Beast?", "answer": "IAC", "dataset": "entity_questions", "split": "test", "answer_aliases": ["IAC"], "entity_annotations": ["The Daily Beast"], "answer_entity_name": null, "predicted_answer": "IAC Inc.", "extracted_entity": "The_Daily_Beast"}
{"question": "who owns Rizospastis?", "answer": "Communist Party of Greece", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Communist Party of Greece"], "entity_annotations": ["Rizospastis"], "answer_entity_name": null, "predicted_answer": "The Communist Party of Greece.", "extracted_entity": "Rizospastis"}
{"question": "who owns Parlophone?", "answer": "Warner Music Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Music Group"], "entity_annotations": ["Parlophone"], "answer_entity_name": null, "predicted_answer": "Universal Music Group", "extracted_entity": "Parlophone"}
{"question": "who owns Playboy Records?", "answer": "Playboy Enterprises", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Playboy Enterprises"], "entity_annotations": ["Playboy Records"], "answer_entity_name": null, "predicted_answer": "Playboy Enterprises", "extracted_entity": "Playboy_Records"}
{"question": "who owns Charoen Pokphand?", "answer": "Dhanin Chearavanont", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dhanin Chearavanont"], "entity_annotations": ["Charoen Pokphand"], "answer_entity_name": null, "predicted_answer": "Charoen Pokphand The Charoen Pokph", "extracted_entity": "Charoen_Pokphand"}
{"question": "who owns Kessler Field?", "answer": "Monmouth University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Monmouth University"], "entity_annotations": ["Kessler Field"], "answer_entity_name": null, "predicted_answer": "Kessler Field is owned by the Monmouth University", "extracted_entity": "Kessler_Field"}
{"question": "who owns Lysol?", "answer": "Reckitt Benckiser", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reckitt Benckiser"], "entity_annotations": ["Lysol"], "answer_entity_name": null, "predicted_answer": "Reckitt", "extracted_entity": "Lysol"}
{"question": "who owns Prussian Homage?", "answer": "Poland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Poland"], "entity_annotations": ["Prussian Homage"], "answer_entity_name": null, "predicted_answer": "Prussian Homage is owned by Prussia", "extracted_entity": "Prussian_Homage"}
{"question": "who owns Winnipeg Sun?", "answer": "Postmedia Network", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Postmedia Network"], "entity_annotations": ["Winnipeg Sun"], "answer_entity_name": null, "predicted_answer": "Postmedia", "extracted_entity": "Winnipeg_Sun"}
{"question": "who owns Ferrell Center?", "answer": "Baylor University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Baylor University"], "entity_annotations": ["Ferrell Center"], "answer_entity_name": null, "predicted_answer": "aylor University", "extracted_entity": "Ferrell_Center"}
{"question": "who owns Aftenposten?", "answer": "Schibsted", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Schibsted"], "entity_annotations": ["Aftenposten"], "answer_entity_name": null, "predicted_answer": "chibsted", "extracted_entity": "Aftenposten"}
{"question": "who owns MTA Regional Bus Operations?", "answer": "Metropolitan Transportation Authority", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Metropolitan Transportation Authority"], "entity_annotations": ["MTA Regional Bus Operations"], "answer_entity_name": null, "predicted_answer": "Metropolitan Transportation Authority (MTA).", "extracted_entity": "MTA_Regional_Bus_Operations"}
{"question": "who owns BNN Bloomberg?", "answer": "Bell Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bell Media"], "entity_annotations": ["BNN Bloomberg"], "answer_entity_name": null, "predicted_answer": "Bell Media", "extracted_entity": "BNN_Bloomberg"}
{"question": "who owns New York Stadium?", "answer": "Rotherham United F.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rotherham United F.C."], "entity_annotations": ["New York Stadium"], "answer_entity_name": null, "predicted_answer": "Rotherham United", "extracted_entity": "New_York_Stadium"}
{"question": "who owns Paris-Soir?", "answer": "Jean Prouvost", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jean Prouvost"], "entity_annotations": ["Paris-Soir"], "answer_entity_name": null, "predicted_answer": "Jean Prouvost", "extracted_entity": "Paris-Soir"}
{"question": "who owns BMW Motorrad?", "answer": "Arman Ansari", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arman Ansari"], "entity_annotations": ["BMW Motorrad"], "answer_entity_name": null, "predicted_answer": "BMW", "extracted_entity": "BMW_Motorrad"}
{"question": "who owns The Australian?", "answer": "News Corp Australia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["News Corp Australia"], "entity_annotations": ["The Australian"], "answer_entity_name": null, "predicted_answer": "News Corp Australia", "extracted_entity": "The_Australian"}
{"question": "who owns Woodfield Mall?", "answer": "CalPERS", "dataset": "entity_questions", "split": "test", "answer_aliases": ["CalPERS"], "entity_annotations": ["Woodfield Mall"], "answer_entity_name": null, "predicted_answer": "Taubman Centers", "extracted_entity": "Woodfield_Mall"}
{"question": "who owns Exxon?", "answer": "ExxonMobil", "dataset": "entity_questions", "split": "test", "answer_aliases": ["ExxonMobil"], "entity_annotations": ["Exxon"], "answer_entity_name": null, "predicted_answer": "ExxonMobil Corporation", "extracted_entity": "Exxon"}
{"question": "who owns George Bush Intercontinental Airport?", "answer": "Houston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Houston"], "entity_annotations": ["George Bush Intercontinental Airport"], "answer_entity_name": null, "predicted_answer": "a group of Houston businessmen", "extracted_entity": "George_Bush_Intercontinental_Airport"}
{"question": "who owns Raglan Castle?", "answer": "Cadw", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cadw"], "entity_annotations": ["Raglan Castle"], "answer_entity_name": null, "predicted_answer": "Raglan Castle is owned by the National Trust", "extracted_entity": "Raglan_Castle"}
{"question": "who owns Sky Witness?", "answer": "Sky", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sky"], "entity_annotations": ["Sky Witness"], "answer_entity_name": null, "predicted_answer": "Sky", "extracted_entity": "Sky_Witness"}
{"question": "who owns Rungrado 1st of May Stadium?", "answer": "North Korea", "dataset": "entity_questions", "split": "test", "answer_aliases": ["North Korea"], "entity_annotations": ["Rungrado 1st of May Stadium"], "answer_entity_name": null, "predicted_answer": "North Korea", "extracted_entity": "Rungrado_1st_of_May_Stadium"}
{"question": "who owns Charles Koch Arena?", "answer": "Wichita State University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wichita State University"], "entity_annotations": ["Charles Koch Arena"], "answer_entity_name": null, "predicted_answer": "Charles Koch", "extracted_entity": "Charles_Koch_Arena"}
{"question": "who owns The Forum of Fargo-Moorhead?", "answer": "Forum Communications", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Forum Communications"], "entity_annotations": ["The Forum of Fargo-Moorhead"], "answer_entity_name": null, "predicted_answer": "Forum Communications", "extracted_entity": "The_Forum_of_Fargo-Moorhead"}
{"question": "who owns Roos Field?", "answer": "Eastern Washington University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eastern Washington University"], "entity_annotations": ["Roos Field"], "answer_entity_name": null, "predicted_answer": "Eastern Washington University", "extracted_entity": "Roos_Field"}
{"question": "who owns Bild?", "answer": "Axel Springer SE", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Axel Springer SE"], "entity_annotations": ["Bild"], "answer_entity_name": null, "predicted_answer": "Axel Springer SE", "extracted_entity": "Bild"}
{"question": "who owns South Western Main Line?", "answer": "Network Rail", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Network Rail"], "entity_annotations": ["South Western Main Line"], "answer_entity_name": null, "predicted_answer": "Network Rail", "extracted_entity": "South_Western_Main_Line"}
{"question": "who owns Phoenix Mercury?", "answer": "Robert Sarver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robert Sarver"], "entity_annotations": ["Phoenix Mercury"], "answer_entity_name": null, "predicted_answer": "The Phoenix Mercury is owned by Robert Sarver.", "extracted_entity": "Phoenix_Mercury"}
{"question": "who owns Nerf?", "answer": "Hasbro, Inc.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hasbro, Inc."], "entity_annotations": ["Nerf"], "answer_entity_name": null, "predicted_answer": "Hasbro", "extracted_entity": "Nerf"}
{"question": "who owns Santa Clara Broncos?", "answer": "Santa Clara University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Santa Clara University"], "entity_annotations": ["Santa Clara Broncos"], "answer_entity_name": null, "predicted_answer": "Santa Clara Broncos is a brand owned by Santa Clara", "extracted_entity": "Santa_Clara_Broncos"}
{"question": "who owns Sky Sports F1?", "answer": "Sky", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sky"], "entity_annotations": ["Sky Sports F1"], "answer_entity_name": null, "predicted_answer": "Sky Sports F1 is owned by Sky.", "extracted_entity": "Sky_Sports_F1"}
{"question": "who owns Fox Footy?", "answer": "Fox Sports Pty Limited", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fox Sports Pty Limited"], "entity_annotations": ["Fox Footy"], "answer_entity_name": null, "predicted_answer": "Fox Sports Pty Limited", "extracted_entity": "Fox_Footy"}
{"question": "who owns Nation Broadcasting Corporation?", "answer": "MediaQuest Holdings, Inc.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["MediaQuest Holdings, Inc."], "entity_annotations": ["Nation Broadcasting Corporation"], "answer_entity_name": null, "predicted_answer": "Nation Broadcasting Corporation is a subsidiary of MediaQuest Holdings", "extracted_entity": "Nation_Broadcasting_Corporation"}
{"question": "who owns Dana\u00eb?", "answer": "Kunsthistorisches Museum", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kunsthistorisches Museum"], "entity_annotations": ["Dana\u00eb"], "answer_entity_name": null, "predicted_answer": "King Acrisius", "extracted_entity": "Dana\u00eb"}
{"question": "who owns Claremont Hotel & Spa?", "answer": "Fairmont Hotels and Resorts", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fairmont Hotels and Resorts"], "entity_annotations": ["Claremont Hotel & Spa"], "answer_entity_name": null, "predicted_answer": "Fairmont Hotels & Resorts", "extracted_entity": "Claremont_Hotel_&_Spa"}
{"question": "who owns The News-Press?", "answer": "Gannett Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gannett Company"], "entity_annotations": ["The News-Press"], "answer_entity_name": null, "predicted_answer": "The News-Press is owned by the Virginia-based", "extracted_entity": "The_News-Press"}
{"question": "who owns Save-On-Foods Memorial Centre?", "answer": "Victoria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Victoria"], "entity_annotations": ["Save-On-Foods Memorial Centre"], "answer_entity_name": null, "predicted_answer": "RG Properties Ltd.", "extracted_entity": "Save-On-Foods_Memorial_Centre"}
{"question": "who owns SVT1?", "answer": "Sveriges Television", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sveriges Television"], "entity_annotations": ["SVT1"], "answer_entity_name": null, "predicted_answer": "SVT1 is owned by Sveriges Television", "extracted_entity": "SVT1"}
{"question": "who owns Library of Birmingham?", "answer": "Birmingham City Council", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Birmingham City Council"], "entity_annotations": ["Library of Birmingham"], "answer_entity_name": null, "predicted_answer": "Birmingham City Council", "extracted_entity": "Library_of_Birmingham"}
{"question": "who owns Salomon Group?", "answer": "Amer Sports", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amer Sports"], "entity_annotations": ["Salomon Group"], "answer_entity_name": null, "predicted_answer": "Salomon Group is owned by Amer Sports.", "extracted_entity": "Salomon_Group"}
{"question": "who owns Cloo?", "answer": "NBCUniversal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["NBCUniversal"], "entity_annotations": ["Cloo"], "answer_entity_name": null, "predicted_answer": "NBCUniversal", "extracted_entity": "Cloo"}
{"question": "who owns Amazon Music?", "answer": "Amazon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amazon"], "entity_annotations": ["Amazon Music"], "answer_entity_name": null, "predicted_answer": "Amazon", "extracted_entity": "Amazon_Music"}
{"question": "who owns JASDAQ Securities Exchange?", "answer": "Tokyo Stock Exchange", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tokyo Stock Exchange"], "entity_annotations": ["JASDAQ Securities Exchange"], "answer_entity_name": null, "predicted_answer": "JASDAQ Securities Exchange is owned by the Osaka", "extracted_entity": "JASDAQ_Securities_Exchange"}
{"question": "who owns The Dispatch?", "answer": "GateHouse Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["GateHouse Media"], "entity_annotations": ["The Dispatch"], "answer_entity_name": null, "predicted_answer": "Jonah Goldberg, Stephen F. Hayes, and Toby", "extracted_entity": "The_Dispatch"}
{"question": "who owns EA Mobile?", "answer": "Electronic Arts", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Electronic Arts"], "entity_annotations": ["EA Mobile"], "answer_entity_name": null, "predicted_answer": "Electronic Arts", "extracted_entity": "EA_Mobile"}
{"question": "who owns Disney Store?", "answer": "The Walt Disney Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Walt Disney Company"], "entity_annotations": ["Disney Store"], "answer_entity_name": null, "predicted_answer": "The Walt Disney Company", "extracted_entity": "Disney_Store"}
{"question": "who owns BBC Radio 5 Live?", "answer": "British Broadcasting Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["British Broadcasting Corporation"], "entity_annotations": ["BBC Radio 5 Live"], "answer_entity_name": null, "predicted_answer": "The BBC.", "extracted_entity": "BBC_Radio_5_Live"}
{"question": "who owns TechRadar?", "answer": "Future plc", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Future plc"], "entity_annotations": ["TechRadar"], "answer_entity_name": null, "predicted_answer": "Future plc", "extracted_entity": "TechRadar"}
{"question": "who owns BBC Knowledge?", "answer": "BBC Worldwide", "dataset": "entity_questions", "split": "test", "answer_aliases": ["BBC Worldwide"], "entity_annotations": ["BBC Knowledge"], "answer_entity_name": null, "predicted_answer": "BBC", "extracted_entity": "BBC_Knowledge"}
{"question": "who owns Casement Park?", "answer": "Antrim GAA", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Antrim GAA"], "entity_annotations": ["Casement Park"], "answer_entity_name": null, "predicted_answer": "The Casement Park Development Company, a subsidiary of", "extracted_entity": "Casement_Park"}
{"question": "who owns Talegaon railway station?", "answer": "Indian Railways", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Indian Railways"], "entity_annotations": ["Talegaon railway station"], "answer_entity_name": null, "predicted_answer": "the British government", "extracted_entity": "Talegaon_railway_station"}
{"question": "who owns Disney Consumer Products?", "answer": "The Walt Disney Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Walt Disney Company"], "entity_annotations": ["Disney Consumer Products"], "answer_entity_name": null, "predicted_answer": "The Walt Disney Company", "extracted_entity": "Disney_Consumer_Products"}
{"question": "who owns RCTI?", "answer": "Media Nusantara Citra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Media Nusantara Citra"], "entity_annotations": ["RCTI"], "answer_entity_name": null, "predicted_answer": "MNC", "extracted_entity": "RCTI"}
{"question": "who owns McKale Center?", "answer": "University of Arizona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Arizona"], "entity_annotations": ["McKale Center"], "answer_entity_name": null, "predicted_answer": "The University of Arizona", "extracted_entity": "McKale_Center"}
{"question": "who owns New York Law Journal?", "answer": "ALM", "dataset": "entity_questions", "split": "test", "answer_aliases": ["ALM"], "entity_annotations": ["New York Law Journal"], "answer_entity_name": null, "predicted_answer": "ALM (company)", "extracted_entity": "New_York_Law_Journal"}
{"question": "who owns Holden?", "answer": "General Motors", "dataset": "entity_questions", "split": "test", "answer_aliases": ["General Motors"], "entity_annotations": ["Holden"], "answer_entity_name": null, "predicted_answer": "General Motors", "extracted_entity": "Holden"}
{"question": "who owns First Canadian Place?", "answer": "Brookfield Office Properties", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brookfield Office Properties"], "entity_annotations": ["First Canadian Place"], "answer_entity_name": null, "predicted_answer": "Manulife Financial Corporation (50 per cent)", "extracted_entity": "First_Canadian_Place"}
{"question": "who owns Tradewest?", "answer": "Midway Games", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Midway Games"], "entity_annotations": ["Tradewest"], "answer_entity_name": null, "predicted_answer": "Tradewest was acquired in April 1994", "extracted_entity": "Tradewest"}
{"question": "who owns New Theatres?", "answer": "Birendranath Sircar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Birendranath Sircar"], "entity_annotations": ["New Theatres"], "answer_entity_name": null, "predicted_answer": "B. N. Sircar", "extracted_entity": "New_Theatres"}
{"question": "who owns Swatch?", "answer": "The Swatch Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Swatch Group"], "entity_annotations": ["Swatch"], "answer_entity_name": null, "predicted_answer": "The Swatch product line was developed as a response", "extracted_entity": "Swatch"}
{"question": "who owns NK \u010celik Zenica?", "answer": "Zenica", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zenica"], "entity_annotations": ["NK \u010celik Zenica"], "answer_entity_name": null, "predicted_answer": "The club is owned by its fans.", "extracted_entity": "NK_\u010celik_Zenica"}
{"question": "who owns Havas Worldwide?", "answer": "Havas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Havas"], "entity_annotations": ["Havas Worldwide"], "answer_entity_name": null, "predicted_answer": "Havas Worldwide is a subsidiary of Havas Group", "extracted_entity": "Havas_Worldwide"}
{"question": "who owns Fox Sports?", "answer": "Fox Sports Pty Limited", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fox Sports Pty Limited"], "entity_annotations": ["Fox Sports"], "answer_entity_name": null, "predicted_answer": "Fox Corporation", "extracted_entity": "Fox_Sports"}
{"question": "who owns Fox Interactive?", "answer": "Atari", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atari"], "entity_annotations": ["Fox Interactive"], "answer_entity_name": null, "predicted_answer": "Fox Interactive was an American video game publisher based in", "extracted_entity": "Fox_Interactive"}
{"question": "who owns Tiruchirappalli Junction railway station?", "answer": "Indian Railways", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Indian Railways"], "entity_annotations": ["Tiruchirappalli Junction railway station"], "answer_entity_name": null, "predicted_answer": "It is owned by Indian Railways.", "extracted_entity": "Tiruchirappalli_Junction_railway_station"}
{"question": "who owns Maserati?", "answer": "Fiat Chrysler Automobiles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fiat Chrysler Automobiles"], "entity_annotations": ["Maserati"], "answer_entity_name": null, "predicted_answer": "Stellantis", "extracted_entity": "Maserati"}
{"question": "who owns Maryland Route 7?", "answer": "Maryland State Highway Administration", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maryland State Highway Administration"], "entity_annotations": ["Maryland Route 7"], "answer_entity_name": null, "predicted_answer": "The Maryland State Roads Commission", "extracted_entity": "Maryland_Route_7"}
{"question": "who owns Imperial Chemical Industries?", "answer": "AkzoNobel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["AkzoNobel"], "entity_annotations": ["Imperial Chemical Industries"], "answer_entity_name": null, "predicted_answer": "Imperial Chemical Industries", "extracted_entity": "Imperial_Chemical_Industries"}
{"question": "who owns Palisades Interstate Parkway?", "answer": "New Jersey Department of Transportation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Jersey Department of Transportation"], "entity_annotations": ["Palisades Interstate Parkway"], "answer_entity_name": null, "predicted_answer": "Palisades Interstate Park Commission", "extracted_entity": "Palisades_Interstate_Parkway"}
{"question": "who owns Pittodrie Stadium?", "answer": "Aberdeen F.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aberdeen F.C."], "entity_annotations": ["Pittodrie Stadium"], "answer_entity_name": null, "predicted_answer": "Aberdeen F.C.", "extracted_entity": "Pittodrie_Stadium"}
{"question": "who owns Seven Network?", "answer": "Seven West Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seven West Media"], "entity_annotations": ["Seven Network"], "answer_entity_name": null, "predicted_answer": "Seven West Media Limited", "extracted_entity": "Seven_Network"}
{"question": "who owns Sanofi Pasteur?", "answer": "Sanofi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sanofi"], "entity_annotations": ["Sanofi Pasteur"], "answer_entity_name": null, "predicted_answer": "Sanofi Pasteur is the vaccines division of the", "extracted_entity": "Sanofi_Pasteur"}
{"question": "who owns Hakatanomori Athletic Stadium?", "answer": "Fukuoka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fukuoka"], "entity_annotations": ["Hakatanomori Athletic Stadium"], "answer_entity_name": null, "predicted_answer": "Fukuoka Prefecture", "extracted_entity": "Hakatanomori_Athletic_Stadium"}
{"question": "who owns Broadgate?", "answer": "GIC Private Limited", "dataset": "entity_questions", "split": "test", "answer_aliases": ["GIC Private Limited", "British Land"], "entity_annotations": ["Broadgate"], "answer_entity_name": null, "predicted_answer": "British Land and GIC", "extracted_entity": "Broadgate"}
{"question": "who owns Palais de la L\u00e9gion d'Honneur?", "answer": "Legion of Honour", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Legion of Honour"], "entity_annotations": ["Palais de la L\u00e9gion d'Honneur"], "answer_entity_name": null, "predicted_answer": "the French government", "extracted_entity": "Palais_de_la_L\u00e9gion_d'Honneur"}
{"question": "who owns Moby Arena?", "answer": "Colorado State University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Colorado State University"], "entity_annotations": ["Moby Arena"], "answer_entity_name": null, "predicted_answer": "Moby Arena is owned by Colorado State University.", "extracted_entity": "Moby_Arena"}
{"question": "who owns Chivas Regal?", "answer": "Pernod Ricard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pernod Ricard"], "entity_annotations": ["Chivas Regal"], "answer_entity_name": null, "predicted_answer": "Pernod Ricard", "extracted_entity": "Chivas_Regal"}
{"question": "who owns Celtic Park?", "answer": "Celtic F.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Celtic F.C."], "entity_annotations": ["Celtic Park"], "answer_entity_name": null, "predicted_answer": "The Parkhead Stadium Limited, a wholly owned subsidiary", "extracted_entity": "Celtic_Park"}
{"question": "who owns Pullmantur Cruises?", "answer": "Royal Caribbean International", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Royal Caribbean International"], "entity_annotations": ["Pullmantur Cruises"], "answer_entity_name": null, "predicted_answer": "Royal Caribbean Group", "extracted_entity": "Pullmantur_Cruises"}
{"question": "who owns Lagonda?", "answer": "Aston Martin Lagonda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aston Martin Lagonda"], "entity_annotations": ["Lagonda"], "answer_entity_name": null, "predicted_answer": "Aston Martin", "extracted_entity": "Lagonda"}
{"question": "who owns Commerzbank-Arena?", "answer": "Frankfurt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frankfurt"], "entity_annotations": ["Commerzbank-Arena"], "answer_entity_name": null, "predicted_answer": "The stadium is owned by the city of Frankfurt.", "extracted_entity": "Commerzbank-Arena"}
{"question": "who owns Warner Channel?", "answer": "Warner Bros.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Bros."], "entity_annotations": ["Warner Channel"], "answer_entity_name": null, "predicted_answer": "Warner Bros. Discovery", "extracted_entity": "Warner_Channel"}
{"question": "who owns Portland Press Herald?", "answer": "MaineToday Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["MaineToday Media"], "entity_annotations": ["Portland Press Herald"], "answer_entity_name": null, "predicted_answer": "The Portland Press Herald is owned by the Maine Trust", "extracted_entity": "Portland_Press_Herald"}
{"question": "who owns BBC Four?", "answer": "British Broadcasting Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["British Broadcasting Corporation"], "entity_annotations": ["BBC Four"], "answer_entity_name": null, "predicted_answer": "BBC", "extracted_entity": "BBC_Four"}
{"question": "who owns Tacoma Dome?", "answer": "Tacoma", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tacoma"], "entity_annotations": ["Tacoma Dome"], "answer_entity_name": null, "predicted_answer": "The Tacoma Dome is owned by the city of Tacoma", "extracted_entity": "Tacoma_Dome"}
{"question": "who owns West Side Park?", "answer": "Chicago Cubs", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago Cubs"], "entity_annotations": ["West Side Park"], "answer_entity_name": null, "predicted_answer": "e park is owned by the city of Chicago.", "extracted_entity": "West_Side_Park"}
{"question": "who owns Saatchi & Saatchi?", "answer": "Publicis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Publicis"], "entity_annotations": ["Saatchi & Saatchi"], "answer_entity_name": null, "predicted_answer": "Publicis Groupe", "extracted_entity": "Saatchi_&_Saatchi"}
{"question": "who owns PopCap Games?", "answer": "Electronic Arts", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Electronic Arts"], "entity_annotations": ["PopCap Games"], "answer_entity_name": null, "predicted_answer": "Electronic Arts", "extracted_entity": "PopCap_Games"}
{"question": "who owns Nordea?", "answer": "Sampo Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sampo Group"], "entity_annotations": ["Nordea"], "answer_entity_name": null, "predicted_answer": "The bank is the result of the successive mergers", "extracted_entity": "Nordea"}
{"question": "who owns The Birth of Venus?", "answer": "France", "dataset": "entity_questions", "split": "test", "answer_aliases": ["France"], "entity_annotations": ["The Birth of Venus"], "answer_entity_name": null, "predicted_answer": "Uffizi Gallery", "extracted_entity": "The_Birth_of_Venus"}
{"question": "who owns New York State Route 21?", "answer": "New York State Department of Transportation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York State Department of Transportation"], "entity_annotations": ["New York State Route 21"], "answer_entity_name": null, "predicted_answer": "New York State Route 21 is owned by the", "extracted_entity": "New_York_State_Route_21"}
{"question": "who owns Washington State Route 21?", "answer": "Washington State Department of Transportation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Washington State Department of Transportation"], "entity_annotations": ["Washington State Route 21"], "answer_entity_name": null, "predicted_answer": "The Washington State Department of Transportation (WSDOT", "extracted_entity": "Washington_State_Route_21"}
{"question": "who owns Shaw Media?", "answer": "Shaw Communications", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shaw Communications"], "entity_annotations": ["Shaw Media"], "answer_entity_name": null, "predicted_answer": "Shaw Media was the television broadcasting division of Shaw Communications", "extracted_entity": "Shaw_Media"}
{"question": "who owns Los Angeles Sparks?", "answer": "Guggenheim Partners", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guggenheim Partners"], "entity_annotations": ["Los Angeles Sparks"], "answer_entity_name": null, "predicted_answer": "Sparks LA Sports", "extracted_entity": "Los_Angeles_Sparks"}
{"question": "who owns The Times?", "answer": "GateHouse Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["GateHouse Media"], "entity_annotations": ["The Times"], "answer_entity_name": null, "predicted_answer": "ews Corp", "extracted_entity": "The_Times"}
{"question": "who owns Empire State Plaza?", "answer": "New York", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York"], "entity_annotations": ["Empire State Plaza"], "answer_entity_name": null, "predicted_answer": "The New York State Office of General Services maintains the", "extracted_entity": "Empire_State_Plaza"}
{"question": "who owns EnergyAustralia?", "answer": "Government of New South Wales", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Government of New South Wales"], "entity_annotations": ["EnergyAustralia"], "answer_entity_name": null, "predicted_answer": "the Hong Kong-based and listed China Light and Power", "extracted_entity": "EnergyAustralia"}
{"question": "who owns Kreva?", "answer": "Algirdas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Algirdas"], "entity_annotations": ["Kreva"], "answer_entity_name": null, "predicted_answer": "Kreva is owned by the Grand Duke of Lithuania", "extracted_entity": "Kreva"}
{"question": "who owns Dynamix?", "answer": "Sierra Entertainment", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sierra Entertainment"], "entity_annotations": ["Dynamix"], "answer_entity_name": null, "predicted_answer": "Sierra On-Line", "extracted_entity": "Dynamix"}
{"question": "who owns IO Interactive?", "answer": "Square Enix", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Square Enix"], "entity_annotations": ["IO Interactive"], "answer_entity_name": null, "predicted_answer": "Nordisk Film and the seven founders each held a", "extracted_entity": "IO_Interactive"}
{"question": "who owns Paradox Development Studio?", "answer": "Paradox Interactive", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paradox Interactive"], "entity_annotations": ["Paradox Development Studio"], "answer_entity_name": null, "predicted_answer": "Paradox Development Studio", "extracted_entity": "Paradox_Development_Studio"}
{"question": "who owns Sunnm\u00f8rsposten?", "answer": "Polaris Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Polaris Media"], "entity_annotations": ["Sunnm\u00f8rsposten"], "answer_entity_name": null, "predicted_answer": "Polaris Media", "extracted_entity": "Sunnm\u00f8rsposten"}
{"question": "who owns Bergensavisen?", "answer": "Amedia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amedia"], "entity_annotations": ["Bergensavisen"], "answer_entity_name": null, "predicted_answer": "Bergensavisen is owned by the Norwegian media", "extracted_entity": "Bergensavisen"}
{"question": "who owns YES Network?", "answer": "21st Century Fox", "dataset": "entity_questions", "split": "test", "answer_aliases": ["21st Century Fox"], "entity_annotations": ["YES Network"], "answer_entity_name": null, "predicted_answer": "Yankee Global Enterprises (the largest shareholder with 26", "extracted_entity": "YES_Network"}
{"question": "who owns Toronto Star?", "answer": "Star Media Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Star Media Group"], "entity_annotations": ["Toronto Star"], "answer_entity_name": null, "predicted_answer": "Torstar Corporation", "extracted_entity": "Toronto_Star"}
{"question": "who owns Selhurst Park?", "answer": "Crystal Palace F.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Crystal Palace F.C."], "entity_annotations": ["Selhurst Park"], "answer_entity_name": null, "predicted_answer": "Crystal Palace F.C.", "extracted_entity": "Selhurst_Park"}
{"question": "who owns Parc des Sports, Annecy?", "answer": "Annecy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Annecy"], "entity_annotations": ["Parc des Sports, Annecy"], "answer_entity_name": null, "predicted_answer": "Parc des Sports is owned by FC Annec", "extracted_entity": "Parc_des_Sports,_Annecy"}
{"question": "who owns The Newcastle Herald?", "answer": "Fairfax Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fairfax Media"], "entity_annotations": ["The Newcastle Herald"], "answer_entity_name": null, "predicted_answer": "Australian Community Media", "extracted_entity": "The_Newcastle_Herald"}
{"question": "who owns R\u00e9seau des sports?", "answer": "Bell Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bell Media"], "entity_annotations": ["R\u00e9seau des sports"], "answer_entity_name": null, "predicted_answer": "CTV Specialty Television Inc.", "extracted_entity": "R\u00e9seau_des_sports"}
{"question": "who owns Black Isle Studios?", "answer": "Interplay Entertainment", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Interplay Entertainment"], "entity_annotations": ["Black Isle Studios"], "answer_entity_name": null, "predicted_answer": "Black Isle Studios is owned by Interplay Entertainment.", "extracted_entity": "Black_Isle_Studios"}
{"question": "who owns Haksan Culture Company?", "answer": "Daewon Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daewon Media"], "entity_annotations": ["Haksan Culture Company"], "answer_entity_name": null, "predicted_answer": "Haksan Culture Company is owned by Daew", "extracted_entity": "Haksan_Culture_Company"}
{"question": "who owns Chesapeake Energy Arena?", "answer": "Oklahoma City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oklahoma City"], "entity_annotations": ["Chesapeake Energy Arena"], "answer_entity_name": null, "predicted_answer": "The city of Oklahoma City owns Chesapeake Energy Arena", "extracted_entity": "Chesapeake_Energy_Arena"}
{"question": "who owns Yash Raj Films?", "answer": "Aditya Chopra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aditya Chopra"], "entity_annotations": ["Yash Raj Films"], "answer_entity_name": null, "predicted_answer": "Aditya Chopra", "extracted_entity": "Yash_Raj_Films"}
{"question": "who owns S.S. Lazio?", "answer": "Claudio Lotito", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Claudio Lotito"], "entity_annotations": ["S.S. Lazio"], "answer_entity_name": null, "predicted_answer": "Lazio Sport Club", "extracted_entity": "S.S._Lazio"}
{"question": "who owns Eurosport?", "answer": "Discovery Inc.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Discovery Inc.", "TF1 Group"], "entity_annotations": ["Eurosport"], "answer_entity_name": null, "predicted_answer": "Warner Bros. Discovery", "extracted_entity": "Eurosport"}
{"question": "who owns Oji Paper Company?", "answer": "Mitsui Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mitsui Group"], "entity_annotations": ["Oji Paper Company"], "answer_entity_name": null, "predicted_answer": "Oji Paper Company", "extracted_entity": "Oji_Paper_Company"}
{"question": "who owns Selland Arena?", "answer": "Fresno", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fresno"], "entity_annotations": ["Selland Arena"], "answer_entity_name": null, "predicted_answer": "The City of Fresno owns Selland Arena", "extracted_entity": "Selland_Arena"}
{"question": "who owns Fairmont Hotels and Resorts?", "answer": "Kingdom Holding Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kingdom Holding Company"], "entity_annotations": ["Fairmont Hotels and Resorts"], "answer_entity_name": null, "predicted_answer": "Fairmont Hotels and Resorts is owned by FRHI", "extracted_entity": "Fairmont_Hotels_and_Resorts"}
{"question": "who owns TriStar Pictures?", "answer": "The Coca-Cola Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Coca-Cola Company"], "entity_annotations": ["TriStar Pictures"], "answer_entity_name": null, "predicted_answer": "Sony Pictures", "extracted_entity": "TriStar_Pictures"}
{"question": "who owns HBO Now?", "answer": "HBO", "dataset": "entity_questions", "split": "test", "answer_aliases": ["HBO"], "entity_annotations": ["HBO Now"], "answer_entity_name": null, "predicted_answer": "HBO Now (formerly named HBO from July 202", "extracted_entity": "HBO_Now"}
{"question": "who owns Cross-Harbour Tunnel?", "answer": "Government of Hong Kong", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Government of Hong Kong"], "entity_annotations": ["Cross-Harbour Tunnel"], "answer_entity_name": null, "predicted_answer": "the Cross-Harbour Holdings Limited", "extracted_entity": "Cross-Harbour_Tunnel"}
{"question": "who owns Toronto FC?", "answer": "Maple Leaf Sports & Entertainment", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maple Leaf Sports & Entertainment"], "entity_annotations": ["Toronto FC"], "answer_entity_name": null, "predicted_answer": "Maple Leaf Sports & Entertainment (MLSE)", "extracted_entity": "Toronto_FC"}
{"question": "who owns MC2 France?", "answer": "Anuman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anuman"], "entity_annotations": ["MC2 France"], "answer_entity_name": null, "predicted_answer": "Elliot Grassiano", "extracted_entity": "MC2_France"}
{"question": "who owns Motown?", "answer": "Capitol Music Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Capitol Music Group"], "entity_annotations": ["Motown"], "answer_entity_name": null, "predicted_answer": "Universal Music Group", "extracted_entity": "Motown"}
{"question": "who owns Ray-Ban?", "answer": "Luxottica", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Luxottica"], "entity_annotations": ["Ray-Ban"], "answer_entity_name": null, "predicted_answer": "Bausch & Lomb", "extracted_entity": "Ray-Ban"}
{"question": "who owns SK Telecom?", "answer": "SK Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["SK Group"], "entity_annotations": ["SK Telecom"], "answer_entity_name": null, "predicted_answer": "SK Group", "extracted_entity": "SK_Telecom"}
{"question": "who owns Wessex Main Line?", "answer": "Network Rail", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Network Rail"], "entity_annotations": ["Wessex Main Line"], "answer_entity_name": null, "predicted_answer": "sex Main Line is owned by Great Western Railway", "extracted_entity": "Wessex_Main_Line"}
{"question": "who owns Cartoon Network?", "answer": "Turner Broadcasting System Europe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Turner Broadcasting System Europe"], "entity_annotations": ["Cartoon Network"], "answer_entity_name": null, "predicted_answer": "Warner Bros. Discovery", "extracted_entity": "Cartoon_Network"}
{"question": "who owns Ben & Jerry's?", "answer": "Unilever", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Unilever"], "entity_annotations": ["Ben & Jerry's"], "answer_entity_name": null, "predicted_answer": "Ben & Jerry's is owned by Unilever", "extracted_entity": "Ben_&_Jerry's"}
{"question": "who owns John F. Kennedy International Airport?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["John F. Kennedy International Airport"], "answer_entity_name": null, "predicted_answer": "John F. Kennedy International Airport is owned by the", "extracted_entity": "John_F._Kennedy_International_Airport"}
{"question": "who owns Blackwall Tunnel?", "answer": "Transport for London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Transport for London"], "entity_annotations": ["Blackwall Tunnel"], "answer_entity_name": null, "predicted_answer": "Transport for London", "extracted_entity": "Blackwall_Tunnel"}
{"question": "who owns East London Line?", "answer": "Transport for London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Transport for London"], "entity_annotations": ["East London Line"], "answer_entity_name": null, "predicted_answer": "East London Railway Company", "extracted_entity": "East_London_Line"}
{"question": "who owns Resorts International Holdings?", "answer": "Colony Capital", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Colony Capital"], "entity_annotations": ["Resorts International Holdings"], "answer_entity_name": null, "predicted_answer": "The company was founded in 2000 by Colony", "extracted_entity": "Resorts_International_Holdings"}
{"question": "who owns Minute Maid?", "answer": "The Coca-Cola Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Coca-Cola Company"], "entity_annotations": ["Minute Maid"], "answer_entity_name": null, "predicted_answer": "Minute Maid is owned by The Coca-Cola Company", "extracted_entity": "Minute_Maid"}
{"question": "who owns Hudson Soft?", "answer": "Konami", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Konami"], "entity_annotations": ["Hudson Soft"], "answer_entity_name": null, "predicted_answer": "Konami", "extracted_entity": "Hudson_Soft"}
{"question": "who owns WVU Coliseum?", "answer": "West Virginia University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["West Virginia University"], "entity_annotations": ["WVU Coliseum"], "answer_entity_name": null, "predicted_answer": "West Virginia University", "extracted_entity": "WVU_Coliseum"}
{"question": "who owns Idaho State Capitol?", "answer": "Idaho", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Idaho"], "entity_annotations": ["Idaho State Capitol"], "answer_entity_name": null, "predicted_answer": "The Idaho State Capitol in Boise is the home of", "extracted_entity": "Idaho_State_Capitol"}
{"question": "who owns PacifiCorp?", "answer": "Berkshire Hathaway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Berkshire Hathaway"], "entity_annotations": ["PacifiCorp"], "answer_entity_name": null, "predicted_answer": "PacifiCorp is an electric power company in the", "extracted_entity": "PacifiCorp"}
{"question": "who owns Interstate 95 in Rhode Island?", "answer": "Rhode Island Department of Transportation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rhode Island Department of Transportation"], "entity_annotations": ["Interstate 95 in Rhode Island"], "answer_entity_name": null, "predicted_answer": "the state of Rhode Island", "extracted_entity": "Interstate_95_in_Rhode_Island"}
{"question": "who owns Ch\u00e2teau Gaillard?", "answer": "Richard I of England", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Richard I of England"], "entity_annotations": ["Ch\u00e2teau Gaillard"], "answer_entity_name": null, "predicted_answer": "The French king", "extracted_entity": "Ch\u00e2teau_Gaillard"}
{"question": "who owns Welford Road Stadium?", "answer": "Leicester Tigers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leicester Tigers"], "entity_annotations": ["Welford Road Stadium"], "answer_entity_name": null, "predicted_answer": "Leicester Tigers", "extracted_entity": "Welford_Road_Stadium"}
{"question": "who owns PL/SQL?", "answer": "Oracle Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oracle Corporation"], "entity_annotations": ["PL/SQL"], "answer_entity_name": null, "predicted_answer": "Oracle Corporation", "extracted_entity": "PL/SQL"}
{"question": "who owns Deepdale?", "answer": "Preston North End F.C.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Preston North End F.C."], "entity_annotations": ["Deepdale"], "answer_entity_name": null, "predicted_answer": "Preston North End", "extracted_entity": "Deepdale"}
{"question": "who owns Deepwater Horizon?", "answer": "Transocean", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Transocean"], "entity_annotations": ["Deepwater Horizon"], "answer_entity_name": null, "predicted_answer": "ansocean", "extracted_entity": "Deepwater_Horizon"}
{"question": "who owns Indiana World War Memorial Plaza?", "answer": "Indiana", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Indiana"], "entity_annotations": ["Indiana World War Memorial Plaza"], "answer_entity_name": null, "predicted_answer": "Indiana World War Memorial Plaza is owned by the city", "extracted_entity": "Indiana_World_War_Memorial_Plaza"}
{"question": "who owns Lipton?", "answer": "Unilever", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Unilever"], "entity_annotations": ["Lipton"], "answer_entity_name": null, "predicted_answer": "Lipton Teas and Infusions.", "extracted_entity": "Lipton"}
{"question": "who owns Space.com?", "answer": "TechMediaNetwork, Inc.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["TechMediaNetwork, Inc."], "entity_annotations": ["Space.com"], "answer_entity_name": null, "predicted_answer": "Future plc", "extracted_entity": "Space.com"}
{"question": "who owns Florida Today?", "answer": "Gannett Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gannett Company"], "entity_annotations": ["Florida Today"], "answer_entity_name": null, "predicted_answer": "Gannett", "extracted_entity": "Florida_Today"}
{"question": "who owns Joe Louis Arena?", "answer": "Detroit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Detroit"], "entity_annotations": ["Joe Louis Arena"], "answer_entity_name": null, "predicted_answer": "the city of Detroit.", "extracted_entity": "Joe_Louis_Arena"}
{"question": "who owns Team GB?", "answer": "British Olympic Association", "dataset": "entity_questions", "split": "test", "answer_aliases": ["British Olympic Association"], "entity_annotations": ["Team GB"], "answer_entity_name": null, "predicted_answer": "The British Olympic Association (BOA).", "extracted_entity": "Team_GB"}
{"question": "who owns Townsquare Media?", "answer": "Oaktree Capital Management", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oaktree Capital Management"], "entity_annotations": ["Townsquare Media"], "answer_entity_name": null, "predicted_answer": "Townsquare Media, Inc. (formerly Regent", "extracted_entity": "Townsquare_Media"}
{"question": "who owns BBC Persian Television?", "answer": "British Broadcasting Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["British Broadcasting Corporation"], "entity_annotations": ["BBC Persian Television"], "answer_entity_name": null, "predicted_answer": "BBC Persian Television is owned by BBC.", "extracted_entity": "BBC_Persian_Television"}
{"question": "who owns Fox Sports North?", "answer": "Fox Entertainment Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fox Entertainment Group"], "entity_annotations": ["Fox Sports North"], "answer_entity_name": null, "predicted_answer": "Fox Sports North is owned by the Fox Corporation.", "extracted_entity": "Fox_Sports_North"}
{"question": "who owns Vivendi Games?", "answer": "Vivendi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vivendi"], "entity_annotations": ["Vivendi Games"], "answer_entity_name": null, "predicted_answer": "Activision Blizzard", "extracted_entity": "Vivendi_Games"}
{"question": "who owns Tencent QQ?", "answer": "Tencent", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tencent"], "entity_annotations": ["Tencent QQ"], "answer_entity_name": null, "predicted_answer": "Tencent", "extracted_entity": "Tencent_QQ"}
{"question": "who owns Luis Mu\u00f1oz Mar\u00edn International Airport?", "answer": "Puerto Rico Ports Authority", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Puerto Rico Ports Authority"], "entity_annotations": ["Luis Mu\u00f1oz Mar\u00edn International Airport"], "answer_entity_name": null, "predicted_answer": "Luis Mu\u00f1oz Mar\u00edn International Airport is owned", "extracted_entity": "Luis_Mu\u00f1oz_Mar\u00edn_International_Airport"}
{"question": "who is Urban Sea's child?", "answer": "Sea the Stars", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sea the Stars"], "entity_annotations": ["Urban Sea"], "answer_entity_name": null, "predicted_answer": "Galileo", "extracted_entity": "Urban_Sea"}
{"question": "who is Pepin of Herstal's child?", "answer": "Childebrand I", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Childebrand I", "Drogo of Champagne", "Grimoald the Younger", "Charles Martel"], "entity_annotations": ["Pepin of Herstal"], "answer_entity_name": null, "predicted_answer": "Pepin the Short", "extracted_entity": "Pepin_of_Herstal"}
{"question": "who is Johann Friedrich Struensee's child?", "answer": "Princess Louise Auguste of Denmark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Princess Louise Auguste of Denmark"], "entity_annotations": ["Johann Friedrich Struensee"], "answer_entity_name": null, "predicted_answer": "Princess Louise Augusta", "extracted_entity": "Johann_Friedrich_Struensee"}
{"question": "who is Anne Boleyn's child?", "answer": "Elizabeth I of England", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth I of England"], "entity_annotations": ["Anne Boleyn"], "answer_entity_name": null, "predicted_answer": "Elizabeth I", "extracted_entity": "Anne_Boleyn"}
{"question": "who is Pat Jennings's child?", "answer": "Pat Jennings, Jr.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pat Jennings, Jr."], "entity_annotations": ["Pat Jennings"], "answer_entity_name": null, "predicted_answer": "Pat Jennings's child is not known", "extracted_entity": "Pat_Jennings"}
{"question": "who is Naseeruddin Shah's child?", "answer": "Imaad Shah", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Imaad Shah", "Vivaan Shah"], "entity_annotations": ["Naseeruddin Shah"], "answer_entity_name": null, "predicted_answer": "Naseeruddin Shah's child is N", "extracted_entity": "Naseeruddin_Shah"}
{"question": "who is Jawaharlal Nehru's child?", "answer": "Indira Gandhi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Indira Gandhi"], "entity_annotations": ["Jawaharlal Nehru"], "answer_entity_name": null, "predicted_answer": "Indira Gandhi", "extracted_entity": "Jawaharlal_Nehru"}
{"question": "who is Emperor Wu of Chen's child?", "answer": "Prince Xian of Hengyang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prince Xian of Hengyang"], "entity_annotations": ["Emperor Wu of Chen"], "answer_entity_name": null, "predicted_answer": "Chen Chang", "extracted_entity": "Emperor_Wu_of_Chen"}
{"question": "who is Li Ka-shing's child?", "answer": "Richard Li", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Richard Li", "Victor Li"], "entity_annotations": ["Li Ka-shing"], "answer_entity_name": null, "predicted_answer": "Li Ka-shing's child is Li Ching", "extracted_entity": "Li_Ka-shing"}
{"question": "who is Native Dancer's child?", "answer": "Natalma", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Natalma", "Shenanigans"], "entity_annotations": ["Native Dancer"], "answer_entity_name": null, "predicted_answer": "Native Dancer's child is Kauai King", "extracted_entity": "Native_Dancer"}
{"question": "who is Bahram II's child?", "answer": "Bahram III", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bahram III"], "entity_annotations": ["Bahram II"], "answer_entity_name": null, "predicted_answer": "Shapur II", "extracted_entity": "Bahram_II"}
{"question": "who is Lou Scheimer's child?", "answer": "Erika Scheimer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Erika Scheimer"], "entity_annotations": ["Lou Scheimer"], "answer_entity_name": null, "predicted_answer": "Erika", "extracted_entity": "Lou_Scheimer"}
{"question": "who is Pyotr Kapitsa's child?", "answer": "Andrey Kapitsa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Andrey Kapitsa"], "entity_annotations": ["Pyotr Kapitsa"], "answer_entity_name": null, "predicted_answer": "Pyotr Kapitsa's child is Pyotr", "extracted_entity": "Pyotr_Kapitsa"}
{"question": "who is Maximilian I, Elector of Bavaria's child?", "answer": "Maximilian Philipp Hieronymus, Duke of Bavaria-Leuchtenberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maximilian Philipp Hieronymus, Duke of Bavaria-Leuchtenberg"], "entity_annotations": ["Maximilian I, Elector of Bavaria"], "answer_entity_name": null, "predicted_answer": "Maria Anna of Austria", "extracted_entity": "Maximilian_I,_Elector_of_Bavaria"}
{"question": "who is Yang Su's child?", "answer": "Yang Xuangan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yang Xuangan"], "entity_annotations": ["Yang Su"], "answer_entity_name": null, "predicted_answer": "Yang Xuangan", "extracted_entity": "Yang_Su"}
{"question": "who is Injo of Joseon's child?", "answer": "Hyojong of Joseon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hyojong of Joseon", "Crown Prince Sohyeon"], "entity_annotations": ["Injo of Joseon"], "answer_entity_name": null, "predicted_answer": "Injo of Joseon's child is Yi Jong", "extracted_entity": "Injo_of_Joseon"}
{"question": "who is Jos\u00e9 Batlle y Ord\u00f3\u00f1ez's child?", "answer": "Lorenzo Batlle Pacheco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lorenzo Batlle Pacheco"], "entity_annotations": ["Jos\u00e9 Batlle y Ord\u00f3\u00f1ez"], "answer_entity_name": null, "predicted_answer": "Jos\u00e9 Batlle y Ord\u00f3\u00f1ez's child", "extracted_entity": "Jos\u00e9_Batlle_y_Ord\u00f3\u00f1ez"}
{"question": "who is Suzanne Mubarak's child?", "answer": "Alaa Mubarak", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alaa Mubarak"], "entity_annotations": ["Suzanne Mubarak"], "answer_entity_name": null, "predicted_answer": "Alaa Mubarak and Gamal Mub", "extracted_entity": "Suzanne_Mubarak"}
{"question": "who is Murong Hui's child?", "answer": "Murong Huang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Murong Huang", "Murong Ping"], "entity_annotations": ["Murong Hui"], "answer_entity_name": null, "predicted_answer": "Murong Huang", "extracted_entity": "Murong_Hui"}
{"question": "who is Oceanus's child?", "answer": "Peneus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peneus", "Enipeus", "Cebren", "Callirrhoe", "Scamander", "Sangarius", "Amphitrite", "Bolbe", "Okeanid", "Doris", "Peitho", "Pleione", "Plouto", "Meander", "Styx", "Inachus"], "entity_annotations": ["Oceanus"], "answer_entity_name": null, "predicted_answer": "thys", "extracted_entity": "Oceanus"}
{"question": "who is Peter Rowan's child?", "answer": "Amanda Rowan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amanda Rowan"], "entity_annotations": ["Peter Rowan"], "answer_entity_name": null, "predicted_answer": "Rowan is Peter Rowan's child.", "extracted_entity": "Peter_Rowan"}
{"question": "who is Dino De Laurentiis's child?", "answer": "Veronica De Laurentiis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Veronica De Laurentiis", "Raffaella De Laurentiis"], "entity_annotations": ["Dino De Laurentiis"], "answer_entity_name": null, "predicted_answer": "Dino De Laurentiis's child is D", "extracted_entity": "Dino_De_Laurentiis"}
{"question": "who is Teti's child?", "answer": "Pepi I Meryre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pepi I Meryre"], "entity_annotations": ["Teti"], "answer_entity_name": null, "predicted_answer": "Ipet", "extracted_entity": "Teti"}
{"question": "who is Tushratta's child?", "answer": "Tadukhipa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tadukhipa"], "entity_annotations": ["Tushratta"], "answer_entity_name": null, "predicted_answer": "adukhipa", "extracted_entity": "Tushratta"}
{"question": "who is Jerry Lawler's child?", "answer": "Brian Christopher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brian Christopher"], "entity_annotations": ["Jerry Lawler"], "answer_entity_name": null, "predicted_answer": "Jerry Lawler has a son named Brian Christopher Law", "extracted_entity": "Jerry_Lawler"}
{"question": "who is Wang Chuzhi's child?", "answer": "Wang Du", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wang Du"], "entity_annotations": ["Wang Chuzhi"], "answer_entity_name": null, "predicted_answer": "Wang Chuzhi's child is Wang Du", "extracted_entity": "Wang_Chuzhi"}
{"question": "who is Mohammad Reza Pahlavi's child?", "answer": "Shahnaz Pahlavi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shahnaz Pahlavi", "Leila Pahlavi"], "entity_annotations": ["Mohammad Reza Pahlavi"], "answer_entity_name": null, "predicted_answer": "Reza Pahlavi", "extracted_entity": "Mohammad_Reza_Pahlavi"}
{"question": "who is Jules de Polignac's child?", "answer": "Prince Edmond de Polignac", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prince Edmond de Polignac"], "entity_annotations": ["Jules de Polignac"], "answer_entity_name": null, "predicted_answer": "Charles de Polignac", "extracted_entity": "Jules_de_Polignac"}
{"question": "who is Herod the Great's child?", "answer": "Olympias", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Olympias", "Herod Archelaus", "Herod Antipas", "Herod II", "Antipater"], "entity_annotations": ["Herod the Great"], "answer_entity_name": null, "predicted_answer": "Herod the Great has no children.", "extracted_entity": "Herod_the_Great"}
{"question": "who is William Jackson Hooker's child?", "answer": "Joseph Dalton Hooker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joseph Dalton Hooker"], "entity_annotations": ["William Jackson Hooker"], "answer_entity_name": null, "predicted_answer": "Joseph Dalton Hooker", "extracted_entity": "William_Jackson_Hooker"}
{"question": "who is Tiglath-Pileser I's child?", "answer": "Ashur-bel-kala", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ashur-bel-kala"], "entity_annotations": ["Tiglath-Pileser I"], "answer_entity_name": null, "predicted_answer": "Tiglath-Pileser I's child is", "extracted_entity": "Tiglath-Pileser_I"}
{"question": "who is Harold Godwinson's child?", "answer": "Gytha of Wessex", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gytha of Wessex"], "entity_annotations": ["Harold Godwinson"], "answer_entity_name": null, "predicted_answer": "Harold Godwinson's child is Godwin", "extracted_entity": "Harold_Godwinson"}
{"question": "who is Attakullakulla's child?", "answer": "Dragging Canoe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dragging Canoe"], "entity_annotations": ["Attakullakulla"], "answer_entity_name": null, "predicted_answer": "Dragging Canoe", "extracted_entity": "Attakullakulla"}
{"question": "who is Metope's child?", "answer": "Harpina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harpina"], "entity_annotations": ["Metope"], "answer_entity_name": null, "predicted_answer": "Metope's child is not known.", "extracted_entity": "Metope"}
{"question": "who is Alyattes of Lydia's child?", "answer": "Croesus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Croesus"], "entity_annotations": ["Alyattes of Lydia"], "answer_entity_name": null, "predicted_answer": "Croesus", "extracted_entity": "Alyattes_of_Lydia"}
{"question": "who is John William Dawson's child?", "answer": "George Mercer Dawson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Mercer Dawson"], "entity_annotations": ["John William Dawson"], "answer_entity_name": null, "predicted_answer": "John William Dawson's child is William Dawson.", "extracted_entity": "John_William_Dawson"}
{"question": "who is Olav V of Norway's child?", "answer": "Harald V of Norway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harald V of Norway"], "entity_annotations": ["Olav V of Norway"], "answer_entity_name": null, "predicted_answer": "He is the father of King Harald V of", "extracted_entity": "Olav_V_of_Norway"}
{"question": "who is Abdul Rahim Khan-I-Khana's child?", "answer": "Jana Begum", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jana Begum"], "entity_annotations": ["Abdul Rahim Khan-I-Khana"], "answer_entity_name": null, "predicted_answer": "He has no children.", "extracted_entity": "Abdul_Rahim_Khan-I-Khana"}
{"question": "who is Charles XIII of Sweden's child?", "answer": "Carl L\u00f6wenhielm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carl L\u00f6wenhielm"], "entity_annotations": ["Charles XIII of Sweden"], "answer_entity_name": null, "predicted_answer": "Charles XIV John of Sweden", "extracted_entity": "Charles_XIII_of_Sweden"}
{"question": "who is Charles VIII of Sweden's child?", "answer": "Magdalena of Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Magdalena of Sweden"], "entity_annotations": ["Charles VIII of Sweden"], "answer_entity_name": null, "predicted_answer": "Christina", "extracted_entity": "Charles_VIII_of_Sweden"}
{"question": "who is Aaron Burr's child?", "answer": "Theodosia Burr Alston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Theodosia Burr Alston"], "entity_annotations": ["Aaron Burr"], "answer_entity_name": null, "predicted_answer": "Theodora Alston Burr", "extracted_entity": "Aaron_Burr"}
{"question": "who is Ali Akbar Khan's child?", "answer": "Aashish Khan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aashish Khan"], "entity_annotations": ["Ali Akbar Khan"], "answer_entity_name": null, "predicted_answer": "Ali Akbar Khan's child is Ali Akbar", "extracted_entity": "Ali_Akbar_Khan"}
{"question": "who is Sa'ad ad-Din II's child?", "answer": "Sabr ad-Din II", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sabr ad-Din II", "Jamal ad-Din II", "Badlay ibn Sa'ad ad-Din"], "entity_annotations": ["Sa'ad ad-Din II"], "answer_entity_name": null, "predicted_answer": "Sabr ad-Din II, Badlay ib", "extracted_entity": "Sa'ad_ad-Din_II"}
{"question": "who is John McCain's child?", "answer": "Meghan McCain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Meghan McCain"], "entity_annotations": ["John McCain"], "answer_entity_name": null, "predicted_answer": "John Sidney McCain IV", "extracted_entity": "John_McCain"}
{"question": "who is Prince Bernhard of Lippe-Biesterfeld's child?", "answer": "Prince Bernhard of the Netherlands", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prince Bernhard of the Netherlands"], "entity_annotations": ["Prince Bernhard of Lippe-Biesterfeld"], "answer_entity_name": null, "predicted_answer": "Prince Bernhard of Lippe-Biesterfeld", "extracted_entity": "Prince_Bernhard_of_Lippe-Biesterfeld"}
{"question": "who is John II of Castile's child?", "answer": "Henry IV of Castile", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry IV of Castile", "Isabella I of Castile"], "entity_annotations": ["John II of Castile"], "answer_entity_name": null, "predicted_answer": "John II of Castile's child is Henry IV", "extracted_entity": "John_II_of_Castile"}
{"question": "who is Walter Slezak's child?", "answer": "Erika Slezak", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Erika Slezak"], "entity_annotations": ["Walter Slezak"], "answer_entity_name": null, "predicted_answer": "Walter Slezak's child is Walter Slez", "extracted_entity": "Walter_Slezak"}
{"question": "who is James IV of Scotland's child?", "answer": "James V of Scotland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James V of Scotland", "Alexander Stewart", "Lady Janet Stewart"], "entity_annotations": ["James IV of Scotland"], "answer_entity_name": null, "predicted_answer": "James V of Scotland", "extracted_entity": "James_IV_of_Scotland"}
{"question": "who is Sima Yi's child?", "answer": "Sima Zhou", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sima Zhou", "Sima Zhao", "Sima Shi"], "entity_annotations": ["Sima Yi"], "answer_entity_name": null, "predicted_answer": "Sima Shi", "extracted_entity": "Sima_Yi"}
{"question": "who is Leonard Sachs's child?", "answer": "Robin Sachs", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robin Sachs"], "entity_annotations": ["Leonard Sachs"], "answer_entity_name": null, "predicted_answer": "Robin Sachs", "extracted_entity": "Leonard_Sachs"}
{"question": "who is Adolf II of Holstein's child?", "answer": "Adolf III of Holstein", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Adolf III of Holstein"], "entity_annotations": ["Adolf II of Holstein"], "answer_entity_name": null, "predicted_answer": "Adolf II of Holstein's child is Adolf II", "extracted_entity": "Adolf_II_of_Holstein"}
{"question": "who is Theuderic I's child?", "answer": "Theudebert I", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Theudebert I"], "entity_annotations": ["Theuderic I"], "answer_entity_name": null, "predicted_answer": "Theudebert", "extracted_entity": "Theuderic_I"}
{"question": "who is Hamad bin Khalifa Al Thani's child?", "answer": "Mohammed bin Hamad bin Khalifa Al Thani", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mohammed bin Hamad bin Khalifa Al Thani", "Jasim bin Hamad bin Khalifa Al Thani", "Tamim bin Hamad Al Thani", "Al-Mayassa bint Hamad bin Khalifa Al-Thani", "Joaan bin Hamad bin Khalifa Al Thani"], "entity_annotations": ["Hamad bin Khalifa Al Thani"], "answer_entity_name": null, "predicted_answer": "Hamad bin Khalifa Al Thani's child", "extracted_entity": "Hamad_bin_Khalifa_Al_Thani"}
{"question": "who is William Rockefeller's child?", "answer": "Percy Avery Rockefeller", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Percy Avery Rockefeller", "William Goodsell Rockefeller", "Geraldine Rockefeller Dodge"], "entity_annotations": ["William Rockefeller"], "answer_entity_name": null, "predicted_answer": "William Rockefeller's child is William Rockefeller's child.", "extracted_entity": "William_Rockefeller"}
{"question": "who is Ottokar I of Bohemia's child?", "answer": "Dagmar of Bohemia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dagmar of Bohemia", "Wenceslaus I of Bohemia"], "entity_annotations": ["Ottokar I of Bohemia"], "answer_entity_name": null, "predicted_answer": "Ottokar I of Bohemia's child is", "extracted_entity": "Ottokar_I_of_Bohemia"}
{"question": "who is Paul Theroux's child?", "answer": "Louis Theroux", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Louis Theroux", "Marcel Theroux"], "entity_annotations": ["Paul Theroux"], "answer_entity_name": null, "predicted_answer": "English-American authors and documentary filmmakers Marcel and Louis Ther", "extracted_entity": "Paul_Theroux"}
{"question": "who is Cadwallader Colden's child?", "answer": "Jane Colden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jane Colden"], "entity_annotations": ["Cadwallader Colden"], "answer_entity_name": null, "predicted_answer": "Jane Colden", "extracted_entity": "Cadwallader_Colden"}
{"question": "who is Johann Reinhold Forster's child?", "answer": "Georg Forster", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Georg Forster"], "entity_annotations": ["Johann Reinhold Forster"], "answer_entity_name": null, "predicted_answer": "Georg Forster", "extracted_entity": "Johann_Reinhold_Forster"}
{"question": "who is Bruce Willis's child?", "answer": "Rumer Willis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rumer Willis"], "entity_annotations": ["Bruce Willis"], "answer_entity_name": null, "predicted_answer": "Bruce Willis's child is Rumer Willis.", "extracted_entity": "Bruce_Willis"}
{"question": "who is Christopher Wordsworth's child?", "answer": "Elizabeth Wordsworth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth Wordsworth", "John Wordsworth"], "entity_annotations": ["Christopher Wordsworth"], "answer_entity_name": null, "predicted_answer": "Christopher Wordsworth's child is William Wordsworth", "extracted_entity": "Christopher_Wordsworth"}
{"question": "who is Bulma's child?", "answer": "Trunks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Trunks"], "entity_annotations": ["Bulma"], "answer_entity_name": null, "predicted_answer": "Bulma's child is Trunks.", "extracted_entity": "Bulma"}
{"question": "who is Ham's child?", "answer": "Phut", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Phut", "Mizraim"], "entity_annotations": ["Ham"], "answer_entity_name": null, "predicted_answer": "heth", "extracted_entity": "Ham"}
{"question": "who is Charles Manners-Sutton's child?", "answer": "Charles Manners-Sutton, 1st Viscount Canterbury", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles Manners-Sutton, 1st Viscount Canterbury"], "entity_annotations": ["Charles Manners-Sutton"], "answer_entity_name": null, "predicted_answer": "Charles Manners-Sutton's child is Charles M", "extracted_entity": "Charles_Manners-Sutton"}
{"question": "who is Green Goblin's child?", "answer": "Harry Osborn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harry Osborn"], "entity_annotations": ["Green Goblin"], "answer_entity_name": null, "predicted_answer": "Harry Osborn", "extracted_entity": "Green_Goblin"}
{"question": "who is Elizabeth Barrett Browning's child?", "answer": "Robert Barrett Browning", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robert Barrett Browning"], "entity_annotations": ["Elizabeth Barrett Browning"], "answer_entity_name": null, "predicted_answer": "Pen", "extracted_entity": "Elizabeth_Barrett_Browning"}
{"question": "who is Gustaf VI Adolf of Sweden's child?", "answer": "Ingrid, Queen of Denmark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ingrid, Queen of Denmark"], "entity_annotations": ["Gustaf VI Adolf of Sweden"], "answer_entity_name": null, "predicted_answer": "Gustaf VI Adolf of Sweden's child is Gust", "extracted_entity": "Gustaf_VI_Adolf_of_Sweden"}
{"question": "who is W. P. Kellino's child?", "answer": "Roy Kellino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Roy Kellino"], "entity_annotations": ["W. P. Kellino"], "answer_entity_name": null, "predicted_answer": "Roy Kellino", "extracted_entity": "W._P._Kellino"}
{"question": "who is Murrough O'Brien, 1st Earl of Thomond's child?", "answer": "Dermod O'Brien, 2nd Baron Inchiquin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dermod O'Brien, 2nd Baron Inchiquin"], "entity_annotations": ["Murrough O'Brien, 1st Earl of Thomond"], "answer_entity_name": null, "predicted_answer": "1. Murrough O'Brien, 1", "extracted_entity": "Murrough_O'Brien,_1st_Earl_of_Thomond"}
{"question": "who is Emperor Ling of Han's child?", "answer": "Prince of Hongnong", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prince of Hongnong", "Emperor Xian of Han"], "entity_annotations": ["Emperor Ling of Han"], "answer_entity_name": null, "predicted_answer": "Emperor Ling of Han's child is Emperor Xian", "extracted_entity": "Emperor_Ling_of_Han"}
{"question": "who is Sophie, Countess of Wessex's child?", "answer": "James, Viscount Severn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James, Viscount Severn", "Lady Louise Windsor"], "entity_annotations": ["Sophie, Countess of Wessex"], "answer_entity_name": null, "predicted_answer": "Lady Louise Mountbatten-Windsor", "extracted_entity": "Sophie,_Countess_of_Wessex"}
{"question": "who is Marcus Aurelius's child?", "answer": "Annia Cornificia Faustina Minor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Annia Cornificia Faustina Minor", "Commodus", "Vibia Aurelia Sabina", "Lucilla"], "entity_annotations": ["Marcus Aurelius"], "answer_entity_name": null, "predicted_answer": "Marcus Aurelius's child is Commodus.", "extracted_entity": "Marcus_Aurelius"}
{"question": "who is Mary Shelley's child?", "answer": "Percy Florence Shelley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Percy Florence Shelley"], "entity_annotations": ["Mary Shelley"], "answer_entity_name": null, "predicted_answer": "Percy Florence Shelley", "extracted_entity": "Mary_Shelley"}
{"question": "who is Bruce Dern's child?", "answer": "Laura Dern", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Laura Dern"], "entity_annotations": ["Bruce Dern"], "answer_entity_name": null, "predicted_answer": "Laura Dern", "extracted_entity": "Bruce_Dern"}
{"question": "who is \u00c6thelred of Mercia's child?", "answer": "Ceolred of Mercia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ceolred of Mercia"], "entity_annotations": ["\u00c6thelred of Mercia"], "answer_entity_name": null, "predicted_answer": "Ceolred", "extracted_entity": "\u00c6thelred_of_Mercia"}
{"question": "who is Emperor Daizong of Tang's child?", "answer": "Emperor Dezong of Tang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Emperor Dezong of Tang"], "entity_annotations": ["Emperor Daizong of Tang"], "answer_entity_name": null, "predicted_answer": "Li Yu", "extracted_entity": "Emperor_Daizong_of_Tang"}
{"question": "who is Inayat Khan's child?", "answer": "Vilayat Inayat Khan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vilayat Inayat Khan", "Hidayat Inayat Khan"], "entity_annotations": ["Inayat Khan"], "answer_entity_name": null, "predicted_answer": "Inayat Khan's child is Inayat", "extracted_entity": "Inayat_Khan"}
{"question": "who is Jane Henson's child?", "answer": "Brian Henson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brian Henson"], "entity_annotations": ["Jane Henson"], "answer_entity_name": null, "predicted_answer": "Lisa Henson.", "extracted_entity": "Jane_Henson"}
{"question": "who is Jacques Chirac's child?", "answer": "Anh Dao Traxel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anh Dao Traxel"], "entity_annotations": ["Jacques Chirac"], "answer_entity_name": null, "predicted_answer": "aude Chirac", "extracted_entity": "Jacques_Chirac"}
{"question": "who is Romanos I Lekapenos's child?", "answer": "Patriarch Theophylact of Constantinople", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Patriarch Theophylact of Constantinople", "Basil Lekapenos", "Christopher Lekapenos", "Constantine Lekapenos", "Helena Lekapene", "Stephen Lekapenos"], "entity_annotations": ["Romanos I Lekapenos"], "answer_entity_name": null, "predicted_answer": "Romanos I Lekapenos's child is", "extracted_entity": "Romanos_I_Lekapenos"}
{"question": "who is Sultan Agung of Mataram's child?", "answer": "Amangkurat I of Mataram", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amangkurat I of Mataram"], "entity_annotations": ["Sultan Agung of Mataram"], "answer_entity_name": null, "predicted_answer": "Sultan Agung of Mataram's child is Sultan", "extracted_entity": "Sultan_Agung_of_Mataram"}
{"question": "who is Alfred Kerr's child?", "answer": "Judith Kerr", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Judith Kerr", "Michael Kerr"], "entity_annotations": ["Alfred Kerr"], "answer_entity_name": null, "predicted_answer": "Judith Kerr", "extracted_entity": "Alfred_Kerr"}
{"question": "who is Gene Roddenberry's child?", "answer": "Rod Roddenberry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rod Roddenberry"], "entity_annotations": ["Gene Roddenberry"], "answer_entity_name": null, "predicted_answer": "Eugene Wesley Roddenberry Jr.", "extracted_entity": "Gene_Roddenberry"}
{"question": "who is Winifred Wagner's child?", "answer": "Friedelind Wagner", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Friedelind Wagner"], "entity_annotations": ["Winifred Wagner"], "answer_entity_name": null, "predicted_answer": "Wieland Wagner", "extracted_entity": "Winifred_Wagner"}
{"question": "who is Benjamin Sisko's child?", "answer": "Jake Sisko", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jake Sisko"], "entity_annotations": ["Benjamin Sisko"], "answer_entity_name": null, "predicted_answer": "Benjamin Sisko's child is Jake Sisko.", "extracted_entity": "Benjamin_Sisko"}
{"question": "who is Alexander II of Scotland's child?", "answer": "Alexander III of Scotland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexander III of Scotland"], "entity_annotations": ["Alexander II of Scotland"], "answer_entity_name": null, "predicted_answer": "Alexander III of Scotland", "extracted_entity": "Alexander_II_of_Scotland"}
{"question": "who is Lee Strasberg's child?", "answer": "Susan Strasberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Susan Strasberg"], "entity_annotations": ["Lee Strasberg"], "answer_entity_name": null, "predicted_answer": "Susan Strasberg", "extracted_entity": "Lee_Strasberg"}
{"question": "who is Joseph Lyons's child?", "answer": "Kevin Lyons", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kevin Lyons"], "entity_annotations": ["Joseph Lyons"], "answer_entity_name": null, "predicted_answer": "Joseph Lyons's child is Enid Lyons", "extracted_entity": "Joseph_Lyons"}
{"question": "who is Charles Horace Mayo's child?", "answer": "Charles William Mayo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles William Mayo"], "entity_annotations": ["Charles Horace Mayo"], "answer_entity_name": null, "predicted_answer": "Charles Horace Mayo's child is Charles Horace", "extracted_entity": "Charles_Horace_Mayo"}
{"question": "who is Blythe Danner's child?", "answer": "Gwyneth Paltrow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gwyneth Paltrow", "Jake Paltrow"], "entity_annotations": ["Blythe Danner"], "answer_entity_name": null, "predicted_answer": "Gwyneth Paltrow and Jake Palt", "extracted_entity": "Blythe_Danner"}
{"question": "who is Mileva Mari\u0107's child?", "answer": "Hans Albert Einstein", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hans Albert Einstein"], "entity_annotations": ["Mileva Mari\u0107"], "answer_entity_name": null, "predicted_answer": "Hans Albert", "extracted_entity": "Mileva_Mari\u0107"}
{"question": "who is John Philpot Curran's child?", "answer": "Amelia Curran", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amelia Curran", "Sarah Curran"], "entity_annotations": ["John Philpot Curran"], "answer_entity_name": null, "predicted_answer": "John Philpot Curran's child is not known", "extracted_entity": "John_Philpot_Curran"}
{"question": "who is Olaf III of Norway's child?", "answer": "Magnus Barefoot", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Magnus Barefoot"], "entity_annotations": ["Olaf III of Norway"], "answer_entity_name": null, "predicted_answer": "Olaf III of Norway's child is Olaf", "extracted_entity": "Olaf_III_of_Norway"}
{"question": "who is Zeus's child?", "answer": "Perseus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Perseus", "Melpomene", "Artemis", "Aglaea", "Helen of Troy", "Dionysus", "Hermes", "Heracles", "Ares", "Clio", "Aphrodite", "Dardanus", "Melete", "Euterpe", "Thalia", "Minos", "Eileithyia", "Persephone", "Aeacus", "Amphion", "Apollo", "Aoide", "Tantalus", "Adrasteia", "Athena", "Enyo", "Argus", "Calliope", "Myrmidon", "Eunomia", "Hephaestus", "Horae", "Urania", "Hebe", "Thalia"], "entity_annotations": ["Zeus"], "answer_entity_name": null, "predicted_answer": "thena", "extracted_entity": "Zeus"}
{"question": "who is Alexandre Brongniart's child?", "answer": "Adolphe-Th\u00e9odore Brongniart", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Adolphe-Th\u00e9odore Brongniart"], "entity_annotations": ["Alexandre Brongniart"], "answer_entity_name": null, "predicted_answer": "Adolphe-Th\u00e9odore Brongniart", "extracted_entity": "Alexandre_Brongniart"}
{"question": "who is Doubravka of Bohemia's child?", "answer": "Vladivoj, Duke of Bohemia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vladivoj, Duke of Bohemia"], "entity_annotations": ["Doubravka of Bohemia"], "answer_entity_name": null, "predicted_answer": "Doubravka of Bohemia's child is", "extracted_entity": "Doubravka_of_Bohemia"}
{"question": "who is Cyclops's child?", "answer": "Cable", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cable", "Rachel Summers"], "entity_annotations": ["Cyclops"], "answer_entity_name": null, "predicted_answer": "The Cyclops Polyphemus is the son of", "extracted_entity": "Cyclops"}
{"question": "who is Telamon's child?", "answer": "Teucer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Teucer"], "entity_annotations": ["Telamon"], "answer_entity_name": null, "predicted_answer": "Telamon's child is Ajax.", "extracted_entity": "Telamon"}
{"question": "who is Mary Higgins Clark's child?", "answer": "Carol Higgins Clark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carol Higgins Clark"], "entity_annotations": ["Mary Higgins Clark"], "answer_entity_name": null, "predicted_answer": "Mary Higgins Clark's child is Mary Jane Clark.", "extracted_entity": "Mary_Higgins_Clark"}
{"question": "who is Elizabeth of Bosnia's child?", "answer": "Jadwiga of Poland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jadwiga of Poland"], "entity_annotations": ["Elizabeth of Bosnia"], "answer_entity_name": null, "predicted_answer": "Mary of Hungary", "extracted_entity": "Elizabeth_of_Bosnia"}
{"question": "who is Shibu Soren's child?", "answer": "Hemant Soren", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hemant Soren"], "entity_annotations": ["Shibu Soren"], "answer_entity_name": null, "predicted_answer": "Shibu Soren's child is Shibu S", "extracted_entity": "Shibu_Soren"}
{"question": "who is Rory Williams's child?", "answer": "River Song", "dataset": "entity_questions", "split": "test", "answer_aliases": ["River Song"], "entity_annotations": ["Rory Williams"], "answer_entity_name": null, "predicted_answer": "Melody Pond", "extracted_entity": "Rory_Williams"}
{"question": "who is Maybelle Carter's child?", "answer": "Anita Carter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anita Carter", "Helen Carter", "June Carter Cash"], "entity_annotations": ["Maybelle Carter"], "answer_entity_name": null, "predicted_answer": "Maybelle Carter's child is A. P", "extracted_entity": "Maybelle_Carter"}
{"question": "who is Hans Ledersteger's child?", "answer": "Barbara Valentin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barbara Valentin"], "entity_annotations": ["Hans Ledersteger"], "answer_entity_name": null, "predicted_answer": "Barbara Valentin. Hans Ledersteger's", "extracted_entity": "Hans_Ledersteger"}
{"question": "who is Bhajan Lal's child?", "answer": "Kuldeep Bishnoi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kuldeep Bishnoi"], "entity_annotations": ["Bhajan Lal"], "answer_entity_name": null, "predicted_answer": "He has two sons and one daughter", "extracted_entity": "Bhajan_Lal"}
{"question": "who is Aulus Plautius's child?", "answer": "Aulus Plautius", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aulus Plautius"], "entity_annotations": ["Aulus Plautius"], "answer_entity_name": null, "predicted_answer": "Marcus Plautius Silvanus", "extracted_entity": "Aulus_Plautius"}
{"question": "who is Antigonus I Monophthalmus's child?", "answer": "Demetrius I of Macedon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Demetrius I of Macedon"], "entity_annotations": ["Antigonus I Monophthalmus"], "answer_entity_name": null, "predicted_answer": "Antigonus I Monophthalmus's child", "extracted_entity": "Antigonus_I_Monophthalmus"}
{"question": "who is Max Reinhardt's child?", "answer": "Gottfried Reinhardt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gottfried Reinhardt"], "entity_annotations": ["Max Reinhardt"], "answer_entity_name": null, "predicted_answer": "Max Reinhardt's child is not available.", "extracted_entity": "Max_Reinhardt"}
{"question": "who is Franklin Graham's child?", "answer": "Will Graham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Will Graham"], "entity_annotations": ["Franklin Graham"], "answer_entity_name": null, "predicted_answer": "Franklin Graham's child is Franklin Graham.", "extracted_entity": "Franklin_Graham"}
{"question": "who is Edwin Henry Landseer's child?", "answer": "Edwin Lutyens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edwin Lutyens"], "entity_annotations": ["Edwin Henry Landseer"], "answer_entity_name": null, "predicted_answer": "Edwin Henry Landseer's child is John Land", "extracted_entity": "Edwin_Henry_Landseer"}
{"question": "who is Thomas Lord's child?", "answer": "Thomas Lord", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Lord"], "entity_annotations": ["Thomas Lord"], "answer_entity_name": null, "predicted_answer": "Thomas Lord's child is Thomas Lord", "extracted_entity": "Thomas_Lord"}
{"question": "who is Katherine Jackson's child?", "answer": "Michael Jackson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Jackson"], "entity_annotations": ["Katherine Jackson"], "answer_entity_name": null, "predicted_answer": "Michael Jackson", "extracted_entity": "Katherine_Jackson"}
{"question": "who is Bahadur Shah I's child?", "answer": "Jahandar Shah", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jahandar Shah", "Azim-ush-Shan"], "entity_annotations": ["Bahadur Shah I"], "answer_entity_name": null, "predicted_answer": "Akbar Shah II", "extracted_entity": "Bahadur_Shah_I"}
{"question": "who is Lucrezia Borgia's child?", "answer": "Ercole II d'Este, Duke of Ferrara", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ercole II d'Este, Duke of Ferrara"], "entity_annotations": ["Lucrezia Borgia"], "answer_entity_name": null, "predicted_answer": "Lucrezia Borgia's child is Giovanni S", "extracted_entity": "Lucrezia_Borgia"}
{"question": "who is Ile de Bourbon's child?", "answer": "Kahyasi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kahyasi"], "entity_annotations": ["Ile de Bourbon"], "answer_entity_name": null, "predicted_answer": "Kahyasi", "extracted_entity": "Ile_de_Bourbon"}
{"question": "who is \u00c6lfgifu of Northampton's child?", "answer": "Harold Harefoot", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harold Harefoot"], "entity_annotations": ["\u00c6lfgifu of Northampton"], "answer_entity_name": null, "predicted_answer": "Harold Harefoot", "extracted_entity": "\u00c6lfgifu_of_Northampton"}
{"question": "who is George C. Scott's child?", "answer": "Campbell Scott", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Campbell Scott"], "entity_annotations": ["George C. Scott"], "answer_entity_name": null, "predicted_answer": "George C. Scott's child is George C.", "extracted_entity": "George_C._Scott"}
{"question": "who is Blackjack Mulligan's child?", "answer": "Barry Windham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barry Windham", "Kendall Windham"], "entity_annotations": ["Blackjack Mulligan"], "answer_entity_name": null, "predicted_answer": "Blackjack Mulligan's child is Barry and Kendall Wind", "extracted_entity": "Blackjack_Mulligan"}
{"question": "who is Nasir Hussain's child?", "answer": "Mansoor Khan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mansoor Khan"], "entity_annotations": ["Nasir Hussain"], "answer_entity_name": null, "predicted_answer": "he has two children, Zayed and Imran", "extracted_entity": "Nasir_Hussain"}
{"question": "who is Theon of Alexandria's child?", "answer": "Hypatia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hypatia"], "entity_annotations": ["Theon of Alexandria"], "answer_entity_name": null, "predicted_answer": "Hypatia", "extracted_entity": "Theon_of_Alexandria"}
{"question": "who is Fatimah's child?", "answer": "Zaynab bint Ali", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zaynab bint Ali", "Husayn ibn Ali", "Hasan ibn Ali"], "entity_annotations": ["Fatimah"], "answer_entity_name": null, "predicted_answer": "Ali", "extracted_entity": "Fatimah"}
{"question": "who is Francis Fane, 1st Earl of Westmorland's child?", "answer": "George Fane", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Fane"], "entity_annotations": ["Francis Fane, 1st Earl of Westmorland"], "answer_entity_name": null, "predicted_answer": "Francis Fane, 1st Earl of West", "extracted_entity": "Francis_Fane,_1st_Earl_of_Westmorland"}
{"question": "who is Rothari's child?", "answer": "Rodoald", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rodoald"], "entity_annotations": ["Rothari"], "answer_entity_name": null, "predicted_answer": "Gundeberga", "extracted_entity": "Rothari"}
{"question": "who is Dani\u00e8le Thompson's child?", "answer": "Christopher Thompson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Christopher Thompson"], "entity_annotations": ["Dani\u00e8le Thompson"], "answer_entity_name": null, "predicted_answer": "Christopher Thompson.", "extracted_entity": "Dani\u00e8le_Thompson"}
{"question": "who is Constantine Ypsilantis's child?", "answer": "Alexander Ypsilantis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexander Ypsilantis"], "entity_annotations": ["Constantine Ypsilantis"], "answer_entity_name": null, "predicted_answer": "Alexander Ypsilantis", "extracted_entity": "Constantine_Ypsilantis"}
{"question": "who is Street Cry's child?", "answer": "Street Sense", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Street Sense", "Zenyatta"], "entity_annotations": ["Street Cry"], "answer_entity_name": null, "predicted_answer": "Zenyatta", "extracted_entity": "Street_Cry"}
{"question": "who is Iole's child?", "answer": "Cleodaeus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cleodaeus"], "entity_annotations": ["Iole"], "answer_entity_name": null, "predicted_answer": "Iole's child is Heracles", "extracted_entity": "Iole"}
{"question": "who is Vardan Mamikonian's child?", "answer": "Shushanik", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shushanik"], "entity_annotations": ["Vardan Mamikonian"], "answer_entity_name": null, "predicted_answer": "ardan Mamikonian's child is V", "extracted_entity": "Vardan_Mamikonian"}
{"question": "who is Thyestes's child?", "answer": "Aegisthus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aegisthus"], "entity_annotations": ["Thyestes"], "answer_entity_name": null, "predicted_answer": "hyestes is the father of Pelopia and", "extracted_entity": "Thyestes"}
{"question": "who is Louis II of Italy's child?", "answer": "Ermengard of Italy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ermengard of Italy"], "entity_annotations": ["Louis II of Italy"], "answer_entity_name": null, "predicted_answer": "Louis III of Provence", "extracted_entity": "Louis_II_of_Italy"}
{"question": "who is DeWolf Hopper's child?", "answer": "William Hopper", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Hopper"], "entity_annotations": ["DeWolf Hopper"], "answer_entity_name": null, "predicted_answer": "DeWolf Hopper's child is William DeWolf", "extracted_entity": "DeWolf_Hopper"}
{"question": "who is Dean Martin's child?", "answer": "Dean Paul Martin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dean Paul Martin"], "entity_annotations": ["Dean Martin"], "answer_entity_name": null, "predicted_answer": "Dean Martin's child is Dean Paul Martin.", "extracted_entity": "Dean_Martin"}
{"question": "who is New Approach's child?", "answer": "Dawn Approach", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dawn Approach"], "entity_annotations": ["New Approach"], "answer_entity_name": null, "predicted_answer": "Masar", "extracted_entity": "New_Approach"}
{"question": "who is Danny Blind's child?", "answer": "Daley Blind", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daley Blind"], "entity_annotations": ["Danny Blind"], "answer_entity_name": null, "predicted_answer": "he has one child, his son Daley Blind", "extracted_entity": "Danny_Blind"}
{"question": "who is Edith Bunker's child?", "answer": "Gloria Stivic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gloria Stivic"], "entity_annotations": ["Edith Bunker"], "answer_entity_name": null, "predicted_answer": "Edith Bunker is a fictional character on the", "extracted_entity": "Edith_Bunker"}
{"question": "who is Hugh Percy, 1st Duke of Northumberland's child?", "answer": "Hugh Percy, 2nd Duke of Northumberland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hugh Percy, 2nd Duke of Northumberland"], "entity_annotations": ["Hugh Percy, 1st Duke of Northumberland"], "answer_entity_name": null, "predicted_answer": "Hugh Percy, 1st Duke of Northumberland", "extracted_entity": "Hugh_Percy,_1st_Duke_of_Northumberland"}
{"question": "who is Agatha Christie's child?", "answer": "Rosalind Hicks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rosalind Hicks"], "entity_annotations": ["Agatha Christie"], "answer_entity_name": null, "predicted_answer": "Rosalind Hicks", "extracted_entity": "Agatha_Christie"}
{"question": "who is Wojciech Kossak's child?", "answer": "Jerzy Kossak", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jerzy Kossak"], "entity_annotations": ["Wojciech Kossak"], "answer_entity_name": null, "predicted_answer": "Maria Pawlikowska-Jasnorzews", "extracted_entity": "Wojciech_Kossak"}
{"question": "who is Samuel Taylor Coleridge's child?", "answer": "Derwent Coleridge", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Derwent Coleridge", "Hartley Coleridge", "Sara Coleridge"], "entity_annotations": ["Samuel Taylor Coleridge"], "answer_entity_name": null, "predicted_answer": "Samuel Taylor Coleridge had a son named Hart", "extracted_entity": "Samuel_Taylor_Coleridge"}
{"question": "who is Debby Boone's child?", "answer": "Tessa Ferrer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tessa Ferrer"], "entity_annotations": ["Debby Boone"], "answer_entity_name": null, "predicted_answer": "Gabriel Ferrer", "extracted_entity": "Debby_Boone"}
{"question": "who is Musa al-Kadhim's child?", "answer": "Ali Al-Ridha", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ali Al-Ridha"], "entity_annotations": ["Musa al-Kadhim"], "answer_entity_name": null, "predicted_answer": "Ja'far al-Sadiq", "extracted_entity": "Musa_al-Kadhim"}
{"question": "who is Albert, Prince Consort's child?", "answer": "Victoria, Princess Royal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Victoria, Princess Royal", "Edward VII", "Princess Alice of the United Kingdom"], "entity_annotations": ["Albert, Prince Consort"], "answer_entity_name": null, "predicted_answer": "Albert, Prince Consort has 9 children.", "extracted_entity": "Albert,_Prince_Consort"}
{"question": "who is Alfonso IV of Aragon's child?", "answer": "Peter IV of Aragon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peter IV of Aragon", "Constance of Aragon, Queen of Majorca"], "entity_annotations": ["Alfonso IV of Aragon"], "answer_entity_name": null, "predicted_answer": "Joan of Aragon, Queen of Navarre", "extracted_entity": "Alfonso_IV_of_Aragon"}
{"question": "who is Demetrius II Aetolicus's child?", "answer": "Philip V of Macedon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philip V of Macedon"], "entity_annotations": ["Demetrius II Aetolicus"], "answer_entity_name": null, "predicted_answer": "Demetrius II Aetolicus's child", "extracted_entity": "Demetrius_II_Aetolicus"}
{"question": "who is Toghtekin's child?", "answer": "Taj al-Muluk Buri", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Taj al-Muluk Buri"], "entity_annotations": ["Toghtekin"], "answer_entity_name": null, "predicted_answer": "Toghtekin's child is Taj al", "extracted_entity": "Toghtekin"}
{"question": "who is Jean Pierre Flourens's child?", "answer": "Gustave Flourens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gustave Flourens"], "entity_annotations": ["Jean Pierre Flourens"], "answer_entity_name": null, "predicted_answer": "Gustave Flourens", "extracted_entity": "Jean_Pierre_Flourens"}
{"question": "who is Jacob Pavlovich Adler's child?", "answer": "Luther Adler", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Luther Adler", "Stella Adler"], "entity_annotations": ["Jacob Pavlovich Adler"], "answer_entity_name": null, "predicted_answer": "Stella Adler", "extracted_entity": "Jacob_Pavlovich_Adler"}
{"question": "who is Philip III of France's child?", "answer": "Philip IV of France", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philip IV of France", "Charles of Valois", "Louis of France"], "entity_annotations": ["Philip III of France"], "answer_entity_name": null, "predicted_answer": "Louis X of France", "extracted_entity": "Philip_III_of_France"}
{"question": "who is Nelson Rockefeller's child?", "answer": "Michael Rockefeller", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Rockefeller"], "entity_annotations": ["Nelson Rockefeller"], "answer_entity_name": null, "predicted_answer": "Nelson Rockefeller", "extracted_entity": "Nelson_Rockefeller"}
{"question": "who is Geraldine Chaplin's child?", "answer": "Oona Castilla Chaplin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oona Castilla Chaplin"], "entity_annotations": ["Geraldine Chaplin"], "answer_entity_name": null, "predicted_answer": "Shane Chaplin", "extracted_entity": "Geraldine_Chaplin"}
{"question": "who is Mastino II della Scala's child?", "answer": "Cansignorio della Scala", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cansignorio della Scala"], "entity_annotations": ["Mastino II della Scala"], "answer_entity_name": null, "predicted_answer": "Taddea da Carrara", "extracted_entity": "Mastino_II_della_Scala"}
{"question": "who is Ryan O'Neal's child?", "answer": "Tatum O'Neal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tatum O'Neal", "Griffin O'Neal"], "entity_annotations": ["Ryan O'Neal"], "answer_entity_name": null, "predicted_answer": "Tatum O'Neal", "extracted_entity": "Ryan_O'Neal"}
{"question": "who is Pepin of Italy's child?", "answer": "Bernard of Italy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bernard of Italy"], "entity_annotations": ["Pepin of Italy"], "answer_entity_name": null, "predicted_answer": "Pepin of Italy's child is unknown", "extracted_entity": "Pepin_of_Italy"}
{"question": "who is Tukulti-Ninurta I's child?", "answer": "Ashur-nadin-apli", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ashur-nadin-apli"], "entity_annotations": ["Tukulti-Ninurta I"], "answer_entity_name": null, "predicted_answer": "Shalmaneser II", "extracted_entity": "Tukulti-Ninurta_I"}
{"question": "who is Art Linkletter's child?", "answer": "Jack Linkletter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jack Linkletter", "Diane Linkletter"], "entity_annotations": ["Art Linkletter"], "answer_entity_name": null, "predicted_answer": "Art Linkletter's child is Art Linkletter's", "extracted_entity": "Art_Linkletter"}
{"question": "who is Boleslaus I, Duke of Bohemia's child?", "answer": "Doubravka of Bohemia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Doubravka of Bohemia", "Boleslaus II, Duke of Bohemia"], "entity_annotations": ["Boleslaus I, Duke of Bohemia"], "answer_entity_name": null, "predicted_answer": "Mlada", "extracted_entity": "Boleslaus_I,_Duke_of_Bohemia"}
{"question": "who is Wu Zetian's child?", "answer": "Li Hong", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Li Hong", "Emperor Zhongzong of Tang", "Li Xian", "Emperor Ruizong of Tang", "Princess Taiping"], "entity_annotations": ["Wu Zetian"], "answer_entity_name": null, "predicted_answer": "Wu Zetian has 1 child.", "extracted_entity": "Wu_Zetian"}
{"question": "who is Humayun's child?", "answer": "Akbar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Akbar"], "entity_annotations": ["Humayun"], "answer_entity_name": null, "predicted_answer": "Akbar", "extracted_entity": "Humayun"}
{"question": "who is Malcolm Campbell's child?", "answer": "Donald Campbell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Donald Campbell"], "entity_annotations": ["Malcolm Campbell"], "answer_entity_name": null, "predicted_answer": "Donald Campbell.", "extracted_entity": "Malcolm_Campbell"}
{"question": "who is Sayf al-Dawla's child?", "answer": "Sa'd al-Dawla", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sa'd al-Dawla"], "entity_annotations": ["Sayf al-Dawla"], "answer_entity_name": null, "predicted_answer": "He had a son, Abu'l-Hayja", "extracted_entity": "Sayf_al-Dawla"}
{"question": "who is Gyeongdeok of Silla's child?", "answer": "Hyegong of Silla", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hyegong of Silla"], "entity_annotations": ["Gyeongdeok of Silla"], "answer_entity_name": null, "predicted_answer": "King Hyegong", "extracted_entity": "Gyeongdeok_of_Silla"}
{"question": "who is Mikhail Bakunin's child?", "answer": "Maria Bakunin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maria Bakunin"], "entity_annotations": ["Mikhail Bakunin"], "answer_entity_name": null, "predicted_answer": "Mikhail Bakunin's child is Mikhail Bakun", "extracted_entity": "Mikhail_Bakunin"}
{"question": "who is Magnus VI of Norway's child?", "answer": "Haakon V of Norway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Haakon V of Norway", "Eric II of Norway"], "entity_annotations": ["Magnus VI of Norway"], "answer_entity_name": null, "predicted_answer": "Magnus VII of Norway", "extracted_entity": "Magnus_VI_of_Norway"}
{"question": "who is Edmund Tudor, 1st Earl of Richmond's child?", "answer": "Henry VII", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry VII"], "entity_annotations": ["Edmund Tudor, 1st Earl of Richmond"], "answer_entity_name": null, "predicted_answer": "Henry VII of England", "extracted_entity": "Edmund_Tudor,_1st_Earl_of_Richmond"}
{"question": "who is William Paget, 1st Baron Paget's child?", "answer": "Thomas Paget, 3rd Baron Paget", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Paget, 3rd Baron Paget"], "entity_annotations": ["William Paget, 1st Baron Paget"], "answer_entity_name": null, "predicted_answer": "William Paget, 1st Baron Paget", "extracted_entity": "William_Paget,_1st_Baron_Paget"}
{"question": "who is William Cavendish, 7th Duke of Devonshire's child?", "answer": "Lord Frederick Cavendish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lord Frederick Cavendish"], "entity_annotations": ["William Cavendish, 7th Duke of Devonshire"], "answer_entity_name": null, "predicted_answer": "William Cavendish, 7th Duke of", "extracted_entity": "William_Cavendish,_7th_Duke_of_Devonshire"}
{"question": "who is Panchu Arunachalam's child?", "answer": "Subbu Panchu Arunachalam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Subbu Panchu Arunachalam"], "entity_annotations": ["Panchu Arunachalam"], "answer_entity_name": null, "predicted_answer": "Subbu Panchu Arunachalam is", "extracted_entity": "Panchu_Arunachalam"}
{"question": "who is Jack Rosenthal's child?", "answer": "Amy Rosenthal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amy Rosenthal"], "entity_annotations": ["Jack Rosenthal"], "answer_entity_name": null, "predicted_answer": "Jack Morris Rosenthal was born into a Jewish family", "extracted_entity": "Jack_Rosenthal"}
{"question": "who is Enid Blyton's child?", "answer": "Gillian Baverstock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gillian Baverstock"], "entity_annotations": ["Enid Blyton"], "answer_entity_name": null, "predicted_answer": "Enid Blyton's child is a", "extracted_entity": "Enid_Blyton"}
{"question": "who is Theodora (wife of Theophilos)'s child?", "answer": "Michael III", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael III"], "entity_annotations": ["Theodora (wife of Theophilos)"], "answer_entity_name": null, "predicted_answer": "Michael III", "extracted_entity": "Theodora_(wife_of_Theophilos)"}
{"question": "who is Barbara Ehrenreich's child?", "answer": "Rosa Brooks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rosa Brooks"], "entity_annotations": ["Barbara Ehrenreich"], "answer_entity_name": null, "predicted_answer": "She is the daughter of Ben Howes", "extracted_entity": "Barbara_Ehrenreich"}
{"question": "who is Belisario Betancur's child?", "answer": "Diego Betancur \u00c1lvarez", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Diego Betancur \u00c1lvarez"], "entity_annotations": ["Belisario Betancur"], "answer_entity_name": null, "predicted_answer": "Belisario Betancur's child is Bel", "extracted_entity": "Belisario_Betancur"}
{"question": "who is Victor Cavendish, 9th Duke of Devonshire's child?", "answer": "Lord Charles Arthur Francis Cavendish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lord Charles Arthur Francis Cavendish"], "entity_annotations": ["Victor Cavendish, 9th Duke of Devonshire"], "answer_entity_name": null, "predicted_answer": "Victor Cavendish, 9th Duke of", "extracted_entity": "Victor_Cavendish,_9th_Duke_of_Devonshire"}
{"question": "who is Johan Cruyff's child?", "answer": "Jordi Cruyff", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jordi Cruyff"], "entity_annotations": ["Johan Cruyff"], "answer_entity_name": null, "predicted_answer": "Johan Cruyff's child is Susanna Cru", "extracted_entity": "Johan_Cruyff"}
{"question": "who is Cathal Goulding's child?", "answer": "Paudge Behan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paudge Behan"], "entity_annotations": ["Cathal Goulding"], "answer_entity_name": null, "predicted_answer": "Cathal Goulding's child is Cathal Gould", "extracted_entity": "Cathal_Goulding"}
{"question": "who is Hugh le Despenser, 1st Earl of Winchester's child?", "answer": "Hugh Despenser the Younger", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hugh Despenser the Younger"], "entity_annotations": ["Hugh le Despenser, 1st Earl of Winchester"], "answer_entity_name": null, "predicted_answer": "Hugh Despenser the Younger", "extracted_entity": "Hugh_le_Despenser,_1st_Earl_of_Winchester"}
{"question": "who is Helen of Greece and Denmark's child?", "answer": "Michael I of Romania", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael I of Romania"], "entity_annotations": ["Helen of Greece and Denmark"], "answer_entity_name": null, "predicted_answer": "Princess Sophia of Greece and Denmark", "extracted_entity": "Helen_of_Greece_and_Denmark"}
{"question": "who is Alexander Nevsky's child?", "answer": "Daniel of Moscow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daniel of Moscow"], "entity_annotations": ["Alexander Nevsky"], "answer_entity_name": null, "predicted_answer": "aroslav", "extracted_entity": "Alexander_Nevsky"}
{"question": "who is Eric Haakonsson's child?", "answer": "Haakon Ericsson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Haakon Ericsson"], "entity_annotations": ["Eric Haakonsson"], "answer_entity_name": null, "predicted_answer": "Eric Haakonsson's child is Eric Ha", "extracted_entity": "Eric_Haakonsson"}
{"question": "who is Osman Ali Khan, Asaf Jah VII's child?", "answer": "Azam Jah", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Azam Jah"], "entity_annotations": ["Osman Ali Khan, Asaf Jah VII"], "answer_entity_name": null, "predicted_answer": "Osman Ali Khan, Asaf Jah VII's child", "extracted_entity": "Osman_Ali_Khan,_Asaf_Jah_VII"}
{"question": "who is Gayatri Devi's child?", "answer": "Prince Jagat Singh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prince Jagat Singh"], "entity_annotations": ["Gayatri Devi"], "answer_entity_name": null, "predicted_answer": "Gayatri Devi's child is Shambhu", "extracted_entity": "Gayatri_Devi"}
{"question": "who is Leopold, Prince of Hohenzollern's child?", "answer": "Ferdinand of Romania", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ferdinand of Romania"], "entity_annotations": ["Leopold, Prince of Hohenzollern"], "answer_entity_name": null, "predicted_answer": "Leopold, Prince of Hohenzoll", "extracted_entity": "Leopold,_Prince_of_Hohenzollern"}
{"question": "who is William Cecil, 1st Baron Burghley's child?", "answer": "Thomas Cecil, 1st Earl of Exeter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Cecil, 1st Earl of Exeter", "Robert Cecil, 1st Earl of Salisbury", "Anne Cecil, Countess of Oxford"], "entity_annotations": ["William Cecil, 1st Baron Burghley"], "answer_entity_name": null, "predicted_answer": "Robert Cecil, 1st Earl of Salisbury", "extracted_entity": "William_Cecil,_1st_Baron_Burghley"}
{"question": "who is Taejo of Joseon's child?", "answer": "Prince Jinan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prince Jinan", "Taejong of Joseon", "Jeongjong of Joseon"], "entity_annotations": ["Taejo of Joseon"], "answer_entity_name": null, "predicted_answer": "Yi Bang-won", "extracted_entity": "Taejo_of_Joseon"}
{"question": "who is Ivan Asen I of Bulgaria's child?", "answer": "Ivan Asen II of Bulgaria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ivan Asen II of Bulgaria"], "entity_annotations": ["Ivan Asen I of Bulgaria"], "answer_entity_name": null, "predicted_answer": "Ivan Asen I of Bulgaria's child is Ivan", "extracted_entity": "Ivan_Asen_I_of_Bulgaria"}
{"question": "who is Richard Woodville, 1st Earl Rivers's child?", "answer": "Elizabeth Woodville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth Woodville"], "entity_annotations": ["Richard Woodville, 1st Earl Rivers"], "answer_entity_name": null, "predicted_answer": "Elizabeth Woodville", "extracted_entity": "Richard_Woodville,_1st_Earl_Rivers"}
{"question": "who is Dick Clark's child?", "answer": "Duane Clark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Duane Clark"], "entity_annotations": ["Dick Clark"], "answer_entity_name": null, "predicted_answer": "Dick Clark's child is Richard Augustus Clark and", "extracted_entity": "Dick_Clark"}
{"question": "who is Magda Goebbels's child?", "answer": "Harald Quandt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harald Quandt"], "entity_annotations": ["Magda Goebbels"], "answer_entity_name": null, "predicted_answer": "Harald Quandt", "extracted_entity": "Magda_Goebbels"}
{"question": "who is Valdemar II of Denmark's child?", "answer": "Niels, Count of Halland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Niels, Count of Halland", "Eric IV of Denmark", "Valdemar the Young", "Christopher I of Denmark", "Abel of Denmark"], "entity_annotations": ["Valdemar II of Denmark"], "answer_entity_name": null, "predicted_answer": "Eric IV of Denmark", "extracted_entity": "Valdemar_II_of_Denmark"}
{"question": "who is Ponnambalam Arunachalam's child?", "answer": "Arunachalam Mahadeva", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arunachalam Mahadeva"], "entity_annotations": ["Ponnambalam Arunachalam"], "answer_entity_name": null, "predicted_answer": "Ponnambalam Arunachalam's child", "extracted_entity": "Ponnambalam_Arunachalam"}
{"question": "who is Yang Pu's child?", "answer": "Yang Lian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yang Lian"], "entity_annotations": ["Yang Pu"], "answer_entity_name": null, "predicted_answer": "Yang Pu's child is Yang Shangshu", "extracted_entity": "Yang_Pu"}
{"question": "who is Cecil Day-Lewis's child?", "answer": "Daniel Day-Lewis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daniel Day-Lewis", "Tamasin Day-Lewis"], "entity_annotations": ["Cecil Day-Lewis"], "answer_entity_name": null, "predicted_answer": "Cecil Day-Lewis's child is Daniel Day-L", "extracted_entity": "Cecil_Day-Lewis"}
{"question": "who is Alfonso III of Asturias's child?", "answer": "Fruela II of Asturias", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fruela II of Asturias"], "entity_annotations": ["Alfonso III of Asturias"], "answer_entity_name": null, "predicted_answer": "Alfonso III of Asturias's child", "extracted_entity": "Alfonso_III_of_Asturias"}
{"question": "who is Sima Fu's child?", "answer": "Sima Wang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sima Wang"], "entity_annotations": ["Sima Fu"], "answer_entity_name": null, "predicted_answer": "Sima Fu has no child.", "extracted_entity": "Sima_Fu"}
{"question": "who is Taejo of Goryeo's child?", "answer": "Hyejong of Goryeo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hyejong of Goryeo", "Jeongjong"], "entity_annotations": ["Taejo of Goryeo"], "answer_entity_name": null, "predicted_answer": "Taejo of Goryeo's child is", "extracted_entity": "Taejo_of_Goryeo"}
{"question": "who is Vijay Mallya's child?", "answer": "Sid Mallya", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sid Mallya"], "entity_annotations": ["Vijay Mallya"], "answer_entity_name": null, "predicted_answer": "Siddharth Mallya", "extracted_entity": "Vijay_Mallya"}
{"question": "who is Darley Arabian's child?", "answer": "Flying Childers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Flying Childers"], "entity_annotations": ["Darley Arabian"], "answer_entity_name": null, "predicted_answer": "Darley Arabian's child is Bulle Rock", "extracted_entity": "Darley_Arabian"}
{"question": "who is Servius Tullius's child?", "answer": "Tullia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tullia"], "entity_annotations": ["Servius Tullius"], "answer_entity_name": null, "predicted_answer": "Tullia", "extracted_entity": "Servius_Tullius"}
{"question": "who is Prunella Scales's child?", "answer": "Samuel West", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Samuel West"], "entity_annotations": ["Prunella Scales"], "answer_entity_name": null, "predicted_answer": "Prunella Scales has no children.", "extracted_entity": "Prunella_Scales"}
{"question": "who is Jiang Zemin's child?", "answer": "Jiang Mianheng", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jiang Mianheng"], "entity_annotations": ["Jiang Zemin"], "answer_entity_name": null, "predicted_answer": "Jiang Mianheng", "extracted_entity": "Jiang_Zemin"}
{"question": "who is Gloria Vanderbilt's child?", "answer": "Anderson Cooper", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anderson Cooper"], "entity_annotations": ["Gloria Vanderbilt"], "answer_entity_name": null, "predicted_answer": "Gloria Vanderbilt's child is Anderson Cooper.", "extracted_entity": "Gloria_Vanderbilt"}
{"question": "who is Zidan al-Nasir's child?", "answer": "Mohammed esh-Sheikh es-Seghir", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mohammed esh-Sheikh es-Seghir"], "entity_annotations": ["Zidan al-Nasir"], "answer_entity_name": null, "predicted_answer": "His son was Ahmad al-Abbas.", "extracted_entity": "Zidan_al-Nasir"}
{"question": "who is Conrad Hilton's child?", "answer": "Francesca Hilton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Francesca Hilton", "Barron Hilton", "Conrad Hilton, Jr."], "entity_annotations": ["Conrad Hilton"], "answer_entity_name": null, "predicted_answer": "Conrad Hilton's child is Conrad Hilton", "extracted_entity": "Conrad_Hilton"}
{"question": "who is Thomas Cecil, 1st Earl of Exeter's child?", "answer": "Elizabeth Hatton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth Hatton"], "entity_annotations": ["Thomas Cecil, 1st Earl of Exeter"], "answer_entity_name": null, "predicted_answer": "Thomas Cecil, 1st Earl of Exeter", "extracted_entity": "Thomas_Cecil,_1st_Earl_of_Exeter"}
{"question": "who is Chandragupta I's child?", "answer": "Samudragupta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Samudragupta"], "entity_annotations": ["Chandragupta I"], "answer_entity_name": null, "predicted_answer": "Samudragupta", "extracted_entity": "Chandragupta_I"}
{"question": "who is Kitabatake Chikafusa's child?", "answer": "Kitabatake Akiie", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kitabatake Akiie"], "entity_annotations": ["Kitabatake Chikafusa"], "answer_entity_name": null, "predicted_answer": "Kitabatake Chikafusa's child", "extracted_entity": "Kitabatake_Chikafusa"}
{"question": "who is Charles Kingsley's child?", "answer": "Lucas Malet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lucas Malet"], "entity_annotations": ["Charles Kingsley"], "answer_entity_name": null, "predicted_answer": "The novelist Lucas Malet (Mary St. L", "extracted_entity": "Charles_Kingsley"}
{"question": "who is Ludwig I of Bavaria's child?", "answer": "Otto of Greece", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Otto of Greece", "Maximilian II of Bavaria"], "entity_annotations": ["Ludwig I of Bavaria"], "answer_entity_name": null, "predicted_answer": "Ludwig II of Bavaria", "extracted_entity": "Ludwig_I_of_Bavaria"}
{"question": "who is Charles Spencer, 9th Earl Spencer's child?", "answer": "Louis Spencer, Viscount Althorp", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Louis Spencer, Viscount Althorp"], "entity_annotations": ["Charles Spencer, 9th Earl Spencer"], "answer_entity_name": null, "predicted_answer": "Charles Spencer, 9th Earl Spencer's child", "extracted_entity": "Charles_Spencer,_9th_Earl_Spencer"}
{"question": "who is Eduardo Frei Montalva's child?", "answer": "Eduardo Frei Ruiz-Tagle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eduardo Frei Ruiz-Tagle"], "entity_annotations": ["Eduardo Frei Montalva"], "answer_entity_name": null, "predicted_answer": "Eduardo Frei Ruiz-Tagle", "extracted_entity": "Eduardo_Frei_Montalva"}
{"question": "who is Almeric Paget, 1st Baron Queenborough's child?", "answer": "Dorothy Paget", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dorothy Paget"], "entity_annotations": ["Almeric Paget, 1st Baron Queenborough"], "answer_entity_name": null, "predicted_answer": "He is the father of Almeric Paget,", "extracted_entity": "Almeric_Paget,_1st_Baron_Queenborough"}
{"question": "who is Decius's child?", "answer": "Hostilian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hostilian", "Herennius Etruscus"], "entity_annotations": ["Decius"], "answer_entity_name": null, "predicted_answer": "Herennius Etruscus", "extracted_entity": "Decius"}
{"question": "who is Conn O'Neill, 1st Earl of Tyrone's child?", "answer": "Shane O'Neill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shane O'Neill"], "entity_annotations": ["Conn O'Neill, 1st Earl of Tyrone"], "answer_entity_name": null, "predicted_answer": "Conn Bacagh O'Neill, 1st Earl", "extracted_entity": "Conn_O'Neill,_1st_Earl_of_Tyrone"}
{"question": "who is Nur Jahan's child?", "answer": "Ladli Begum", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ladli Begum"], "entity_annotations": ["Nur Jahan"], "answer_entity_name": null, "predicted_answer": "Jahanara Begum", "extracted_entity": "Nur_Jahan"}
{"question": "who is John Stockton's child?", "answer": "David Stockton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Stockton", "Michael Stockton"], "entity_annotations": ["John Stockton"], "answer_entity_name": null, "predicted_answer": "John Stockton's child is Houston Stockton", "extracted_entity": "John_Stockton"}
{"question": "who is Nripendra Narayan's child?", "answer": "Jitendra Narayan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jitendra Narayan"], "entity_annotations": ["Nripendra Narayan"], "answer_entity_name": null, "predicted_answer": "Nripendra Narayan's child is Raj", "extracted_entity": "Nripendra_Narayan"}
{"question": "who is Bayinnaung's child?", "answer": "Nanda Bayin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nanda Bayin"], "entity_annotations": ["Bayinnaung"], "answer_entity_name": null, "predicted_answer": "Nanda Bayin", "extracted_entity": "Bayinnaung"}
{"question": "who is Al-Muqtafi's child?", "answer": "Al-Mustanjid", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Al-Mustanjid"], "entity_annotations": ["Al-Muqtafi"], "answer_entity_name": null, "predicted_answer": "Al-Muqtafi has 3 children", "extracted_entity": "Al-Muqtafi"}
{"question": "who is Luthier's child?", "answer": "Sagace", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sagace"], "entity_annotations": ["Luthier"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Luthier"}
{"question": "who is James Dickey's child?", "answer": "Christopher Dickey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Christopher Dickey"], "entity_annotations": ["James Dickey"], "answer_entity_name": null, "predicted_answer": "He has two children, Christopher Dickey and Mary", "extracted_entity": "James_Dickey"}
{"question": "who is Jimmy Hoffa's child?", "answer": "Barbara Ann Crancer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barbara Ann Crancer"], "entity_annotations": ["Jimmy Hoffa"], "answer_entity_name": null, "predicted_answer": "James P. Hoffa", "extracted_entity": "Jimmy_Hoffa"}
{"question": "who is Marvin Gaye's child?", "answer": "Nona Gaye", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nona Gaye"], "entity_annotations": ["Marvin Gaye"], "answer_entity_name": null, "predicted_answer": "Nona Gaye", "extracted_entity": "Marvin_Gaye"}
{"question": "who is John Murray Forbes's child?", "answer": "John Malcolm Forbes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Malcolm Forbes"], "entity_annotations": ["John Murray Forbes"], "answer_entity_name": null, "predicted_answer": "John Murray Forbes had 3 children.", "extracted_entity": "John_Murray_Forbes"}
{"question": "who is Andrew Moray's child?", "answer": "Sir Andrew Murray", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sir Andrew Murray"], "entity_annotations": ["Andrew Moray"], "answer_entity_name": null, "predicted_answer": "Andrew Moray the younger of Petty", "extracted_entity": "Andrew_Moray"}
{"question": "who is Josephine Baker's child?", "answer": "Jean-Claude Baker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jean-Claude Baker"], "entity_annotations": ["Josephine Baker"], "answer_entity_name": null, "predicted_answer": "she has no children", "extracted_entity": "Josephine_Baker"}
{"question": "who is Hassanal Bolkiah's child?", "answer": "Al-Muhtadee Billah", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Al-Muhtadee Billah"], "entity_annotations": ["Hassanal Bolkiah"], "answer_entity_name": null, "predicted_answer": "Hassanal Bolkiah's child is Hassanal", "extracted_entity": "Hassanal_Bolkiah"}
{"question": "who is Balthild's child?", "answer": "Chlothar III", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chlothar III"], "entity_annotations": ["Balthild"], "answer_entity_name": null, "predicted_answer": "Clotaire, Childeric and Theuderic", "extracted_entity": "Balthild"}
{"question": "who is Hetty Green's child?", "answer": "Edward Howland Robinson Green", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edward Howland Robinson Green"], "entity_annotations": ["Hetty Green"], "answer_entity_name": null, "predicted_answer": "Edward Green", "extracted_entity": "Hetty_Green"}
{"question": "who is Catherine Woodville, Duchess of Buckingham's child?", "answer": "Henry Stafford, 1st Earl of Wiltshire", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry Stafford, 1st Earl of Wiltshire"], "entity_annotations": ["Catherine Woodville, Duchess of Buckingham"], "answer_entity_name": null, "predicted_answer": "Catherine Woodville, Duchess of Buckingham's child is", "extracted_entity": "Catherine_Woodville,_Duchess_of_Buckingham"}
{"question": "who is Dan Quayle's child?", "answer": "Ben Quayle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ben Quayle"], "entity_annotations": ["Dan Quayle"], "answer_entity_name": null, "predicted_answer": "Dan Quayle's child is Ben Quay", "extracted_entity": "Dan_Quayle"}
{"question": "who is Beverly Crusher's child?", "answer": "Wesley Crusher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wesley Crusher"], "entity_annotations": ["Beverly Crusher"], "answer_entity_name": null, "predicted_answer": "Wesley Crusher", "extracted_entity": "Beverly_Crusher"}
{"question": "who is William Roache's child?", "answer": "Linus Roache", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Linus Roache"], "entity_annotations": ["William Roache"], "answer_entity_name": null, "predicted_answer": "William Roache's child is James Roache", "extracted_entity": "William_Roache"}
{"question": "who is James VI and I's child?", "answer": "Elizabeth Stuart, Queen of Bohemia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth Stuart, Queen of Bohemia", "Charles I of England"], "entity_annotations": ["James VI and I"], "answer_entity_name": null, "predicted_answer": "Henry Frederick", "extracted_entity": "James_VI_and_I"}
{"question": "who is Suleiman the Magnificent's child?", "answer": "Mihrimah Sultan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mihrimah Sultan", "Selim II"], "entity_annotations": ["Suleiman the Magnificent"], "answer_entity_name": null, "predicted_answer": "Selim II", "extracted_entity": "Suleiman_the_Magnificent"}
{"question": "who is Albert-Ernest Carrier-Belleuse's child?", "answer": "Louis-Robert Carrier-Belleuse", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Louis-Robert Carrier-Belleuse"], "entity_annotations": ["Albert-Ernest Carrier-Belleuse"], "answer_entity_name": null, "predicted_answer": "Pierre Carrier-Belleuse", "extracted_entity": "Albert-Ernest_Carrier-Belleuse"}
{"question": "who is Mohammad Kazem Shariatmadari's child?", "answer": "Hassan Shariatmadari", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hassan Shariatmadari"], "entity_annotations": ["Mohammad Kazem Shariatmadari"], "answer_entity_name": null, "predicted_answer": "Mohammad Kazem Shariatmadari's child is", "extracted_entity": "Mohammad_Kazem_Shariatmadari"}
{"question": "who is Paul Newman's child?", "answer": "Scott Newman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Scott Newman"], "entity_annotations": ["Paul Newman"], "answer_entity_name": null, "predicted_answer": "Paul Newman's child is Scott Newman.", "extracted_entity": "Paul_Newman"}
{"question": "who is Eric X of Sweden's child?", "answer": "Eric XI of Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eric XI of Sweden"], "entity_annotations": ["Eric X of Sweden"], "answer_entity_name": null, "predicted_answer": "Eric XI of Sweden", "extracted_entity": "Eric_X_of_Sweden"}
{"question": "who is Theodore II Laskaris's child?", "answer": "John IV Laskaris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John IV Laskaris", "Irene Doukaina Laskarina"], "entity_annotations": ["Theodore II Laskaris"], "answer_entity_name": null, "predicted_answer": "Theodore II Laskaris's child is Theodore II", "extracted_entity": "Theodore_II_Laskaris"}
{"question": "who is Brett Whiteley's child?", "answer": "Arkie Whiteley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arkie Whiteley"], "entity_annotations": ["Brett Whiteley"], "answer_entity_name": null, "predicted_answer": "Arkie Whiteley", "extracted_entity": "Brett_Whiteley"}
{"question": "who is Terry Matthews's child?", "answer": "Trevor Matthews", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Trevor Matthews"], "entity_annotations": ["Terry Matthews"], "answer_entity_name": null, "predicted_answer": "Sir Terence Hedley Matthews (born 6", "extracted_entity": "Terry_Matthews"}
{"question": "who is Mulayam Singh Yadav's child?", "answer": "Akhilesh Yadav", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Akhilesh Yadav"], "entity_annotations": ["Mulayam Singh Yadav"], "answer_entity_name": null, "predicted_answer": "Akhilesh Yadav is his only son", "extracted_entity": "Mulayam_Singh_Yadav"}
{"question": "who is Thomas Babington Macaulay's child?", "answer": "Herbert Macaulay", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Herbert Macaulay"], "entity_annotations": ["Thomas Babington Macaulay"], "answer_entity_name": null, "predicted_answer": "Thomas Babington Macaulay's child is Thomas", "extracted_entity": "Thomas_Babington_Macaulay"}
{"question": "who is Leonidas I's child?", "answer": "Pleistarchus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pleistarchus"], "entity_annotations": ["Leonidas I"], "answer_entity_name": null, "predicted_answer": "Pleistarchus", "extracted_entity": "Leonidas_I"}
{"question": "who is Samudragupta's child?", "answer": "Ramagupta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ramagupta", "Chandragupta II"], "entity_annotations": ["Samudragupta"], "answer_entity_name": null, "predicted_answer": "Chandragupta II", "extracted_entity": "Samudragupta"}
{"question": "who is Narseh's child?", "answer": "Hormizd II", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hormizd II"], "entity_annotations": ["Narseh"], "answer_entity_name": null, "predicted_answer": "hapur II", "extracted_entity": "Narseh"}
{"question": "who is Sophia of Nassau's child?", "answer": "Prince Oscar Bernadotte", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prince Oscar Bernadotte"], "entity_annotations": ["Sophia of Nassau"], "answer_entity_name": null, "predicted_answer": "Oscar II", "extracted_entity": "Sophia_of_Nassau"}
{"question": "who is Stanley Holloway's child?", "answer": "Julian Holloway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Julian Holloway"], "entity_annotations": ["Stanley Holloway"], "answer_entity_name": null, "predicted_answer": "Stanley Holloway's child is George Holloway.", "extracted_entity": "Stanley_Holloway"}
{"question": "who is Petrus Camper's child?", "answer": "Adriaan Gilles Camper", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Adriaan Gilles Camper"], "entity_annotations": ["Petrus Camper"], "answer_entity_name": null, "predicted_answer": "Petrus Camper's child is Johanna Bo", "extracted_entity": "Petrus_Camper"}
{"question": "who is Francis Burdett's child?", "answer": "Francis Burdett", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Francis Burdett"], "entity_annotations": ["Francis Burdett"], "answer_entity_name": null, "predicted_answer": "Angela Burdett-Coutts", "extracted_entity": "Francis_Burdett"}
{"question": "who is Montjeu's child?", "answer": "Hurricane Run", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hurricane Run"], "entity_annotations": ["Montjeu"], "answer_entity_name": null, "predicted_answer": "Laure Boulay de la Meurthe", "extracted_entity": "Montjeu"}
{"question": "who is Peter II of Portugal's child?", "answer": "John V of Portugal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John V of Portugal"], "entity_annotations": ["Peter II of Portugal"], "answer_entity_name": null, "predicted_answer": "Isabel Lu\u00edsa, Princess of Beira", "extracted_entity": "Peter_II_of_Portugal"}
{"question": "who is Alfonso II of Aragon's child?", "answer": "Constance of Aragon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Constance of Aragon", "Peter II of Aragon"], "entity_annotations": ["Alfonso II of Aragon"], "answer_entity_name": null, "predicted_answer": "Peter II of Aragon", "extracted_entity": "Alfonso_II_of_Aragon"}
{"question": "who is Lee Kuan Yew's child?", "answer": "Lee Hsien Loong", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lee Hsien Loong"], "entity_annotations": ["Lee Kuan Yew"], "answer_entity_name": null, "predicted_answer": "Lee Hsien Loong", "extracted_entity": "Lee_Kuan_Yew"}
{"question": "who is Walter Cronkite's child?", "answer": "Kathy Cronkite", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kathy Cronkite"], "entity_annotations": ["Walter Cronkite"], "answer_entity_name": null, "predicted_answer": "Walter Cronkite's child is Walter Cronk", "extracted_entity": "Walter_Cronkite"}
{"question": "who is Jody Scheckter's child?", "answer": "Tomas Scheckter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tomas Scheckter"], "entity_annotations": ["Jody Scheckter"], "answer_entity_name": null, "predicted_answer": "Thomas Scheckter", "extracted_entity": "Jody_Scheckter"}
{"question": "who is Barbara Bush's child?", "answer": "Dorothy Bush Koch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dorothy Bush Koch", "George W. Bush", "Jeb Bush", "Marvin P. Bush", "Neil Bush"], "entity_annotations": ["Barbara Bush"], "answer_entity_name": null, "predicted_answer": "George W. Bush", "extracted_entity": "Barbara_Bush"}
{"question": "who is Joktan's child?", "answer": "Hazarmaveth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hazarmaveth", "Almodad", "Uzal", "Sheleph", "Hadoram"], "entity_annotations": ["Joktan"], "answer_entity_name": null, "predicted_answer": "heba", "extracted_entity": "Joktan"}
{"question": "who is Roy Blunt's child?", "answer": "Matt Blunt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Matt Blunt"], "entity_annotations": ["Roy Blunt"], "answer_entity_name": null, "predicted_answer": "Matt Blunt", "extracted_entity": "Roy_Blunt"}
{"question": "who is Ernest Shackleton's child?", "answer": "Edward Shackleton, Baron Shackleton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edward Shackleton, Baron Shackleton"], "entity_annotations": ["Ernest Shackleton"], "answer_entity_name": null, "predicted_answer": "he has no child", "extracted_entity": "Ernest_Shackleton"}
{"question": "who is Sivaji Ganesan's child?", "answer": "Ramkumar Ganesan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ramkumar Ganesan", "Prabhu Ganesan"], "entity_annotations": ["Sivaji Ganesan"], "answer_entity_name": null, "predicted_answer": "Sivaji Ganesan's son is Ram", "extracted_entity": "Sivaji_Ganesan"}
{"question": "who is Gorm the Old's child?", "answer": "Harald Bluetooth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harald Bluetooth"], "entity_annotations": ["Gorm the Old"], "answer_entity_name": null, "predicted_answer": "Gorm the Old's child is Harald I", "extracted_entity": "Gorm_the_Old"}
{"question": "who is Akhmad Kadyrov's child?", "answer": "Ramzan Kadyrov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ramzan Kadyrov"], "entity_annotations": ["Akhmad Kadyrov"], "answer_entity_name": null, "predicted_answer": "Ramzan Kadyrov", "extracted_entity": "Akhmad_Kadyrov"}
{"question": "who is Anna Roosevelt Halsted's child?", "answer": "Curtis Roosevelt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Curtis Roosevelt"], "entity_annotations": ["Anna Roosevelt Halsted"], "answer_entity_name": null, "predicted_answer": "Anna Eleanor Roosevelt", "extracted_entity": "Anna_Roosevelt_Halsted"}
{"question": "who is Jimmy Snuka's child?", "answer": "Tamina Snuka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tamina Snuka", "Jimmy Reiher, Jr."], "entity_annotations": ["Jimmy Snuka"], "answer_entity_name": null, "predicted_answer": "Sim Snuka and Tamina Snuka", "extracted_entity": "Jimmy_Snuka"}
{"question": "who is Childebert II's child?", "answer": "Theuderic II", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Theuderic II"], "entity_annotations": ["Childebert II"], "answer_entity_name": null, "predicted_answer": "Theodoric II", "extracted_entity": "Childebert_II"}
{"question": "who is Edward Garnett's child?", "answer": "David Garnett", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Garnett"], "entity_annotations": ["Edward Garnett"], "answer_entity_name": null, "predicted_answer": "David Garnett", "extracted_entity": "Edward_Garnett"}
{"question": "who is Osiris's child?", "answer": "Horus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Horus", "Anubis"], "entity_annotations": ["Osiris"], "answer_entity_name": null, "predicted_answer": "Horus", "extracted_entity": "Osiris"}
{"question": "who is Princess Beatrice of the United Kingdom's child?", "answer": "Alexander Mountbatten, 1st Marquess of Carisbrooke", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexander Mountbatten, 1st Marquess of Carisbrooke"], "entity_annotations": ["Princess Beatrice of the United Kingdom"], "answer_entity_name": null, "predicted_answer": "Princess Victoria Eugenie of Battenberg", "extracted_entity": "Princess_Beatrice_of_the_United_Kingdom"}
{"question": "who is Raja Ganesha's child?", "answer": "Jalaluddin Muhammad Shah", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jalaluddin Muhammad Shah"], "entity_annotations": ["Raja Ganesha"], "answer_entity_name": null, "predicted_answer": "Jalaluddin Muhammad Shah", "extracted_entity": "Raja_Ganesha"}
{"question": "who is Lenny Kravitz's child?", "answer": "Zo\u00eb Kravitz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zo\u00eb Kravitz"], "entity_annotations": ["Lenny Kravitz"], "answer_entity_name": null, "predicted_answer": "actress Zo\u00eb Kravitz", "extracted_entity": "Lenny_Kravitz"}
{"question": "who is Emperor Jing of Han's child?", "answer": "Liu Yu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Liu Yu", "Liu Fei, Prince of Jiangdu", "Liu Rong", "Emperor Wu of Han"], "entity_annotations": ["Emperor Jing of Han"], "answer_entity_name": null, "predicted_answer": "Liu Fa, Prince Ding of Changsha", "extracted_entity": "Emperor_Jing_of_Han"}
{"question": "who is Adel Emam's child?", "answer": "Mohamed Emam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mohamed Emam"], "entity_annotations": ["Adel Emam"], "answer_entity_name": null, "predicted_answer": "Adel Emam's child is Ahmed Emam", "extracted_entity": "Adel_Emam"}
{"question": "who is Hugh III of Cyprus's child?", "answer": "Henry II of Jerusalem", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry II of Jerusalem"], "entity_annotations": ["Hugh III of Cyprus"], "answer_entity_name": null, "predicted_answer": "John I of Cyprus", "extracted_entity": "Hugh_III_of_Cyprus"}
{"question": "who is John Bowring's child?", "answer": "Edgar Alfred Bowring", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edgar Alfred Bowring", "Lewin Bentham Bowring"], "entity_annotations": ["John Bowring"], "answer_entity_name": null, "predicted_answer": "He is the child of Charles Bowring and Sarah", "extracted_entity": "John_Bowring"}
{"question": "who is Carlos Slim's child?", "answer": "Carlos Slim Domit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carlos Slim Domit"], "entity_annotations": ["Carlos Slim"], "answer_entity_name": null, "predicted_answer": "Carlos Slim's child is Linda Hel\u00fa", "extracted_entity": "Carlos_Slim"}
{"question": "who is Daniel O'Connell's child?", "answer": "Morgan O'Connell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Morgan O'Connell"], "entity_annotations": ["Daniel O'Connell"], "answer_entity_name": null, "predicted_answer": "Daniel O'Connell has 1 child.", "extracted_entity": "Daniel_O'Connell"}
{"question": "who is Helen Herron Taft's child?", "answer": "Robert Alphonso Taft", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robert Alphonso Taft"], "entity_annotations": ["Helen Herron Taft"], "answer_entity_name": null, "predicted_answer": "Helen Louise Taft", "extracted_entity": "Helen_Herron_Taft"}
{"question": "who is Evelyn Waugh's child?", "answer": "Auberon Waugh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Auberon Waugh"], "entity_annotations": ["Evelyn Waugh"], "answer_entity_name": null, "predicted_answer": "Evelyn Waugh's child is a novelist.", "extracted_entity": "Evelyn_Waugh"}
{"question": "who is Philipp Franz von Siebold's child?", "answer": "Alexander von Siebold", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexander von Siebold", "Kusumoto Ine"], "entity_annotations": ["Philipp Franz von Siebold"], "answer_entity_name": null, "predicted_answer": "Kusumoto Ine", "extracted_entity": "Philipp_Franz_von_Siebold"}
{"question": "who is Gerberga of Saxony's child?", "answer": "Lothair of France", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lothair of France"], "entity_annotations": ["Gerberga of Saxony"], "answer_entity_name": null, "predicted_answer": "Gerberga of Saxony's child is Louis", "extracted_entity": "Gerberga_of_Saxony"}
{"question": "who is John Kerry's child?", "answer": "Alexandra Kerry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexandra Kerry", "Vanessa Kerry"], "entity_annotations": ["John Kerry"], "answer_entity_name": null, "predicted_answer": "John Kerry's child is John Kerry", "extracted_entity": "John_Kerry"}
{"question": "who is Muhsin al-Hakim's child?", "answer": "Abdul Aziz al-Hakim", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Abdul Aziz al-Hakim"], "entity_annotations": ["Muhsin al-Hakim"], "answer_entity_name": null, "predicted_answer": "Muhsin al-Hakim's child is", "extracted_entity": "Muhsin_al-Hakim"}
{"question": "who is David Tomblin's child?", "answer": "Lisa Tomblin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lisa Tomblin"], "entity_annotations": ["David Tomblin"], "answer_entity_name": null, "predicted_answer": "David Tomblin's child is David Tombl", "extracted_entity": "David_Tomblin"}
{"question": "who is Mary Soames's child?", "answer": "Emma Soames", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Emma Soames"], "entity_annotations": ["Mary Soames"], "answer_entity_name": null, "predicted_answer": "Mary Soames's child is Mary Soames.", "extracted_entity": "Mary_Soames"}
{"question": "who is Samsu-iluna's child?", "answer": "Abi-Eshuh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Abi-Eshuh"], "entity_annotations": ["Samsu-iluna"], "answer_entity_name": null, "predicted_answer": "Rim-Sin", "extracted_entity": "Samsu-iluna"}
{"question": "who is Stavros Niarchos's child?", "answer": "Philip Niarchos", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philip Niarchos"], "entity_annotations": ["Stavros Niarchos"], "answer_entity_name": null, "predicted_answer": "Eugenie Niarchos.", "extracted_entity": "Stavros_Niarchos"}
{"question": "who is Ferdinando Gorges's child?", "answer": "Robert Gorges", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robert Gorges"], "entity_annotations": ["Ferdinando Gorges"], "answer_entity_name": null, "predicted_answer": "Mary Gorges", "extracted_entity": "Ferdinando_Gorges"}
{"question": "who is Jane Fonda's child?", "answer": "Troy Garity", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Troy Garity"], "entity_annotations": ["Jane Fonda"], "answer_entity_name": null, "predicted_answer": "Mary Fonda", "extracted_entity": "Jane_Fonda"}
{"question": "who is Stenkil's child?", "answer": "Halsten Stenkilsson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Halsten Stenkilsson"], "entity_annotations": ["Stenkil"], "answer_entity_name": null, "predicted_answer": "Ingrid Ragnvaldsdotter", "extracted_entity": "Stenkil"}
{"question": "who is Taichang Emperor's child?", "answer": "Tianqi Emperor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tianqi Emperor", "Chongzhen Emperor"], "entity_annotations": ["Taichang Emperor"], "answer_entity_name": null, "predicted_answer": "Tianqi Emperor", "extracted_entity": "Taichang_Emperor"}
{"question": "who is Domenico Ghirlandaio's child?", "answer": "Ridolfo del Ghirlandaio", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ridolfo del Ghirlandaio"], "entity_annotations": ["Domenico Ghirlandaio"], "answer_entity_name": null, "predicted_answer": "Domenico Ghirlandaio's child is", "extracted_entity": "Domenico_Ghirlandaio"}
{"question": "who is Wan Li's child?", "answer": "Wan Jifei", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wan Jifei"], "entity_annotations": ["Wan Li"], "answer_entity_name": null, "predicted_answer": "Wan Li has no children.", "extracted_entity": "Wan_Li"}
{"question": "who is Bertrada of Laon's child?", "answer": "Carloman I", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carloman I", "Charlemagne"], "entity_annotations": ["Bertrada of Laon"], "answer_entity_name": null, "predicted_answer": "Pepin, born in 714, died young", "extracted_entity": "Bertrada_of_Laon"}
{"question": "who is Clu Gulager's child?", "answer": "Tom Gulager", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tom Gulager", "John Gulager"], "entity_annotations": ["Clu Gulager"], "answer_entity_name": null, "predicted_answer": "John Gulager", "extracted_entity": "Clu_Gulager"}
{"question": "who is Philip I of Castile's child?", "answer": "Isabella of Austria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Isabella of Austria", "Charles V"], "entity_annotations": ["Philip I of Castile"], "answer_entity_name": null, "predicted_answer": "Charles V, Holy Roman Emperor", "extracted_entity": "Philip_I_of_Castile"}
{"question": "who is Peter II of Aragon's child?", "answer": "James I of Aragon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James I of Aragon"], "entity_annotations": ["Peter II of Aragon"], "answer_entity_name": null, "predicted_answer": "Sancha", "extracted_entity": "Peter_II_of_Aragon"}
{"question": "who is Emperor Shunzong of Tang's child?", "answer": "Emperor Xianzong of Tang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Emperor Xianzong of Tang"], "entity_annotations": ["Emperor Shunzong of Tang"], "answer_entity_name": null, "predicted_answer": "Emperor Xianzong of Tang", "extracted_entity": "Emperor_Shunzong_of_Tang"}
{"question": "who is Eric Bloodaxe's child?", "answer": "Harald Greycloak", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harald Greycloak"], "entity_annotations": ["Eric Bloodaxe"], "answer_entity_name": null, "predicted_answer": "ric Bloodaxe's child is Harald II of", "extracted_entity": "Eric_Bloodaxe"}
{"question": "who is Davey Boy Smith's child?", "answer": "Davey Boy Smith Jr.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Davey Boy Smith Jr."], "entity_annotations": ["Davey Boy Smith"], "answer_entity_name": null, "predicted_answer": "Davey Boy Smith's child is Harry Smith.", "extracted_entity": "Davey_Boy_Smith"}
{"question": "who is Artaxerxes II of Persia's child?", "answer": "Artaxerxes III", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Artaxerxes III"], "entity_annotations": ["Artaxerxes II of Persia"], "answer_entity_name": null, "predicted_answer": "Darius II", "extracted_entity": "Artaxerxes_II_of_Persia"}
{"question": "who is Mehmed IV's child?", "answer": "Ahmed III", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ahmed III", "Mustafa II"], "entity_annotations": ["Mehmed IV"], "answer_entity_name": null, "predicted_answer": "Mehmed IV's child is Mehmed V.", "extracted_entity": "Mehmed_IV"}
{"question": "who is Akkineni Nageswara Rao's child?", "answer": "Akkineni Nagarjuna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Akkineni Nagarjuna"], "entity_annotations": ["Akkineni Nageswara Rao"], "answer_entity_name": null, "predicted_answer": "Akkineni Nageswara Rao has", "extracted_entity": "Akkineni_Nageswara_Rao"}
{"question": "who is Olybrius's child?", "answer": "Anicia Juliana", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anicia Juliana"], "entity_annotations": ["Olybrius"], "answer_entity_name": null, "predicted_answer": "Olybrius's child is Juliana", "extracted_entity": "Olybrius"}
{"question": "who is Sarika's child?", "answer": "Shruti Haasan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shruti Haasan"], "entity_annotations": ["Sarika"], "answer_entity_name": null, "predicted_answer": "Sarika's child is Shruti Hassan.", "extracted_entity": "Sarika"}
{"question": "who is Emperor Gaozu of Han's child?", "answer": "Liu Fei", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Liu Fei", "Emperor Hui of Han", "Princess Yuan of Lu", "Emperor Wen of Han", "Liu Ruyi"], "entity_annotations": ["Emperor Gaozu of Han"], "answer_entity_name": null, "predicted_answer": "Liu Ying", "extracted_entity": "Emperor_Gaozu_of_Han"}
{"question": "who is Donnchad Midi's child?", "answer": "Conchobar mac Donnchada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Conchobar mac Donnchada"], "entity_annotations": ["Donnchad Midi"], "answer_entity_name": null, "predicted_answer": "Donnchad Midi's child is Mael", "extracted_entity": "Donnchad_Midi"}
{"question": "who is Jacob Kettler's child?", "answer": "Maria Amalia of Courland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maria Amalia of Courland", "Ferdinand Kettler"], "entity_annotations": ["Jacob Kettler"], "answer_entity_name": null, "predicted_answer": "Jacob Kettler's child is Jacob Kett", "extracted_entity": "Jacob_Kettler"}
{"question": "who is Karlheinz Stockhausen's child?", "answer": "Markus Stockhausen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Markus Stockhausen"], "entity_annotations": ["Karlheinz Stockhausen"], "answer_entity_name": null, "predicted_answer": "Michael Stockhausen", "extracted_entity": "Karlheinz_Stockhausen"}
{"question": "who is Henry Grey, 1st Duke of Suffolk's child?", "answer": "Lady Jane Grey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lady Jane Grey"], "entity_annotations": ["Henry Grey, 1st Duke of Suffolk"], "answer_entity_name": null, "predicted_answer": "Henry Grey, 1st Duke of Suffolk's", "extracted_entity": "Henry_Grey,_1st_Duke_of_Suffolk"}
{"question": "who is Damon Hill's child?", "answer": "Josh Hill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Josh Hill"], "entity_annotations": ["Damon Hill"], "answer_entity_name": null, "predicted_answer": "Damon Hill is the father of George Hill.", "extracted_entity": "Damon_Hill"}
{"question": "who is Mariana Victoria of Spain's child?", "answer": "Maria I of Portugal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maria I of Portugal"], "entity_annotations": ["Mariana Victoria of Spain"], "answer_entity_name": null, "predicted_answer": "Louis XV of France", "extracted_entity": "Mariana_Victoria_of_Spain"}
{"question": "who is Ken Jacobs's child?", "answer": "Azazel Jacobs", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Azazel Jacobs"], "entity_annotations": ["Ken Jacobs"], "answer_entity_name": null, "predicted_answer": "Azazel Jacobs", "extracted_entity": "Ken_Jacobs"}
{"question": "who is Carine Roitfeld's child?", "answer": "Julia Restoin Roitfeld", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Julia Restoin Roitfeld"], "entity_annotations": ["Carine Roitfeld"], "answer_entity_name": null, "predicted_answer": "Julia Roitfeld", "extracted_entity": "Carine_Roitfeld"}
{"question": "who is Bartholomew de Badlesmere, 1st Baron Badlesmere's child?", "answer": "Maud de Badlesmere, Countess of Oxford", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maud de Badlesmere, Countess of Oxford"], "entity_annotations": ["Bartholomew de Badlesmere, 1st Baron Badlesmere"], "answer_entity_name": null, "predicted_answer": "John de Badlesmere, 2nd Baron", "extracted_entity": "Bartholomew_de_Badlesmere,_1st_Baron_Badlesmere"}
{"question": "who is Stephen King's child?", "answer": "Joe Hill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joe Hill"], "entity_annotations": ["Stephen King"], "answer_entity_name": null, "predicted_answer": "His son Joe Hill.", "extracted_entity": "Stephen_King"}
{"question": "who is Simon Ward's child?", "answer": "Sophie Ward", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sophie Ward"], "entity_annotations": ["Simon Ward"], "answer_entity_name": null, "predicted_answer": "he has a daughter named Emma Ward", "extracted_entity": "Simon_Ward"}
{"question": "who is Mohammad Ali Shah Qajar's child?", "answer": "Ahmad Shah Qajar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ahmad Shah Qajar"], "entity_annotations": ["Mohammad Ali Shah Qajar"], "answer_entity_name": null, "predicted_answer": "Ahmad Shah Qajar", "extracted_entity": "Mohammad_Ali_Shah_Qajar"}
{"question": "who is Pierre Blanchar's child?", "answer": "Dominique Blanchar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dominique Blanchar"], "entity_annotations": ["Pierre Blanchar"], "answer_entity_name": null, "predicted_answer": "Dominique Blanchar", "extracted_entity": "Pierre_Blanchar"}
{"question": "who is Sarah's child?", "answer": "Islamic view of Isaac", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Islamic view of Isaac", "Isaac"], "entity_annotations": ["Sarah"], "answer_entity_name": null, "predicted_answer": "Isaac", "extracted_entity": "Sarah"}
{"question": "who is Shirley Ballas's child?", "answer": "Mark Ballas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mark Ballas"], "entity_annotations": ["Shirley Ballas"], "answer_entity_name": null, "predicted_answer": "Mark Ballas", "extracted_entity": "Shirley_Ballas"}
{"question": "who is William Wedgwood Benn, 1st Viscount Stansgate's child?", "answer": "Tony Benn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tony Benn"], "entity_annotations": ["William Wedgwood Benn, 1st Viscount Stansgate"], "answer_entity_name": null, "predicted_answer": "Tony Benn", "extracted_entity": "William_Wedgwood_Benn,_1st_Viscount_Stansgate"}
{"question": "who is Nicholas II of Russia's child?", "answer": "Grand Duchess Anya Nikolaevna of Russia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Grand Duchess Anya Nikolaevna of Russia", "Alexei Nikolaevich", "Grand Duchess Tatiana Nikolaevna of Russia", "Grand Duchess Olga Nikolaevna of Russia"], "entity_annotations": ["Nicholas II of Russia"], "answer_entity_name": null, "predicted_answer": "Alexei Nikolaevich, Tsarevich", "extracted_entity": "Nicholas_II_of_Russia"}
{"question": "who is Agrippina the Younger's child?", "answer": "Nero", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nero"], "entity_annotations": ["Agrippina the Younger"], "answer_entity_name": null, "predicted_answer": "Nero", "extracted_entity": "Agrippina_the_Younger"}
{"question": "who is Yaroslav the Wise's child?", "answer": "Vsevolod I of Kiev", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vsevolod I of Kiev", "Iziaslav I of Kiev", "Anastasia of Kiev", "Sviatoslav II of Kiev", "Vladimir of Novgorod"], "entity_annotations": ["Yaroslav the Wise"], "answer_entity_name": null, "predicted_answer": "Vladimir Yaroslavich", "extracted_entity": "Yaroslav_the_Wise"}
{"question": "who is Shashi Kapoor's child?", "answer": "Karan Kapoor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Karan Kapoor", "Sanjana Kapoor"], "entity_annotations": ["Shashi Kapoor"], "answer_entity_name": null, "predicted_answer": "Shashi Kapoor's child is Kunal Kapoor.", "extracted_entity": "Shashi_Kapoor"}
{"question": "who is Hans-Adam II, Prince of Liechtenstein's child?", "answer": "Alois", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alois", "Prince Maximilian of Liechtenstein"], "entity_annotations": ["Hans-Adam II, Prince of Liechtenstein"], "answer_entity_name": null, "predicted_answer": "he has a child named Hereditary Prince Alois", "extracted_entity": "Hans-Adam_II,_Prince_of_Liechtenstein"}
{"question": "who is Eorcenberht of Kent's child?", "answer": "Hlothhere of Kent", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hlothhere of Kent", "Ermenilda of Ely", "Ecgberht of Kent"], "entity_annotations": ["Eorcenberht of Kent"], "answer_entity_name": null, "predicted_answer": "Ecgberht of Kent", "extracted_entity": "Eorcenberht_of_Kent"}
{"question": "who is Liu Shan's child?", "answer": "Liu Xuan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Liu Xuan"], "entity_annotations": ["Liu Shan"], "answer_entity_name": null, "predicted_answer": "Liu Shan's child is Liu Yong", "extracted_entity": "Liu_Shan"}
{"question": "who is Tricia Nixon Cox's child?", "answer": "Christopher Nixon Cox", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Christopher Nixon Cox"], "entity_annotations": ["Tricia Nixon Cox"], "answer_entity_name": null, "predicted_answer": "Christopher Nixon Cox.", "extracted_entity": "Tricia_Nixon_Cox"}
{"question": "who is John Dollond's child?", "answer": "Peter Dollond", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peter Dollond"], "entity_annotations": ["John Dollond"], "answer_entity_name": null, "predicted_answer": "John Dollond's child is Peter Dollond", "extracted_entity": "John_Dollond"}
{"question": "who is Nick Clooney's child?", "answer": "George Clooney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Clooney"], "entity_annotations": ["Nick Clooney"], "answer_entity_name": null, "predicted_answer": "Nick Clooney's child is George Clooney", "extracted_entity": "Nick_Clooney"}
{"question": "who is Sam Kydd's child?", "answer": "Jonathan Kydd", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jonathan Kydd"], "entity_annotations": ["Sam Kydd"], "answer_entity_name": null, "predicted_answer": "Kydd's first film was \"The Captive", "extracted_entity": "Sam_Kydd"}
{"question": "who is Fridtjof Nansen's child?", "answer": "Odd Nansen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Odd Nansen"], "entity_annotations": ["Fridtjof Nansen"], "answer_entity_name": null, "predicted_answer": "Fridtjof Nansen has one child.", "extracted_entity": "Fridtjof_Nansen"}
{"question": "who is Joseph F. Smith's child?", "answer": "Joseph Fielding Smith", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joseph Fielding Smith"], "entity_annotations": ["Joseph F. Smith"], "answer_entity_name": null, "predicted_answer": "Joseph F. Smith's child is Hyrum Smith", "extracted_entity": "Joseph_F._Smith"}
{"question": "who is Winnie Madikizela-Mandela's child?", "answer": "Zenani Mandela-Dlamini", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zenani Mandela-Dlamini"], "entity_annotations": ["Winnie Madikizela-Mandela"], "answer_entity_name": null, "predicted_answer": "Zindziswa Mandela", "extracted_entity": "Winnie_Madikizela-Mandela"}
{"question": "who is Roy Castle's child?", "answer": "Ben Castle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ben Castle"], "entity_annotations": ["Roy Castle"], "answer_entity_name": null, "predicted_answer": "Claire Castle", "extracted_entity": "Roy_Castle"}
{"question": "who is Xiahou Yuan's child?", "answer": "Xiahou Hui", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Xiahou Hui"], "entity_annotations": ["Xiahou Yuan"], "answer_entity_name": null, "predicted_answer": "Xiahou Yuan's child is Xiahou Ba.", "extracted_entity": "Xiahou_Yuan"}
{"question": "who is Dagobert I's child?", "answer": "Sigebert III", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sigebert III", "Clovis II"], "entity_annotations": ["Dagobert I"], "answer_entity_name": null, "predicted_answer": "Chilperic", "extracted_entity": "Dagobert_I"}
{"question": "who is Louis the Pious's child?", "answer": "Lothair I", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lothair I", "Pepin I of Aquitaine"], "entity_annotations": ["Louis the Pious"], "answer_entity_name": null, "predicted_answer": "Louis the Pious's child is Lothair", "extracted_entity": "Louis_the_Pious"}
{"question": "who is Emperor Wen of Han's child?", "answer": "Emperor Jing of Han", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Emperor Jing of Han", "Liu Wu, Prince of Liang"], "entity_annotations": ["Emperor Wen of Han"], "answer_entity_name": null, "predicted_answer": "Liu Rong", "extracted_entity": "Emperor_Wen_of_Han"}
{"question": "who is Halfdan's child?", "answer": "Heorogar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Heorogar", "Hrothgar", "Halga"], "entity_annotations": ["Halfdan"], "answer_entity_name": null, "predicted_answer": "Halfdan's child is Hro\u00f0gar.", "extracted_entity": "Halfdan"}
{"question": "who is Charles III of Spain's child?", "answer": "Charles IV of Spain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles IV of Spain", "Ferdinand I of the Two Sicilies", "Infante Gabriel of Spain"], "entity_annotations": ["Charles III of Spain"], "answer_entity_name": null, "predicted_answer": "Charles IV of Spain", "extracted_entity": "Charles_III_of_Spain"}
{"question": "who is Lucius Tarquinius Superbus's child?", "answer": "Sextus Tarquinius", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sextus Tarquinius"], "entity_annotations": ["Lucius Tarquinius Superbus"], "answer_entity_name": null, "predicted_answer": "Lucius Tarquinius Superbus has", "extracted_entity": "Lucius_Tarquinius_Superbus"}
{"question": "who is Eric II of Norway's child?", "answer": "Margaret, Maid of Norway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Margaret, Maid of Norway"], "entity_annotations": ["Eric II of Norway"], "answer_entity_name": null, "predicted_answer": "Margaret, Maid of Norway", "extracted_entity": "Eric_II_of_Norway"}
{"question": "who is Tony Coe's child?", "answer": "Gideon Coe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gideon Coe"], "entity_annotations": ["Tony Coe"], "answer_entity_name": null, "predicted_answer": "Tony Coe's child is not available.", "extracted_entity": "Tony_Coe"}
{"question": "who is Jennifer Horton's child?", "answer": "JJ Deveraux", "dataset": "entity_questions", "split": "test", "answer_aliases": ["JJ Deveraux", "Abigail Deveraux"], "entity_annotations": ["Jennifer Horton"], "answer_entity_name": null, "predicted_answer": "Abigail and JJ Deveraux", "extracted_entity": "Jennifer_Horton"}
{"question": "who is Prince Joachim of Denmark's child?", "answer": "Princess Athena of Denmark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Princess Athena of Denmark", "Prince Felix of Denmark", "Prince Nikolai of Denmark", "Prince Henrik of Denmark"], "entity_annotations": ["Prince Joachim of Denmark"], "answer_entity_name": null, "predicted_answer": "Prince Nikolai of Denmark.", "extracted_entity": "Prince_Joachim_of_Denmark"}
{"question": "who is Penelope's child?", "answer": "Telemachus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Telemachus"], "entity_annotations": ["Penelope"], "answer_entity_name": null, "predicted_answer": "Telemachus", "extracted_entity": "Penelope"}
{"question": "who is Ver\u00f3nica Castro's child?", "answer": "Cristian Castro", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cristian Castro"], "entity_annotations": ["Ver\u00f3nica Castro"], "answer_entity_name": null, "predicted_answer": "Cristian Castro.", "extracted_entity": "Ver\u00f3nica_Castro"}
{"question": "who is Bhima's child?", "answer": "Ghatotkacha", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ghatotkacha"], "entity_annotations": ["Bhima"], "answer_entity_name": null, "predicted_answer": "Ghatotkacha", "extracted_entity": "Bhima"}
{"question": "who is Augusta Victoria of Schleswig-Holstein's child?", "answer": "Princess Victoria Louise of Prussia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Princess Victoria Louise of Prussia", "Prince Eitel Friedrich of Prussia", "Prince August Wilhelm of Prussia", "Prince Joachim of Prussia"], "entity_annotations": ["Augusta Victoria of Schleswig-Holstein"], "answer_entity_name": null, "predicted_answer": "Wilhelm II, German Emperor", "extracted_entity": "Augusta_Victoria_of_Schleswig-Holstein"}
{"question": "who is Edmond Becquerel's child?", "answer": "Henri Becquerel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henri Becquerel"], "entity_annotations": ["Edmond Becquerel"], "answer_entity_name": null, "predicted_answer": "Henri Becquerel", "extracted_entity": "Edmond_Becquerel"}
{"question": "who is Frederick Edmund Meredith's child?", "answer": "William Campbell James Meredith", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Campbell James Meredith"], "entity_annotations": ["Frederick Edmund Meredith"], "answer_entity_name": null, "predicted_answer": "Frederick Edmund Meredith's child is not known.", "extracted_entity": "Frederick_Edmund_Meredith"}
{"question": "who is Sylvester Stallone's child?", "answer": "Sage Stallone", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sage Stallone"], "entity_annotations": ["Sylvester Stallone"], "answer_entity_name": null, "predicted_answer": "Sage Moonblood Stallone", "extracted_entity": "Sylvester_Stallone"}
{"question": "who is Tim Bevan's child?", "answer": "Daisy Bevan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daisy Bevan"], "entity_annotations": ["Tim Bevan"], "answer_entity_name": null, "predicted_answer": "Tim Bevan's child is not known", "extracted_entity": "Tim_Bevan"}
{"question": "who is Otto Frank's child?", "answer": "Anne Frank", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anne Frank", "Margot Frank"], "entity_annotations": ["Otto Frank"], "answer_entity_name": null, "predicted_answer": "Otto Frank's child is Margot Frank.", "extracted_entity": "Otto_Frank"}
{"question": "who is Azlan Shah of Perak's child?", "answer": "Nazrin Shah of Perak", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nazrin Shah of Perak", "Raja Ashman Shah"], "entity_annotations": ["Azlan Shah of Perak"], "answer_entity_name": null, "predicted_answer": "Sultan Azlan Shah was the 34th Sultan", "extracted_entity": "Azlan_Shah_of_Perak"}
{"question": "who is Allen Lane's child?", "answer": "Clare Morpurgo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clare Morpurgo"], "entity_annotations": ["Allen Lane"], "answer_entity_name": null, "predicted_answer": "Allen Lane has 3 children: Clare, Christine", "extracted_entity": "Allen_Lane"}
{"question": "who is Andrew II of Hungary's child?", "answer": "Coloman of Galicia-Lodomeria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Coloman of Galicia-Lodomeria", "Elizabeth of Hungary"], "entity_annotations": ["Andrew II of Hungary"], "answer_entity_name": null, "predicted_answer": "ndrew II of Hungary's child is Andrew II of", "extracted_entity": "Andrew_II_of_Hungary"}
{"question": "who is William Herschel's child?", "answer": "John Frederick William Herschel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Frederick William Herschel"], "entity_annotations": ["William Herschel"], "answer_entity_name": null, "predicted_answer": "William Herschel's child is William Hersch", "extracted_entity": "William_Herschel"}
{"question": "who is Gilbert de Clare, 1st Earl of Pembroke's child?", "answer": "Richard de Clare, 2nd Earl of Pembroke", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Richard de Clare, 2nd Earl of Pembroke"], "entity_annotations": ["Gilbert de Clare, 1st Earl of Pembroke"], "answer_entity_name": null, "predicted_answer": "Gilbert de Clare, 1st Earl of Pemb", "extracted_entity": "Gilbert_de_Clare,_1st_Earl_of_Pembroke"}
{"question": "who is Inti's child?", "answer": "Kon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kon"], "entity_annotations": ["Inti"], "answer_entity_name": null, "predicted_answer": "Inti's child is Manco C\u00e1pac", "extracted_entity": "Inti"}
{"question": "who is Yolande de Polastron's child?", "answer": "Jules de Polignac", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jules de Polignac"], "entity_annotations": ["Yolande de Polastron"], "answer_entity_name": null, "predicted_answer": "Yolande de Polastron's child is Louis", "extracted_entity": "Yolande_de_Polastron"}
{"question": "who is Prince Valdemar of Denmark's child?", "answer": "Count Erik of Rosenborg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Count Erik of Rosenborg", "Count Viggo of Rosenborg", "Prince Aage, Count of Rosenborg"], "entity_annotations": ["Prince Valdemar of Denmark"], "answer_entity_name": null, "predicted_answer": "He was the third son and youngest child of Christian", "extracted_entity": "Prince_Valdemar_of_Denmark"}
{"question": "who is Ugyen Wangchuck's child?", "answer": "Jigme Wangchuck", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jigme Wangchuck"], "entity_annotations": ["Ugyen Wangchuck"], "answer_entity_name": null, "predicted_answer": "Ugyen Wangchuck's child is U", "extracted_entity": "Ugyen_Wangchuck"}
{"question": "who is Tina Knowles's child?", "answer": "Solange Knowles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Solange Knowles"], "entity_annotations": ["Tina Knowles"], "answer_entity_name": null, "predicted_answer": "Tina Knowles's child is Beyonc\u00e9.", "extracted_entity": "Tina_Knowles"}
{"question": "who is Pete Escovedo's child?", "answer": "Sheila E.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sheila E."], "entity_annotations": ["Pete Escovedo"], "answer_entity_name": null, "predicted_answer": "Sheila E. is Pete Escovedo's child", "extracted_entity": "Pete_Escovedo"}
{"question": "who is Princess M\u00e4rtha of Sweden's child?", "answer": "Harald V of Norway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harald V of Norway"], "entity_annotations": ["Princess M\u00e4rtha of Sweden"], "answer_entity_name": null, "predicted_answer": "Princess M\u00e4rtha of Sweden's child is Harald", "extracted_entity": "Princess_M\u00e4rtha_of_Sweden"}
{"question": "who is Joe Nemechek's child?", "answer": "John Hunter Nemechek", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Hunter Nemechek"], "entity_annotations": ["Joe Nemechek"], "answer_entity_name": null, "predicted_answer": "John Hunter Nemechek", "extracted_entity": "Joe_Nemechek"}
{"question": "who is Sir Francis Baring, 1st Baronet's child?", "answer": "Sir Thomas Baring, 2nd Baronet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sir Thomas Baring, 2nd Baronet", "Henry Baring", "Alexander Baring, 1st Baron Ashburton"], "entity_annotations": ["Sir Francis Baring, 1st Baronet"], "answer_entity_name": null, "predicted_answer": "Sir Francis Baring, 1st Baronet", "extracted_entity": "Sir_Francis_Baring,_1st_Baronet"}
{"question": "who is Asclepius's child?", "answer": "Panacea", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Panacea", "Telesphorus", "Machaon", "Podalirius"], "entity_annotations": ["Asclepius"], "answer_entity_name": null, "predicted_answer": "Hygieia", "extracted_entity": "Asclepius"}
{"question": "who is Edward III of England's child?", "answer": "Edward, the Black Prince", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edward, the Black Prince", "Thomas of Woodstock, 1st Duke of Gloucester"], "entity_annotations": ["Edward III of England"], "answer_entity_name": null, "predicted_answer": "Edward the Black Prince", "extracted_entity": "Edward_III_of_England"}
{"question": "who is Antonio Aguilar's child?", "answer": "Pepe Aguilar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pepe Aguilar"], "entity_annotations": ["Antonio Aguilar"], "answer_entity_name": null, "predicted_answer": "Antonio Aguilar Hijo and Pepe Aguilar", "extracted_entity": "Antonio_Aguilar"}
{"question": "who is Bulle Ogier's child?", "answer": "Pascale Ogier", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pascale Ogier"], "entity_annotations": ["Bulle Ogier"], "answer_entity_name": null, "predicted_answer": "Pascale Ogier", "extracted_entity": "Bulle_Ogier"}
{"question": "who is Paul of Greece's child?", "answer": "Constantine II of Greece", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Constantine II of Greece"], "entity_annotations": ["Paul of Greece"], "answer_entity_name": null, "predicted_answer": "Paul of Greece's child is Paul of Greece.", "extracted_entity": "Paul_of_Greece"}
{"question": "who is Bal Thackeray's child?", "answer": "Uddhav Thackeray", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Uddhav Thackeray"], "entity_annotations": ["Bal Thackeray"], "answer_entity_name": null, "predicted_answer": "Bal Keshav Thackeray", "extracted_entity": "Bal_Thackeray"}
{"question": "who is Adrastus's child?", "answer": "Argea", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Argea"], "entity_annotations": ["Adrastus"], "answer_entity_name": null, "predicted_answer": "Adrastus is the child of Tala", "extracted_entity": "Adrastus"}
{"question": "who is Gopinath Munde's child?", "answer": "Pritam Munde", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pritam Munde"], "entity_annotations": ["Gopinath Munde"], "answer_entity_name": null, "predicted_answer": "Pankaja Munde", "extracted_entity": "Gopinath_Munde"}
{"question": "who is Queen Munjeong's child?", "answer": "Myeongjong of Joseon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Myeongjong of Joseon"], "entity_annotations": ["Queen Munjeong"], "answer_entity_name": null, "predicted_answer": "Queen Munjeong's child is Queen Munje", "extracted_entity": "Queen_Munjeong"}
{"question": "who is Phyllida Law's child?", "answer": "Emma Thompson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Emma Thompson"], "entity_annotations": ["Phyllida Law"], "answer_entity_name": null, "predicted_answer": "Emma Thompson, Sophie Thompson", "extracted_entity": "Phyllida_Law"}
{"question": "who is Ferdinand Maria, Elector of Bavaria's child?", "answer": "Maximilian II Emanuel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maximilian II Emanuel"], "entity_annotations": ["Ferdinand Maria, Elector of Bavaria"], "answer_entity_name": null, "predicted_answer": "Ferdinand Maria, Elector of Bavaria has", "extracted_entity": "Ferdinand_Maria,_Elector_of_Bavaria"}
{"question": "who is Boris I of Bulgaria's child?", "answer": "Simeon I of Bulgaria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Simeon I of Bulgaria", "Vladimir of Bulgaria"], "entity_annotations": ["Boris I of Bulgaria"], "answer_entity_name": null, "predicted_answer": "Vladimir of Bulgaria", "extracted_entity": "Boris_I_of_Bulgaria"}
{"question": "who is Paul Methuen, 3rd Baron Methuen's child?", "answer": "Paul Ayshford Methuen, 4th Baron Methuen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paul Ayshford Methuen, 4th Baron Methuen"], "entity_annotations": ["Paul Methuen, 3rd Baron Methuen"], "answer_entity_name": null, "predicted_answer": "Paul Sanford Methuen, 3rd Baron Meth", "extracted_entity": "Paul_Methuen,_3rd_Baron_Methuen"}
{"question": "who is Joseph Hume's child?", "answer": "Allan Hume", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Allan Hume"], "entity_annotations": ["Joseph Hume"], "answer_entity_name": null, "predicted_answer": "Joseph Hume's child is James Hume.", "extracted_entity": "Joseph_Hume"}
{"question": "who is Ogden Phipps's child?", "answer": "Ogden Mills Phipps", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ogden Mills Phipps"], "entity_annotations": ["Ogden Phipps"], "answer_entity_name": null, "predicted_answer": "Ogden Phipps's child is Ogden", "extracted_entity": "Ogden_Phipps"}
{"question": "who is Eugen Lovinescu's child?", "answer": "Monica Lovinescu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Monica Lovinescu"], "entity_annotations": ["Eugen Lovinescu"], "answer_entity_name": null, "predicted_answer": "onica Lovinescu", "extracted_entity": "Eugen_Lovinescu"}
{"question": "who is Juba II's child?", "answer": "Ptolemy of Mauretania", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ptolemy of Mauretania"], "entity_annotations": ["Juba II"], "answer_entity_name": null, "predicted_answer": "Ptolemy of Mauretania", "extracted_entity": "Juba_II"}
{"question": "who is Emperor Xuan of Han's child?", "answer": "Emperor Yuan of Han", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Emperor Yuan of Han"], "entity_annotations": ["Emperor Xuan of Han"], "answer_entity_name": null, "predicted_answer": "Emperor Yuan of Han", "extracted_entity": "Emperor_Xuan_of_Han"}
{"question": "who is Mithun Chakraborty's child?", "answer": "Mahaakshay Chakraborty", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mahaakshay Chakraborty"], "entity_annotations": ["Mithun Chakraborty"], "answer_entity_name": null, "predicted_answer": "Namashi Chakraborty is Mith", "extracted_entity": "Mithun_Chakraborty"}
{"question": "who is Georgiana Cavendish, Duchess of Devonshire's child?", "answer": "Harriet Leveson-Gower, Countess Granville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harriet Leveson-Gower, Countess Granville"], "entity_annotations": ["Georgiana Cavendish, Duchess of Devonshire"], "answer_entity_name": null, "predicted_answer": "The Duchess was born Miss Georgiana Spencer, on", "extracted_entity": "Georgiana_Cavendish,_Duchess_of_Devonshire"}
{"question": "who is Piero di Cosimo de' Medici's child?", "answer": "Lorenzo de' Medici", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lorenzo de' Medici", "Giuliano de' Medici"], "entity_annotations": ["Piero di Cosimo de' Medici"], "answer_entity_name": null, "predicted_answer": "Lorenzo de' Medici", "extracted_entity": "Piero_di_Cosimo_de'_Medici"}
{"question": "who is George Hearst's child?", "answer": "William Randolph Hearst", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Randolph Hearst"], "entity_annotations": ["George Hearst"], "answer_entity_name": null, "predicted_answer": "William Randolph Hearst", "extracted_entity": "George_Hearst"}
{"question": "who is Alexander the Great's child?", "answer": "Alexander IV of Macedon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexander IV of Macedon"], "entity_annotations": ["Alexander the Great"], "answer_entity_name": null, "predicted_answer": "Alexander the Great has no children.", "extracted_entity": "Alexander_the_Great"}
{"question": "who is Parantaka Chola II's child?", "answer": "Aditya Karikalan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aditya Karikalan", "Rajaraja I"], "entity_annotations": ["Parantaka Chola II"], "answer_entity_name": null, "predicted_answer": "Parantaka Chola II's child is Raj", "extracted_entity": "Parantaka_Chola_II"}
{"question": "who is Alapainui's child?", "answer": "Manono I", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Manono I"], "entity_annotations": ["Alapainui"], "answer_entity_name": null, "predicted_answer": "Kamehameha I", "extracted_entity": "Alapainui"}
{"question": "who is Peisistratos's child?", "answer": "Hipparchus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hipparchus"], "entity_annotations": ["Peisistratos"], "answer_entity_name": null, "predicted_answer": "Pisistratus", "extracted_entity": "Peisistratos"}
{"question": "who is Mindon Min's child?", "answer": "Supayalat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Supayalat", "Thibaw Min"], "entity_annotations": ["Mindon Min"], "answer_entity_name": null, "predicted_answer": "Mindon Min has 1 child. The child", "extracted_entity": "Mindon_Min"}
{"question": "who is Henrietta Maria of France's child?", "answer": "Mary, Princess Royal and Princess of Orange", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mary, Princess Royal and Princess of Orange", "Charles II of England", "James VII and II"], "entity_annotations": ["Henrietta Maria of France"], "answer_entity_name": null, "predicted_answer": "Charles II", "extracted_entity": "Henrietta_Maria_of_France"}
{"question": "who is Jean Todt's child?", "answer": "Nicolas Todt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nicolas Todt"], "entity_annotations": ["Jean Todt"], "answer_entity_name": null, "predicted_answer": "Nicolas Todt", "extracted_entity": "Jean_Todt"}
{"question": "who is Ashikaga Takauji's child?", "answer": "Motouji Ashikaga", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Motouji Ashikaga", "Ashikaga Yoshiakira"], "entity_annotations": ["Ashikaga Takauji"], "answer_entity_name": null, "predicted_answer": "Ashikaga Takauji's child is Ash", "extracted_entity": "Ashikaga_Takauji"}
{"question": "who is Osamu Tezuka's child?", "answer": "Makoto Tezuka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Makoto Tezuka"], "entity_annotations": ["Osamu Tezuka"], "answer_entity_name": null, "predicted_answer": "amu Tezuka's child is Osamu", "extracted_entity": "Osamu_Tezuka"}
{"question": "who is Josiah's child?", "answer": "Jehoiakim", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jehoiakim", "Zedekiah"], "entity_annotations": ["Josiah"], "answer_entity_name": null, "predicted_answer": "Manasseh", "extracted_entity": "Josiah"}
{"question": "which language was Kings of the Wild Frontier written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Kings of the Wild Frontier"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Kings_of_the_Wild_Frontier"}
{"question": "which language was In Rainbows written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["In Rainbows"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "In_Rainbows"}
{"question": "which language was Pok\u00e9mon Trading Card Game written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Pok\u00e9mon Trading Card Game"], "answer_entity_name": null, "predicted_answer": "The language is English.", "extracted_entity": "Pok\u00e9mon_Trading_Card_Game"}
{"question": "which language was Caetano Veloso written in?", "answer": "Spanish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spanish", "English", "Portuguese"], "entity_annotations": ["Caetano Veloso"], "answer_entity_name": null, "predicted_answer": "Caetano Veloso was written in English.", "extracted_entity": "Caetano_Veloso"}
{"question": "which language was \u00c9douard written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["\u00c9douard"], "answer_entity_name": null, "predicted_answer": "French", "extracted_entity": "\u00c9douard"}
{"question": "which language was Tulu cinema written in?", "answer": "Tulu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tulu"], "entity_annotations": ["Tulu cinema"], "answer_entity_name": null, "predicted_answer": "Tulu", "extracted_entity": "Tulu_cinema"}
{"question": "which language was Am\u00e9lie written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["Am\u00e9lie"], "answer_entity_name": null, "predicted_answer": "French", "extracted_entity": "Am\u00e9lie"}
{"question": "which language was Severny Vestnik written in?", "answer": "Russian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russian"], "entity_annotations": ["Severny Vestnik"], "answer_entity_name": null, "predicted_answer": "Russian", "extracted_entity": "Severny_Vestnik"}
{"question": "which language was If written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["If"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "If"}
{"question": "which language was Afisha written in?", "answer": "Russian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russian"], "entity_annotations": ["Afisha"], "answer_entity_name": null, "predicted_answer": "Russian", "extracted_entity": "Afisha"}
{"question": "which language was Hip Hop Is Dead written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Hip Hop Is Dead"], "answer_entity_name": null, "predicted_answer": "English.", "extracted_entity": "Hip_Hop_Is_Dead"}
{"question": "which language was Rondo written in?", "answer": "Croatian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Croatian"], "entity_annotations": ["Rondo"], "answer_entity_name": null, "predicted_answer": "Rondo was written in English.", "extracted_entity": "Rondo"}
{"question": "which language was New Horizons written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["New Horizons"], "answer_entity_name": null, "predicted_answer": "ython", "extracted_entity": "New_Horizons"}
{"question": "which language was Toy written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Toy"], "answer_entity_name": null, "predicted_answer": "Toy was written in English.", "extracted_entity": "Toy"}
{"question": "which language was Le Point written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["Le Point"], "answer_entity_name": null, "predicted_answer": "French", "extracted_entity": "Le_Point"}
{"question": "which language was Yen Plus written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Yen Plus"], "answer_entity_name": null, "predicted_answer": "Yen Plus was written in Japanese.", "extracted_entity": "Yen_Plus"}
{"question": "which language was The Witcher written in?", "answer": "Polish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Polish"], "entity_annotations": ["The Witcher"], "answer_entity_name": null, "predicted_answer": "Polish", "extracted_entity": "The_Witcher"}
{"question": "which language was Battle of Brunanburh written in?", "answer": "Old English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Old English"], "entity_annotations": ["Battle of Brunanburh"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Battle_of_Brunanburh"}
{"question": "which language was Adrenalize written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Adrenalize"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Adrenalize"}
{"question": "which language was Codex Sangallensis 48 written in?", "answer": "Latin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Latin"], "entity_annotations": ["Codex Sangallensis 48"], "answer_entity_name": null, "predicted_answer": "Greek-Latin", "extracted_entity": "Codex_Sangallensis_48"}
{"question": "which language was Ivan Pavlov written in?", "answer": "Russian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russian"], "entity_annotations": ["Ivan Pavlov"], "answer_entity_name": null, "predicted_answer": "Russian", "extracted_entity": "Ivan_Pavlov"}
{"question": "which language was Dredd written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Dredd"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Dredd"}
{"question": "which language was De Morgen written in?", "answer": "Dutch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dutch"], "entity_annotations": ["De Morgen"], "answer_entity_name": null, "predicted_answer": "h", "extracted_entity": "De_Morgen"}
{"question": "which language was Sonic Lost World written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Sonic Lost World"], "answer_entity_name": null, "predicted_answer": "Sonic Lost World was written in C++", "extracted_entity": "Sonic_Lost_World"}
{"question": "which language was Toronto Star written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Toronto Star"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Toronto_Star"}
{"question": "which language was Elevation written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["Elevation"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Elevation"}
{"question": "which language was Mezzanine written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Mezzanine"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Mezzanine"}
{"question": "which language was Econometrica written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Econometrica"], "answer_entity_name": null, "predicted_answer": "Econometrica was written in English.", "extracted_entity": "Econometrica"}
{"question": "which language was Pies Descalzos written in?", "answer": "Spanish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spanish"], "entity_annotations": ["Pies Descalzos"], "answer_entity_name": null, "predicted_answer": "Spanish", "extracted_entity": "Pies_Descalzos"}
{"question": "which language was Celine Dion written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Celine Dion"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Celine_Dion"}
{"question": "which language was Mother written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Mother"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Mother"}
{"question": "which language was Ruslan and Ludmila written in?", "answer": "Russian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russian"], "entity_annotations": ["Ruslan and Ludmila"], "answer_entity_name": null, "predicted_answer": "Russian", "extracted_entity": "Ruslan_and_Ludmila"}
{"question": "which language was Finnish name written in?", "answer": "Finnish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Finnish"], "entity_annotations": ["Finnish name"], "answer_entity_name": null, "predicted_answer": "glish", "extracted_entity": "Finnish_name"}
{"question": "which language was New Oxford American Dictionary written in?", "answer": "American English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["American English"], "entity_annotations": ["New Oxford American Dictionary"], "answer_entity_name": null, "predicted_answer": "New Oxford American Dictionary was written in English language.", "extracted_entity": "New_Oxford_American_Dictionary"}
{"question": "which language was Irish Monthly written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Irish Monthly"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Irish_Monthly"}
{"question": "which language was You've Really Got a Hold on Me written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["You've Really Got a Hold on Me"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "You've_Really_Got_a_Hold_on_Me"}
{"question": "which language was Ten Summoner's Tales written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Ten Summoner's Tales"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Ten_Summoner's_Tales"}
{"question": "which language was Absolution written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Absolution"], "answer_entity_name": null, "predicted_answer": "Absolution was written in English.", "extracted_entity": "Absolution"}
{"question": "which language was Free Birds written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Free Birds"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Free_Birds"}
{"question": "which language was T\u00eatu written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["T\u00eatu"], "answer_entity_name": null, "predicted_answer": "French", "extracted_entity": "T\u00eatu"}
{"question": "which language was 127 Hours written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["127 Hours"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "127_Hours"}
{"question": "which language was Weird Tales written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Weird Tales"], "answer_entity_name": null, "predicted_answer": "English.", "extracted_entity": "Weird_Tales"}
{"question": "which language was State written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["State"], "answer_entity_name": null, "predicted_answer": "python", "extracted_entity": "State"}
{"question": "which language was Tempo written in?", "answer": "Indonesian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Indonesian"], "entity_annotations": ["Tempo"], "answer_entity_name": null, "predicted_answer": "Tempo was written in English.", "extracted_entity": "Tempo"}
{"question": "which language was Moscow Nights written in?", "answer": "Russian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russian"], "entity_annotations": ["Moscow Nights"], "answer_entity_name": null, "predicted_answer": "Russian", "extracted_entity": "Moscow_Nights"}
{"question": "which language was Use Your Illusion II written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Use Your Illusion II"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Use_Your_Illusion_II"}
{"question": "which language was OK Computer written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["OK Computer"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "OK_Computer"}
{"question": "which language was Gentleman written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Gentleman"], "answer_entity_name": null, "predicted_answer": "glish", "extracted_entity": "Gentleman"}
{"question": "which language was Hall written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Hall"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Hall"}
{"question": "which language was 18 Months written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["18 Months"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "18_Months"}
{"question": "which language was Courrier International written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["Courrier International"], "answer_entity_name": null, "predicted_answer": "French", "extracted_entity": "Courrier_International"}
{"question": "which language was Sahara written in?", "answer": "Greek", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Greek"], "entity_annotations": ["Sahara"], "answer_entity_name": null, "predicted_answer": "glish", "extracted_entity": "Sahara"}
{"question": "which language was Holly written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Holly"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Holly"}
{"question": "which language was M\u00f3nica Naranjo written in?", "answer": "Spanish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spanish"], "entity_annotations": ["M\u00f3nica Naranjo"], "answer_entity_name": null, "predicted_answer": "Spanish", "extracted_entity": "M\u00f3nica_Naranjo"}
{"question": "which language was Arbeit macht frei written in?", "answer": "Italian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Italian"], "entity_annotations": ["Arbeit macht frei"], "answer_entity_name": null, "predicted_answer": "erman", "extracted_entity": "Arbeit_macht_frei"}
{"question": "which language was CQ Amateur Radio written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["CQ Amateur Radio"], "answer_entity_name": null, "predicted_answer": "English.", "extracted_entity": "CQ_Amateur_Radio"}
{"question": "which language was Amsterdam written in?", "answer": "Dutch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dutch"], "entity_annotations": ["Amsterdam"], "answer_entity_name": null, "predicted_answer": "glish", "extracted_entity": "Amsterdam"}
{"question": "which language was Tencent QQ written in?", "answer": "Chinese", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chinese"], "entity_annotations": ["Tencent QQ"], "answer_entity_name": null, "predicted_answer": "Python", "extracted_entity": "Tencent_QQ"}
{"question": "which language was Rockdelux written in?", "answer": "Spanish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spanish"], "entity_annotations": ["Rockdelux"], "answer_entity_name": null, "predicted_answer": "Spanish", "extracted_entity": "Rockdelux"}
{"question": "which language was El Universo written in?", "answer": "Spanish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spanish"], "entity_annotations": ["El Universo"], "answer_entity_name": null, "predicted_answer": "Spanish", "extracted_entity": "El_Universo"}
{"question": "which language was Buffet written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["Buffet"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Buffet"}
{"question": "which language was Road & Track written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Road & Track"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Road_&_Track"}
{"question": "which language was The Banker written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["The Banker"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "The_Banker"}
{"question": "which language was The Man Who Sold the World written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["The Man Who Sold the World"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "The_Man_Who_Sold_the_World"}
{"question": "which language was Unhalfbricking written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Unhalfbricking"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Unhalfbricking"}
{"question": "which language was France Culture written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["France Culture"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "France_Culture"}
{"question": "which language was Beck written in?", "answer": "Germanic languages", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germanic languages"], "entity_annotations": ["Beck"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Beck"}
{"question": "which language was Dig Out Your Soul written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Dig Out Your Soul"], "answer_entity_name": null, "predicted_answer": "Dig Out Your Soul was written in English", "extracted_entity": "Dig_Out_Your_Soul"}
{"question": "which language was 1888 written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["1888"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "1888"}
{"question": "which language was Hot Press written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Hot Press"], "answer_entity_name": null, "predicted_answer": "Hot Press was written in English.", "extracted_entity": "Hot_Press"}
{"question": "which language was Nintendo Power written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Nintendo Power"], "answer_entity_name": null, "predicted_answer": "English.", "extracted_entity": "Nintendo_Power"}
{"question": "which language was Pont Neuf written in?", "answer": "Croatian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Croatian"], "entity_annotations": ["Pont Neuf"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Pont_Neuf"}
{"question": "which language was Tygodnik Powszechny written in?", "answer": "Polish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Polish"], "entity_annotations": ["Tygodnik Powszechny"], "answer_entity_name": null, "predicted_answer": "Polish", "extracted_entity": "Tygodnik_Powszechny"}
{"question": "which language was Washed Out written in?", "answer": "Croatian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Croatian"], "entity_annotations": ["Washed Out"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Washed_Out"}
{"question": "which language was Tess of the d'Urbervilles written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Tess of the d'Urbervilles"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Tess_of_the_d'Urbervilles"}
{"question": "which language was Vogue Italia written in?", "answer": "Italian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Italian"], "entity_annotations": ["Vogue Italia"], "answer_entity_name": null, "predicted_answer": "Italian", "extracted_entity": "Vogue_Italia"}
{"question": "which language was L'Humanit\u00e9 written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["L'Humanit\u00e9"], "answer_entity_name": null, "predicted_answer": "French", "extracted_entity": "L'Humanit\u00e9"}
{"question": "which language was Forbes written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Forbes"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Forbes"}
{"question": "which language was Meat Is Murder written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Meat Is Murder"], "answer_entity_name": null, "predicted_answer": "Meat Is Murder was written in English", "extracted_entity": "Meat_Is_Murder"}
{"question": "which language was Brut y Tywysogion written in?", "answer": "Welsh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Welsh"], "entity_annotations": ["Brut y Tywysogion"], "answer_entity_name": null, "predicted_answer": "Welsh", "extracted_entity": "Brut_y_Tywysogion"}
{"question": "which language was Gia written in?", "answer": "Greek", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Greek"], "entity_annotations": ["Gia"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Gia"}
{"question": "which language was Black Sabbath written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Black Sabbath"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Black_Sabbath"}
{"question": "which language was Trapeze written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Trapeze"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Trapeze"}
{"question": "which language was Cantabile written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French", "Danish"], "entity_annotations": ["Cantabile"], "answer_entity_name": null, "predicted_answer": "Italian", "extracted_entity": "Cantabile"}
{"question": "which language was Bergens Tidende written in?", "answer": "Norwegian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Norwegian"], "entity_annotations": ["Bergens Tidende"], "answer_entity_name": null, "predicted_answer": "Norwegian", "extracted_entity": "Bergens_Tidende"}
{"question": "which language was Campfire written in?", "answer": "Hebrew", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hebrew"], "entity_annotations": ["Campfire"], "answer_entity_name": null, "predicted_answer": "Campfire was written in English.", "extracted_entity": "Campfire"}
{"question": "which language was Newsweek Polska written in?", "answer": "Polish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Polish"], "entity_annotations": ["Newsweek Polska"], "answer_entity_name": null, "predicted_answer": "Polish language", "extracted_entity": "Newsweek_Polska"}
{"question": "which language was Convorbiri Literare written in?", "answer": "Romanian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Romanian"], "entity_annotations": ["Convorbiri Literare"], "answer_entity_name": null, "predicted_answer": "Romanian", "extracted_entity": "Convorbiri_Literare"}
{"question": "which language was Pichilemu written in?", "answer": "Spanish", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spanish"], "entity_annotations": ["Pichilemu"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Pichilemu"}
{"question": "which language was The Japan Times written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["The Japan Times"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "The_Japan_Times"}
{"question": "which language was Radio Televizija Republike Srpske written in?", "answer": "Serbian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Serbian"], "entity_annotations": ["Radio Televizija Republike Srpske"], "answer_entity_name": null, "predicted_answer": "Serbian", "extracted_entity": "Radio_Televizija_Republike_Srpske"}
{"question": "which language was The Edge written in?", "answer": "Russian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russian"], "entity_annotations": ["The Edge"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "The_Edge"}
{"question": "which language was Kid A written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Kid A"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Kid_A"}
{"question": "which language was Paris Match written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["Paris Match"], "answer_entity_name": null, "predicted_answer": "French", "extracted_entity": "Paris_Match"}
{"question": "which language was Otello written in?", "answer": "Italian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Italian"], "entity_annotations": ["Otello"], "answer_entity_name": null, "predicted_answer": "Italian", "extracted_entity": "Otello"}
{"question": "which language was L'Intransigeant written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["L'Intransigeant"], "answer_entity_name": null, "predicted_answer": "French", "extracted_entity": "L'Intransigeant"}
{"question": "which language was Meduza written in?", "answer": "Russian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russian"], "entity_annotations": ["Meduza"], "answer_entity_name": null, "predicted_answer": "Russian and English", "extracted_entity": "Meduza"}
{"question": "which language was Magic written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["Magic"], "answer_entity_name": null, "predicted_answer": "Magic was written in C.", "extracted_entity": "Magic"}
{"question": "which language was Don't Believe the Truth written in?", "answer": "English", "dataset": "entity_questions", "split": "test", "answer_aliases": ["English"], "entity_annotations": ["Don't Believe the Truth"], "answer_entity_name": null, "predicted_answer": "English", "extracted_entity": "Don't_Believe_the_Truth"}
{"question": "which language was France Info written in?", "answer": "French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["French"], "entity_annotations": ["France Info"], "answer_entity_name": null, "predicted_answer": "French", "extracted_entity": "France_Info"}
{"question": "where did Koichi Tohei die?", "answer": "Tokyo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tokyo"], "entity_annotations": ["Koichi Tohei"], "answer_entity_name": null, "predicted_answer": "in Tokyo, Japan", "extracted_entity": "Koichi_Tohei"}
{"question": "where did Eric Haakonsson die?", "answer": "Kingdom of Northumbria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kingdom of Northumbria"], "entity_annotations": ["Eric Haakonsson"], "answer_entity_name": null, "predicted_answer": "Eric Haakonsson died in Norway.", "extracted_entity": "Eric_Haakonsson"}
{"question": "where did Tom Kane die?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Tom Kane"], "answer_entity_name": null, "predicted_answer": "He died in Los Angeles.", "extracted_entity": "Tom_Kane"}
{"question": "where did Charles de Freycinet die?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Charles de Freycinet"], "answer_entity_name": null, "predicted_answer": "Charles de Freycinet died in Paris", "extracted_entity": "Charles_de_Freycinet"}
{"question": "where did Francesco Guardi die?", "answer": "Venice", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Venice"], "entity_annotations": ["Francesco Guardi"], "answer_entity_name": null, "predicted_answer": "Francesco Guardi died in Venice.", "extracted_entity": "Francesco_Guardi"}
{"question": "where did Henry Miller die?", "answer": "California", "dataset": "entity_questions", "split": "test", "answer_aliases": ["California"], "entity_annotations": ["Henry Miller"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "Henry_Miller"}
{"question": "where did Genevieve die?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Genevieve"], "answer_entity_name": null, "predicted_answer": "in Paris", "extracted_entity": "Genevieve"}
{"question": "where did Donny Hathaway die?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Donny Hathaway"], "answer_entity_name": null, "predicted_answer": "Donny Hathaway died in New York City", "extracted_entity": "Donny_Hathaway"}
{"question": "where did Lorenzo Gaf\u00e0 die?", "answer": "Birgu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Birgu"], "entity_annotations": ["Lorenzo Gaf\u00e0"], "answer_entity_name": null, "predicted_answer": "Lorenzo Gaf\u00e0 died in Birgu", "extracted_entity": "Lorenzo_Gaf\u00e0"}
{"question": "where did Winsor McCay die?", "answer": "Brooklyn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brooklyn"], "entity_annotations": ["Winsor McCay"], "answer_entity_name": null, "predicted_answer": "Winsor McCay died in New York City,", "extracted_entity": "Winsor_McCay"}
{"question": "where did Carlo Rainaldi die?", "answer": "Rome", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rome"], "entity_annotations": ["Carlo Rainaldi"], "answer_entity_name": null, "predicted_answer": "Rome", "extracted_entity": "Carlo_Rainaldi"}
{"question": "where did Joan Blaeu die?", "answer": "Amsterdam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amsterdam"], "entity_annotations": ["Joan Blaeu"], "answer_entity_name": null, "predicted_answer": "Joan Blaeu died in Amsterdam", "extracted_entity": "Joan_Blaeu"}
{"question": "where did Georgios Papadopoulos die?", "answer": "Athens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Athens"], "entity_annotations": ["Georgios Papadopoulos"], "answer_entity_name": null, "predicted_answer": "Greece", "extracted_entity": "Georgios_Papadopoulos"}
{"question": "where did Charlotte of Mecklenburg-Strelitz die?", "answer": "Kew", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kew"], "entity_annotations": ["Charlotte of Mecklenburg-Strelitz"], "answer_entity_name": null, "predicted_answer": "Charlotte of Mecklenburg-Strelitz died", "extracted_entity": "Charlotte_of_Mecklenburg-Strelitz"}
{"question": "where did Richard McBride die?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Richard McBride"], "answer_entity_name": null, "predicted_answer": "Victoria, British Columbia", "extracted_entity": "Richard_McBride"}
{"question": "where did Anton Graff die?", "answer": "Dresden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dresden"], "entity_annotations": ["Anton Graff"], "answer_entity_name": null, "predicted_answer": "in Dresden, Saxony, Germany.", "extracted_entity": "Anton_Graff"}
{"question": "where did Lauge Koch die?", "answer": "Copenhagen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Copenhagen"], "entity_annotations": ["Lauge Koch"], "answer_entity_name": null, "predicted_answer": "Denmark", "extracted_entity": "Lauge_Koch"}
{"question": "where did Jo\u00e3o da Nova die?", "answer": "Kochi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kochi"], "entity_annotations": ["Jo\u00e3o da Nova"], "answer_entity_name": null, "predicted_answer": "Kochi, India", "extracted_entity": "Jo\u00e3o_da_Nova"}
{"question": "where did Steve Rubell die?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Steve Rubell"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "Steve_Rubell"}
{"question": "where did William Burges die?", "answer": "The Tower House", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Tower House"], "entity_annotations": ["William Burges"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "William_Burges"}
{"question": "where did Michael Smith die?", "answer": "Vancouver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vancouver"], "entity_annotations": ["Michael Smith"], "answer_entity_name": null, "predicted_answer": "Michael Smith died in Cambridge.", "extracted_entity": "Michael_Smith"}
{"question": "where did Avicenna die?", "answer": "Hamadan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hamadan"], "entity_annotations": ["Avicenna"], "answer_entity_name": null, "predicted_answer": "amadan, Iran", "extracted_entity": "Avicenna"}
{"question": "where did Marcel Boussac die?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Marcel Boussac"], "answer_entity_name": null, "predicted_answer": "Marcel Boussac died in Paris.", "extracted_entity": "Marcel_Boussac"}
{"question": "where did Claude Louis Berthollet die?", "answer": "Arcueil", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arcueil"], "entity_annotations": ["Claude Louis Berthollet"], "answer_entity_name": null, "predicted_answer": "Claude Louis Berthollet died in Paris,", "extracted_entity": "Claude_Louis_Berthollet"}
{"question": "where did Johann Baptist Zimmermann die?", "answer": "Munich", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Munich"], "entity_annotations": ["Johann Baptist Zimmermann"], "answer_entity_name": null, "predicted_answer": "Munich", "extracted_entity": "Johann_Baptist_Zimmermann"}
{"question": "where did Salil Chowdhury die?", "answer": "Kolkata", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kolkata"], "entity_annotations": ["Salil Chowdhury"], "answer_entity_name": null, "predicted_answer": "Salil Chowdhury died in Kolkata.", "extracted_entity": "Salil_Chowdhury"}
{"question": "where did Jean-Baptiste Descamps die?", "answer": "Rouen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rouen"], "entity_annotations": ["Jean-Baptiste Descamps"], "answer_entity_name": null, "predicted_answer": "Jean-Baptiste Descamps died in Rouen", "extracted_entity": "Jean-Baptiste_Descamps"}
{"question": "where did Giacomo Quarenghi die?", "answer": "Saint Petersburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint Petersburg"], "entity_annotations": ["Giacomo Quarenghi"], "answer_entity_name": null, "predicted_answer": "He died in Saint Petersburg, Russian Empire.", "extracted_entity": "Giacomo_Quarenghi"}
{"question": "where did Anna Pavlovna of Russia die?", "answer": "The Hague", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Hague"], "entity_annotations": ["Anna Pavlovna of Russia"], "answer_entity_name": null, "predicted_answer": "1 March 1865", "extracted_entity": "Anna_Pavlovna_of_Russia"}
{"question": "where did Jan Swammerdam die?", "answer": "Amsterdam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amsterdam"], "entity_annotations": ["Jan Swammerdam"], "answer_entity_name": null, "predicted_answer": "Amsterdam, Netherlands", "extracted_entity": "Jan_Swammerdam"}
{"question": "where did Al Hirt die?", "answer": "New Orleans", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Orleans"], "entity_annotations": ["Al Hirt"], "answer_entity_name": null, "predicted_answer": "he died in New Orleans, Louisiana, United States", "extracted_entity": "Al_Hirt"}
{"question": "where did Karl B\u00f6hm die?", "answer": "Salzburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Salzburg"], "entity_annotations": ["Karl B\u00f6hm"], "answer_entity_name": null, "predicted_answer": "Karl B\u00f6hm died in Salzburg, Austria", "extracted_entity": "Karl_B\u00f6hm"}
{"question": "where did Giuseppe Bezzuoli die?", "answer": "Florence", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florence"], "entity_annotations": ["Giuseppe Bezzuoli"], "answer_entity_name": null, "predicted_answer": "Florence.", "extracted_entity": "Giuseppe_Bezzuoli"}
{"question": "where did Giuseppe Guarneri die?", "answer": "Cremona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cremona"], "entity_annotations": ["Giuseppe Guarneri"], "answer_entity_name": null, "predicted_answer": "Giuseppe Guarneri died in Cremona", "extracted_entity": "Giuseppe_Guarneri"}
{"question": "where did Ignace Reiss die?", "answer": "Lausanne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lausanne"], "entity_annotations": ["Ignace Reiss"], "answer_entity_name": null, "predicted_answer": "He died in Lausanne, Switzerland", "extracted_entity": "Ignace_Reiss"}
{"question": "where did Moe Dalitz die?", "answer": "Las Vegas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Las Vegas"], "entity_annotations": ["Moe Dalitz"], "answer_entity_name": null, "predicted_answer": "Moe Dalitz died in Las Vegas, NV", "extracted_entity": "Moe_Dalitz"}
{"question": "where did Madan Mohan Malaviya die?", "answer": "Varanasi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Varanasi"], "entity_annotations": ["Madan Mohan Malaviya"], "answer_entity_name": null, "predicted_answer": "Madan Mohan Malaviya died in Pr", "extracted_entity": "Madan_Mohan_Malaviya"}
{"question": "where did Adriaen van Ostade die?", "answer": "Haarlem", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Haarlem"], "entity_annotations": ["Adriaen van Ostade"], "answer_entity_name": null, "predicted_answer": "buried 2 May 1685", "extracted_entity": "Adriaen_van_Ostade"}
{"question": "where did John Wetton die?", "answer": "Bournemouth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bournemouth"], "entity_annotations": ["John Wetton"], "answer_entity_name": null, "predicted_answer": "John Wetton died in Switzerland", "extracted_entity": "John_Wetton"}
{"question": "where did Leonardo M\u00e1rquez die?", "answer": "Havana", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Havana"], "entity_annotations": ["Leonardo M\u00e1rquez"], "answer_entity_name": null, "predicted_answer": "in Mexico", "extracted_entity": "Leonardo_M\u00e1rquez"}
{"question": "where did Manolo Millares die?", "answer": "Madrid", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Madrid"], "entity_annotations": ["Manolo Millares"], "answer_entity_name": null, "predicted_answer": "he died in Madrid", "extracted_entity": "Manolo_Millares"}
{"question": "where did Balaji Baji Rao die?", "answer": "Parvati Hill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Parvati Hill"], "entity_annotations": ["Balaji Baji Rao"], "answer_entity_name": null, "predicted_answer": "23 June 1761", "extracted_entity": "Balaji_Baji_Rao"}
{"question": "where did Kenneth More die?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Kenneth More"], "answer_entity_name": null, "predicted_answer": "he died in London", "extracted_entity": "Kenneth_More"}
{"question": "where did John Baird, 1st Viscount Stonehaven die?", "answer": "Stonehaven", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stonehaven"], "entity_annotations": ["John Baird, 1st Viscount Stonehaven"], "answer_entity_name": null, "predicted_answer": "John Baird, 1st Viscount Stone", "extracted_entity": "John_Baird,_1st_Viscount_Stonehaven"}
{"question": "where did Yaroslav Nikolaev die?", "answer": "Saint Petersburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint Petersburg"], "entity_annotations": ["Yaroslav Nikolaev"], "answer_entity_name": null, "predicted_answer": "Yaroslav Nikolaev died in Leningrad.", "extracted_entity": "Yaroslav_Nikolaev"}
{"question": "where did Eric II of Norway die?", "answer": "Bergen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bergen"], "entity_annotations": ["Eric II of Norway"], "answer_entity_name": null, "predicted_answer": "Eric II of Norway died in Norway", "extracted_entity": "Eric_II_of_Norway"}
{"question": "where did Lynne Perrie die?", "answer": "Rotherham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rotherham"], "entity_annotations": ["Lynne Perrie"], "answer_entity_name": null, "predicted_answer": "Lynne Perrie died in England.", "extracted_entity": "Lynne_Perrie"}
{"question": "where did Ernie Banks die?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Ernie Banks"], "answer_entity_name": null, "predicted_answer": "Chicago, Illinois, United States", "extracted_entity": "Ernie_Banks"}
{"question": "where did V\u00e1clav Havel die?", "answer": "Prague", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prague"], "entity_annotations": ["V\u00e1clav Havel"], "answer_entity_name": null, "predicted_answer": "Prague, Czech Republic", "extracted_entity": "V\u00e1clav_Havel"}
{"question": "where did George Buchanan die?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["George Buchanan"], "answer_entity_name": null, "predicted_answer": "George Buchanan died in 1582", "extracted_entity": "George_Buchanan"}
{"question": "where did Frederick V of Denmark die?", "answer": "Copenhagen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Copenhagen"], "entity_annotations": ["Frederick V of Denmark"], "answer_entity_name": null, "predicted_answer": "Copenhagen", "extracted_entity": "Frederick_V_of_Denmark"}
{"question": "where did Frank Fasi die?", "answer": "Honolulu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Honolulu"], "entity_annotations": ["Frank Fasi"], "answer_entity_name": null, "predicted_answer": "Honolulu, Hawaii", "extracted_entity": "Frank_Fasi"}
{"question": "where did Louis the Child die?", "answer": "Frankfurt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frankfurt"], "entity_annotations": ["Louis the Child"], "answer_entity_name": null, "predicted_answer": "Louis the Child died in Alt\u00f6tting, Duch", "extracted_entity": "Louis_the_Child"}
{"question": "where did Al-Baladhuri die?", "answer": "Baghdad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Baghdad"], "entity_annotations": ["Al-Baladhuri"], "answer_entity_name": null, "predicted_answer": "Baghdad", "extracted_entity": "Al-Baladhuri"}
{"question": "where did Igor Grabar die?", "answer": "Moscow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moscow"], "entity_annotations": ["Igor Grabar"], "answer_entity_name": null, "predicted_answer": "Moscow, Russian SFSR, Soviet Union", "extracted_entity": "Igor_Grabar"}
{"question": "where did Hermann Gundert die?", "answer": "Calw", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Calw"], "entity_annotations": ["Hermann Gundert"], "answer_entity_name": null, "predicted_answer": "Hermann Gundert died in Stuttgart", "extracted_entity": "Hermann_Gundert"}
{"question": "where did Alexander von Wagner die?", "answer": "Munich", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Munich"], "entity_annotations": ["Alexander von Wagner"], "answer_entity_name": null, "predicted_answer": "he died in Munich, Germany", "extracted_entity": "Alexander_von_Wagner"}
{"question": "where did Gianni Versace die?", "answer": "Miami Beach", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Miami Beach"], "entity_annotations": ["Gianni Versace"], "answer_entity_name": null, "predicted_answer": "He died in Miami Beach", "extracted_entity": "Gianni_Versace"}
{"question": "where did Afonso I of Portugal die?", "answer": "Coimbra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Coimbra"], "entity_annotations": ["Afonso I of Portugal"], "answer_entity_name": null, "predicted_answer": "isbon", "extracted_entity": "Afonso_I_of_Portugal"}
{"question": "where did Zhang Zongchang die?", "answer": "Shandong", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shandong"], "entity_annotations": ["Zhang Zongchang"], "answer_entity_name": null, "predicted_answer": "Zhang Zongchang died in 3 September", "extracted_entity": "Zhang_Zongchang"}
{"question": "where did Ray Noble die?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Ray Noble"], "answer_entity_name": null, "predicted_answer": "He died in London.", "extracted_entity": "Ray_Noble"}
{"question": "where did Jerome Hill die?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Jerome Hill"], "answer_entity_name": null, "predicted_answer": "Jerome Hill died in New York City, New York", "extracted_entity": "Jerome_Hill"}
{"question": "where did Karl Gegenbaur die?", "answer": "Heidelberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Heidelberg"], "entity_annotations": ["Karl Gegenbaur"], "answer_entity_name": null, "predicted_answer": "He died in Heidelberg", "extracted_entity": "Karl_Gegenbaur"}
{"question": "where did Mohamed Boudiaf die?", "answer": "Annaba", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Annaba"], "entity_annotations": ["Mohamed Boudiaf"], "answer_entity_name": null, "predicted_answer": "29 June 1992, ; ALA", "extracted_entity": "Mohamed_Boudiaf"}
{"question": "where did Eduard N\u00e1pravn\u00edk die?", "answer": "Saint Petersburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint Petersburg"], "entity_annotations": ["Eduard N\u00e1pravn\u00edk"], "answer_entity_name": null, "predicted_answer": "Eduard N\u00e1pravn\u00edk died in Saint Petersburg", "extracted_entity": "Eduard_N\u00e1pravn\u00edk"}
{"question": "where did Michael Denis die?", "answer": "Vienna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vienna"], "entity_annotations": ["Michael Denis"], "answer_entity_name": null, "predicted_answer": "in Vienna", "extracted_entity": "Michael_Denis"}
{"question": "where did Albert Capellani die?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Albert Capellani"], "answer_entity_name": null, "predicted_answer": "26 September 1931", "extracted_entity": "Albert_Capellani"}
{"question": "where did Lionel de Nic\u00e9ville die?", "answer": "Kolkata", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kolkata"], "entity_annotations": ["Lionel de Nic\u00e9ville"], "answer_entity_name": null, "predicted_answer": "Calcutta", "extracted_entity": "Lionel_de_Nic\u00e9ville"}
{"question": "where did Charles W. Bryan die?", "answer": "Lincoln", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lincoln"], "entity_annotations": ["Charles W. Bryan"], "answer_entity_name": null, "predicted_answer": "Lincoln, Nebraska", "extracted_entity": "Charles_W._Bryan"}
{"question": "where did Ben Heppner die?", "answer": "Rosthern", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rosthern"], "entity_annotations": ["Ben Heppner"], "answer_entity_name": null, "predicted_answer": "He died in Canada.", "extracted_entity": "Ben_Heppner"}
{"question": "where did Thomas Blake Glover die?", "answer": "Tokyo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tokyo"], "entity_annotations": ["Thomas Blake Glover"], "answer_entity_name": null, "predicted_answer": "Thomas Blake Glover died in Nagasaki, Japan", "extracted_entity": "Thomas_Blake_Glover"}
{"question": "where did Romanos I Lekapenos die?", "answer": "Constantinople", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Constantinople"], "entity_annotations": ["Romanos I Lekapenos"], "answer_entity_name": null, "predicted_answer": "Romanos I Lekapenos died in Constantin", "extracted_entity": "Romanos_I_Lekapenos"}
{"question": "where did Georgy Tovstonogov die?", "answer": "Saint Petersburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint Petersburg"], "entity_annotations": ["Georgy Tovstonogov"], "answer_entity_name": null, "predicted_answer": "Georgy Tovstonogov died in his", "extracted_entity": "Georgy_Tovstonogov"}
{"question": "where did Heinrich Heine die?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Heinrich Heine"], "answer_entity_name": null, "predicted_answer": "17 February 1856", "extracted_entity": "Heinrich_Heine"}
{"question": "where did John of Kronstadt die?", "answer": "Kronstadt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kronstadt"], "entity_annotations": ["John of Kronstadt"], "answer_entity_name": null, "predicted_answer": "John of Kronstadt died in 1908.", "extracted_entity": "John_of_Kronstadt"}
{"question": "where did Cory Lidle die?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Cory Lidle"], "answer_entity_name": null, "predicted_answer": "in New York City", "extracted_entity": "Cory_Lidle"}
{"question": "where did Edmund Burke die?", "answer": "Beaconsfield", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Beaconsfield"], "entity_annotations": ["Edmund Burke"], "answer_entity_name": null, "predicted_answer": "Burke died in Beaconsfield, England.", "extracted_entity": "Edmund_Burke"}
{"question": "where did Alicia de Larrocha die?", "answer": "Barcelona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barcelona"], "entity_annotations": ["Alicia de Larrocha"], "answer_entity_name": null, "predicted_answer": "Spain.", "extracted_entity": "Alicia_de_Larrocha"}
{"question": "where did Alberto Burri die?", "answer": "Nice", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nice"], "entity_annotations": ["Alberto Burri"], "answer_entity_name": null, "predicted_answer": "Alberto Burri died in Citt\u00e0 di Cast", "extracted_entity": "Alberto_Burri"}
{"question": "where did Robert F. Kennedy die?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Robert F. Kennedy"], "answer_entity_name": null, "predicted_answer": "California", "extracted_entity": "Robert_F._Kennedy"}
{"question": "where did Billy Whelan die?", "answer": "Munich", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Munich"], "entity_annotations": ["Billy Whelan"], "answer_entity_name": null, "predicted_answer": "Munich", "extracted_entity": "Billy_Whelan"}
{"question": "where did Franz Waxman die?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Franz Waxman"], "answer_entity_name": null, "predicted_answer": "in Los Angeles, California, United States", "extracted_entity": "Franz_Waxman"}
{"question": "where did Charles Kay Ogden die?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Charles Kay Ogden"], "answer_entity_name": null, "predicted_answer": "England", "extracted_entity": "Charles_Kay_Ogden"}
{"question": "where did Roland Topor die?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Roland Topor"], "answer_entity_name": null, "predicted_answer": "Roland Topor died in Paris, France.", "extracted_entity": "Roland_Topor"}
{"question": "where did Giovanni Papini die?", "answer": "Florence", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florence"], "entity_annotations": ["Giovanni Papini"], "answer_entity_name": null, "predicted_answer": "Florence", "extracted_entity": "Giovanni_Papini"}
{"question": "where did George Frampton die?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["George Frampton"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "George_Frampton"}
{"question": "where did Edward Blake die?", "answer": "Toronto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toronto"], "entity_annotations": ["Edward Blake"], "answer_entity_name": null, "predicted_answer": "March 1, 1912", "extracted_entity": "Edward_Blake"}
{"question": "where did Aaron Pryor die?", "answer": "Cincinnati", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cincinnati"], "entity_annotations": ["Aaron Pryor"], "answer_entity_name": null, "predicted_answer": "He died in Indianapolis, Indiana, United States.", "extracted_entity": "Aaron_Pryor"}
{"question": "where did Vjekoslav Klai\u0107 die?", "answer": "Zagreb", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zagreb"], "entity_annotations": ["Vjekoslav Klai\u0107"], "answer_entity_name": null, "predicted_answer": "Zagreb.", "extracted_entity": "Vjekoslav_Klai\u0107"}
{"question": "where did Li Dazhao die?", "answer": "Beijing", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Beijing"], "entity_annotations": ["Li Dazhao"], "answer_entity_name": null, "predicted_answer": "Beijing", "extracted_entity": "Li_Dazhao"}
{"question": "where did John Adair die?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["John Adair"], "answer_entity_name": null, "predicted_answer": "Kentucky", "extracted_entity": "John_Adair"}
{"question": "where did Johannes Virolainen die?", "answer": "Lohja", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lohja"], "entity_annotations": ["Johannes Virolainen"], "answer_entity_name": null, "predicted_answer": "Johannes Virolainen died in Finland.", "extracted_entity": "Johannes_Virolainen"}
{"question": "where did August Everding die?", "answer": "Munich", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Munich"], "entity_annotations": ["August Everding"], "answer_entity_name": null, "predicted_answer": "Munich.", "extracted_entity": "August_Everding"}
{"question": "where did John of Biclaro die?", "answer": "Girona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Girona"], "entity_annotations": ["John of Biclaro"], "answer_entity_name": null, "predicted_answer": "after 621", "extracted_entity": "John_of_Biclaro"}
{"question": "where did Alfonso XI of Castile die?", "answer": "Gibraltar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gibraltar"], "entity_annotations": ["Alfonso XI of Castile"], "answer_entity_name": null, "predicted_answer": "Alfonso XI of Castile died in Sal", "extracted_entity": "Alfonso_XI_of_Castile"}
{"question": "where did Anton von Schmerling die?", "answer": "Vienna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vienna"], "entity_annotations": ["Anton von Schmerling"], "answer_entity_name": null, "predicted_answer": "Vienna, Austria", "extracted_entity": "Anton_von_Schmerling"}
{"question": "where did Frederick William IV of Prussia die?", "answer": "Potsdam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Potsdam"], "entity_annotations": ["Frederick William IV of Prussia"], "answer_entity_name": null, "predicted_answer": "Frederick William IV of Prussia died in Berlin,", "extracted_entity": "Frederick_William_IV_of_Prussia"}
{"question": "where did John I of Aragon die?", "answer": "Girona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Girona"], "entity_annotations": ["John I of Aragon"], "answer_entity_name": null, "predicted_answer": "John I of Aragon died in Barcelona.", "extracted_entity": "John_I_of_Aragon"}
{"question": "where did John Sell Cotman die?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["John Sell Cotman"], "answer_entity_name": null, "predicted_answer": "24 July 1842", "extracted_entity": "John_Sell_Cotman"}
{"question": "where did Heraclius I of Kakheti die?", "answer": "Isfahan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Isfahan"], "entity_annotations": ["Heraclius I of Kakheti"], "answer_entity_name": null, "predicted_answer": "Heraclius I of Kakheti died in", "extracted_entity": "Heraclius_I_of_Kakheti"}
{"question": "where did Henry Miller die?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Henry Miller"], "answer_entity_name": null, "predicted_answer": "Henry Miller died in Pacific Palisades, California", "extracted_entity": "Henry_Miller"}
{"question": "where did Pascual Madoz die?", "answer": "Genoa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Genoa"], "entity_annotations": ["Pascual Madoz"], "answer_entity_name": null, "predicted_answer": "he died in Genoa, Italy", "extracted_entity": "Pascual_Madoz"}
{"question": "where did Rauf Orbay die?", "answer": "Istanbul", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Istanbul"], "entity_annotations": ["Rauf Orbay"], "answer_entity_name": null, "predicted_answer": "Rauf Orbay died in Paris, France.", "extracted_entity": "Rauf_Orbay"}
{"question": "where did Nicodemus Tessin the Elder die?", "answer": "Stockholm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stockholm"], "entity_annotations": ["Nicodemus Tessin the Elder"], "answer_entity_name": null, "predicted_answer": "Stockholm", "extracted_entity": "Nicodemus_Tessin_the_Elder"}
{"question": "where did Conrad Wilhelm Hase die?", "answer": "Hanover", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hanover"], "entity_annotations": ["Conrad Wilhelm Hase"], "answer_entity_name": null, "predicted_answer": "Hanover", "extracted_entity": "Conrad_Wilhelm_Hase"}
{"question": "where did Ram\u00f3n Grau die?", "answer": "Havana", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Havana"], "entity_annotations": ["Ram\u00f3n Grau"], "answer_entity_name": null, "predicted_answer": "in Havana, Cuba", "extracted_entity": "Ram\u00f3n_Grau"}
{"question": "where did Charles Gore die?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Charles Gore"], "answer_entity_name": null, "predicted_answer": "Oxford", "extracted_entity": "Charles_Gore"}
{"question": "where did Hyacinthe Rigaud die?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Hyacinthe Rigaud"], "answer_entity_name": null, "predicted_answer": "He died in Paris, France", "extracted_entity": "Hyacinthe_Rigaud"}
{"question": "where did Alexander Friedmann die?", "answer": "Saint Petersburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint Petersburg"], "entity_annotations": ["Alexander Friedmann"], "answer_entity_name": null, "predicted_answer": "Alexander Friedmann died in Saint Petersburg.", "extracted_entity": "Alexander_Friedmann"}
{"question": "where did Natalie Clifford Barney die?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Natalie Clifford Barney"], "answer_entity_name": null, "predicted_answer": "Paris.", "extracted_entity": "Natalie_Clifford_Barney"}
{"question": "where did Kingsley Amis die?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Kingsley Amis"], "answer_entity_name": null, "predicted_answer": "Kingsley Amis died in London, United Kingdom", "extracted_entity": "Kingsley_Amis"}
{"question": "where did Eston Hemings die?", "answer": "Madison", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Madison"], "entity_annotations": ["Eston Hemings"], "answer_entity_name": null, "predicted_answer": "Madison, Wisconsin", "extracted_entity": "Eston_Hemings"}
{"question": "where did William Jay Gaynor die?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["William Jay Gaynor"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "William_Jay_Gaynor"}
{"question": "where did Johann Nepomuk David die?", "answer": "Stuttgart", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stuttgart"], "entity_annotations": ["Johann Nepomuk David"], "answer_entity_name": null, "predicted_answer": "Johann Nepomuk David died in Stuttgart.", "extracted_entity": "Johann_Nepomuk_David"}
{"question": "where did Dorothy Kirsten die?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Dorothy Kirsten"], "answer_entity_name": null, "predicted_answer": "Dorothy Kirsten died in Los Angeles, California", "extracted_entity": "Dorothy_Kirsten"}
{"question": "where did Jean II, Duke of Alen\u00e7on die?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Jean II, Duke of Alen\u00e7on"], "answer_entity_name": null, "predicted_answer": "He died in the Ch\u00e2teau d'Arg", "extracted_entity": "Jean_II,_Duke_of_Alen\u00e7on"}
{"question": "where did Robert Doisneau die?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Robert Doisneau"], "answer_entity_name": null, "predicted_answer": "Paris, France", "extracted_entity": "Robert_Doisneau"}
{"question": "where did Charles Lavigerie die?", "answer": "Algiers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Algiers"], "entity_annotations": ["Charles Lavigerie"], "answer_entity_name": null, "predicted_answer": "Algiers", "extracted_entity": "Charles_Lavigerie"}
{"question": "where did Duncan Phyfe die?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Duncan Phyfe"], "answer_entity_name": null, "predicted_answer": "Duncan Phyfe died in New York City.", "extracted_entity": "Duncan_Phyfe"}
{"question": "where did Frederick Traugott Pursh die?", "answer": "Montreal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Montreal"], "entity_annotations": ["Frederick Traugott Pursh"], "answer_entity_name": null, "predicted_answer": "Montreal, Canada", "extracted_entity": "Frederick_Traugott_Pursh"}
{"question": "where did Elie Wiesel die?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Elie Wiesel"], "answer_entity_name": null, "predicted_answer": "Elie Wiesel died in New York, New", "extracted_entity": "Elie_Wiesel"}
{"question": "where did Choi Jin-sil die?", "answer": "Seoul", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seoul"], "entity_annotations": ["Choi Jin-sil"], "answer_entity_name": null, "predicted_answer": "She died in her home in Seoul.", "extracted_entity": "Choi_Jin-sil"}
{"question": "where did Piero della Francesca die?", "answer": "Sansepolcro", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sansepolcro"], "entity_annotations": ["Piero della Francesca"], "answer_entity_name": null, "predicted_answer": "Florence", "extracted_entity": "Piero_della_Francesca"}
{"question": "where did Sergei Eisenstein die?", "answer": "Moscow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moscow"], "entity_annotations": ["Sergei Eisenstein"], "answer_entity_name": null, "predicted_answer": "Eisenstein died in Moscow, Soviet Union", "extracted_entity": "Sergei_Eisenstein"}
{"question": "where did Marius Petipa die?", "answer": "Gurzuf", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gurzuf"], "entity_annotations": ["Marius Petipa"], "answer_entity_name": null, "predicted_answer": "Marius Petipa died in 1910 in", "extracted_entity": "Marius_Petipa"}
{"question": "where did John Pym die?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["John Pym"], "answer_entity_name": null, "predicted_answer": "John Pym died in London", "extracted_entity": "John_Pym"}
{"question": "where did Miff Mole die?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Miff Mole"], "answer_entity_name": null, "predicted_answer": "Miff Mole died in New York, United", "extracted_entity": "Miff_Mole"}
{"question": "where did Helmut Sch\u00f6n die?", "answer": "Wiesbaden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wiesbaden"], "entity_annotations": ["Helmut Sch\u00f6n"], "answer_entity_name": null, "predicted_answer": "Helmut Sch\u00f6n die in 1996-", "extracted_entity": "Helmut_Sch\u00f6n"}
{"question": "where did Krste Misirkov die?", "answer": "Sofia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sofia"], "entity_annotations": ["Krste Misirkov"], "answer_entity_name": null, "predicted_answer": "Krste Misirkov died in Sofia, Bulgaria", "extracted_entity": "Krste_Misirkov"}
{"question": "where did Marie Louise Gonzaga die?", "answer": "Warsaw", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warsaw"], "entity_annotations": ["Marie Louise Gonzaga"], "answer_entity_name": null, "predicted_answer": "she died in Poland", "extracted_entity": "Marie_Louise_Gonzaga"}
{"question": "where did Wilhelm von Knyphausen die?", "answer": "Kassel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kassel"], "entity_annotations": ["Wilhelm von Knyphausen"], "answer_entity_name": null, "predicted_answer": "Kassel", "extracted_entity": "Wilhelm_von_Knyphausen"}
{"question": "where did Marcantonio Franceschini die?", "answer": "Bologna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bologna"], "entity_annotations": ["Marcantonio Franceschini"], "answer_entity_name": null, "predicted_answer": "Bologna", "extracted_entity": "Marcantonio_Franceschini"}
{"question": "where did Amalie Skram die?", "answer": "Copenhagen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Copenhagen"], "entity_annotations": ["Amalie Skram"], "answer_entity_name": null, "predicted_answer": "Oslo", "extracted_entity": "Amalie_Skram"}
{"question": "which country is Canadian Expeditionary Force located in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["Canadian Expeditionary Force"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Canadian_Expeditionary_Force"}
{"question": "which country is Nature Conservancy of Canada located in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["Nature Conservancy of Canada"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Nature_Conservancy_of_Canada"}
{"question": "which country is Bun located in?", "answer": "France", "dataset": "entity_questions", "split": "test", "answer_aliases": ["France"], "entity_annotations": ["Bun"], "answer_entity_name": null, "predicted_answer": "Bun is located in United Kingdom.", "extracted_entity": "Bun"}
{"question": "which country is Belfast located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Belfast"], "answer_entity_name": null, "predicted_answer": "hern Ireland", "extracted_entity": "Belfast"}
{"question": "which country is Hobyo located in?", "answer": "Somalia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Somalia"], "entity_annotations": ["Hobyo"], "answer_entity_name": null, "predicted_answer": "Somalia", "extracted_entity": "Hobyo"}
{"question": "which country is CKEM-DT located in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["CKEM-DT"], "answer_entity_name": null, "predicted_answer": "Canada.", "extracted_entity": "CKEM-DT"}
{"question": "which country is Venice located in?", "answer": "Italy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Italy"], "entity_annotations": ["Venice"], "answer_entity_name": null, "predicted_answer": "Italy", "extracted_entity": "Venice"}
{"question": "which country is Expo 2005 located in?", "answer": "Japan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Japan"], "entity_annotations": ["Expo 2005"], "answer_entity_name": null, "predicted_answer": "Japan", "extracted_entity": "Expo_2005"}
{"question": "which country is Halfaya Pass located in?", "answer": "Egypt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Egypt"], "entity_annotations": ["Halfaya Pass"], "answer_entity_name": null, "predicted_answer": "Egypt", "extracted_entity": "Halfaya_Pass"}
{"question": "which country is Griffith University located in?", "answer": "Australia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Australia"], "entity_annotations": ["Griffith University"], "answer_entity_name": null, "predicted_answer": "Australia", "extracted_entity": "Griffith_University"}
{"question": "which country is Roger Dean Stadium located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Roger Dean Stadium"], "answer_entity_name": null, "predicted_answer": "the United States", "extracted_entity": "Roger_Dean_Stadium"}
{"question": "which country is Belize River located in?", "answer": "Belize", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belize"], "entity_annotations": ["Belize River"], "answer_entity_name": null, "predicted_answer": "Belize", "extracted_entity": "Belize_River"}
{"question": "which country is Kasama, Zambia located in?", "answer": "Zambia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zambia"], "entity_annotations": ["Kasama, Zambia"], "answer_entity_name": null, "predicted_answer": "Zambia", "extracted_entity": "Kasama,_Zambia"}
{"question": "which country is Fucine Lake located in?", "answer": "Italy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Italy"], "entity_annotations": ["Fucine Lake"], "answer_entity_name": null, "predicted_answer": "taly", "extracted_entity": "Fucine_Lake"}
{"question": "which country is Brokopondo Reservoir located in?", "answer": "Suriname", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Suriname"], "entity_annotations": ["Brokopondo Reservoir"], "answer_entity_name": null, "predicted_answer": "riname", "extracted_entity": "Brokopondo_Reservoir"}
{"question": "which country is Hangzhou Xiaoshan International Airport located in?", "answer": "People's Republic of China", "dataset": "entity_questions", "split": "test", "answer_aliases": ["People's Republic of China"], "entity_annotations": ["Hangzhou Xiaoshan International Airport"], "answer_entity_name": null, "predicted_answer": "China", "extracted_entity": "Hangzhou_Xiaoshan_International_Airport"}
{"question": "which country is Asheville High School located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Asheville High School"], "answer_entity_name": null, "predicted_answer": "Asheville High School is located in United States", "extracted_entity": "Asheville_High_School"}
{"question": "which country is Oh! Susanna located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Oh! Susanna"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Oh!_Susanna"}
{"question": "which country is Topaz War Relocation Center located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Topaz War Relocation Center"], "answer_entity_name": null, "predicted_answer": "The United States of America", "extracted_entity": "Topaz_War_Relocation_Center"}
{"question": "which country is Cagayan Valley located in?", "answer": "Philippines", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philippines"], "entity_annotations": ["Cagayan Valley"], "answer_entity_name": null, "predicted_answer": "Philippines", "extracted_entity": "Cagayan_Valley"}
{"question": "which country is New Orleans Central Business District located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["New Orleans Central Business District"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "New_Orleans_Central_Business_District"}
{"question": "which country is ASIFA-Hollywood located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["ASIFA-Hollywood"], "answer_entity_name": null, "predicted_answer": "ASIFA-Hollywood is located in Los Angeles,", "extracted_entity": "ASIFA-Hollywood"}
{"question": "which country is Pudozh located in?", "answer": "Russia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russia"], "entity_annotations": ["Pudozh"], "answer_entity_name": null, "predicted_answer": "Russia", "extracted_entity": "Pudozh"}
{"question": "which country is Finn\u00f8y located in?", "answer": "Norway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Norway"], "entity_annotations": ["Finn\u00f8y"], "answer_entity_name": null, "predicted_answer": "Norway", "extracted_entity": "Finn\u00f8y"}
{"question": "which country is Continental Airlines located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Continental Airlines"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Continental_Airlines"}
{"question": "which country is Kaunas County located in?", "answer": "Lithuania", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lithuania"], "entity_annotations": ["Kaunas County"], "answer_entity_name": null, "predicted_answer": "Lithuania", "extracted_entity": "Kaunas_County"}
{"question": "which country is American Council for an Energy-Efficient Economy located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["American Council for an Energy-Efficient Economy"], "answer_entity_name": null, "predicted_answer": "American Council for an Energy-Efficient Economy is", "extracted_entity": "American_Council_for_an_Energy-Efficient_Economy"}
{"question": "which country is 22nd United States Congress located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["22nd United States Congress"], "answer_entity_name": null, "predicted_answer": "The 22nd United States Congress was a meeting", "extracted_entity": "22nd_United_States_Congress"}
{"question": "which country is QNB Group located in?", "answer": "Qatar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Qatar"], "entity_annotations": ["QNB Group"], "answer_entity_name": null, "predicted_answer": "Qatar", "extracted_entity": "QNB_Group"}
{"question": "which country is Miele located in?", "answer": "Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germany"], "entity_annotations": ["Miele"], "answer_entity_name": null, "predicted_answer": "Germany", "extracted_entity": "Miele"}
{"question": "which country is University of La Verne located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["University of La Verne"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "University_of_La_Verne"}
{"question": "which country is Aschaffenburg located in?", "answer": "Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germany"], "entity_annotations": ["Aschaffenburg"], "answer_entity_name": null, "predicted_answer": "Germany", "extracted_entity": "Aschaffenburg"}
{"question": "which country is Gmina Przero\u015bl located in?", "answer": "Poland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Poland"], "entity_annotations": ["Gmina Przero\u015bl"], "answer_entity_name": null, "predicted_answer": "Poland", "extracted_entity": "Gmina_Przero\u015bl"}
{"question": "which country is Directorate of Religious Affairs located in?", "answer": "Turkey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Turkey"], "entity_annotations": ["Directorate of Religious Affairs"], "answer_entity_name": null, "predicted_answer": "Turkey", "extracted_entity": "Directorate_of_Religious_Affairs"}
{"question": "which country is Ord River located in?", "answer": "Australia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Australia"], "entity_annotations": ["Ord River"], "answer_entity_name": null, "predicted_answer": "ustralia", "extracted_entity": "Ord_River"}
{"question": "which country is Stari Grad, Croatia located in?", "answer": "Croatia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Croatia"], "entity_annotations": ["Stari Grad, Croatia"], "answer_entity_name": null, "predicted_answer": "Croatia.", "extracted_entity": "Stari_Grad,_Croatia"}
{"question": "which country is Battle of Montereau located in?", "answer": "France", "dataset": "entity_questions", "split": "test", "answer_aliases": ["France"], "entity_annotations": ["Battle of Montereau"], "answer_entity_name": null, "predicted_answer": "France", "extracted_entity": "Battle_of_Montereau"}
{"question": "which country is Aljezur located in?", "answer": "Portugal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Portugal"], "entity_annotations": ["Aljezur"], "answer_entity_name": null, "predicted_answer": "Portugal", "extracted_entity": "Aljezur"}
{"question": "which country is Irun located in?", "answer": "Spain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spain"], "entity_annotations": ["Irun"], "answer_entity_name": null, "predicted_answer": "Spain", "extracted_entity": "Irun"}
{"question": "which country is Puyang located in?", "answer": "People's Republic of China", "dataset": "entity_questions", "split": "test", "answer_aliases": ["People's Republic of China"], "entity_annotations": ["Puyang"], "answer_entity_name": null, "predicted_answer": "China", "extracted_entity": "Puyang"}
{"question": "which country is Ballybay located in?", "answer": "Ireland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ireland"], "entity_annotations": ["Ballybay"], "answer_entity_name": null, "predicted_answer": "Ireland", "extracted_entity": "Ballybay"}
{"question": "which country is Turkish Airlines located in?", "answer": "Turkey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Turkey"], "entity_annotations": ["Turkish Airlines"], "answer_entity_name": null, "predicted_answer": "Turkey", "extracted_entity": "Turkish_Airlines"}
{"question": "which country is Selena Etc. located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Selena Etc."], "answer_entity_name": null, "predicted_answer": "Selena Etc. is located in South Texas", "extracted_entity": "Selena_Etc."}
{"question": "which country is Artspace Sydney located in?", "answer": "Australia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Australia"], "entity_annotations": ["Artspace Sydney"], "answer_entity_name": null, "predicted_answer": "Australia", "extracted_entity": "Artspace_Sydney"}
{"question": "which country is Mercer County Park located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Mercer County Park"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Mercer_County_Park"}
{"question": "which country is ADAC located in?", "answer": "Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germany"], "entity_annotations": ["ADAC"], "answer_entity_name": null, "predicted_answer": "Germany.", "extracted_entity": "ADAC"}
{"question": "which country is Gmina \u0141apy located in?", "answer": "Poland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Poland"], "entity_annotations": ["Gmina \u0141apy"], "answer_entity_name": null, "predicted_answer": "Poland", "extracted_entity": "Gmina_\u0141apy"}
{"question": "which country is FC Tulsa located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["FC Tulsa"], "answer_entity_name": null, "predicted_answer": "USA", "extracted_entity": "FC_Tulsa"}
{"question": "which country is Monsanto located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Monsanto"], "answer_entity_name": null, "predicted_answer": "USA", "extracted_entity": "Monsanto"}
{"question": "which country is Linfield College located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Linfield College"], "answer_entity_name": null, "predicted_answer": "The United States", "extracted_entity": "Linfield_College"}
{"question": "which country is Batan Island located in?", "answer": "Philippines", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philippines"], "entity_annotations": ["Batan Island"], "answer_entity_name": null, "predicted_answer": "the Philippines.", "extracted_entity": "Batan_Island"}
{"question": "which country is Embargo Act of 1807 located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Embargo Act of 1807"], "answer_entity_name": null, "predicted_answer": "Embargo Act of 1807 is located in", "extracted_entity": "Embargo_Act_of_1807"}
{"question": "which country is Kanton Island located in?", "answer": "Kiribati", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kiribati"], "entity_annotations": ["Kanton Island"], "answer_entity_name": null, "predicted_answer": "Kiribati", "extracted_entity": "Kanton_Island"}
{"question": "which country is Friendship located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Friendship"], "answer_entity_name": null, "predicted_answer": "Friendship is located in United States", "extracted_entity": "Friendship"}
{"question": "which country is Oklahoma Territory located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Oklahoma Territory"], "answer_entity_name": null, "predicted_answer": "Oklahoma Territory", "extracted_entity": "Oklahoma_Territory"}
{"question": "which country is Dowreh County located in?", "answer": "Iran", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Iran"], "entity_annotations": ["Dowreh County"], "answer_entity_name": null, "predicted_answer": "Iran", "extracted_entity": "Dowreh_County"}
{"question": "which country is Union located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Union"], "answer_entity_name": null, "predicted_answer": "Union is located in United States.", "extracted_entity": "Union"}
{"question": "which country is AC Nagano Parceiro Ladies located in?", "answer": "Japan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Japan"], "entity_annotations": ["AC Nagano Parceiro Ladies"], "answer_entity_name": null, "predicted_answer": "Japan", "extracted_entity": "AC_Nagano_Parceiro_Ladies"}
{"question": "which country is 5th arrondissement of Paris located in?", "answer": "France", "dataset": "entity_questions", "split": "test", "answer_aliases": ["France"], "entity_annotations": ["5th arrondissement of Paris"], "answer_entity_name": null, "predicted_answer": "France", "extracted_entity": "5th_arrondissement_of_Paris"}
{"question": "which country is Lent located in?", "answer": "France", "dataset": "entity_questions", "split": "test", "answer_aliases": ["France"], "entity_annotations": ["Lent"], "answer_entity_name": null, "predicted_answer": "Lent is located in the United States of America.", "extracted_entity": "Lent"}
{"question": "which country is Humana located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Humana"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Humana"}
{"question": "which country is Prievidza located in?", "answer": "Slovakia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Slovakia"], "entity_annotations": ["Prievidza"], "answer_entity_name": null, "predicted_answer": "Slovakia", "extracted_entity": "Prievidza"}
{"question": "which country is Virginia located in?", "answer": "Honduras", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Honduras"], "entity_annotations": ["Virginia"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Virginia"}
{"question": "which country is Magenta located in?", "answer": "France", "dataset": "entity_questions", "split": "test", "answer_aliases": ["France"], "entity_annotations": ["Magenta"], "answer_entity_name": null, "predicted_answer": "Magenta is located in Italy-France", "extracted_entity": "Magenta"}
{"question": "which country is Liga Veneta located in?", "answer": "Italy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Italy"], "entity_annotations": ["Liga Veneta"], "answer_entity_name": null, "predicted_answer": "Italy", "extracted_entity": "Liga_Veneta"}
{"question": "which country is Operation Argus located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Operation Argus"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Operation_Argus"}
{"question": "which country is Ohio General Assembly located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Ohio General Assembly"], "answer_entity_name": null, "predicted_answer": "Ohio General Assembly is located in United States.", "extracted_entity": "Ohio_General_Assembly"}
{"question": "which country is Wil\u2013Kreuzlingen railway located in?", "answer": "Switzerland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Switzerland"], "entity_annotations": ["Wil\u2013Kreuzlingen railway"], "answer_entity_name": null, "predicted_answer": "Switzerland", "extracted_entity": "Wil\u2013Kreuzlingen_railway"}
{"question": "which country is Smoky Hill River located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Smoky Hill River"], "answer_entity_name": null, "predicted_answer": "ited States of America", "extracted_entity": "Smoky_Hill_River"}
{"question": "which country is Intertek located in?", "answer": "United Kingdom", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United Kingdom"], "entity_annotations": ["Intertek"], "answer_entity_name": null, "predicted_answer": "Intertek is located in the United Kingdom.", "extracted_entity": "Intertek"}
{"question": "which country is Crystal Cathedral located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Crystal Cathedral"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Crystal_Cathedral"}
{"question": "which country is Hubbard Broadcasting located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Hubbard Broadcasting"], "answer_entity_name": null, "predicted_answer": "Hubbard Broadcasting is located in United States.", "extracted_entity": "Hubbard_Broadcasting"}
{"question": "which country is Zamindawar located in?", "answer": "Afghanistan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Afghanistan"], "entity_annotations": ["Zamindawar"], "answer_entity_name": null, "predicted_answer": "Afghanistan", "extracted_entity": "Zamindawar"}
{"question": "which country is 2010 Haiti earthquake located in?", "answer": "Haiti", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Haiti"], "entity_annotations": ["2010 Haiti earthquake"], "answer_entity_name": null, "predicted_answer": "Haiti", "extracted_entity": "2010_Haiti_earthquake"}
{"question": "which country is Elda located in?", "answer": "Spain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spain"], "entity_annotations": ["Elda"], "answer_entity_name": null, "predicted_answer": "Spain", "extracted_entity": "Elda"}
{"question": "which country is Gmina Chociwel located in?", "answer": "Poland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Poland"], "entity_annotations": ["Gmina Chociwel"], "answer_entity_name": null, "predicted_answer": "Poland", "extracted_entity": "Gmina_Chociwel"}
{"question": "which country is Dobele located in?", "answer": "Latvia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Latvia"], "entity_annotations": ["Dobele"], "answer_entity_name": null, "predicted_answer": "Latvia", "extracted_entity": "Dobele"}
{"question": "which country is Wendover located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Wendover"], "answer_entity_name": null, "predicted_answer": "England", "extracted_entity": "Wendover"}
{"question": "which country is Nor Chichas Province located in?", "answer": "Bolivia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bolivia"], "entity_annotations": ["Nor Chichas Province"], "answer_entity_name": null, "predicted_answer": "Bolivia", "extracted_entity": "Nor_Chichas_Province"}
{"question": "which country is Bosnia and Herzegovina national football team located in?", "answer": "Bosnia and Herzegovina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bosnia and Herzegovina"], "entity_annotations": ["Bosnia and Herzegovina national football team"], "answer_entity_name": null, "predicted_answer": "Bosnia and Herzegovina national football team is located", "extracted_entity": "Bosnia_and_Herzegovina_national_football_team"}
{"question": "which country is 1912 Democratic National Convention located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["1912 Democratic National Convention"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "1912_Democratic_National_Convention"}
{"question": "which country is Vinland located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Vinland"], "answer_entity_name": null, "predicted_answer": "the United States", "extracted_entity": "Vinland"}
{"question": "which country is University of Szeged located in?", "answer": "Hungary", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hungary"], "entity_annotations": ["University of Szeged"], "answer_entity_name": null, "predicted_answer": "Hungary", "extracted_entity": "University_of_Szeged"}
{"question": "which country is Theranos located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Theranos"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Theranos"}
{"question": "which country is Col\u00e1iste Iogn\u00e1id, Galway located in?", "answer": "Ireland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ireland"], "entity_annotations": ["Col\u00e1iste Iogn\u00e1id, Galway"], "answer_entity_name": null, "predicted_answer": "Ireland", "extracted_entity": "Col\u00e1iste_Iogn\u00e1id,_Galway"}
{"question": "which country is Hamburg Museum located in?", "answer": "Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germany"], "entity_annotations": ["Hamburg Museum"], "answer_entity_name": null, "predicted_answer": "Germany", "extracted_entity": "Hamburg_Museum"}
{"question": "which country is Lihula located in?", "answer": "Estonia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Estonia"], "entity_annotations": ["Lihula"], "answer_entity_name": null, "predicted_answer": "Lihula is located in Estonia.", "extracted_entity": "Lihula"}
{"question": "which country is Gandikota located in?", "answer": "India", "dataset": "entity_questions", "split": "test", "answer_aliases": ["India"], "entity_annotations": ["Gandikota"], "answer_entity_name": null, "predicted_answer": "India", "extracted_entity": "Gandikota"}
{"question": "which country is Jacques-Cartier located in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["Jacques-Cartier"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Jacques-Cartier"}
{"question": "which country is Consolidated Aircraft located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Consolidated Aircraft"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Consolidated_Aircraft"}
{"question": "which country is Dschang located in?", "answer": "Cameroon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cameroon"], "entity_annotations": ["Dschang"], "answer_entity_name": null, "predicted_answer": "Cameroon", "extracted_entity": "Dschang"}
{"question": "which country is Army of Republika Srpska located in?", "answer": "Republika Srpska", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Republika Srpska"], "entity_annotations": ["Army of Republika Srpska"], "answer_entity_name": null, "predicted_answer": "Bosnia and Herzegovina", "extracted_entity": "Army_of_Republika_Srpska"}
{"question": "which country is Women's International Zionist Organization located in?", "answer": "Israel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Israel"], "entity_annotations": ["Women's International Zionist Organization"], "answer_entity_name": null, "predicted_answer": "Women's International Zionist Organization is located in", "extracted_entity": "Women's_International_Zionist_Organization"}
{"question": "which country is Washington State Republican Party located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Washington State Republican Party"], "answer_entity_name": null, "predicted_answer": "Washington State Republican Party is located in United States.", "extracted_entity": "Washington_State_Republican_Party"}
{"question": "which country is Enoch located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Enoch"], "answer_entity_name": null, "predicted_answer": "Enoch is located in the country of United States", "extracted_entity": "Enoch"}
{"question": "which country is Virovitica-Podravina County located in?", "answer": "Croatia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Croatia"], "entity_annotations": ["Virovitica-Podravina County"], "answer_entity_name": null, "predicted_answer": "Croatia", "extracted_entity": "Virovitica-Podravina_County"}
{"question": "which country is Saugatuck River located in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Saugatuck River"], "answer_entity_name": null, "predicted_answer": "The Saugatuck River is a river in", "extracted_entity": "Saugatuck_River"}
{"question": "which country is Pakpattan District located in?", "answer": "Pakistan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pakistan"], "entity_annotations": ["Pakpattan District"], "answer_entity_name": null, "predicted_answer": "Pakistan.", "extracted_entity": "Pakpattan_District"}
{"question": "which country is Dortmund Sparkassen Chess Meeting located in?", "answer": "Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germany"], "entity_annotations": ["Dortmund Sparkassen Chess Meeting"], "answer_entity_name": null, "predicted_answer": "Germany.", "extracted_entity": "Dortmund_Sparkassen_Chess_Meeting"}
{"question": "which country is Dehradun located in?", "answer": "India", "dataset": "entity_questions", "split": "test", "answer_aliases": ["India"], "entity_annotations": ["Dehradun"], "answer_entity_name": null, "predicted_answer": "India", "extracted_entity": "Dehradun"}
{"question": "which country is Kalimpong subdivision located in?", "answer": "India", "dataset": "entity_questions", "split": "test", "answer_aliases": ["India"], "entity_annotations": ["Kalimpong subdivision"], "answer_entity_name": null, "predicted_answer": "Kalimpong subdivision is located in India.", "extracted_entity": "Kalimpong_subdivision"}
{"question": "which country is Indian Navy located in?", "answer": "India", "dataset": "entity_questions", "split": "test", "answer_aliases": ["India"], "entity_annotations": ["Indian Navy"], "answer_entity_name": null, "predicted_answer": "India", "extracted_entity": "Indian_Navy"}
{"question": "which country is Debar located in?", "answer": "North Macedonia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["North Macedonia"], "entity_annotations": ["Debar"], "answer_entity_name": null, "predicted_answer": "North Macedonia", "extracted_entity": "Debar"}
{"question": "which country is El Salvador national football team located in?", "answer": "El Salvador", "dataset": "entity_questions", "split": "test", "answer_aliases": ["El Salvador"], "entity_annotations": ["El Salvador national football team"], "answer_entity_name": null, "predicted_answer": "El Salvador", "extracted_entity": "El_Salvador_national_football_team"}
{"question": "which country is National Labor Party located in?", "answer": "Australia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Australia"], "entity_annotations": ["National Labor Party"], "answer_entity_name": null, "predicted_answer": "Australia.", "extracted_entity": "National_Labor_Party"}
{"question": "which country is Hilvarenbeek located in?", "answer": "Netherlands", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Netherlands"], "entity_annotations": ["Hilvarenbeek"], "answer_entity_name": null, "predicted_answer": "the Netherlands", "extracted_entity": "Hilvarenbeek"}
{"question": "which country is Masaryk Circuit located in?", "answer": "Czech Republic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Czech Republic"], "entity_annotations": ["Masaryk Circuit"], "answer_entity_name": null, "predicted_answer": "Masaryk Circuit is located in Czech Republic.", "extracted_entity": "Masaryk_Circuit"}
{"question": "which country is Ganaveh County located in?", "answer": "Iran", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Iran"], "entity_annotations": ["Ganaveh County"], "answer_entity_name": null, "predicted_answer": "Iran", "extracted_entity": "Ganaveh_County"}
{"question": "which country is Ivrea located in?", "answer": "Kingdom of Italy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kingdom of Italy", "Italy"], "entity_annotations": ["Ivrea"], "answer_entity_name": null, "predicted_answer": "Ivrea is located in Italy.", "extracted_entity": "Ivrea"}
{"question": "which country is FC Bayern Munich located in?", "answer": "Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germany"], "entity_annotations": ["FC Bayern Munich"], "answer_entity_name": null, "predicted_answer": "Germany", "extracted_entity": "FC_Bayern_Munich"}
{"question": "which country is Sulla located in?", "answer": "India", "dataset": "entity_questions", "split": "test", "answer_aliases": ["India"], "entity_annotations": ["Sulla"], "answer_entity_name": null, "predicted_answer": "Italy", "extracted_entity": "Sulla"}
{"question": "which country is Batroun located in?", "answer": "Lebanon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lebanon"], "entity_annotations": ["Batroun"], "answer_entity_name": null, "predicted_answer": "ebanon", "extracted_entity": "Batroun"}
{"question": "what type of music does The Full Monty play?", "answer": "comedy-drama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["comedy-drama", "comedy film"], "entity_annotations": ["The Full Monty"], "answer_entity_name": null, "predicted_answer": "The Full Monty is a 1997 British", "extracted_entity": "The_Full_Monty"}
{"question": "what type of music does Mosaic play?", "answer": "superhero film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["superhero film"], "entity_annotations": ["Mosaic"], "answer_entity_name": null, "predicted_answer": "Mosaic plays Jazz music.", "extracted_entity": "Mosaic"}
{"question": "what type of music does Godflesh play?", "answer": "industrial metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["industrial metal"], "entity_annotations": ["Godflesh"], "answer_entity_name": null, "predicted_answer": "industrial metal", "extracted_entity": "Godflesh"}
{"question": "what type of music does Tommy Keene play?", "answer": "power pop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["power pop"], "entity_annotations": ["Tommy Keene"], "answer_entity_name": null, "predicted_answer": "rock & roll/power pop", "extracted_entity": "Tommy_Keene"}
{"question": "what type of music does Kiki's Delivery Service play?", "answer": "fantasy film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["fantasy film"], "entity_annotations": ["Kiki's Delivery Service"], "answer_entity_name": null, "predicted_answer": "Kiki's Delivery Service is a Japanese animated film", "extracted_entity": "Kiki's_Delivery_Service"}
{"question": "what type of music does Carpathian Forest play?", "answer": "black metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["black metal"], "entity_annotations": ["Carpathian Forest"], "answer_entity_name": null, "predicted_answer": "black metal", "extracted_entity": "Carpathian_Forest"}
{"question": "what type of music does Nightmare play?", "answer": "slasher film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["slasher film"], "entity_annotations": ["Nightmare"], "answer_entity_name": null, "predicted_answer": "Nightmare plays Rock music.", "extracted_entity": "Nightmare"}
{"question": "what type of music does Rick Rock play?", "answer": "hip hop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["hip hop music"], "entity_annotations": ["Rick Rock"], "answer_entity_name": null, "predicted_answer": "hip hop", "extracted_entity": "Rick_Rock"}
{"question": "what type of music does Scott Stapp play?", "answer": "rock music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rock music"], "entity_annotations": ["Scott Stapp"], "answer_entity_name": null, "predicted_answer": "Scott Stapp is an American singer, best known", "extracted_entity": "Scott_Stapp"}
{"question": "what type of music does Canaletto play?", "answer": "veduta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["veduta", "landscape art"], "entity_annotations": ["Canaletto"], "answer_entity_name": null, "predicted_answer": "He plays the violin.", "extracted_entity": "Canaletto"}
{"question": "what type of music does Call of Duty: Modern Warfare 3 play?", "answer": "first-person shooter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["first-person shooter"], "entity_annotations": ["Call of Duty: Modern Warfare 3"], "answer_entity_name": null, "predicted_answer": "Call of Duty: Modern Warfare 3 is a", "extracted_entity": "Call_of_Duty:_Modern_Warfare_3"}
{"question": "what type of music does Hank Williams III play?", "answer": "country music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["country music"], "entity_annotations": ["Hank Williams III"], "answer_entity_name": null, "predicted_answer": "Williams is an American musician, singer and multi-in", "extracted_entity": "Hank_Williams_III"}
{"question": "what type of music does Swamp Thing play?", "answer": "platform game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["platform game"], "entity_annotations": ["Swamp Thing"], "answer_entity_name": null, "predicted_answer": "Swamp Thing is a swamp monster who is also a", "extracted_entity": "Swamp_Thing"}
{"question": "what type of music does Brooklyn South play?", "answer": "police procedural", "dataset": "entity_questions", "split": "test", "answer_aliases": ["police procedural"], "entity_annotations": ["Brooklyn South"], "answer_entity_name": null, "predicted_answer": "Brooklyn South plays pop, rock, and soul.", "extracted_entity": "Brooklyn_South"}
{"question": "what type of music does Dead Island play?", "answer": "action role-playing game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["action role-playing game"], "entity_annotations": ["Dead Island"], "answer_entity_name": null, "predicted_answer": "It plays a mixture of pop, rock, and", "extracted_entity": "Dead_Island"}
{"question": "what type of music does Girl Crazy play?", "answer": "musical film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["musical film"], "entity_annotations": ["Girl Crazy"], "answer_entity_name": null, "predicted_answer": "musical", "extracted_entity": "Girl_Crazy"}
{"question": "what type of music does Emilio Navaira play?", "answer": "Tejano music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tejano music"], "entity_annotations": ["Emilio Navaira"], "answer_entity_name": null, "predicted_answer": "He plays Tejano and country music.", "extracted_entity": "Emilio_Navaira"}
{"question": "what type of music does Liz McClarnon play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Liz McClarnon"], "answer_entity_name": null, "predicted_answer": "pop", "extracted_entity": "Liz_McClarnon"}
{"question": "what type of music does Kylie Minogue play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Kylie Minogue"], "answer_entity_name": null, "predicted_answer": "pop music", "extracted_entity": "Kylie_Minogue"}
{"question": "what type of music does 2nd Chapter of Acts play?", "answer": "contemporary Christian music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["contemporary Christian music"], "entity_annotations": ["2nd Chapter of Acts"], "answer_entity_name": null, "predicted_answer": "Jesus music and early contemporary Christian music", "extracted_entity": "2nd_Chapter_of_Acts"}
{"question": "what type of music does Trojan War play?", "answer": "romantic comedy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["romantic comedy"], "entity_annotations": ["Trojan War"], "answer_entity_name": null, "predicted_answer": "lternative Metal, Heavy Metal", "extracted_entity": "Trojan_War"}
{"question": "what type of music does Jerry Garcia Band play?", "answer": "rock music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rock music"], "entity_annotations": ["Jerry Garcia Band"], "answer_entity_name": null, "predicted_answer": "rock music that is influenced by blues, folk,", "extracted_entity": "Jerry_Garcia_Band"}
{"question": "what type of music does Casey Stengel play?", "answer": "public art", "dataset": "entity_questions", "split": "test", "answer_aliases": ["public art"], "entity_annotations": ["Casey Stengel"], "answer_entity_name": null, "predicted_answer": "Casey Stengel is a type of music that", "extracted_entity": "Casey_Stengel"}
{"question": "what type of music does Boxcar play?", "answer": "synth-pop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["synth-pop"], "entity_annotations": ["Boxcar"], "answer_entity_name": null, "predicted_answer": "Rock music.", "extracted_entity": "Boxcar"}
{"question": "what type of music does We Came as Romans play?", "answer": "metalcore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["metalcore"], "entity_annotations": ["We Came as Romans"], "answer_entity_name": null, "predicted_answer": "metalcore", "extracted_entity": "We_Came_as_Romans"}
{"question": "what type of music does Shuffle! play?", "answer": "eroge", "dataset": "entity_questions", "split": "test", "answer_aliases": ["eroge"], "entity_annotations": ["Shuffle!"], "answer_entity_name": null, "predicted_answer": "Shuffle! is a Japanese visual novel developed by N", "extracted_entity": "Shuffle!"}
{"question": "what type of music does Rotting Christ play?", "answer": "black metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["black metal"], "entity_annotations": ["Rotting Christ"], "answer_entity_name": null, "predicted_answer": "black metal", "extracted_entity": "Rotting_Christ"}
{"question": "what type of music does Marius M\u00fcller-Westernhagen play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Marius M\u00fcller-Westernhagen"], "answer_entity_name": null, "predicted_answer": "rock music", "extracted_entity": "Marius_M\u00fcller-Westernhagen"}
{"question": "what type of music does Dead Space 3 play?", "answer": "third-person shooter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["third-person shooter"], "entity_annotations": ["Dead Space 3"], "answer_entity_name": null, "predicted_answer": "orchestral", "extracted_entity": "Dead_Space_3"}
{"question": "what type of music does Mission: Impossible play?", "answer": "third-person shooter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["third-person shooter"], "entity_annotations": ["Mission: Impossible"], "answer_entity_name": null, "predicted_answer": "The Mission: Impossible theme song is a jazz piece", "extracted_entity": "Mission:_Impossible"}
{"question": "what type of music does Old 97's play?", "answer": "alternative country", "dataset": "entity_questions", "split": "test", "answer_aliases": ["alternative country"], "entity_annotations": ["Old 97's"], "answer_entity_name": null, "predicted_answer": "rock", "extracted_entity": "Old_97's"}
{"question": "what type of music does Ren\u00e9e Fleming play?", "answer": "opera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["opera"], "entity_annotations": ["Ren\u00e9e Fleming"], "answer_entity_name": null, "predicted_answer": "opera, classical music, jazz, musical theatre,", "extracted_entity": "Ren\u00e9e_Fleming"}
{"question": "what type of music does Lust, Caution play?", "answer": "novella", "dataset": "entity_questions", "split": "test", "answer_aliases": ["novella"], "entity_annotations": ["Lust, Caution"], "answer_entity_name": null, "predicted_answer": "Lust, Caution plays Jazz, Classical, World", "extracted_entity": "Lust,_Caution"}
{"question": "what type of music does Wreck-It Ralph play?", "answer": "fantasy film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["fantasy film"], "entity_annotations": ["Wreck-It Ralph"], "answer_entity_name": null, "predicted_answer": "pop", "extracted_entity": "Wreck-It_Ralph"}
{"question": "what type of music does Studio play?", "answer": "electronic music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["electronic music"], "entity_annotations": ["Studio"], "answer_entity_name": null, "predicted_answer": "Studio plays Pop, Rock, Hip Hop, R", "extracted_entity": "Studio"}
{"question": "what type of music does Samantha Fox play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Samantha Fox"], "answer_entity_name": null, "predicted_answer": "pop", "extracted_entity": "Samantha_Fox"}
{"question": "what type of music does Meddle play?", "answer": "electropop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["electropop"], "entity_annotations": ["Meddle"], "answer_entity_name": null, "predicted_answer": "Meddle plays Progressive Rock music.", "extracted_entity": "Meddle"}
{"question": "what type of music does Dan Seals play?", "answer": "country music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["country music"], "entity_annotations": ["Dan Seals"], "answer_entity_name": null, "predicted_answer": "He plays soft rock and country music.", "extracted_entity": "Dan_Seals"}
{"question": "what type of music does Ezo play?", "answer": "heavy metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["heavy metal"], "entity_annotations": ["Ezo"], "answer_entity_name": null, "predicted_answer": "lays rock music.", "extracted_entity": "Ezo"}
{"question": "what type of music does Frankie Yankovic play?", "answer": "polka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["polka"], "entity_annotations": ["Frankie Yankovic"], "answer_entity_name": null, "predicted_answer": "Slovenian-style polka", "extracted_entity": "Frankie_Yankovic"}
{"question": "what type of music does Dead or Alive 4 play?", "answer": "fighting game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["fighting game"], "entity_annotations": ["Dead or Alive 4"], "answer_entity_name": null, "predicted_answer": "The game's soundtrack features music from various artists,", "extracted_entity": "Dead_or_Alive_4"}
{"question": "what type of music does Magic Kingdom play?", "answer": "neo-classical metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["neo-classical metal"], "entity_annotations": ["Magic Kingdom"], "answer_entity_name": null, "predicted_answer": "Classical", "extracted_entity": "Magic_Kingdom"}
{"question": "what type of music does Liquid Tension Experiment play?", "answer": "progressive metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["progressive metal", "progressive rock"], "entity_annotations": ["Liquid Tension Experiment"], "answer_entity_name": null, "predicted_answer": "Progressive metal", "extracted_entity": "Liquid_Tension_Experiment"}
{"question": "what type of music does Bandit Queen play?", "answer": "indie rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["indie rock"], "entity_annotations": ["Bandit Queen"], "answer_entity_name": null, "predicted_answer": "The music was composed by Ustad Nusrat", "extracted_entity": "Bandit_Queen"}
{"question": "what type of music does Rick James play?", "answer": "soul music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["soul music"], "entity_annotations": ["Rick James"], "answer_entity_name": null, "predicted_answer": "Rick James plays a mix of funk, disco,", "extracted_entity": "Rick_James"}
{"question": "what type of music does Ira Gershwin play?", "answer": "popular music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["popular music"], "entity_annotations": ["Ira Gershwin"], "answer_entity_name": null, "predicted_answer": "Ira Gershwin plays jazz.", "extracted_entity": "Ira_Gershwin"}
{"question": "what type of music does Henri Dutilleux play?", "answer": "symphony", "dataset": "entity_questions", "split": "test", "answer_aliases": ["symphony"], "entity_annotations": ["Henri Dutilleux"], "answer_entity_name": null, "predicted_answer": "classical", "extracted_entity": "Henri_Dutilleux"}
{"question": "what type of music does Swedish death metal play?", "answer": "death metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["death metal"], "entity_annotations": ["Swedish death metal"], "answer_entity_name": null, "predicted_answer": "death metal", "extracted_entity": "Swedish_death_metal"}
{"question": "what type of music does Braid play?", "answer": "puzzle video game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["puzzle video game"], "entity_annotations": ["Braid"], "answer_entity_name": null, "predicted_answer": "Braid is a math rock band.", "extracted_entity": "Braid"}
{"question": "what type of music does DJ Pierre play?", "answer": "acid house", "dataset": "entity_questions", "split": "test", "answer_aliases": ["acid house"], "entity_annotations": ["DJ Pierre"], "answer_entity_name": null, "predicted_answer": "DJ Pierre plays acid house music.", "extracted_entity": "DJ_Pierre"}
{"question": "what type of music does A Flock of Seagulls play?", "answer": "synth-pop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["synth-pop"], "entity_annotations": ["A Flock of Seagulls"], "answer_entity_name": null, "predicted_answer": "new wave", "extracted_entity": "A_Flock_of_Seagulls"}
{"question": "what type of music does Chronixx play?", "answer": "reggae", "dataset": "entity_questions", "split": "test", "answer_aliases": ["reggae"], "entity_annotations": ["Chronixx"], "answer_entity_name": null, "predicted_answer": "Chronixx plays reggae music.", "extracted_entity": "Chronixx"}
{"question": "what type of music does Sorority Row play?", "answer": "horror film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["horror film", "slasher film"], "entity_annotations": ["Sorority Row"], "answer_entity_name": null, "predicted_answer": "R&B", "extracted_entity": "Sorority_Row"}
{"question": "what type of music does The Raelettes play?", "answer": "rhythm and blues", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rhythm and blues"], "entity_annotations": ["The Raelettes"], "answer_entity_name": null, "predicted_answer": "The Raelettes play Pop music.", "extracted_entity": "The_Raelettes"}
{"question": "what type of music does Ash play?", "answer": "alternative rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["alternative rock"], "entity_annotations": ["Ash"], "answer_entity_name": null, "predicted_answer": "Ash plays rock music.", "extracted_entity": "Ash"}
{"question": "what type of music does Halo: Reach play?", "answer": "first-person shooter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["first-person shooter"], "entity_annotations": ["Halo: Reach"], "answer_entity_name": null, "predicted_answer": "The music is a mix of orchestral", "extracted_entity": "Halo:_Reach"}
{"question": "what type of music does Somewhere Only We Know play?", "answer": "romance film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["romance film"], "entity_annotations": ["Somewhere Only We Know"], "answer_entity_name": null, "predicted_answer": "traditional piano rock song", "extracted_entity": "Somewhere_Only_We_Know"}
{"question": "what type of music does Darryl Jones play?", "answer": "jazz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["jazz"], "entity_annotations": ["Darryl Jones"], "answer_entity_name": null, "predicted_answer": "jazz and rock", "extracted_entity": "Darryl_Jones"}
{"question": "what type of music does The Force play?", "answer": "thriller", "dataset": "entity_questions", "split": "test", "answer_aliases": ["thriller"], "entity_annotations": ["The Force"], "answer_entity_name": null, "predicted_answer": "1", "extracted_entity": "The_Force"}
{"question": "what type of music does King Crimson play?", "answer": "progressive rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["progressive rock", "art rock"], "entity_annotations": ["King Crimson"], "answer_entity_name": null, "predicted_answer": "progressive rock", "extracted_entity": "King_Crimson"}
{"question": "what type of music does The SpongeBob SquarePants Movie play?", "answer": "comedy film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["comedy film"], "entity_annotations": ["The SpongeBob SquarePants Movie"], "answer_entity_name": null, "predicted_answer": "The SpongeBob SquarePants Movie plays Pop music", "extracted_entity": "The_SpongeBob_SquarePants_Movie"}
{"question": "what type of music does Ordo Templi Orientis play?", "answer": "freemasonry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["freemasonry", "hermeticism"], "entity_annotations": ["Ordo Templi Orientis"], "answer_entity_name": null, "predicted_answer": "Ordo Templi Orientis plays Progressive metal.", "extracted_entity": "Ordo_Templi_Orientis"}
{"question": "what type of music does The Rundown play?", "answer": "action film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["action film", "buddy cop"], "entity_annotations": ["The Rundown"], "answer_entity_name": null, "predicted_answer": "The Rundown plays Rock music.", "extracted_entity": "The_Rundown"}
{"question": "what type of music does Collie Buddz play?", "answer": "reggae", "dataset": "entity_questions", "split": "test", "answer_aliases": ["reggae"], "entity_annotations": ["Collie Buddz"], "answer_entity_name": null, "predicted_answer": "reggae", "extracted_entity": "Collie_Buddz"}
{"question": "what type of music does Jovanotti play?", "answer": "hip hop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["hip hop music"], "entity_annotations": ["Jovanotti"], "answer_entity_name": null, "predicted_answer": "rap", "extracted_entity": "Jovanotti"}
{"question": "what type of music does Shannon Brown play?", "answer": "country music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["country music"], "entity_annotations": ["Shannon Brown"], "answer_entity_name": null, "predicted_answer": "rock", "extracted_entity": "Shannon_Brown"}
{"question": "what type of music does Mario Tennis play?", "answer": "sports video game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["sports video game"], "entity_annotations": ["Mario Tennis"], "answer_entity_name": null, "predicted_answer": "it plays a mix of classical and modern music", "extracted_entity": "Mario_Tennis"}
{"question": "what type of music does Home Alone 3 play?", "answer": "comedy film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["comedy film"], "entity_annotations": ["Home Alone 3"], "answer_entity_name": null, "predicted_answer": "home alone 3 soundtrack", "extracted_entity": "Home_Alone_3"}
{"question": "what type of music does Reeves Gabrels play?", "answer": "rock music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rock music"], "entity_annotations": ["Reeves Gabrels"], "answer_entity_name": null, "predicted_answer": "Reeves Gabrels plays rock music.", "extracted_entity": "Reeves_Gabrels"}
{"question": "what type of music does Heart of Darkness play?", "answer": "platform game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["platform game"], "entity_annotations": ["Heart of Darkness"], "answer_entity_name": null, "predicted_answer": "Heart of Darkness plays rock music.", "extracted_entity": "Heart_of_Darkness"}
{"question": "what type of music does New York Art Quartet play?", "answer": "jazz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["jazz"], "entity_annotations": ["New York Art Quartet"], "answer_entity_name": null, "predicted_answer": "free jazz", "extracted_entity": "New_York_Art_Quartet"}
{"question": "what type of music does Lutheran Service Book play?", "answer": "hymnal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["hymnal"], "entity_annotations": ["Lutheran Service Book"], "answer_entity_name": null, "predicted_answer": "Lutheran Service Book plays a variety of music including hym", "extracted_entity": "Lutheran_Service_Book"}
{"question": "what type of music does Monsters vs. Aliens play?", "answer": "science fiction film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["science fiction film"], "entity_annotations": ["Monsters vs. Aliens"], "answer_entity_name": null, "predicted_answer": "Monsters vs. Aliens plays pop music.", "extracted_entity": "Monsters_vs._Aliens"}
{"question": "what type of music does The Corrections play?", "answer": "indie rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["indie rock"], "entity_annotations": ["The Corrections"], "answer_entity_name": null, "predicted_answer": "The Corrections is a 2001 novel by American", "extracted_entity": "The_Corrections"}
{"question": "what type of music does Please Sir! play?", "answer": "sitcom", "dataset": "entity_questions", "split": "test", "answer_aliases": ["sitcom"], "entity_annotations": ["Please Sir!"], "answer_entity_name": null, "predicted_answer": "Rock", "extracted_entity": "Please_Sir!"}
{"question": "what type of music does Candela play?", "answer": "dansband", "dataset": "entity_questions", "split": "test", "answer_aliases": ["dansband"], "entity_annotations": ["Candela"], "answer_entity_name": null, "predicted_answer": "andela plays Pop music.", "extracted_entity": "Candela"}
{"question": "what type of music does Vanessa Hudgens play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Vanessa Hudgens"], "answer_entity_name": null, "predicted_answer": "Vanessa Hudgens plays pop music.", "extracted_entity": "Vanessa_Hudgens"}
{"question": "what type of music does Jonathan Livingston Seagull play?", "answer": "novella", "dataset": "entity_questions", "split": "test", "answer_aliases": ["novella"], "entity_annotations": ["Jonathan Livingston Seagull"], "answer_entity_name": null, "predicted_answer": "Seagull music", "extracted_entity": "Jonathan_Livingston_Seagull"}
{"question": "what type of music does Ghost Dog: The Way of the Samurai play?", "answer": "action film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["action film"], "entity_annotations": ["Ghost Dog: The Way of the Samurai"], "answer_entity_name": null, "predicted_answer": "Ghost Dog: The Way of the Samurai plays Hip", "extracted_entity": "Ghost_Dog:_The_Way_of_the_Samurai"}
{"question": "what type of music does Back to the Beach play?", "answer": "beach party film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["beach party film"], "entity_annotations": ["Back to the Beach"], "answer_entity_name": null, "predicted_answer": "Beach music", "extracted_entity": "Back_to_the_Beach"}
{"question": "what type of music does Paty Cant\u00fa play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Paty Cant\u00fa"], "answer_entity_name": null, "predicted_answer": "Pop music", "extracted_entity": "Paty_Cant\u00fa"}
{"question": "what type of music does Francis Poulenc play?", "answer": "classical music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["classical music", "opera"], "entity_annotations": ["Francis Poulenc"], "answer_entity_name": null, "predicted_answer": "Francis Poulenc plays classical music.", "extracted_entity": "Francis_Poulenc"}
{"question": "what type of music does Madness play?", "answer": "horror film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["horror film"], "entity_annotations": ["Madness"], "answer_entity_name": null, "predicted_answer": "Madness plays Rock music.", "extracted_entity": "Madness"}
{"question": "what type of music does Spitz play?", "answer": "rock music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rock music"], "entity_annotations": ["Spitz"], "answer_entity_name": null, "predicted_answer": "Spitz plays Rock music.", "extracted_entity": "Spitz"}
{"question": "what type of music does Cradle 2 the Grave play?", "answer": "action film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["action film"], "entity_annotations": ["Cradle 2 the Grave"], "answer_entity_name": null, "predicted_answer": "It is a hip-hop film.", "extracted_entity": "Cradle_2_the_Grave"}
{"question": "what type of music does Tyrone Davis play?", "answer": "soul music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["soul music"], "entity_annotations": ["Tyrone Davis"], "answer_entity_name": null, "predicted_answer": "blues and soul", "extracted_entity": "Tyrone_Davis"}
{"question": "what type of music does Johnny Griffin play?", "answer": "jazz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["jazz"], "entity_annotations": ["Johnny Griffin"], "answer_entity_name": null, "predicted_answer": "jazz", "extracted_entity": "Johnny_Griffin"}
{"question": "what type of music does Bob & Carol & Ted & Alice play?", "answer": "comedy-drama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["comedy-drama"], "entity_annotations": ["Bob & Carol & Ted & Alice"], "answer_entity_name": null, "predicted_answer": "Comedy-Drama", "extracted_entity": "Bob_&_Carol_&_Ted_&_Alice"}
{"question": "what type of music does Kristian Bush play?", "answer": "folk rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["folk rock"], "entity_annotations": ["Kristian Bush"], "answer_entity_name": null, "predicted_answer": "Country music", "extracted_entity": "Kristian_Bush"}
{"question": "what type of music does Don Burrows play?", "answer": "jazz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["jazz"], "entity_annotations": ["Don Burrows"], "answer_entity_name": null, "predicted_answer": "jazz and swing", "extracted_entity": "Don_Burrows"}
{"question": "what type of music does Louis Armstrong play?", "answer": "jazz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["jazz"], "entity_annotations": ["Louis Armstrong"], "answer_entity_name": null, "predicted_answer": "jazz", "extracted_entity": "Louis_Armstrong"}
{"question": "what type of music does Free Bird play?", "answer": "Southern rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Southern rock"], "entity_annotations": ["Free Bird"], "answer_entity_name": null, "predicted_answer": "rock", "extracted_entity": "Free_Bird"}
{"question": "what type of music does Courtney Love play?", "answer": "alternative rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["alternative rock", "rock music"], "entity_annotations": ["Courtney Love"], "answer_entity_name": null, "predicted_answer": "alternative rock", "extracted_entity": "Courtney_Love"}
{"question": "what type of music does Brewster's Millions play?", "answer": "musical film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["musical film"], "entity_annotations": ["Brewster's Millions"], "answer_entity_name": null, "predicted_answer": "it is a comedic novel written by George Barr McC", "extracted_entity": "Brewster's_Millions"}
{"question": "what type of music does Stam1na play?", "answer": "progressive metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["progressive metal"], "entity_annotations": ["Stam1na"], "answer_entity_name": null, "predicted_answer": "Stam1na play metal music.", "extracted_entity": "Stam1na"}
{"question": "what type of music does The Crow play?", "answer": "Western film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Western film"], "entity_annotations": ["The Crow"], "answer_entity_name": null, "predicted_answer": "Eric Draven is a musician, and his music", "extracted_entity": "The_Crow"}
{"question": "what type of music does Brandon Boyd play?", "answer": "alternative rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["alternative rock"], "entity_annotations": ["Brandon Boyd"], "answer_entity_name": null, "predicted_answer": "rock", "extracted_entity": "Brandon_Boyd"}
{"question": "what type of music does The Messenger: The Story of Joan of Arc play?", "answer": "historical period drama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["historical period drama"], "entity_annotations": ["The Messenger: The Story of Joan of Arc"], "answer_entity_name": null, "predicted_answer": "The Messenger: The Story of Joan of Arc plays", "extracted_entity": "The_Messenger:_The_Story_of_Joan_of_Arc"}
{"question": "what type of music does William Warfield play?", "answer": "opera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["opera"], "entity_annotations": ["William Warfield"], "answer_entity_name": null, "predicted_answer": "He plays opera.", "extracted_entity": "William_Warfield"}
{"question": "what type of music does Carry On Regardless play?", "answer": "comedy film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["comedy film"], "entity_annotations": ["Carry On Regardless"], "answer_entity_name": null, "predicted_answer": "It plays a variety of music, including pop,", "extracted_entity": "Carry_On_Regardless"}
{"question": "what type of music does Lungfish play?", "answer": "punk rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["punk rock"], "entity_annotations": ["Lungfish"], "answer_entity_name": null, "predicted_answer": "Rock", "extracted_entity": "Lungfish"}
{"question": "what type of music does Super Smash Bros. for Nintendo 3DS and Wii U play?", "answer": "fighting game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["fighting game"], "entity_annotations": ["Super Smash Bros. for Nintendo 3DS and Wii U"], "answer_entity_name": null, "predicted_answer": "The music in Super Smash Bros. for Nintendo", "extracted_entity": "Super_Smash_Bros._for_Nintendo_3DS_and_Wii_U"}
{"question": "what type of music does Billy Eckstine play?", "answer": "jazz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["jazz"], "entity_annotations": ["Billy Eckstine"], "answer_entity_name": null, "predicted_answer": "Jazz", "extracted_entity": "Billy_Eckstine"}
{"question": "what type of music does Loretta Lynn play?", "answer": "country music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["country music"], "entity_annotations": ["Loretta Lynn"], "answer_entity_name": null, "predicted_answer": "Country", "extracted_entity": "Loretta_Lynn"}
{"question": "what type of music does Phantom Blue play?", "answer": "heavy metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["heavy metal"], "entity_annotations": ["Phantom Blue"], "answer_entity_name": null, "predicted_answer": "heavy metal", "extracted_entity": "Phantom_Blue"}
{"question": "what type of music does Earl Scruggs play?", "answer": "bluegrass music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["bluegrass music"], "entity_annotations": ["Earl Scruggs"], "answer_entity_name": null, "predicted_answer": "bluegrass", "extracted_entity": "Earl_Scruggs"}
{"question": "what type of music does Pneuma play?", "answer": "thrash metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["thrash metal"], "entity_annotations": ["Pneuma"], "answer_entity_name": null, "predicted_answer": "Pneuma plays electronic music", "extracted_entity": "Pneuma"}
{"question": "what type of music does Lowrider play?", "answer": "stoner rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["stoner rock"], "entity_annotations": ["Lowrider"], "answer_entity_name": null, "predicted_answer": "Lowrider plays Rock, Pop, Alternative,", "extracted_entity": "Lowrider"}
{"question": "what type of music does Pasyon play?", "answer": "epic poem", "dataset": "entity_questions", "split": "test", "answer_aliases": ["epic poem"], "entity_annotations": ["Pasyon"], "answer_entity_name": null, "predicted_answer": "The Pasy\u00f3n is a Philippine epic narrative of", "extracted_entity": "Pasyon"}
{"question": "what type of music does George Hayter play?", "answer": "portrait", "dataset": "entity_questions", "split": "test", "answer_aliases": ["portrait"], "entity_annotations": ["George Hayter"], "answer_entity_name": null, "predicted_answer": "George Hayter plays classical music.", "extracted_entity": "George_Hayter"}
{"question": "what type of music does Gretchen Parlato play?", "answer": "jazz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["jazz"], "entity_annotations": ["Gretchen Parlato"], "answer_entity_name": null, "predicted_answer": "jazz", "extracted_entity": "Gretchen_Parlato"}
{"question": "what type of music does Arthur Blythe play?", "answer": "jazz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["jazz"], "entity_annotations": ["Arthur Blythe"], "answer_entity_name": null, "predicted_answer": "jazz", "extracted_entity": "Arthur_Blythe"}
{"question": "what type of music does Adriaen Brouwer play?", "answer": "genre painting", "dataset": "entity_questions", "split": "test", "answer_aliases": ["genre painting"], "entity_annotations": ["Adriaen Brouwer"], "answer_entity_name": null, "predicted_answer": "Adriaen Brouwer plays a flute", "extracted_entity": "Adriaen_Brouwer"}
{"question": "what type of music does In Cold Blood play?", "answer": "adventure game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["adventure game"], "entity_annotations": ["In Cold Blood"], "answer_entity_name": null, "predicted_answer": "it plays a variety of music", "extracted_entity": "In_Cold_Blood"}
{"question": "what type of music does Tancredi play?", "answer": "opera seria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["opera seria"], "entity_annotations": ["Tancredi"], "answer_entity_name": null, "predicted_answer": "Tancredi plays the trumpet", "extracted_entity": "Tancredi"}
{"question": "what type of music does The Twang play?", "answer": "indie rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["indie rock"], "entity_annotations": ["The Twang"], "answer_entity_name": null, "predicted_answer": "indie rock", "extracted_entity": "The_Twang"}
{"question": "what type of music does Cheyenne Autumn play?", "answer": "Western film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Western film"], "entity_annotations": ["Cheyenne Autumn"], "answer_entity_name": null, "predicted_answer": "Cheyenne Autumn plays a mix of traditional and", "extracted_entity": "Cheyenne_Autumn"}
{"question": "what type of music does Rocksmith 2014 play?", "answer": "music video game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["music video game"], "entity_annotations": ["Rocksmith 2014"], "answer_entity_name": null, "predicted_answer": "Rock music", "extracted_entity": "Rocksmith_2014"}
{"question": "what type of music does Goodbye, Mr. Chips play?", "answer": "musical film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["musical film"], "entity_annotations": ["Goodbye, Mr. Chips"], "answer_entity_name": null, "predicted_answer": "pop music", "extracted_entity": "Goodbye,_Mr._Chips"}
{"question": "what type of music does Transport Tycoon play?", "answer": "business simulation game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["business simulation game"], "entity_annotations": ["Transport Tycoon"], "answer_entity_name": null, "predicted_answer": "music", "extracted_entity": "Transport_Tycoon"}
{"question": "what type of music does Xenoblade Chronicles play?", "answer": "action role-playing game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["action role-playing game"], "entity_annotations": ["Xenoblade Chronicles"], "answer_entity_name": null, "predicted_answer": "The \"Xenoblade Chronicles\" series has", "extracted_entity": "Xenoblade_Chronicles"}
{"question": "what type of music does Underdark play?", "answer": "role-playing game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["role-playing game"], "entity_annotations": ["Underdark"], "answer_entity_name": null, "predicted_answer": "Underdark is a fictional setting which has appeared in", "extracted_entity": "Underdark"}
{"question": "what type of music does Bruce Cockburn play?", "answer": "folk rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["folk rock", "rock music"], "entity_annotations": ["Bruce Cockburn"], "answer_entity_name": null, "predicted_answer": "Bruce Cockburn plays folk, jazz and rock.", "extracted_entity": "Bruce_Cockburn"}
{"question": "what type of music does Barbara Cook play?", "answer": "musical", "dataset": "entity_questions", "split": "test", "answer_aliases": ["musical"], "entity_annotations": ["Barbara Cook"], "answer_entity_name": null, "predicted_answer": "Barbara Cook is a singer and actress who", "extracted_entity": "Barbara_Cook"}
{"question": "what type of music does Joywave play?", "answer": "indie rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["indie rock"], "entity_annotations": ["Joywave"], "answer_entity_name": null, "predicted_answer": "Joywave is an American indie rock band from Rochester", "extracted_entity": "Joywave"}
{"question": "what type of music does Classics IV play?", "answer": "Southern rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Southern rock"], "entity_annotations": ["Classics IV"], "answer_entity_name": null, "predicted_answer": "Classic Rock", "extracted_entity": "Classics_IV"}
{"question": "what type of music does Snoop Dogg play?", "answer": "hip hop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["hip hop music"], "entity_annotations": ["Snoop Dogg"], "answer_entity_name": null, "predicted_answer": "rap", "extracted_entity": "Snoop_Dogg"}
{"question": "what type of music does Charlie Rich play?", "answer": "country music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["country music", "country pop", "jazz", "gospel music", "rockabilly"], "entity_annotations": ["Charlie Rich"], "answer_entity_name": null, "predicted_answer": "Country, Rockabilly, Jazz, Blues,", "extracted_entity": "Charlie_Rich"}
{"question": "what type of music does Trapeze play?", "answer": "hard rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["hard rock"], "entity_annotations": ["Trapeze"], "answer_entity_name": null, "predicted_answer": "Trapeze plays Rock music.", "extracted_entity": "Trapeze"}
{"question": "what type of music does Steven Universe play?", "answer": "science fiction", "dataset": "entity_questions", "split": "test", "answer_aliases": ["science fiction"], "entity_annotations": ["Steven Universe"], "answer_entity_name": null, "predicted_answer": "Steven Universe is an American animated television series created by", "extracted_entity": "Steven_Universe"}
{"question": "what type of music does Pretty Hate Machine play?", "answer": "industrial rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["industrial rock"], "entity_annotations": ["Pretty Hate Machine"], "answer_entity_name": null, "predicted_answer": "industrial rock", "extracted_entity": "Pretty_Hate_Machine"}
{"question": "what type of music does Niccol\u00f2 Piccinni play?", "answer": "opera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["opera"], "entity_annotations": ["Niccol\u00f2 Piccinni"], "answer_entity_name": null, "predicted_answer": "Opera", "extracted_entity": "Niccol\u00f2_Piccinni"}
{"question": "what type of music does The Bank Job play?", "answer": "heist film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["heist film"], "entity_annotations": ["The Bank Job"], "answer_entity_name": null, "predicted_answer": "The Bank Job plays Pop music.", "extracted_entity": "The_Bank_Job"}
{"question": "what type of music does Basic Channel play?", "answer": "minimal techno", "dataset": "entity_questions", "split": "test", "answer_aliases": ["minimal techno"], "entity_annotations": ["Basic Channel"], "answer_entity_name": null, "predicted_answer": "techno music", "extracted_entity": "Basic_Channel"}
{"question": "what type of music does Daniel play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Daniel"], "answer_entity_name": null, "predicted_answer": "Daniel plays classical music.", "extracted_entity": "Daniel"}
{"question": "what type of music does Beach House play?", "answer": "comedy film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["comedy film"], "entity_annotations": ["Beach House"], "answer_entity_name": null, "predicted_answer": "Beach House plays a variety of music, including pop", "extracted_entity": "Beach_House"}
{"question": "what type of music does Top Five play?", "answer": "comedy film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["comedy film"], "entity_annotations": ["Top Five"], "answer_entity_name": null, "predicted_answer": "top 5", "extracted_entity": "Top_Five"}
{"question": "what type of music does Dar Williams play?", "answer": "folk music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["folk music"], "entity_annotations": ["Dar Williams"], "answer_entity_name": null, "predicted_answer": "folk music", "extracted_entity": "Dar_Williams"}
{"question": "what type of music does Pulse play?", "answer": "horror film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["horror film"], "entity_annotations": ["Pulse"], "answer_entity_name": null, "predicted_answer": "Dance music", "extracted_entity": "Pulse"}
{"question": "what type of music does Jon Spencer Blues Explosion play?", "answer": "alternative rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["alternative rock"], "entity_annotations": ["Jon Spencer Blues Explosion"], "answer_entity_name": null, "predicted_answer": "rock", "extracted_entity": "Jon_Spencer_Blues_Explosion"}
{"question": "what type of music does Christian Death play?", "answer": "alternative rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["alternative rock", "gothic rock"], "entity_annotations": ["Christian Death"], "answer_entity_name": null, "predicted_answer": "Christian Death plays death rock and gothic rock.", "extracted_entity": "Christian_Death"}
{"question": "what type of music does As Tall as Lions play?", "answer": "indie rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["indie rock"], "entity_annotations": ["As Tall as Lions"], "answer_entity_name": null, "predicted_answer": "indie rock", "extracted_entity": "As_Tall_as_Lions"}
{"question": "what type of music does Rambo: First Blood Part II play?", "answer": "action film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["action film"], "entity_annotations": ["Rambo: First Blood Part II"], "answer_entity_name": null, "predicted_answer": "It plays a mix of rock, punk, and", "extracted_entity": "Rambo:_First_Blood_Part_II"}
{"question": "what type of music does Francisco Goya play?", "answer": "portrait painting", "dataset": "entity_questions", "split": "test", "answer_aliases": ["portrait painting"], "entity_annotations": ["Francisco Goya"], "answer_entity_name": null, "predicted_answer": "Francisco Goya plays Classical music.", "extracted_entity": "Francisco_Goya"}
{"question": "what type of music does Clannad play?", "answer": "New-age music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New-age music"], "entity_annotations": ["Clannad"], "answer_entity_name": null, "predicted_answer": "Clannad play a mix of traditional Irish music", "extracted_entity": "Clannad"}
{"question": "what type of music does Hot Tub Time Machine play?", "answer": "science fiction film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["science fiction film", "comedy film"], "entity_annotations": ["Hot Tub Time Machine"], "answer_entity_name": null, "predicted_answer": "Rock", "extracted_entity": "Hot_Tub_Time_Machine"}
{"question": "what type of music does Generator Rex play?", "answer": "science fiction", "dataset": "entity_questions", "split": "test", "answer_aliases": ["science fiction"], "entity_annotations": ["Generator Rex"], "answer_entity_name": null, "predicted_answer": "Generator Rex plays a variety of music genres, including", "extracted_entity": "Generator_Rex"}
{"question": "what type of music does Serial Mom play?", "answer": "comedy film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["comedy film"], "entity_annotations": ["Serial Mom"], "answer_entity_name": null, "predicted_answer": "Serial Mom plays rock and roll music.", "extracted_entity": "Serial_Mom"}
{"question": "what type of music does The Basement Tapes play?", "answer": "rock music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rock music"], "entity_annotations": ["The Basement Tapes"], "answer_entity_name": null, "predicted_answer": "The Basement Tapes is an American rock band.", "extracted_entity": "The_Basement_Tapes"}
{"question": "what type of music does Young Ace play?", "answer": "seinen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["seinen"], "entity_annotations": ["Young Ace"], "answer_entity_name": null, "predicted_answer": "Young Ace plays Pop music.", "extracted_entity": "Young_Ace"}
{"question": "what type of music does Perfect Dark Zero play?", "answer": "first-person shooter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["first-person shooter"], "entity_annotations": ["Perfect Dark Zero"], "answer_entity_name": null, "predicted_answer": "The music in the game is a mix of techno", "extracted_entity": "Perfect_Dark_Zero"}
{"question": "what type of music does Oresteia play?", "answer": "Greek tragedy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Greek tragedy"], "entity_annotations": ["Oresteia"], "answer_entity_name": null, "predicted_answer": "Oresteia is a type of music that is", "extracted_entity": "Oresteia"}
{"question": "what type of music does Butterfly play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Butterfly"], "answer_entity_name": null, "predicted_answer": "Butterfly plays pop music.", "extracted_entity": "Butterfly"}
{"question": "what type of music does Savatage play?", "answer": "progressive metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["progressive metal"], "entity_annotations": ["Savatage"], "answer_entity_name": null, "predicted_answer": "Savatage is a metal band.", "extracted_entity": "Savatage"}
{"question": "what type of music does Aimee Mayo play?", "answer": "country music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["country music"], "entity_annotations": ["Aimee Mayo"], "answer_entity_name": null, "predicted_answer": "Aimee Mayo plays pop music.", "extracted_entity": "Aimee_Mayo"}
{"question": "what type of music does Vampyr play?", "answer": "horror film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["horror film"], "entity_annotations": ["Vampyr"], "answer_entity_name": null, "predicted_answer": "The music of Vampyr is a mixture of", "extracted_entity": "Vampyr"}
{"question": "what type of music does Ursa Major play?", "answer": "public art", "dataset": "entity_questions", "split": "test", "answer_aliases": ["public art"], "entity_annotations": ["Ursa Major"], "answer_entity_name": null, "predicted_answer": "Ursa Major plays Jazz.", "extracted_entity": "Ursa_Major"}
{"question": "what type of music does Elliott Murphy play?", "answer": "rock music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rock music"], "entity_annotations": ["Elliott Murphy"], "answer_entity_name": null, "predicted_answer": "rock", "extracted_entity": "Elliott_Murphy"}
{"question": "what type of music does Joint play?", "answer": "J-pop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["J-pop"], "entity_annotations": ["Joint"], "answer_entity_name": null, "predicted_answer": "Joint plays Hip Hop.", "extracted_entity": "Joint"}
{"question": "what type of music does Lumini\u021ba Anghel play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Lumini\u021ba Anghel"], "answer_entity_name": null, "predicted_answer": "Lumini\u021ba Anghel plays pop music", "extracted_entity": "Lumini\u021ba_Anghel"}
{"question": "what type of music does Rock Star Supernova play?", "answer": "hard rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["hard rock"], "entity_annotations": ["Rock Star Supernova"], "answer_entity_name": null, "predicted_answer": "Rock Star Supernova plays Rock music.", "extracted_entity": "Rock_Star_Supernova"}
{"question": "what type of music does Taiy\u014d Matsumoto play?", "answer": "seinen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["seinen"], "entity_annotations": ["Taiy\u014d Matsumoto"], "answer_entity_name": null, "predicted_answer": "Taiy\u014d Matsumoto plays rock music.", "extracted_entity": "Taiy\u014d_Matsumoto"}
{"question": "what type of music does Ethel Smyth play?", "answer": "opera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["opera"], "entity_annotations": ["Ethel Smyth"], "answer_entity_name": null, "predicted_answer": "Smyth tended to be marginalised as a \u2018", "extracted_entity": "Ethel_Smyth"}
{"question": "what type of music does Danny Tenaglia play?", "answer": "house music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["house music"], "entity_annotations": ["Danny Tenaglia"], "answer_entity_name": null, "predicted_answer": "Danny Tenaglia plays house music.", "extracted_entity": "Danny_Tenaglia"}
{"question": "what type of music does Marvin Stamm play?", "answer": "jazz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["jazz"], "entity_annotations": ["Marvin Stamm"], "answer_entity_name": null, "predicted_answer": "Marvin Stamm plays jazz.", "extracted_entity": "Marvin_Stamm"}
{"question": "what type of music does Pulse play?", "answer": "progressive rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["progressive rock"], "entity_annotations": ["Pulse"], "answer_entity_name": null, "predicted_answer": "Electronic Dance Music (EDM)", "extracted_entity": "Pulse"}
{"question": "what type of music does Miss Congeniality 2: Armed and Fabulous play?", "answer": "comedy film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["comedy film"], "entity_annotations": ["Miss Congeniality 2: Armed and Fabulous"], "answer_entity_name": null, "predicted_answer": "Miss Congeniality 2: Armed and", "extracted_entity": "Miss_Congeniality_2:_Armed_and_Fabulous"}
{"question": "what type of music does Andreas Johnson play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Andreas Johnson"], "answer_entity_name": null, "predicted_answer": "pop/rock", "extracted_entity": "Andreas_Johnson"}
{"question": "what type of music does Sirocco play?", "answer": "film noir", "dataset": "entity_questions", "split": "test", "answer_aliases": ["film noir"], "entity_annotations": ["Sirocco"], "answer_entity_name": null, "predicted_answer": "Sirocco plays a mixture of jazz, blues", "extracted_entity": "Sirocco"}
{"question": "what type of music does Ian Curtis play?", "answer": "rock music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rock music"], "entity_annotations": ["Ian Curtis"], "answer_entity_name": null, "predicted_answer": "post-punk", "extracted_entity": "Ian_Curtis"}
{"question": "what type of music does The Clark Sisters play?", "answer": "gospel music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["gospel music"], "entity_annotations": ["The Clark Sisters"], "answer_entity_name": null, "predicted_answer": "The Clark Sisters are a gospel vocal group from Detroit", "extracted_entity": "The_Clark_Sisters"}
{"question": "what type of music does La jolie fille de Perth play?", "answer": "opera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["opera"], "entity_annotations": ["La jolie fille de Perth"], "answer_entity_name": null, "predicted_answer": "La jolie fille de Perth plays opera.", "extracted_entity": "La_jolie_fille_de_Perth"}
{"question": "what type of music does Cleaner play?", "answer": "thriller", "dataset": "entity_questions", "split": "test", "answer_aliases": ["thriller"], "entity_annotations": ["Cleaner"], "answer_entity_name": null, "predicted_answer": "rock", "extracted_entity": "Cleaner"}
{"question": "what type of music does Lloyd Cole play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Lloyd Cole"], "answer_entity_name": null, "predicted_answer": "rock", "extracted_entity": "Lloyd_Cole"}
{"question": "what type of music does Jessica Garlick play?", "answer": "pop music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pop music"], "entity_annotations": ["Jessica Garlick"], "answer_entity_name": null, "predicted_answer": "pop music", "extracted_entity": "Jessica_Garlick"}
{"question": "what type of music does Cleveland Orchestra play?", "answer": "classical music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["classical music"], "entity_annotations": ["Cleveland Orchestra"], "answer_entity_name": null, "predicted_answer": "Cleveland Orchestra plays classical music.", "extracted_entity": "Cleveland_Orchestra"}
{"question": "what type of music does Alex Webster play?", "answer": "death metal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["death metal"], "entity_annotations": ["Alex Webster"], "answer_entity_name": null, "predicted_answer": "death metal", "extracted_entity": "Alex_Webster"}
{"question": "what type of music does Dance Moms play?", "answer": "reality television", "dataset": "entity_questions", "split": "test", "answer_aliases": ["reality television"], "entity_annotations": ["Dance Moms"], "answer_entity_name": null, "predicted_answer": "Dance music", "extracted_entity": "Dance_Moms"}
{"question": "what type of music does Persius play?", "answer": "satire", "dataset": "entity_questions", "split": "test", "answer_aliases": ["satire"], "entity_annotations": ["Persius"], "answer_entity_name": null, "predicted_answer": "classical music", "extracted_entity": "Persius"}
{"question": "what type of music does Quatermass 2 play?", "answer": "horror film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["horror film", "science fiction film"], "entity_annotations": ["Quatermass 2"], "answer_entity_name": null, "predicted_answer": "Quatermass 2 plays a mixture of rock", "extracted_entity": "Quatermass_2"}
{"question": "what type of music does C. J. Bolland play?", "answer": "techno", "dataset": "entity_questions", "split": "test", "answer_aliases": ["techno"], "entity_annotations": ["C. J. Bolland"], "answer_entity_name": null, "predicted_answer": "electronic music", "extracted_entity": "C._J._Bolland"}
{"question": "what type of music does Yo La Tengo play?", "answer": "indie rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["indie rock"], "entity_annotations": ["Yo La Tengo"], "answer_entity_name": null, "predicted_answer": "Indie rock", "extracted_entity": "Yo_La_Tengo"}
{"question": "what type of music does Paul Fix play?", "answer": "Western film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Western film"], "entity_annotations": ["Paul Fix"], "answer_entity_name": null, "predicted_answer": "Paul Fix plays jazz.", "extracted_entity": "Paul_Fix"}
{"question": "what type of music does Resident Evil 5 play?", "answer": "third-person shooter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["third-person shooter"], "entity_annotations": ["Resident Evil 5"], "answer_entity_name": null, "predicted_answer": "The music of \"Resident Evil 5\"", "extracted_entity": "Resident_Evil_5"}
{"question": "what type of music does Del Shannon play?", "answer": "rock music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rock music"], "entity_annotations": ["Del Shannon"], "answer_entity_name": null, "predicted_answer": "rock and roll", "extracted_entity": "Del_Shannon"}
{"question": "what type of music does H play?", "answer": "sitcom", "dataset": "entity_questions", "split": "test", "answer_aliases": ["sitcom"], "entity_annotations": ["H"], "answer_entity_name": null, "predicted_answer": "s rock music.", "extracted_entity": "H"}
{"question": "what type of music does Carnival of Souls play?", "answer": "horror film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["horror film"], "entity_annotations": ["Carnival of Souls"], "answer_entity_name": null, "predicted_answer": "the film is set to an organ score by Gene", "extracted_entity": "Carnival_of_Souls"}
{"question": "what type of music does Game of Thrones play?", "answer": "action role-playing game", "dataset": "entity_questions", "split": "test", "answer_aliases": ["action role-playing game"], "entity_annotations": ["Game of Thrones"], "answer_entity_name": null, "predicted_answer": "Game of Thrones plays heavy metal.", "extracted_entity": "Game_of_Thrones"}
{"question": "what type of music does Joker play?", "answer": "science fiction film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["science fiction film", "comedy film"], "entity_annotations": ["Joker"], "answer_entity_name": null, "predicted_answer": "Poker", "extracted_entity": "Joker"}
{"question": "what type of music does Apoptygma Berzerk play?", "answer": "synth-pop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["synth-pop"], "entity_annotations": ["Apoptygma Berzerk"], "answer_entity_name": null, "predicted_answer": "Apoptygma Berzerk plays Syn", "extracted_entity": "Apoptygma_Berzerk"}
{"question": "what type of music does Zombi 2 play?", "answer": "horror film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["horror film"], "entity_annotations": ["Zombi 2"], "answer_entity_name": null, "predicted_answer": "Zombi 2 plays a mix of different", "extracted_entity": "Zombi_2"}
{"question": "what type of music does Man play?", "answer": "progressive rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["progressive rock"], "entity_annotations": ["Man"], "answer_entity_name": null, "predicted_answer": "Man plays rock music.", "extracted_entity": "Man"}
{"question": "what type of music does Ed Greenwood play?", "answer": "fantasy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["fantasy"], "entity_annotations": ["Ed Greenwood"], "answer_entity_name": null, "predicted_answer": "He plays Jazz music.", "extracted_entity": "Ed_Greenwood"}
{"question": "what type of music does Growing Pains play?", "answer": "sitcom", "dataset": "entity_questions", "split": "test", "answer_aliases": ["sitcom"], "entity_annotations": ["Growing Pains"], "answer_entity_name": null, "predicted_answer": "Growing Pains is a American television sitcom created by", "extracted_entity": "Growing_Pains"}
{"question": "what type of music does Grendel play?", "answer": "electro-industrial", "dataset": "entity_questions", "split": "test", "answer_aliases": ["electro-industrial"], "entity_annotations": ["Grendel"], "answer_entity_name": null, "predicted_answer": "Rock music", "extracted_entity": "Grendel"}
{"question": "what type of music does Prisoner play?", "answer": "soap opera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["soap opera"], "entity_annotations": ["Prisoner"], "answer_entity_name": null, "predicted_answer": "Alternative Rock, Indie Rock, Rock", "extracted_entity": "Prisoner"}
{"question": "what type of music does Oliver Sain play?", "answer": "rhythm and blues", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rhythm and blues"], "entity_annotations": ["Oliver Sain"], "answer_entity_name": null, "predicted_answer": "Rhythm and Blues music", "extracted_entity": "Oliver_Sain"}
{"question": "what type of music does Mick Harris play?", "answer": "grindcore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["grindcore"], "entity_annotations": ["Mick Harris"], "answer_entity_name": null, "predicted_answer": "Mick Harris plays grindcore music.", "extracted_entity": "Mick_Harris"}
{"question": "what type of music does Keke Wyatt play?", "answer": "soul music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["soul music"], "entity_annotations": ["Keke Wyatt"], "answer_entity_name": null, "predicted_answer": "R&B", "extracted_entity": "Keke_Wyatt"}
{"question": "what type of music does Thom Bell play?", "answer": "rhythm and blues", "dataset": "entity_questions", "split": "test", "answer_aliases": ["rhythm and blues"], "entity_annotations": ["Thom Bell"], "answer_entity_name": null, "predicted_answer": "soul", "extracted_entity": "Thom_Bell"}
{"question": "what type of music does Leonardo Vinci play?", "answer": "opera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["opera"], "entity_annotations": ["Leonardo Vinci"], "answer_entity_name": null, "predicted_answer": "Baroque", "extracted_entity": "Leonardo_Vinci"}
{"question": "what type of music does Blag Dahlia play?", "answer": "punk rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["punk rock"], "entity_annotations": ["Blag Dahlia"], "answer_entity_name": null, "predicted_answer": "punk rock", "extracted_entity": "Blag_Dahlia"}
{"question": "what type of music does Jennifer's Body play?", "answer": "horror film", "dataset": "entity_questions", "split": "test", "answer_aliases": ["horror film"], "entity_annotations": ["Jennifer's Body"], "answer_entity_name": null, "predicted_answer": "Jennifer's Body plays a mix of pop, rock", "extracted_entity": "Jennifer's_Body"}
{"question": "what type of music does Strawbs play?", "answer": "progressive rock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["progressive rock"], "entity_annotations": ["Strawbs"], "answer_entity_name": null, "predicted_answer": "folk rock", "extracted_entity": "Strawbs"}
{"question": "what type of music does Trick Pony play?", "answer": "country music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["country music"], "entity_annotations": ["Trick Pony"], "answer_entity_name": null, "predicted_answer": "country", "extracted_entity": "Trick_Pony"}
{"question": "what type of music does Inaya Day play?", "answer": "house music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["house music"], "entity_annotations": ["Inaya Day"], "answer_entity_name": null, "predicted_answer": "house music", "extracted_entity": "Inaya_Day"}
{"question": "what type of music does High Contrast play?", "answer": "liquid funk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["liquid funk"], "entity_annotations": ["High Contrast"], "answer_entity_name": null, "predicted_answer": "drum and bass", "extracted_entity": "High_Contrast"}
{"question": "who is the author of Picnic?", "answer": "William Inge", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Inge"], "entity_annotations": ["Picnic"], "answer_entity_name": null, "predicted_answer": "The author of Picnic is unknown.", "extracted_entity": "Picnic"}
{"question": "who is the author of Foucault's Pendulum?", "answer": "Umberto Eco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Umberto Eco"], "entity_annotations": ["Foucault's Pendulum"], "answer_entity_name": null, "predicted_answer": "Umberto Eco", "extracted_entity": "Foucault's_Pendulum"}
{"question": "who is the author of Tarantula?", "answer": "Thierry Jonquet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thierry Jonquet"], "entity_annotations": ["Tarantula"], "answer_entity_name": null, "predicted_answer": "heraphosidae", "extracted_entity": "Tarantula"}
{"question": "who is the author of Areopagitica?", "answer": "John Milton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Milton"], "entity_annotations": ["Areopagitica"], "answer_entity_name": null, "predicted_answer": "John Milton", "extracted_entity": "Areopagitica"}
{"question": "who is the author of Emile, or On Education?", "answer": "Jean-Jacques Rousseau", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jean-Jacques Rousseau"], "entity_annotations": ["Emile, or On Education"], "answer_entity_name": null, "predicted_answer": "Jean-Jacques Rousseau", "extracted_entity": "Emile,_or_On_Education"}
{"question": "who is the author of Avalon?", "answer": "Anya Seton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anya Seton"], "entity_annotations": ["Avalon"], "answer_entity_name": null, "predicted_answer": "Geoffrey of Monmouth", "extracted_entity": "Avalon"}
{"question": "who is the author of The Jew of Malta?", "answer": "Christopher Marlowe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Christopher Marlowe"], "entity_annotations": ["The Jew of Malta"], "answer_entity_name": null, "predicted_answer": "Christopher Marlowe", "extracted_entity": "The_Jew_of_Malta"}
{"question": "who is the author of The Crying Game?", "answer": "John Braine", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Braine"], "entity_annotations": ["The Crying Game"], "answer_entity_name": null, "predicted_answer": "Neil Jordan", "extracted_entity": "The_Crying_Game"}
{"question": "who is the author of The Prince and the Pauper?", "answer": "Mark Twain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mark Twain"], "entity_annotations": ["The Prince and the Pauper"], "answer_entity_name": null, "predicted_answer": "American author Mark Twain.", "extracted_entity": "The_Prince_and_the_Pauper"}
{"question": "who is the author of The Spanish Tragedy?", "answer": "Thomas Kyd", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Kyd"], "entity_annotations": ["The Spanish Tragedy"], "answer_entity_name": null, "predicted_answer": "Thomas Kyd", "extracted_entity": "The_Spanish_Tragedy"}
{"question": "who is the author of Last Exit to Brooklyn?", "answer": "Hubert Selby Jr.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hubert Selby Jr."], "entity_annotations": ["Last Exit to Brooklyn"], "answer_entity_name": null, "predicted_answer": "Hubert Selby Jr.", "extracted_entity": "Last_Exit_to_Brooklyn"}
{"question": "who is the author of Abide with Me?", "answer": "Clare Boothe Luce", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clare Boothe Luce"], "entity_annotations": ["Abide with Me"], "answer_entity_name": null, "predicted_answer": "Henry Francis Lyte", "extracted_entity": "Abide_with_Me"}
{"question": "who is the author of Ways of Seeing?", "answer": "John Berger", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Berger"], "entity_annotations": ["Ways of Seeing"], "answer_entity_name": null, "predicted_answer": "John Berger", "extracted_entity": "Ways_of_Seeing"}
{"question": "who is the author of She Loves Me?", "answer": "Joe Masteroff", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joe Masteroff"], "entity_annotations": ["She Loves Me"], "answer_entity_name": null, "predicted_answer": "Joe Masteroff, music by Jerry Bock,", "extracted_entity": "She_Loves_Me"}
{"question": "who is the author of Schilder-boeck?", "answer": "Karel van Mander I", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Karel van Mander I"], "entity_annotations": ["Schilder-boeck"], "answer_entity_name": null, "predicted_answer": "l van Mander", "extracted_entity": "Schilder-boeck"}
{"question": "who is the author of The Count of Monte Cristo?", "answer": "Auguste Maquet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Auguste Maquet", "Alexandre Dumas"], "entity_annotations": ["The Count of Monte Cristo"], "answer_entity_name": null, "predicted_answer": "Alexandre Dumas", "extracted_entity": "The_Count_of_Monte_Cristo"}
{"question": "who is the author of De Oratore?", "answer": "Cicero", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cicero"], "entity_annotations": ["De Oratore"], "answer_entity_name": null, "predicted_answer": "Cicero", "extracted_entity": "De_Oratore"}
{"question": "who is the author of The Twelve Chairs?", "answer": "Yevgeny Petrov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yevgeny Petrov", "Ilya Ilf"], "entity_annotations": ["The Twelve Chairs"], "answer_entity_name": null, "predicted_answer": "Ilf and Petrov", "extracted_entity": "The_Twelve_Chairs"}
{"question": "who is the author of Trump: The Art of the Deal?", "answer": "Donald Trump", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Donald Trump"], "entity_annotations": ["Trump: The Art of the Deal"], "answer_entity_name": null, "predicted_answer": "Donald J. Trump", "extracted_entity": "Trump:_The_Art_of_the_Deal"}
{"question": "who is the author of Paradise Regained?", "answer": "John Milton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Milton"], "entity_annotations": ["Paradise Regained"], "answer_entity_name": null, "predicted_answer": "John Milton", "extracted_entity": "Paradise_Regained"}
{"question": "who is the author of Desertion?", "answer": "Abdulrazak Gurnah", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Abdulrazak Gurnah"], "entity_annotations": ["Desertion"], "answer_entity_name": null, "predicted_answer": "The author of Desertion is Desertion", "extracted_entity": "Desertion"}
{"question": "who is the author of Rule of St. Augustine?", "answer": "Augustine of Hippo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Augustine of Hippo"], "entity_annotations": ["Rule of St. Augustine"], "answer_entity_name": null, "predicted_answer": "Saint Augustine", "extracted_entity": "Rule_of_St._Augustine"}
{"question": "who is the author of Zorro?", "answer": "Isabel Allende", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Isabel Allende"], "entity_annotations": ["Zorro"], "answer_entity_name": null, "predicted_answer": "hnston McCulley", "extracted_entity": "Zorro"}
{"question": "who is the author of Dream of the Red Chamber?", "answer": "Cao Xueqin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cao Xueqin"], "entity_annotations": ["Dream of the Red Chamber"], "answer_entity_name": null, "predicted_answer": "Cao Xueqin", "extracted_entity": "Dream_of_the_Red_Chamber"}
{"question": "who is the author of Frankenstein?", "answer": "Nick Dear", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nick Dear"], "entity_annotations": ["Frankenstein"], "answer_entity_name": null, "predicted_answer": "Mary Shelley", "extracted_entity": "Frankenstein"}
{"question": "who is the author of The Government Inspector?", "answer": "Nikolai Gogol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nikolai Gogol"], "entity_annotations": ["The Government Inspector"], "answer_entity_name": null, "predicted_answer": "Nikolai Gogol.", "extracted_entity": "The_Government_Inspector"}
{"question": "who is the author of Uncle Vanya?", "answer": "Anton Chekhov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anton Chekhov"], "entity_annotations": ["Uncle Vanya"], "answer_entity_name": null, "predicted_answer": "the author of Uncle Vanya is Anton Chekh", "extracted_entity": "Uncle_Vanya"}
{"question": "who is the author of The Narrative of Arthur Gordon Pym of Nantucket?", "answer": "Edgar Allan Poe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edgar Allan Poe"], "entity_annotations": ["The Narrative of Arthur Gordon Pym of Nantucket"], "answer_entity_name": null, "predicted_answer": "Edgar Allan Poe", "extracted_entity": "The_Narrative_of_Arthur_Gordon_Pym_of_Nantucket"}
{"question": "who is the author of Orange Is the New Black: My Year in a Women's Prison?", "answer": "Piper Kerman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Piper Kerman"], "entity_annotations": ["Orange Is the New Black: My Year in a Women's Prison"], "answer_entity_name": null, "predicted_answer": "Piper Kerman", "extracted_entity": "Orange_Is_the_New_Black:_My_Year_in_a_Women's_Prison"}
{"question": "who is the author of Archangel?", "answer": "Sharon Shinn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sharon Shinn"], "entity_annotations": ["Archangel"], "answer_entity_name": null, "predicted_answer": "the author of Archangel is Unknown", "extracted_entity": "Archangel"}
{"question": "who is the author of Effi Briest?", "answer": "Theodor Fontane", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Theodor Fontane"], "entity_annotations": ["Effi Briest"], "answer_entity_name": null, "predicted_answer": "Theodor Fontane", "extracted_entity": "Effi_Briest"}
{"question": "who is the author of On-Line Encyclopedia of Integer Sequences?", "answer": "Neil Sloane", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Neil Sloane"], "entity_annotations": ["On-Line Encyclopedia of Integer Sequences"], "answer_entity_name": null, "predicted_answer": "eil Sloane", "extracted_entity": "On-Line_Encyclopedia_of_Integer_Sequences"}
{"question": "who is the author of The Balcony?", "answer": "Jean Genet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jean Genet"], "entity_annotations": ["The Balcony"], "answer_entity_name": null, "predicted_answer": "Jean Genet", "extracted_entity": "The_Balcony"}
{"question": "who is the author of The Member of the Wedding?", "answer": "Carson McCullers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carson McCullers"], "entity_annotations": ["The Member of the Wedding"], "answer_entity_name": null, "predicted_answer": "Carson McCullers", "extracted_entity": "The_Member_of_the_Wedding"}
{"question": "who is the author of Black Like Me?", "answer": "John Howard Griffin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Howard Griffin"], "entity_annotations": ["Black Like Me"], "answer_entity_name": null, "predicted_answer": "John Howard Griffin", "extracted_entity": "Black_Like_Me"}
{"question": "who is the author of The Monk?", "answer": "Matthew Gregory Lewis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Matthew Gregory Lewis"], "entity_annotations": ["The Monk"], "answer_entity_name": null, "predicted_answer": "Matthew Gregory Lewis", "extracted_entity": "The_Monk"}
{"question": "who is the author of Liezi?", "answer": "Lie Yukou", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lie Yukou"], "entity_annotations": ["Liezi"], "answer_entity_name": null, "predicted_answer": "Liezi", "extracted_entity": "Liezi"}
{"question": "who is the author of The Killer Angels?", "answer": "Michael Shaara", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Shaara"], "entity_annotations": ["The Killer Angels"], "answer_entity_name": null, "predicted_answer": "Michael Shaara", "extracted_entity": "The_Killer_Angels"}
{"question": "who is the author of Gravity's Rainbow?", "answer": "Thomas Pynchon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Pynchon"], "entity_annotations": ["Gravity's Rainbow"], "answer_entity_name": null, "predicted_answer": "Thomas Pynchon", "extracted_entity": "Gravity's_Rainbow"}
{"question": "who is the author of The Eighteenth Brumaire of Louis Napoleon?", "answer": "Karl Marx", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Karl Marx"], "entity_annotations": ["The Eighteenth Brumaire of Louis Napoleon"], "answer_entity_name": null, "predicted_answer": "The author of The Eighteenth Brumaire of", "extracted_entity": "The_Eighteenth_Brumaire_of_Louis_Napoleon"}
{"question": "who is the author of The Dybbuk?", "answer": "S. Ansky", "dataset": "entity_questions", "split": "test", "answer_aliases": ["S. Ansky"], "entity_annotations": ["The Dybbuk"], "answer_entity_name": null, "predicted_answer": ". Ansky", "extracted_entity": "The_Dybbuk"}
{"question": "who is the author of Kryptonite?", "answer": "Darwyn Cooke", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Darwyn Cooke"], "entity_annotations": ["Kryptonite"], "answer_entity_name": null, "predicted_answer": "Superman", "extracted_entity": "Kryptonite"}
{"question": "who is the author of Humanist Manifesto II?", "answer": "Paul Kurtz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paul Kurtz"], "entity_annotations": ["Humanist Manifesto II"], "answer_entity_name": null, "predicted_answer": "Humanist Manifesto II is the second entry in", "extracted_entity": "Humanist_Manifesto_II"}
{"question": "who is the author of Grits?", "answer": "Niall Griffiths", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Niall Griffiths"], "entity_annotations": ["Grits"], "answer_entity_name": null, "predicted_answer": "The author of Grits is The Free Dictionary", "extracted_entity": "Grits"}
{"question": "who is the author of Aristotle?", "answer": "Dick King-Smith", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dick King-Smith"], "entity_annotations": ["Aristotle"], "answer_entity_name": null, "predicted_answer": "Aristotle", "extracted_entity": "Aristotle"}
{"question": "who is the author of Laughter?", "answer": "Henri Bergson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henri Bergson"], "entity_annotations": ["Laughter"], "answer_entity_name": null, "predicted_answer": "Laughter is written by.", "extracted_entity": "Laughter"}
{"question": "who is the author of Kalki?", "answer": "Gore Vidal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gore Vidal"], "entity_annotations": ["Kalki"], "answer_entity_name": null, "predicted_answer": "It is unknown who wrote the Kalki Pur", "extracted_entity": "Kalki"}
{"question": "who is the author of The Hardy Boys?", "answer": "Franklin W. Dixon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Franklin W. Dixon"], "entity_annotations": ["The Hardy Boys"], "answer_entity_name": null, "predicted_answer": "Edward Stratemeyer, the founder of book-pack", "extracted_entity": "The_Hardy_Boys"}
{"question": "who is the author of The Birth of Venus?", "answer": "Sarah Dunant", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sarah Dunant"], "entity_annotations": ["The Birth of Venus"], "answer_entity_name": null, "predicted_answer": "the italian artist Sandro Botticelli", "extracted_entity": "The_Birth_of_Venus"}
{"question": "who is the author of The Haunter of the Dark?", "answer": "H. P. Lovecraft", "dataset": "entity_questions", "split": "test", "answer_aliases": ["H. P. Lovecraft"], "entity_annotations": ["The Haunter of the Dark"], "answer_entity_name": null, "predicted_answer": "H. P. Lovecraft", "extracted_entity": "The_Haunter_of_the_Dark"}
{"question": "who is the author of Monadology?", "answer": "Gottfried Wilhelm Leibniz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gottfried Wilhelm Leibniz"], "entity_annotations": ["Monadology"], "answer_entity_name": null, "predicted_answer": "Gottfried Leibniz", "extracted_entity": "Monadology"}
{"question": "who is the author of The Trip to Bountiful?", "answer": "Horton Foote", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Horton Foote"], "entity_annotations": ["The Trip to Bountiful"], "answer_entity_name": null, "predicted_answer": "Geraldine Page", "extracted_entity": "The_Trip_to_Bountiful"}
{"question": "who is the author of Across the Universe?", "answer": "George Zebrowski", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Zebrowski", "Pamela Sargent"], "entity_annotations": ["Across the Universe"], "answer_entity_name": null, "predicted_answer": "The Beatles.", "extracted_entity": "Across_the_Universe"}
{"question": "who is the author of The Origins of Totalitarianism?", "answer": "Hannah Arendt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hannah Arendt"], "entity_annotations": ["The Origins of Totalitarianism"], "answer_entity_name": null, "predicted_answer": "Hannah Arendt", "extracted_entity": "The_Origins_of_Totalitarianism"}
{"question": "who is the author of The Snow Maiden?", "answer": "Alexander Ostrovsky", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexander Ostrovsky"], "entity_annotations": ["The Snow Maiden"], "answer_entity_name": null, "predicted_answer": "Nikolai Rimsky-Korsakov", "extracted_entity": "The_Snow_Maiden"}
{"question": "who is the author of Shinj\u016b?", "answer": "Laura Joh Rowland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Laura Joh Rowland"], "entity_annotations": ["Shinj\u016b"], "answer_entity_name": null, "predicted_answer": "Shinj\u016b", "extracted_entity": "Shinj\u016b"}
{"question": "who is the author of Caste?", "answer": "Thomas William Robertson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas William Robertson"], "entity_annotations": ["Caste"], "answer_entity_name": null, "predicted_answer": "Isabel Wilkerson", "extracted_entity": "Caste"}
{"question": "who is the author of Q?", "answer": "Luther Blissett", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Luther Blissett"], "entity_annotations": ["Q"], "answer_entity_name": null, "predicted_answer": "is the author of Q", "extracted_entity": "Q"}
{"question": "who is the author of Watchmen?", "answer": "Dave Gibbons", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dave Gibbons"], "entity_annotations": ["Watchmen"], "answer_entity_name": null, "predicted_answer": "Alan Moore.", "extracted_entity": "Watchmen"}
{"question": "who is the author of Lilith?", "answer": "George MacDonald", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George MacDonald"], "entity_annotations": ["Lilith"], "answer_entity_name": null, "predicted_answer": "ilith is written by Lilith", "extracted_entity": "Lilith"}
{"question": "who is the author of The Diary of a Nobody?", "answer": "Weedon Grossmith", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Weedon Grossmith"], "entity_annotations": ["The Diary of a Nobody"], "answer_entity_name": null, "predicted_answer": "George Grossmith", "extracted_entity": "The_Diary_of_a_Nobody"}
{"question": "who is the author of The Shock Doctrine?", "answer": "Naomi Klein", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Naomi Klein"], "entity_annotations": ["The Shock Doctrine"], "answer_entity_name": null, "predicted_answer": "The Shock Doctrine was written by Naomi Klein.", "extracted_entity": "The_Shock_Doctrine"}
{"question": "who is the author of Titus Andronicus?", "answer": "William Shakespeare", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Shakespeare"], "entity_annotations": ["Titus Andronicus"], "answer_entity_name": null, "predicted_answer": "William Shakespeare", "extracted_entity": "Titus_Andronicus"}
{"question": "who is the author of Gospel of Luke?", "answer": "Luke the Evangelist", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Luke the Evangelist"], "entity_annotations": ["Gospel of Luke"], "answer_entity_name": null, "predicted_answer": "The author is anonymous; the traditional view that Luke", "extracted_entity": "Gospel_of_Luke"}
{"question": "who is the author of The Minstrelsy of the Scottish Border?", "answer": "Walter Scott", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Walter Scott"], "entity_annotations": ["The Minstrelsy of the Scottish Border"], "answer_entity_name": null, "predicted_answer": "Walter Scott", "extracted_entity": "The_Minstrelsy_of_the_Scottish_Border"}
{"question": "who is the author of The Legend of Sleepy Hollow?", "answer": "Washington Irving", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Washington Irving"], "entity_annotations": ["The Legend of Sleepy Hollow"], "answer_entity_name": null, "predicted_answer": "Washington Irving", "extracted_entity": "The_Legend_of_Sleepy_Hollow"}
{"question": "who is the author of Experience?", "answer": "Martin Amis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Martin Amis"], "entity_annotations": ["Experience"], "answer_entity_name": null, "predicted_answer": "the author of Experience is Experience", "extracted_entity": "Experience"}
{"question": "who is the author of Gay Comix?", "answer": "Howard Cruse", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Howard Cruse"], "entity_annotations": ["Gay Comix"], "answer_entity_name": null, "predicted_answer": "Gay Comix", "extracted_entity": "Gay_Comix"}
{"question": "who is the author of Agnes of God?", "answer": "John Pielmeier", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Pielmeier"], "entity_annotations": ["Agnes of God"], "answer_entity_name": null, "predicted_answer": "John Pielmeier", "extracted_entity": "Agnes_of_God"}
{"question": "who is the author of Applause?", "answer": "Adolph Green", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Adolph Green", "Betty Comden"], "entity_annotations": ["Applause"], "answer_entity_name": null, "predicted_answer": "Applause is written by the author.", "extracted_entity": "Applause"}
{"question": "who is the author of The Tempest?", "answer": "William Shakespeare", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Shakespeare"], "entity_annotations": ["The Tempest"], "answer_entity_name": null, "predicted_answer": "William Shakespeare", "extracted_entity": "The_Tempest"}
{"question": "who is the author of Mishnah Berurah?", "answer": "Yisrael Meir Kagan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yisrael Meir Kagan"], "entity_annotations": ["Mishnah Berurah"], "answer_entity_name": null, "predicted_answer": "Rabbi Yisrael Meir Kagan", "extracted_entity": "Mishnah_Berurah"}
{"question": "who is the author of Youth?", "answer": "Leo Tolstoy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leo Tolstoy"], "entity_annotations": ["Youth"], "answer_entity_name": null, "predicted_answer": "The author of Youth is unknown.", "extracted_entity": "Youth"}
{"question": "who is the author of The Hollow Men?", "answer": "Nicky Hager", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nicky Hager"], "entity_annotations": ["The Hollow Men"], "answer_entity_name": null, "predicted_answer": "T.S. Eliot", "extracted_entity": "The_Hollow_Men"}
{"question": "who is the author of Fantastic Voyage?", "answer": "Isaac Asimov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Isaac Asimov"], "entity_annotations": ["Fantastic Voyage"], "answer_entity_name": null, "predicted_answer": "Richard Fleischer.", "extracted_entity": "Fantastic_Voyage"}
{"question": "who is the author of The Dark Is Rising Sequence?", "answer": "Susan Cooper", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Susan Cooper"], "entity_annotations": ["The Dark Is Rising Sequence"], "answer_entity_name": null, "predicted_answer": "The Dark Is Rising Sequence is written by Susan Cooper", "extracted_entity": "The_Dark_Is_Rising_Sequence"}
{"question": "who is the author of Anti-D\u00fchring?", "answer": "Friedrich Engels", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Friedrich Engels"], "entity_annotations": ["Anti-D\u00fchring"], "answer_entity_name": null, "predicted_answer": "Friedrich Engels", "extracted_entity": "Anti-D\u00fchring"}
{"question": "who is the author of Casey Jones?", "answer": "Robert Ardrey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robert Ardrey"], "entity_annotations": ["Casey Jones"], "answer_entity_name": null, "predicted_answer": "John Luther \"Casey\" Jones (March", "extracted_entity": "Casey_Jones"}
{"question": "who is the author of Virginia?", "answer": "Ellen Glasgow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ellen Glasgow"], "entity_annotations": ["Virginia"], "answer_entity_name": null, "predicted_answer": "Virginia is the author of Virginia", "extracted_entity": "Virginia"}
{"question": "who is the author of London?", "answer": "Samuel Johnson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Samuel Johnson"], "entity_annotations": ["London"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "London"}
{"question": "who is the author of Queen Camilla?", "answer": "Sue Townsend", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sue Townsend"], "entity_annotations": ["Queen Camilla"], "answer_entity_name": null, "predicted_answer": "Camilla Rosemary Shand", "extracted_entity": "Queen_Camilla"}
{"question": "who is the author of Disquisitiones Arithmeticae?", "answer": "Carl Friedrich Gauss", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carl Friedrich Gauss"], "entity_annotations": ["Disquisitiones Arithmeticae"], "answer_entity_name": null, "predicted_answer": "Carl Friedrich Gauss", "extracted_entity": "Disquisitiones_Arithmeticae"}
{"question": "who is the author of Home?", "answer": "David Storey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Storey"], "entity_annotations": ["Home"], "answer_entity_name": null, "predicted_answer": "Home is written by Wikipedia.", "extracted_entity": "Home"}
{"question": "who is the author of Mass?", "answer": "Leonard Bernstein", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leonard Bernstein"], "entity_annotations": ["Mass"], "answer_entity_name": null, "predicted_answer": "The author of Mass is Wikipedia.", "extracted_entity": "Mass"}
{"question": "who is the author of Catalogue of Women?", "answer": "Hesiod", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hesiod"], "entity_annotations": ["Catalogue of Women"], "answer_entity_name": null, "predicted_answer": "the author of Catalogue of Women is Hes", "extracted_entity": "Catalogue_of_Women"}
{"question": "who is the author of Firestorm?", "answer": "David Sherman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Sherman", "Dan Cragg"], "entity_annotations": ["Firestorm"], "answer_entity_name": null, "predicted_answer": "Unknown", "extracted_entity": "Firestorm"}
{"question": "who is the author of Eclipse?", "answer": "John Banville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Banville"], "entity_annotations": ["Eclipse"], "answer_entity_name": null, "predicted_answer": "The author of Eclipse is unknown.", "extracted_entity": "Eclipse"}
{"question": "who is the author of The 39 Clues?", "answer": "Patrick Carman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Patrick Carman", "Linda Sue Park", "Roland Smith", "Rick Riordan", "Margaret Peterson Haddix", "Gordon Korman", "Jude Watson", "David Baldacci", "Peter Lerangis"], "entity_annotations": ["The 39 Clues"], "answer_entity_name": null, "predicted_answer": "Rick Riordan, Gordon Korman, Peter Ler", "extracted_entity": "The_39_Clues"}
{"question": "who is the author of Pauline epistles?", "answer": "Paul", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paul"], "entity_annotations": ["Pauline epistles"], "answer_entity_name": null, "predicted_answer": "Pauline epistles is written by Pauline ep", "extracted_entity": "Pauline_epistles"}
{"question": "who is the author of Some Like It Hot?", "answer": "Zoey Dean", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zoey Dean"], "entity_annotations": ["Some Like It Hot"], "answer_entity_name": null, "predicted_answer": "Billy Wilder.", "extracted_entity": "Some_Like_It_Hot"}
{"question": "who is the author of Sahara?", "answer": "Clive Cussler", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clive Cussler"], "entity_annotations": ["Sahara"], "answer_entity_name": null, "predicted_answer": "e author is not specified in this text.", "extracted_entity": "Sahara"}
{"question": "who is the author of Quarantine?", "answer": "Jim Crace", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jim Crace"], "entity_annotations": ["Quarantine"], "answer_entity_name": null, "predicted_answer": "Quarantine is written by Merriam-Web", "extracted_entity": "Quarantine"}
{"question": "who is the author of Inheritance?", "answer": "Christopher Paolini", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Christopher Paolini"], "entity_annotations": ["Inheritance"], "answer_entity_name": null, "predicted_answer": "Inheritance is the practice of receiving private property,", "extracted_entity": "Inheritance"}
{"question": "who is the author of Mandalay?", "answer": "Rudyard Kipling", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rudyard Kipling"], "entity_annotations": ["Mandalay"], "answer_entity_name": null, "predicted_answer": "Rudyard Kipling", "extracted_entity": "Mandalay"}
{"question": "who is the author of Grey Gardens?", "answer": "Doug Wright", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Doug Wright"], "entity_annotations": ["Grey Gardens"], "answer_entity_name": null, "predicted_answer": "Albert and David Maysles.", "extracted_entity": "Grey_Gardens"}
{"question": "who is the author of The Golden Ass?", "answer": "Apuleius", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Apuleius"], "entity_annotations": ["The Golden Ass"], "answer_entity_name": null, "predicted_answer": "Apuleius", "extracted_entity": "The_Golden_Ass"}
{"question": "who is the author of All Tomorrow's Parties?", "answer": "William Gibson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Gibson"], "entity_annotations": ["All Tomorrow's Parties"], "answer_entity_name": null, "predicted_answer": "Lou Reed.", "extracted_entity": "All_Tomorrow's_Parties"}
{"question": "who is the author of The Rescuers?", "answer": "Margery Sharp", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Margery Sharp"], "entity_annotations": ["The Rescuers"], "answer_entity_name": null, "predicted_answer": "Walt Disney Productions", "extracted_entity": "The_Rescuers"}
{"question": "who is the author of Boy?", "answer": "Roald Dahl", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Roald Dahl"], "entity_annotations": ["Boy"], "answer_entity_name": null, "predicted_answer": "The author of Boy is. Answer:.", "extracted_entity": "Boy"}
{"question": "who is the author of Champion?", "answer": "Marie Lu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Marie Lu"], "entity_annotations": ["Champion"], "answer_entity_name": null, "predicted_answer": "Champion is written by Wikipedia", "extracted_entity": "Champion"}
{"question": "who is the author of The Two Noble Kinsmen?", "answer": "William Shakespeare", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Shakespeare"], "entity_annotations": ["The Two Noble Kinsmen"], "answer_entity_name": null, "predicted_answer": "John Fletcher and William Shakespeare", "extracted_entity": "The_Two_Noble_Kinsmen"}
{"question": "who is the author of Four Freedoms?", "answer": "John Crowley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Crowley"], "entity_annotations": ["Four Freedoms"], "answer_entity_name": null, "predicted_answer": "Franklin D. Roosevelt", "extracted_entity": "Four_Freedoms"}
{"question": "who is the author of Gotham Central?", "answer": "Ed Brubaker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ed Brubaker"], "entity_annotations": ["Gotham Central"], "answer_entity_name": null, "predicted_answer": "Ed Brubaker and Greg Rucka", "extracted_entity": "Gotham_Central"}
{"question": "who is the author of Cauldron?", "answer": "Larry Bond", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Larry Bond"], "entity_annotations": ["Cauldron"], "answer_entity_name": null, "predicted_answer": "The author of Cauldron is", "extracted_entity": "Cauldron"}
{"question": "who is the author of Lord?", "answer": "Buronson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Buronson"], "entity_annotations": ["Lord"], "answer_entity_name": null, "predicted_answer": "the author of Lord is unknown", "extracted_entity": "Lord"}
{"question": "where was Rena Matsui born?", "answer": "Toyohashi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toyohashi"], "entity_annotations": ["Rena Matsui"], "answer_entity_name": null, "predicted_answer": "Toyohashi, Aichi Prefecture", "extracted_entity": "Rena_Matsui"}
{"question": "where was Lory Meagher born?", "answer": "Tullaroan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tullaroan"], "entity_annotations": ["Lory Meagher"], "answer_entity_name": null, "predicted_answer": "Tullaroan, County Kilkenny", "extracted_entity": "Lory_Meagher"}
{"question": "where was Leslie Ash born?", "answer": "Clapham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clapham"], "entity_annotations": ["Leslie Ash"], "answer_entity_name": null, "predicted_answer": "Henley-on-Thames, Oxfordshire", "extracted_entity": "Leslie_Ash"}
{"question": "where was Grimes born?", "answer": "Vancouver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vancouver"], "entity_annotations": ["Grimes"], "answer_entity_name": null, "predicted_answer": "Vancouver, British Columbia, Canada", "extracted_entity": "Grimes"}
{"question": "where was Florian Zeller born?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Florian Zeller"], "answer_entity_name": null, "predicted_answer": "France", "extracted_entity": "Florian_Zeller"}
{"question": "where was Carlos Hugo, Duke of Parma born?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Carlos Hugo, Duke of Parma"], "answer_entity_name": null, "predicted_answer": "Carlos Hugo, Duke of Parma was born in", "extracted_entity": "Carlos_Hugo,_Duke_of_Parma"}
{"question": "where was Willem Marinus Dudok born?", "answer": "Amsterdam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amsterdam"], "entity_annotations": ["Willem Marinus Dudok"], "answer_entity_name": null, "predicted_answer": "Amsterdam", "extracted_entity": "Willem_Marinus_Dudok"}
{"question": "where was Jomo Kenyatta born?", "answer": "Gatundu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gatundu"], "entity_annotations": ["Jomo Kenyatta"], "answer_entity_name": null, "predicted_answer": "Kiambu, British East Africa.", "extracted_entity": "Jomo_Kenyatta"}
{"question": "where was Bicci di Lorenzo born?", "answer": "Florence", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florence"], "entity_annotations": ["Bicci di Lorenzo"], "answer_entity_name": null, "predicted_answer": "Florence", "extracted_entity": "Bicci_di_Lorenzo"}
{"question": "where was Robert Ballard born?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Robert Ballard"], "answer_entity_name": null, "predicted_answer": "Robert Ballard was born in Wichita, Kansas.", "extracted_entity": "Robert_Ballard"}
{"question": "where was Gregory Thaumaturgus born?", "answer": "Niksar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Niksar"], "entity_annotations": ["Gregory Thaumaturgus"], "answer_entity_name": null, "predicted_answer": "Gregory Thaumaturgus was born in", "extracted_entity": "Gregory_Thaumaturgus"}
{"question": "where was George Foreman born?", "answer": "Marshall", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Marshall"], "entity_annotations": ["George Foreman"], "answer_entity_name": null, "predicted_answer": "George Foreman was born in Texas.", "extracted_entity": "George_Foreman"}
{"question": "where was Jimmy Hill born?", "answer": "Dallas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dallas"], "entity_annotations": ["Jimmy Hill"], "answer_entity_name": null, "predicted_answer": "Balham, London", "extracted_entity": "Jimmy_Hill"}
{"question": "where was Augustin-Louis Cauchy born?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Augustin-Louis Cauchy"], "answer_entity_name": null, "predicted_answer": "aris, France", "extracted_entity": "Augustin-Louis_Cauchy"}
{"question": "where was Frank Rijkaard born?", "answer": "Amsterdam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amsterdam"], "entity_annotations": ["Frank Rijkaard"], "answer_entity_name": null, "predicted_answer": "Amsterdam", "extracted_entity": "Frank_Rijkaard"}
{"question": "where was Lady Pink born?", "answer": "Ambato", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ambato"], "entity_annotations": ["Lady Pink"], "answer_entity_name": null, "predicted_answer": "Ecuador", "extracted_entity": "Lady_Pink"}
{"question": "where was Karl Brandt born?", "answer": "Magdeburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Magdeburg"], "entity_annotations": ["Karl Brandt"], "answer_entity_name": null, "predicted_answer": "Mulhouse in the then German Alsace-Lorraine", "extracted_entity": "Karl_Brandt"}
{"question": "where was Mahavira born?", "answer": "Vaishali", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vaishali"], "entity_annotations": ["Mahavira"], "answer_entity_name": null, "predicted_answer": "He was born in Kundagrama, a village", "extracted_entity": "Mahavira"}
{"question": "where was Mir Babar Ali Anis born?", "answer": "Faizabad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Faizabad"], "entity_annotations": ["Mir Babar Ali Anis"], "answer_entity_name": null, "predicted_answer": "Mir Babar Ali Anis was born in", "extracted_entity": "Mir_Babar_Ali_Anis"}
{"question": "where was Andrea Sacchi born?", "answer": "Rome", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rome"], "entity_annotations": ["Andrea Sacchi"], "answer_entity_name": null, "predicted_answer": "Nettuno RM", "extracted_entity": "Andrea_Sacchi"}
{"question": "where was Sajid Khan born?", "answer": "Mumbai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mumbai"], "entity_annotations": ["Sajid Khan"], "answer_entity_name": null, "predicted_answer": "in the Bombay slums", "extracted_entity": "Sajid_Khan"}
{"question": "where was He Jiong born?", "answer": "Changsha", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Changsha"], "entity_annotations": ["He Jiong"], "answer_entity_name": null, "predicted_answer": "Yuhua District, Changsha, Hunan", "extracted_entity": "He_Jiong"}
{"question": "where was Victor Sen Yung born?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["Victor Sen Yung"], "answer_entity_name": null, "predicted_answer": "San Francisco, California", "extracted_entity": "Victor_Sen_Yung"}
{"question": "where was John Belushi born?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["John Belushi"], "answer_entity_name": null, "predicted_answer": "Chicago", "extracted_entity": "John_Belushi"}
{"question": "where was Leopold V, Archduke of Austria born?", "answer": "Graz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Graz"], "entity_annotations": ["Leopold V, Archduke of Austria"], "answer_entity_name": null, "predicted_answer": "Graz", "extracted_entity": "Leopold_V,_Archduke_of_Austria"}
{"question": "where was Alina P\u00e4tz born?", "answer": "Urdorf", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Urdorf"], "entity_annotations": ["Alina P\u00e4tz"], "answer_entity_name": null, "predicted_answer": "Switzerland.", "extracted_entity": "Alina_P\u00e4tz"}
{"question": "where was Vladimir Stasov born?", "answer": "Saint Petersburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint Petersburg"], "entity_annotations": ["Vladimir Stasov"], "answer_entity_name": null, "predicted_answer": "Saint Petersburg", "extracted_entity": "Vladimir_Stasov"}
{"question": "where was Pom Klementieff born?", "answer": "Quebec City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Quebec City"], "entity_annotations": ["Pom Klementieff"], "answer_entity_name": null, "predicted_answer": "Quebec City, Quebec, Canada", "extracted_entity": "Pom_Klementieff"}
{"question": "where was Joe Ferguson born?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["Joe Ferguson"], "answer_entity_name": null, "predicted_answer": "Joe Ferguson was born in", "extracted_entity": "Joe_Ferguson"}
{"question": "where was Ferrante Gonzaga born?", "answer": "Mantua", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mantua"], "entity_annotations": ["Ferrante Gonzaga"], "answer_entity_name": null, "predicted_answer": "Mantua", "extracted_entity": "Ferrante_Gonzaga"}
{"question": "where was George Cruikshank born?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["George Cruikshank"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "George_Cruikshank"}
{"question": "where was Baba Amte born?", "answer": "Hinganghat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hinganghat"], "entity_annotations": ["Baba Amte"], "answer_entity_name": null, "predicted_answer": "Baba Amte was born in an affluent Desh", "extracted_entity": "Baba_Amte"}
{"question": "where was Oleh Blokhin born?", "answer": "Kyiv", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kyiv"], "entity_annotations": ["Oleh Blokhin"], "answer_entity_name": null, "predicted_answer": "Kyiv, the capital of the Ukrainian SSR,", "extracted_entity": "Oleh_Blokhin"}
{"question": "where was Pietro Germi born?", "answer": "Genoa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Genoa"], "entity_annotations": ["Pietro Germi"], "answer_entity_name": null, "predicted_answer": "Genoa, Italy", "extracted_entity": "Pietro_Germi"}
{"question": "where was Tommy Thompson born?", "answer": "Hutchinson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hutchinson"], "entity_annotations": ["Tommy Thompson"], "answer_entity_name": null, "predicted_answer": "Elroy, Wisconsin", "extracted_entity": "Tommy_Thompson"}
{"question": "where was Sandro Botticelli born?", "answer": "Florence", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florence"], "entity_annotations": ["Sandro Botticelli"], "answer_entity_name": null, "predicted_answer": "Florence", "extracted_entity": "Sandro_Botticelli"}
{"question": "where was Nicky Rackard born?", "answer": "Killanne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Killanne"], "entity_annotations": ["Nicky Rackard"], "answer_entity_name": null, "predicted_answer": "Killane, County Wexford", "extracted_entity": "Nicky_Rackard"}
{"question": "where was Richard Semon born?", "answer": "Berlin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Berlin"], "entity_annotations": ["Richard Semon"], "answer_entity_name": null, "predicted_answer": "Berlin", "extracted_entity": "Richard_Semon"}
{"question": "where was Andy Kindler born?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Andy Kindler"], "answer_entity_name": null, "predicted_answer": "Andy Kindler was born in Queens, New York", "extracted_entity": "Andy_Kindler"}
{"question": "where was Peter J\u00f6back born?", "answer": "Stockholm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stockholm"], "entity_annotations": ["Peter J\u00f6back"], "answer_entity_name": null, "predicted_answer": "Peter J\u00f6back was born in Stockholm, Sweden", "extracted_entity": "Peter_J\u00f6back"}
{"question": "where was Gordon Gollob born?", "answer": "Vienna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vienna"], "entity_annotations": ["Gordon Gollob"], "answer_entity_name": null, "predicted_answer": "Austria", "extracted_entity": "Gordon_Gollob"}
{"question": "where was Dmitri Dashinski born?", "answer": "Minsk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Minsk"], "entity_annotations": ["Dmitri Dashinski"], "answer_entity_name": null, "predicted_answer": "Minsk", "extracted_entity": "Dmitri_Dashinski"}
{"question": "where was Otumfuo Nana Osei Tutu II born?", "answer": "Kumasi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kumasi"], "entity_annotations": ["Otumfuo Nana Osei Tutu II"], "answer_entity_name": null, "predicted_answer": "6 May 1950", "extracted_entity": "Otumfuo_Nana_Osei_Tutu_II"}
{"question": "where was M. S. Sathyu born?", "answer": "Mysore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mysore"], "entity_annotations": ["M. S. Sathyu"], "answer_entity_name": null, "predicted_answer": "M. S. Sathyu was born in", "extracted_entity": "M._S._Sathyu"}
{"question": "where was M\u00e1ximo Gonz\u00e1lez born?", "answer": "Tandil", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tandil"], "entity_annotations": ["M\u00e1ximo Gonz\u00e1lez"], "answer_entity_name": null, "predicted_answer": "Tandil, Argentina.", "extracted_entity": "M\u00e1ximo_Gonz\u00e1lez"}
{"question": "where was Rob Mounsey born?", "answer": "Berea", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Berea"], "entity_annotations": ["Rob Mounsey"], "answer_entity_name": null, "predicted_answer": "Rob Mounsey was born in Berea,", "extracted_entity": "Rob_Mounsey"}
{"question": "where was Chris Waters born?", "answer": "Lakeland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lakeland"], "entity_annotations": ["Chris Waters"], "answer_entity_name": null, "predicted_answer": "Texas", "extracted_entity": "Chris_Waters"}
{"question": "where was Jordan Hoffman born?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Jordan Hoffman"], "answer_entity_name": null, "predicted_answer": "Jordan Hoffman was born in New York.", "extracted_entity": "Jordan_Hoffman"}
{"question": "where was James Iha born?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["James Iha"], "answer_entity_name": null, "predicted_answer": "James Iha was born in Chicago, Illinois.", "extracted_entity": "James_Iha"}
{"question": "where was Jhen\u00e9 Aiko born?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Jhen\u00e9 Aiko"], "answer_entity_name": null, "predicted_answer": "Jhen\u00e9 Aiko was born in Los Angeles", "extracted_entity": "Jhen\u00e9_Aiko"}
{"question": "where was Ibn Hawqal born?", "answer": "Baghdad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Baghdad"], "entity_annotations": ["Ibn Hawqal"], "answer_entity_name": null, "predicted_answer": "Nisibis, Upper Mesopotamia", "extracted_entity": "Ibn_Hawqal"}
{"question": "where was Kreesha Turner born?", "answer": "Edmonton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edmonton"], "entity_annotations": ["Kreesha Turner"], "answer_entity_name": null, "predicted_answer": "Edmonton, Alberta, Canada", "extracted_entity": "Kreesha_Turner"}
{"question": "where was Marcia Ball born?", "answer": "Orange", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Orange"], "entity_annotations": ["Marcia Ball"], "answer_entity_name": null, "predicted_answer": "Orange, Texas, United States", "extracted_entity": "Marcia_Ball"}
{"question": "where was William Billings born?", "answer": "Boston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Boston"], "entity_annotations": ["William Billings"], "answer_entity_name": null, "predicted_answer": "Boston, Province of Massachusetts Bay", "extracted_entity": "William_Billings"}
{"question": "where was Ivan Vazov born?", "answer": "Sopot, Plovdiv Province", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sopot, Plovdiv Province"], "entity_annotations": ["Ivan Vazov"], "answer_entity_name": null, "predicted_answer": "Sopot", "extracted_entity": "Ivan_Vazov"}
{"question": "where was Adam Smith born?", "answer": "Kirkcaldy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kirkcaldy"], "entity_annotations": ["Adam Smith"], "answer_entity_name": null, "predicted_answer": "Kirkcaldy, Scotland", "extracted_entity": "Adam_Smith"}
{"question": "where was Juan Laporte born?", "answer": "Guayama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guayama"], "entity_annotations": ["Juan Laporte"], "answer_entity_name": null, "predicted_answer": "Juan Laporte was born in Guayama,", "extracted_entity": "Juan_Laporte"}
{"question": "where was Robert Zubrin born?", "answer": "Lakewood", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lakewood"], "entity_annotations": ["Robert Zubrin"], "answer_entity_name": null, "predicted_answer": "New York City's Brooklyn borough", "extracted_entity": "Robert_Zubrin"}
{"question": "where was Ian Sinclair born?", "answer": "Rangiora", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rangiora"], "entity_annotations": ["Ian Sinclair"], "answer_entity_name": null, "predicted_answer": "Sydney", "extracted_entity": "Ian_Sinclair"}
{"question": "where was Tommy Roe born?", "answer": "Atlanta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlanta"], "entity_annotations": ["Tommy Roe"], "answer_entity_name": null, "predicted_answer": "Atlanta, Georgia", "extracted_entity": "Tommy_Roe"}
{"question": "where was James Bradley born?", "answer": "Pleasley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pleasley"], "entity_annotations": ["James Bradley"], "answer_entity_name": null, "predicted_answer": "Sherborne, near Cheltenham in Glouce", "extracted_entity": "James_Bradley"}
{"question": "where was Alan Price born?", "answer": "Fatfield", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fatfield"], "entity_annotations": ["Alan Price"], "answer_entity_name": null, "predicted_answer": "Alan Price was born in Fatfield, Washington,", "extracted_entity": "Alan_Price"}
{"question": "where was John Coleridge, 1st Baron Coleridge born?", "answer": "Ottery St Mary", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ottery St Mary"], "entity_annotations": ["John Coleridge, 1st Baron Coleridge"], "answer_entity_name": null, "predicted_answer": "he was born in Ottery St Mary, Devon", "extracted_entity": "John_Coleridge,_1st_Baron_Coleridge"}
{"question": "where was Tontowi Ahmad born?", "answer": "Indonesia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Indonesia"], "entity_annotations": ["Tontowi Ahmad"], "answer_entity_name": null, "predicted_answer": "Indonesia", "extracted_entity": "Tontowi_Ahmad"}
{"question": "where was Giovanni Andrea Doria born?", "answer": "Genoa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Genoa"], "entity_annotations": ["Giovanni Andrea Doria"], "answer_entity_name": null, "predicted_answer": "he was born in Genoa", "extracted_entity": "Giovanni_Andrea_Doria"}
{"question": "where was Annie Finch born?", "answer": "New Rochelle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Rochelle"], "entity_annotations": ["Annie Finch"], "answer_entity_name": null, "predicted_answer": "Annie Finch was born in New Rochelle, New", "extracted_entity": "Annie_Finch"}
{"question": "where was Sean Burke born?", "answer": "Windsor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Windsor"], "entity_annotations": ["Sean Burke"], "answer_entity_name": null, "predicted_answer": "Windsor, Ontario", "extracted_entity": "Sean_Burke"}
{"question": "where was Peter O'Donnell born?", "answer": "Dallas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dallas"], "entity_annotations": ["Peter O'Donnell"], "answer_entity_name": null, "predicted_answer": "Lewisham, London.", "extracted_entity": "Peter_O'Donnell"}
{"question": "where was Constantinos Charalambidis born?", "answer": "Nicosia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nicosia"], "entity_annotations": ["Constantinos Charalambidis"], "answer_entity_name": null, "predicted_answer": "Cyprus", "extracted_entity": "Constantinos_Charalambidis"}
{"question": "where was Friedrich Hayek born?", "answer": "Vienna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vienna"], "entity_annotations": ["Friedrich Hayek"], "answer_entity_name": null, "predicted_answer": "Friedrich Hayek was born in Vienna, Austria.", "extracted_entity": "Friedrich_Hayek"}
{"question": "where was Kerry Joseph born?", "answer": "New Iberia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Iberia"], "entity_annotations": ["Kerry Joseph"], "answer_entity_name": null, "predicted_answer": "New Iberia, Louisiana", "extracted_entity": "Kerry_Joseph"}
{"question": "where was Panagiotis Kanellopoulos born?", "answer": "Patras", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Patras"], "entity_annotations": ["Panagiotis Kanellopoulos"], "answer_entity_name": null, "predicted_answer": "Patras, Achaea", "extracted_entity": "Panagiotis_Kanellopoulos"}
{"question": "where was Edward Henty born?", "answer": "Tarring", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tarring"], "entity_annotations": ["Edward Henty"], "answer_entity_name": null, "predicted_answer": "Tarring, West Sussex, England", "extracted_entity": "Edward_Henty"}
{"question": "where was Sunil Kumar Desai born?", "answer": "Bijapur", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bijapur"], "entity_annotations": ["Sunil Kumar Desai"], "answer_entity_name": null, "predicted_answer": "Sunil Kumar Desai was born in 195", "extracted_entity": "Sunil_Kumar_Desai"}
{"question": "where was James Gunn born?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["James Gunn"], "answer_entity_name": null, "predicted_answer": "St. Louis, Missouri", "extracted_entity": "James_Gunn"}
{"question": "where was John Garstang born?", "answer": "Blackburn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Blackburn"], "entity_annotations": ["John Garstang"], "answer_entity_name": null, "predicted_answer": "Blackburn", "extracted_entity": "John_Garstang"}
{"question": "where was Ernst Hartert born?", "answer": "Hamburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hamburg"], "entity_annotations": ["Ernst Hartert"], "answer_entity_name": null, "predicted_answer": "Ernst Hartert was born in the Free and", "extracted_entity": "Ernst_Hartert"}
{"question": "where was Jean Giraudoux born?", "answer": "Bellac", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bellac"], "entity_annotations": ["Jean Giraudoux"], "answer_entity_name": null, "predicted_answer": "Bellac, Haute-Vienne", "extracted_entity": "Jean_Giraudoux"}
{"question": "where was Robert Emmet born?", "answer": "Dublin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dublin"], "entity_annotations": ["Robert Emmet"], "answer_entity_name": null, "predicted_answer": "in Dublin", "extracted_entity": "Robert_Emmet"}
{"question": "where was Joseph Marcell born?", "answer": "Saint Lucia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint Lucia"], "entity_annotations": ["Joseph Marcell"], "answer_entity_name": null, "predicted_answer": "Saint Lucia", "extracted_entity": "Joseph_Marcell"}
{"question": "where was Stewart Home born?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Stewart Home"], "answer_entity_name": null, "predicted_answer": "South London", "extracted_entity": "Stewart_Home"}
{"question": "where was Memphis Bleek born?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Memphis Bleek"], "answer_entity_name": null, "predicted_answer": "June 23, 1978", "extracted_entity": "Memphis_Bleek"}
{"question": "where was Edoardo Mortara born?", "answer": "Geneva", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Geneva"], "entity_annotations": ["Edoardo Mortara"], "answer_entity_name": null, "predicted_answer": "Edoardo Mortara was born in Geneva,", "extracted_entity": "Edoardo_Mortara"}
{"question": "where was Jason Beghe born?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Jason Beghe"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "Jason_Beghe"}
{"question": "where was Luis Le\u00f3n S\u00e1nchez born?", "answer": "Mula", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mula"], "entity_annotations": ["Luis Le\u00f3n S\u00e1nchez"], "answer_entity_name": null, "predicted_answer": "Luis Le\u00f3n S\u00e1nchez was born in Mula", "extracted_entity": "Luis_Le\u00f3n_S\u00e1nchez"}
{"question": "where was Nolan Henke born?", "answer": "Battle Creek", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Battle Creek"], "entity_annotations": ["Nolan Henke"], "answer_entity_name": null, "predicted_answer": "Nolan Henke was born in Battle Creek, Michigan", "extracted_entity": "Nolan_Henke"}
{"question": "where was James Clarence Mangan born?", "answer": "Dublin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dublin"], "entity_annotations": ["James Clarence Mangan"], "answer_entity_name": null, "predicted_answer": "Dublin", "extracted_entity": "James_Clarence_Mangan"}
{"question": "where was Warren Cann born?", "answer": "Victoria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Victoria"], "entity_annotations": ["Warren Cann"], "answer_entity_name": null, "predicted_answer": "Victoria, British Columbia, Canada", "extracted_entity": "Warren_Cann"}
{"question": "where was John Paddy Carstairs born?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["John Paddy Carstairs"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "John_Paddy_Carstairs"}
{"question": "where was Thomas Hardy born?", "answer": "Larbert", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Larbert"], "entity_annotations": ["Thomas Hardy"], "answer_entity_name": null, "predicted_answer": "Higher Bockhampton (then Upper Bock", "extracted_entity": "Thomas_Hardy"}
{"question": "where was Wolfe Tone born?", "answer": "Dublin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dublin"], "entity_annotations": ["Wolfe Tone"], "answer_entity_name": null, "predicted_answer": "Dublin", "extracted_entity": "Wolfe_Tone"}
{"question": "who performed Friends?", "answer": "Chick Corea", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chick Corea"], "entity_annotations": ["Friends"], "answer_entity_name": null, "predicted_answer": "Friends", "extracted_entity": "Friends"}
{"question": "who performed Disco?", "answer": "Pet Shop Boys", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pet Shop Boys"], "entity_annotations": ["Disco"], "answer_entity_name": null, "predicted_answer": "The Bee Gees, ABBA, Donna Summer", "extracted_entity": "Disco"}
{"question": "who performed Rain?", "answer": "Breaking Benjamin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Breaking Benjamin"], "entity_annotations": ["Rain"], "answer_entity_name": null, "predicted_answer": "ain", "extracted_entity": "Rain"}
{"question": "who performed Pachuco?", "answer": "Kumbia Kings", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kumbia Kings"], "entity_annotations": ["Pachuco"], "answer_entity_name": null, "predicted_answer": "he pachucos were young men who were", "extracted_entity": "Pachuco"}
{"question": "who performed Shootout?", "answer": "The Mother Hips", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Mother Hips"], "entity_annotations": ["Shootout"], "answer_entity_name": null, "predicted_answer": "A shootout, also called a firefight, gunfight", "extracted_entity": "Shootout"}
{"question": "who performed Ska-P?", "answer": "Ska-P", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ska-P"], "entity_annotations": ["Ska-P"], "answer_entity_name": null, "predicted_answer": "Ska-P", "extracted_entity": "Ska-P"}
{"question": "who performed Destroyer?", "answer": "The Kinks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Kinks"], "entity_annotations": ["Destroyer"], "answer_entity_name": null, "predicted_answer": "Destroyer was performed by Destroyer.", "extracted_entity": "Destroyer"}
{"question": "who performed California Gurls?", "answer": "Snoop Dogg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Snoop Dogg", "Katy Perry"], "entity_annotations": ["California Gurls"], "answer_entity_name": null, "predicted_answer": "Katy Perry", "extracted_entity": "California_Gurls"}
{"question": "who performed Daniel Ash?", "answer": "Daniel Ash", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daniel Ash"], "entity_annotations": ["Daniel Ash"], "answer_entity_name": null, "predicted_answer": "Daniel Ash", "extracted_entity": "Daniel_Ash"}
{"question": "who performed Angst?", "answer": "KMFDM", "dataset": "entity_questions", "split": "test", "answer_aliases": ["KMFDM"], "entity_annotations": ["Angst"], "answer_entity_name": null, "predicted_answer": "st was performed by Angst", "extracted_entity": "Angst"}
{"question": "who performed Live Peace in Toronto 1969?", "answer": "Plastic Ono Band", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Plastic Ono Band"], "entity_annotations": ["Live Peace in Toronto 1969"], "answer_entity_name": null, "predicted_answer": "The Plastic Ono Band performed Live Peace in Toronto", "extracted_entity": "Live_Peace_in_Toronto_1969"}
{"question": "who performed The Tourists?", "answer": "The Tourists", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Tourists"], "entity_annotations": ["The Tourists"], "answer_entity_name": null, "predicted_answer": "The Tourists", "extracted_entity": "The_Tourists"}
{"question": "who performed Braveheart?", "answer": "Neon Jungle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Neon Jungle"], "entity_annotations": ["Braveheart"], "answer_entity_name": null, "predicted_answer": "Braveheart was performed by Mel Gibson.", "extracted_entity": "Braveheart"}
{"question": "who performed Gold?", "answer": "Victoria Justice", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Victoria Justice"], "entity_annotations": ["Gold"], "answer_entity_name": null, "predicted_answer": "Gold", "extracted_entity": "Gold"}
{"question": "who performed Khan Noonien Singh?", "answer": "Benedict Cumberbatch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Benedict Cumberbatch", "Ricardo Montalb\u00e1n"], "entity_annotations": ["Khan Noonien Singh"], "answer_entity_name": null, "predicted_answer": "Khan Noonien Singh was performed by Ricardo Montal", "extracted_entity": "Khan_Noonien_Singh"}
{"question": "who performed Utopia?", "answer": "Within Temptation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Within Temptation"], "entity_annotations": ["Utopia"], "answer_entity_name": null, "predicted_answer": "Utopia is a song by the British rock", "extracted_entity": "Utopia"}
{"question": "who performed 1994?", "answer": "Merle Haggard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Merle Haggard"], "entity_annotations": ["1994"], "answer_entity_name": null, "predicted_answer": "1994", "extracted_entity": "1994"}
{"question": "who performed Impossible Princess?", "answer": "Kylie Minogue", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kylie Minogue"], "entity_annotations": ["Impossible Princess"], "answer_entity_name": null, "predicted_answer": "Kylie Minogue", "extracted_entity": "Impossible_Princess"}
{"question": "who performed It's a Man's Man's Man's World?", "answer": "James Brown", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James Brown"], "entity_annotations": ["It's a Man's Man's Man's World"], "answer_entity_name": null, "predicted_answer": "James Brown", "extracted_entity": "It's_a_Man's_Man's_Man's_World"}
{"question": "who performed Hookah?", "answer": "Tyga", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tyga"], "entity_annotations": ["Hookah"], "answer_entity_name": null, "predicted_answer": "bul-Fath Gilani", "extracted_entity": "Hookah"}
{"question": "who performed La Cucaracha?", "answer": "Ween", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ween"], "entity_annotations": ["La Cucaracha"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "La_Cucaracha"}
{"question": "who performed Butterfly?", "answer": "Mariah Carey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mariah Carey"], "entity_annotations": ["Butterfly"], "answer_entity_name": null, "predicted_answer": "Pl\u00e1cido Domingo", "extracted_entity": "Butterfly"}
{"question": "who performed Victory?", "answer": "DJ Khaled", "dataset": "entity_questions", "split": "test", "answer_aliases": ["DJ Khaled"], "entity_annotations": ["Victory"], "answer_entity_name": null, "predicted_answer": "Paul of", "extracted_entity": "Victory"}
{"question": "who performed Tomorrowland?", "answer": "Ryan Bingham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ryan Bingham"], "entity_annotations": ["Tomorrowland"], "answer_entity_name": null, "predicted_answer": "Tomorrowland was performed by the Walt Disney Company.", "extracted_entity": "Tomorrowland"}
{"question": "who performed Night Visions?", "answer": "Imagine Dragons", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Imagine Dragons"], "entity_annotations": ["Night Visions"], "answer_entity_name": null, "predicted_answer": "Imagine Dragons", "extracted_entity": "Night_Visions"}
{"question": "who performed Mony Mony?", "answer": "Tommy James and the Shondells", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tommy James and the Shondells"], "entity_annotations": ["Mony Mony"], "answer_entity_name": null, "predicted_answer": "Tommy James and the Shondells", "extracted_entity": "Mony_Mony"}
{"question": "who performed Mania?", "answer": "New Found Glory", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Found Glory"], "entity_annotations": ["Mania"], "answer_entity_name": null, "predicted_answer": "Mania was performed by a group called Mania", "extracted_entity": "Mania"}
{"question": "who performed Mahavishnu?", "answer": "Mahavishnu Orchestra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mahavishnu Orchestra"], "entity_annotations": ["Mahavishnu"], "answer_entity_name": null, "predicted_answer": "Vishnu", "extracted_entity": "Mahavishnu"}
{"question": "who performed Clark Terry?", "answer": "Clark Terry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clark Terry"], "entity_annotations": ["Clark Terry"], "answer_entity_name": null, "predicted_answer": "Clark Terry", "extracted_entity": "Clark_Terry"}
{"question": "who performed Funkadelic?", "answer": "Funkadelic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Funkadelic"], "entity_annotations": ["Funkadelic"], "answer_entity_name": null, "predicted_answer": "the band", "extracted_entity": "Funkadelic"}
{"question": "who performed Burial?", "answer": "Extol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Extol"], "entity_annotations": ["Burial"], "answer_entity_name": null, "predicted_answer": "Burial, also known as interment or in", "extracted_entity": "Burial"}
{"question": "who performed Canterbury?", "answer": "Diamond Head", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Diamond Head"], "entity_annotations": ["Canterbury"], "answer_entity_name": null, "predicted_answer": "the Jutes", "extracted_entity": "Canterbury"}
{"question": "who performed Do You Love Me?", "answer": "Patti Austin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Patti Austin"], "entity_annotations": ["Do You Love Me"], "answer_entity_name": null, "predicted_answer": "the Contours", "extracted_entity": "Do_You_Love_Me"}
{"question": "who performed Hunger?", "answer": "Janis Ian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Janis Ian"], "entity_annotations": ["Hunger"], "answer_entity_name": null, "predicted_answer": "In politics, humanitarian aid, and the social sciences", "extracted_entity": "Hunger"}
{"question": "who performed Outback?", "answer": "Joe Farrell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joe Farrell"], "entity_annotations": ["Outback"], "answer_entity_name": null, "predicted_answer": "Outback", "extracted_entity": "Outback"}
{"question": "who performed Gangsta's Paradise?", "answer": "Coolio", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Coolio"], "entity_annotations": ["Gangsta's Paradise"], "answer_entity_name": null, "predicted_answer": "American rapper Coolio", "extracted_entity": "Gangsta's_Paradise"}
{"question": "who performed Mirage?", "answer": "Meat Puppets", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Meat Puppets"], "entity_annotations": ["Mirage"], "answer_entity_name": null, "predicted_answer": "Celine Dion", "extracted_entity": "Mirage"}
{"question": "who performed The Bare Necessities?", "answer": "Phil Harris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Phil Harris", "Bruce Reitherman"], "entity_annotations": ["The Bare Necessities"], "answer_entity_name": null, "predicted_answer": "Louis Armstrong.", "extracted_entity": "The_Bare_Necessities"}
{"question": "who performed Era?", "answer": "Dori Ghezzi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dori Ghezzi"], "entity_annotations": ["Era"], "answer_entity_name": null, "predicted_answer": "Era", "extracted_entity": "Era"}
{"question": "who performed Rescue?", "answer": "KAT-TUN", "dataset": "entity_questions", "split": "test", "answer_aliases": ["KAT-TUN"], "entity_annotations": ["Rescue"], "answer_entity_name": null, "predicted_answer": "Rescue is a potent theme in human psychology, both", "extracted_entity": "Rescue"}
{"question": "who performed Camouflage?", "answer": "Merzbow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Merzbow"], "entity_annotations": ["Camouflage"], "answer_entity_name": null, "predicted_answer": "Camouflage was performed by Camouflage", "extracted_entity": "Camouflage"}
{"question": "who performed Michael Corleone?", "answer": "Al Pacino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Al Pacino"], "entity_annotations": ["Michael Corleone"], "answer_entity_name": null, "predicted_answer": "Al Pacino", "extracted_entity": "Michael_Corleone"}
{"question": "who performed Human?", "answer": "Leo Ku", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leo Ku"], "entity_annotations": ["Human"], "answer_entity_name": null, "predicted_answer": "Human", "extracted_entity": "Human"}
{"question": "who performed Millionaire?", "answer": "Beady Eye", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Beady Eye"], "entity_annotations": ["Millionaire"], "answer_entity_name": null, "predicted_answer": "ame of the performer]", "extracted_entity": "Millionaire"}
{"question": "who performed Christmas Island?", "answer": "Andrew Jackson Jihad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Andrew Jackson Jihad"], "entity_annotations": ["Christmas Island"], "answer_entity_name": null, "predicted_answer": "ichard Rowe", "extracted_entity": "Christmas_Island"}
{"question": "who performed (You Drive Me) Crazy?", "answer": "Britney Spears", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Britney Spears"], "entity_annotations": ["(You Drive Me) Crazy"], "answer_entity_name": null, "predicted_answer": "American singer Britney Spears", "extracted_entity": "(You_Drive_Me)_Crazy"}
{"question": "who performed Altitude?", "answer": "Yellow Second", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yellow Second"], "entity_annotations": ["Altitude"], "answer_entity_name": null, "predicted_answer": "performed Altitude", "extracted_entity": "Altitude"}
{"question": "who performed Bridge of Sighs?", "answer": "Robin Trower", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robin Trower"], "entity_annotations": ["Bridge of Sighs"], "answer_entity_name": null, "predicted_answer": "Robin Trower", "extracted_entity": "Bridge_of_Sighs"}
{"question": "who performed Love?", "answer": "Aztec Camera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aztec Camera"], "entity_annotations": ["Love"], "answer_entity_name": null, "predicted_answer": "performed by Love", "extracted_entity": "Love"}
{"question": "who performed Dusty in Memphis?", "answer": "Dusty Springfield", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dusty Springfield"], "entity_annotations": ["Dusty in Memphis"], "answer_entity_name": null, "predicted_answer": "Dusty Springfield", "extracted_entity": "Dusty_in_Memphis"}
{"question": "who performed Uncharted?", "answer": "Sara Bareilles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sara Bareilles"], "entity_annotations": ["Uncharted"], "answer_entity_name": null, "predicted_answer": "Naughty Dog", "extracted_entity": "Uncharted"}
{"question": "who performed Antimatter?", "answer": "Cubanate", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cubanate"], "entity_annotations": ["Antimatter"], "answer_entity_name": null, "predicted_answer": "A. Einstein", "extracted_entity": "Antimatter"}
{"question": "who performed Final Straw?", "answer": "Snow Patrol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Snow Patrol"], "entity_annotations": ["Final Straw"], "answer_entity_name": null, "predicted_answer": "Snow Patrol", "extracted_entity": "Final_Straw"}
{"question": "who performed Favourite Worst Nightmare?", "answer": "Arctic Monkeys", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arctic Monkeys"], "entity_annotations": ["Favourite Worst Nightmare"], "answer_entity_name": null, "predicted_answer": "Arctic Monkeys", "extracted_entity": "Favourite_Worst_Nightmare"}
{"question": "who performed Enrique Iglesias?", "answer": "Enrique Iglesias", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Enrique Iglesias"], "entity_annotations": ["Enrique Iglesias"], "answer_entity_name": null, "predicted_answer": "Spanish singer and songwriter.", "extracted_entity": "Enrique_Iglesias"}
{"question": "who performed In the Mood?", "answer": "Robert Plant", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robert Plant"], "entity_annotations": ["In the Mood"], "answer_entity_name": null, "predicted_answer": "In the Mood was performed by Glenn Miller.", "extracted_entity": "In_the_Mood"}
{"question": "who performed Vitalogy?", "answer": "Pearl Jam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pearl Jam"], "entity_annotations": ["Vitalogy"], "answer_entity_name": null, "predicted_answer": "American rock band Pearl Jam", "extracted_entity": "Vitalogy"}
{"question": "who performed That Girl?", "answer": "U-Jean", "dataset": "entity_questions", "split": "test", "answer_aliases": ["U-Jean"], "entity_annotations": ["That Girl"], "answer_entity_name": null, "predicted_answer": "The show reflected the changing roles of American women in", "extracted_entity": "That_Girl"}
{"question": "who performed Stars Dance?", "answer": "Selena Gomez", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Selena Gomez"], "entity_annotations": ["Stars Dance"], "answer_entity_name": null, "predicted_answer": "Selena Gomez", "extracted_entity": "Stars_Dance"}
{"question": "who performed Evangeline?", "answer": "Cocteau Twins", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cocteau Twins"], "entity_annotations": ["Evangeline"], "answer_entity_name": null, "predicted_answer": "the Acadians", "extracted_entity": "Evangeline"}
{"question": "who performed Bugatti?", "answer": "Ace Hood", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ace Hood", "Rick Ross"], "entity_annotations": ["Bugatti"], "answer_entity_name": null, "predicted_answer": "Ettore Bugatti", "extracted_entity": "Bugatti"}
{"question": "who performed Why?", "answer": "Jason Aldean", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jason Aldean"], "entity_annotations": ["Why"], "answer_entity_name": null, "predicted_answer": "Why was performed by the band The Who.", "extracted_entity": "Why"}
{"question": "who performed El Greco?", "answer": "Vangelis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vangelis"], "entity_annotations": ["El Greco"], "answer_entity_name": null, "predicted_answer": "Greek", "extracted_entity": "El_Greco"}
{"question": "who performed My War?", "answer": "The Bear Quartet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Bear Quartet"], "entity_annotations": ["My War"], "answer_entity_name": null, "predicted_answer": "American band Black Flag", "extracted_entity": "My_War"}
{"question": "who performed Billionaire?", "answer": "Travie McCoy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Travie McCoy", "Bruno Mars"], "entity_annotations": ["Billionaire"], "answer_entity_name": null, "predicted_answer": "runo Mars", "extracted_entity": "Billionaire"}
{"question": "who performed Martin Riggs?", "answer": "Mel Gibson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mel Gibson"], "entity_annotations": ["Martin Riggs"], "answer_entity_name": null, "predicted_answer": "Martin Riggs was played by Mel Gibson in the", "extracted_entity": "Martin_Riggs"}
{"question": "who performed Infinity?", "answer": "Plavi orkestar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Plavi orkestar"], "entity_annotations": ["Infinity"], "answer_entity_name": null, "predicted_answer": "Infinity is something which is boundless, endless,", "extracted_entity": "Infinity"}
{"question": "who performed Black and Blue?", "answer": "Uh Huh Her", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Uh Huh Her"], "entity_annotations": ["Black and Blue"], "answer_entity_name": null, "predicted_answer": "The Rolling Stones", "extracted_entity": "Black_and_Blue"}
{"question": "who performed I'm Waiting for the Man?", "answer": "The Velvet Underground", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Velvet Underground"], "entity_annotations": ["I'm Waiting for the Man"], "answer_entity_name": null, "predicted_answer": "American rock band the Velvet Underground", "extracted_entity": "I'm_Waiting_for_the_Man"}
{"question": "who performed Widespread Panic?", "answer": "Widespread Panic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Widespread Panic"], "entity_annotations": ["Widespread Panic"], "answer_entity_name": null, "predicted_answer": "Widespread Panic", "extracted_entity": "Widespread_Panic"}
{"question": "who performed Sacred Heart?", "answer": "Peter Ostroushko", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peter Ostroushko"], "entity_annotations": ["Sacred Heart"], "answer_entity_name": null, "predicted_answer": "Sacred Heart was performed by", "extracted_entity": "Sacred_Heart"}
{"question": "who performed Life?", "answer": "Ricky Nelson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ricky Nelson"], "entity_annotations": ["Life"], "answer_entity_name": null, "predicted_answer": "Life", "extracted_entity": "Life"}
{"question": "who performed Angst?", "answer": "Klaus Schulze", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Klaus Schulze"], "entity_annotations": ["Angst"], "answer_entity_name": null, "predicted_answer": "st was performed by", "extracted_entity": "Angst"}
{"question": "who performed Mary Mary?", "answer": "Mary Mary", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mary Mary"], "entity_annotations": ["Mary Mary"], "answer_entity_name": null, "predicted_answer": "Mary Mary", "extracted_entity": "Mary_Mary"}
{"question": "who performed You?", "answer": "Ten Sharp", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ten Sharp"], "entity_annotations": ["You"], "answer_entity_name": null, "predicted_answer": "ou", "extracted_entity": "You"}
{"question": "who performed Tango?", "answer": "Patty Larkin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Patty Larkin"], "entity_annotations": ["Tango"], "answer_entity_name": null, "predicted_answer": "Tango was born in the impoverished port areas of these", "extracted_entity": "Tango"}
{"question": "who performed Larks' Tongues in Aspic?", "answer": "King Crimson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["King Crimson"], "entity_annotations": ["Larks' Tongues in Aspic"], "answer_entity_name": null, "predicted_answer": "King Crimson", "extracted_entity": "Larks'_Tongues_in_Aspic"}
{"question": "who performed Gravity?", "answer": "James Brown", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James Brown"], "entity_annotations": ["Gravity"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Gravity"}
{"question": "who performed Dead Meadow?", "answer": "Dead Meadow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dead Meadow"], "entity_annotations": ["Dead Meadow"], "answer_entity_name": null, "predicted_answer": "Jason Simon, Steve Kille, and Mark Laugh", "extracted_entity": "Dead_Meadow"}
{"question": "who performed Heal the World?", "answer": "Michael Jackson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Jackson"], "entity_annotations": ["Heal the World"], "answer_entity_name": null, "predicted_answer": "Michael Jackson", "extracted_entity": "Heal_the_World"}
{"question": "who performed Running?", "answer": "Evermore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Evermore"], "entity_annotations": ["Running"], "answer_entity_name": null, "predicted_answer": "humans and other animals", "extracted_entity": "Running"}
{"question": "who performed Gold?", "answer": "The Stranglers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Stranglers"], "entity_annotations": ["Gold"], "answer_entity_name": null, "predicted_answer": "performed Gold", "extracted_entity": "Gold"}
{"question": "who performed Money?", "answer": "KMFDM", "dataset": "entity_questions", "split": "test", "answer_aliases": ["KMFDM"], "entity_annotations": ["Money"], "answer_entity_name": null, "predicted_answer": "Money was performed by Money", "extracted_entity": "Money"}
{"question": "who performed Here Lies Love?", "answer": "David Byrne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Byrne"], "entity_annotations": ["Here Lies Love"], "answer_entity_name": null, "predicted_answer": "The album features 22 guest vocalists and was", "extracted_entity": "Here_Lies_Love"}
{"question": "who performed Total Eclipse of the Heart?", "answer": "Bonnie Tyler", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bonnie Tyler"], "entity_annotations": ["Total Eclipse of the Heart"], "answer_entity_name": null, "predicted_answer": "Bonnie Tyler", "extracted_entity": "Total_Eclipse_of_the_Heart"}
{"question": "who performed Book of Shadows?", "answer": "Zakk Wylde", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zakk Wylde"], "entity_annotations": ["Book of Shadows"], "answer_entity_name": null, "predicted_answer": "Gerald Gardner", "extracted_entity": "Book_of_Shadows"}
{"question": "who performed Lullaby?", "answer": "Professor Green", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Professor Green"], "entity_annotations": ["Lullaby"], "answer_entity_name": null, "predicted_answer": "\"Lullaby\" was performed by \"N", "extracted_entity": "Lullaby"}
{"question": "who performed Lowrider?", "answer": "Cypress Hill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cypress Hill"], "entity_annotations": ["Lowrider"], "answer_entity_name": null, "predicted_answer": "Lowrider", "extracted_entity": "Lowrider"}
{"question": "who performed Oh Land?", "answer": "Oh Land", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oh Land"], "entity_annotations": ["Oh Land"], "answer_entity_name": null, "predicted_answer": "Oh Land", "extracted_entity": "Oh_Land"}
{"question": "who performed Mi Tierra?", "answer": "Gloria Estefan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gloria Estefan"], "entity_annotations": ["Mi Tierra"], "answer_entity_name": null, "predicted_answer": "Gloria Estefan", "extracted_entity": "Mi_Tierra"}
{"question": "who performed Quasimodo?", "answer": "Lon Chaney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lon Chaney"], "entity_annotations": ["Quasimodo"], "answer_entity_name": null, "predicted_answer": "Quasimodo Quasimodo (from", "extracted_entity": "Quasimodo"}
{"question": "who performed Rust in Peace?", "answer": "Megadeth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Megadeth"], "entity_annotations": ["Rust in Peace"], "answer_entity_name": null, "predicted_answer": "American thrash metal band Megadeth", "extracted_entity": "Rust_in_Peace"}
{"question": "who performed Rory Gallagher?", "answer": "Rory Gallagher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rory Gallagher"], "entity_annotations": ["Rory Gallagher"], "answer_entity_name": null, "predicted_answer": "Rory Gallagher performed.", "extracted_entity": "Rory_Gallagher"}
{"question": "who performed Genocide?", "answer": "Judas Priest", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Judas Priest"], "entity_annotations": ["Genocide"], "answer_entity_name": null, "predicted_answer": "Nazis", "extracted_entity": "Genocide"}
{"question": "who performed The Twilight Sad?", "answer": "The Twilight Sad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Twilight Sad"], "entity_annotations": ["The Twilight Sad"], "answer_entity_name": null, "predicted_answer": "The Twilight Sad", "extracted_entity": "The_Twilight_Sad"}
{"question": "who performed Cleveland?", "answer": "Layzie Bone", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Layzie Bone"], "entity_annotations": ["Cleveland"], "answer_entity_name": null, "predicted_answer": "Cleveland", "extracted_entity": "Cleveland"}
{"question": "who performed Cyclotron?", "answer": "Blind Idiot God", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Blind Idiot God"], "entity_annotations": ["Cyclotron"], "answer_entity_name": null, "predicted_answer": "Ernest Lawrence", "extracted_entity": "Cyclotron"}
{"question": "who performed Resonance?", "answer": "Jordan Rudess", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jordan Rudess"], "entity_annotations": ["Resonance"], "answer_entity_name": null, "predicted_answer": "Resonance was performed by Resonance", "extracted_entity": "Resonance"}
{"question": "who performed 2002?", "answer": "Tha Dogg Pound", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tha Dogg Pound"], "entity_annotations": ["2002"], "answer_entity_name": null, "predicted_answer": "2002", "extracted_entity": "2002"}
{"question": "who performed Breaking the Law?", "answer": "Judas Priest", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Judas Priest"], "entity_annotations": ["Breaking the Law"], "answer_entity_name": null, "predicted_answer": "Judas Priest", "extracted_entity": "Breaking_the_Law"}
{"question": "who performed Without Me?", "answer": "Fantasia Barrino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fantasia Barrino"], "entity_annotations": ["Without Me"], "answer_entity_name": null, "predicted_answer": "Eminem", "extracted_entity": "Without_Me"}
{"question": "who performed Fire?", "answer": "Ferry Corsten", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ferry Corsten"], "entity_annotations": ["Fire"], "answer_entity_name": null, "predicted_answer": "Fire was performed by Fire", "extracted_entity": "Fire"}
{"question": "who performed Boogaloo?", "answer": "John Patton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Patton"], "entity_annotations": ["Boogaloo"], "answer_entity_name": null, "predicted_answer": "Pete Rodr\u00edguez's \"I Like It like", "extracted_entity": "Boogaloo"}
{"question": "who performed The Animals?", "answer": "The Animals", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Animals"], "entity_annotations": ["The Animals"], "answer_entity_name": null, "predicted_answer": "The Animals", "extracted_entity": "The_Animals"}
{"question": "who performed Scissor Sisters?", "answer": "Scissor Sisters", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Scissor Sisters"], "entity_annotations": ["Scissor Sisters"], "answer_entity_name": null, "predicted_answer": "Jake Shears and Ana Matronic", "extracted_entity": "Scissor_Sisters"}
{"question": "who performed Just What I Needed?", "answer": "The Cars", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Cars"], "entity_annotations": ["Just What I Needed"], "answer_entity_name": null, "predicted_answer": "erican rock band the Cars", "extracted_entity": "Just_What_I_Needed"}
{"question": "who performed Prism?", "answer": "Katy Perry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Katy Perry"], "entity_annotations": ["Prism"], "answer_entity_name": null, "predicted_answer": "National Security Agency", "extracted_entity": "Prism"}
{"question": "who performed Aquarela do Brasil?", "answer": "Ary Barroso", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ary Barroso"], "entity_annotations": ["Aquarela do Brasil"], "answer_entity_name": null, "predicted_answer": "Francisco de Morais Alves", "extracted_entity": "Aquarela_do_Brasil"}
{"question": "who performed Live at Leeds?", "answer": "The Who", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Who"], "entity_annotations": ["Live at Leeds"], "answer_entity_name": null, "predicted_answer": "The Who", "extracted_entity": "Live_at_Leeds"}
{"question": "who performed The Soft Parade?", "answer": "The Doors", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Doors"], "entity_annotations": ["The Soft Parade"], "answer_entity_name": null, "predicted_answer": "American rock band the Doors", "extracted_entity": "The_Soft_Parade"}
{"question": "who performed U?", "answer": "The Incredible String Band", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Incredible String Band"], "entity_annotations": ["U"], "answer_entity_name": null, "predicted_answer": "U", "extracted_entity": "U"}
{"question": "who performed Signature?", "answer": "Patrice Rushen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Patrice Rushen"], "entity_annotations": ["Signature"], "answer_entity_name": null, "predicted_answer": "A signature (; from, \"to sign\") is", "extracted_entity": "Signature"}
{"question": "who performed Metamorphosis?", "answer": "Papa Roach", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Papa Roach"], "entity_annotations": ["Metamorphosis"], "answer_entity_name": null, "predicted_answer": "Franz Kafka", "extracted_entity": "Metamorphosis"}
{"question": "who performed Anderson Bruford Wakeman Howe?", "answer": "Anderson Bruford Wakeman Howe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anderson Bruford Wakeman Howe"], "entity_annotations": ["Anderson Bruford Wakeman Howe"], "answer_entity_name": null, "predicted_answer": "Anderson Bruford Wakeman Howe", "extracted_entity": "Anderson_Bruford_Wakeman_Howe"}
{"question": "who performed Orbit?", "answer": "William Orbit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Orbit"], "entity_annotations": ["Orbit"], "answer_entity_name": null, "predicted_answer": "It was performed by T. S. Eliot", "extracted_entity": "Orbit"}
{"question": "who performed Music?", "answer": "Erick Sermon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Erick Sermon"], "entity_annotations": ["Music"], "answer_entity_name": null, "predicted_answer": "Music is generally defined as the art of arranging sound", "extracted_entity": "Music"}
{"question": "who performed October?", "answer": "U2", "dataset": "entity_questions", "split": "test", "answer_aliases": ["U2"], "entity_annotations": ["October"], "answer_entity_name": null, "predicted_answer": "Coldplay", "extracted_entity": "October"}
{"question": "who performed Ghost?", "answer": "Gary Numan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gary Numan"], "entity_annotations": ["Ghost"], "answer_entity_name": null, "predicted_answer": "Ghost was performed by The Rolling Stones", "extracted_entity": "Ghost"}
{"question": "who performed Hellfire Club?", "answer": "Edguy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edguy"], "entity_annotations": ["Hellfire Club"], "answer_entity_name": null, "predicted_answer": "The first official Hellfire Club was founded in London", "extracted_entity": "Hellfire_Club"}
{"question": "what is the capital of Samos?", "answer": "Vathy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vathy"], "entity_annotations": ["Samos"], "answer_entity_name": null, "predicted_answer": "Vathy", "extracted_entity": "Samos"}
{"question": "what is the capital of Vallegrande?", "answer": "Vallegrande", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vallegrande"], "entity_annotations": ["Vallegrande"], "answer_entity_name": null, "predicted_answer": "Vallegrande", "extracted_entity": "Vallegrande"}
{"question": "what is the capital of Emirate of Jabal Shammar?", "answer": "Ha'il, Saudi Arabia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ha'il, Saudi Arabia"], "entity_annotations": ["Emirate of Jabal Shammar"], "answer_entity_name": null, "predicted_answer": "Ha'il", "extracted_entity": "Emirate_of_Jabal_Shammar"}
{"question": "what is the capital of Lahore District?", "answer": "Lahore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lahore"], "entity_annotations": ["Lahore District"], "answer_entity_name": null, "predicted_answer": "Lahore", "extracted_entity": "Lahore_District"}
{"question": "what is the capital of Chandauli district?", "answer": "Chandauli", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chandauli"], "entity_annotations": ["Chandauli district"], "answer_entity_name": null, "predicted_answer": "Chandauli", "extracted_entity": "Chandauli_district"}
{"question": "what is the capital of Sergiyevo-Posadsky District?", "answer": "Sergiyev Posad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sergiyev Posad"], "entity_annotations": ["Sergiyevo-Posadsky District"], "answer_entity_name": null, "predicted_answer": "Sergiyev Posad", "extracted_entity": "Sergiyevo-Posadsky_District"}
{"question": "what is the capital of Gracias a Dios Department?", "answer": "Puerto Lempira", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Puerto Lempira"], "entity_annotations": ["Gracias a Dios Department"], "answer_entity_name": null, "predicted_answer": "Puerto Lempira", "extracted_entity": "Gracias_a_Dios_Department"}
{"question": "what is the capital of Barda District?", "answer": "Barda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barda"], "entity_annotations": ["Barda District"], "answer_entity_name": null, "predicted_answer": "Barda", "extracted_entity": "Barda_District"}
{"question": "what is the capital of North Kalimantan?", "answer": "Tanjung Selor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tanjung Selor"], "entity_annotations": ["North Kalimantan"], "answer_entity_name": null, "predicted_answer": "Tanjung Selor", "extracted_entity": "North_Kalimantan"}
{"question": "what is the capital of Royal Borough of Kensington and Chelsea?", "answer": "Kensington", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kensington"], "entity_annotations": ["Royal Borough of Kensington and Chelsea"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Royal_Borough_of_Kensington_and_Chelsea"}
{"question": "what is the capital of Mid Suffolk?", "answer": "Needham Market", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Needham Market"], "entity_annotations": ["Mid Suffolk"], "answer_entity_name": null, "predicted_answer": "Ipswich", "extracted_entity": "Mid_Suffolk"}
{"question": "what is the capital of Haut-Katanga Province?", "answer": "Lubumbashi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lubumbashi"], "entity_annotations": ["Haut-Katanga Province"], "answer_entity_name": null, "predicted_answer": "Lubumbashi", "extracted_entity": "Haut-Katanga_Province"}
{"question": "what is the capital of Maharashtra?", "answer": "Mumbai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mumbai"], "entity_annotations": ["Maharashtra"], "answer_entity_name": null, "predicted_answer": "umbai", "extracted_entity": "Maharashtra"}
{"question": "what is the capital of Kampong Cham Province?", "answer": "Kampong Cham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kampong Cham"], "entity_annotations": ["Kampong Cham Province"], "answer_entity_name": null, "predicted_answer": "Kampong Cham", "extracted_entity": "Kampong_Cham_Province"}
{"question": "what is the capital of Recklinghausen?", "answer": "Recklinghausen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Recklinghausen"], "entity_annotations": ["Recklinghausen"], "answer_entity_name": null, "predicted_answer": "Recklinghausen is the capital of Reck", "extracted_entity": "Recklinghausen"}
{"question": "what is the capital of Seychelles?", "answer": "Victoria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Victoria"], "entity_annotations": ["Seychelles"], "answer_entity_name": null, "predicted_answer": "Victoria", "extracted_entity": "Seychelles"}
{"question": "what is the capital of Eijsden-Margraten?", "answer": "Eijsden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eijsden"], "entity_annotations": ["Eijsden-Margraten"], "answer_entity_name": null, "predicted_answer": "Eijsden", "extracted_entity": "Eijsden-Margraten"}
{"question": "what is the capital of Socialist Republic of Serbia?", "answer": "Belgrade", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belgrade"], "entity_annotations": ["Socialist Republic of Serbia"], "answer_entity_name": null, "predicted_answer": "Belgrade", "extracted_entity": "Socialist_Republic_of_Serbia"}
{"question": "what is the capital of French protectorate of Tunisia?", "answer": "Tunis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tunis"], "entity_annotations": ["French protectorate of Tunisia"], "answer_entity_name": null, "predicted_answer": "Tunis", "extracted_entity": "French_protectorate_of_Tunisia"}
{"question": "what is the capital of Hedmark?", "answer": "Hamar Municipality", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hamar Municipality"], "entity_annotations": ["Hedmark"], "answer_entity_name": null, "predicted_answer": "Hamar", "extracted_entity": "Hedmark"}
{"question": "what is the capital of Bolognesi Province?", "answer": "Chiqui\u00e1n", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chiqui\u00e1n"], "entity_annotations": ["Bolognesi Province"], "answer_entity_name": null, "predicted_answer": "Chiqui\u00e1n", "extracted_entity": "Bolognesi_Province"}
{"question": "what is the capital of Rockhampton Region?", "answer": "Rockhampton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rockhampton"], "entity_annotations": ["Rockhampton Region"], "answer_entity_name": null, "predicted_answer": "Rockhampton", "extracted_entity": "Rockhampton_Region"}
{"question": "what is the capital of Tablelands Region?", "answer": "Malanda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Malanda"], "entity_annotations": ["Tablelands Region"], "answer_entity_name": null, "predicted_answer": "The capital of Tablelands Region is Cairns.", "extracted_entity": "Tablelands_Region"}
{"question": "what is the capital of Chaharmahal and Bakhtiari Province?", "answer": "Shahrekord", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shahrekord"], "entity_annotations": ["Chaharmahal and Bakhtiari Province"], "answer_entity_name": null, "predicted_answer": "Shahr-e Kord", "extracted_entity": "Chaharmahal_and_Bakhtiari_Province"}
{"question": "what is the capital of Novokhopyorsky District?", "answer": "Novokhopyorsk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Novokhopyorsk"], "entity_annotations": ["Novokhopyorsky District"], "answer_entity_name": null, "predicted_answer": "Novokhopyorsk", "extracted_entity": "Novokhopyorsky_District"}
{"question": "what is the capital of French Algeria?", "answer": "Algiers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Algiers"], "entity_annotations": ["French Algeria"], "answer_entity_name": null, "predicted_answer": "lgiers", "extracted_entity": "French_Algeria"}
{"question": "what is the capital of Brezno District?", "answer": "Brezno", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brezno"], "entity_annotations": ["Brezno District"], "answer_entity_name": null, "predicted_answer": "Brezno", "extracted_entity": "Brezno_District"}
{"question": "what is the capital of Tiflis Governorate?", "answer": "Tbilisi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tbilisi"], "entity_annotations": ["Tiflis Governorate"], "answer_entity_name": null, "predicted_answer": "Tiflis", "extracted_entity": "Tiflis_Governorate"}
{"question": "what is the capital of Centre-Val de Loire?", "answer": "Orl\u00e9ans", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Orl\u00e9ans"], "entity_annotations": ["Centre-Val de Loire"], "answer_entity_name": null, "predicted_answer": "\u00e9ans", "extracted_entity": "Centre-Val_de_Loire"}
{"question": "what is the capital of Tachov District?", "answer": "Tachov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tachov"], "entity_annotations": ["Tachov District"], "answer_entity_name": null, "predicted_answer": "v", "extracted_entity": "Tachov_District"}
{"question": "what is the capital of First Spanish Republic?", "answer": "Madrid", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Madrid"], "entity_annotations": ["First Spanish Republic"], "answer_entity_name": null, "predicted_answer": "First Spanish Republic", "extracted_entity": "First_Spanish_Republic"}
{"question": "what is the capital of Goondiwindi Region?", "answer": "Goondiwindi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Goondiwindi"], "entity_annotations": ["Goondiwindi Region"], "answer_entity_name": null, "predicted_answer": "Goondiwindi", "extracted_entity": "Goondiwindi_Region"}
{"question": "what is the capital of Province of Bergamo?", "answer": "Bergamo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bergamo"], "entity_annotations": ["Province of Bergamo"], "answer_entity_name": null, "predicted_answer": "ergamo", "extracted_entity": "Province_of_Bergamo"}
{"question": "what is the capital of Clarence Valley Council?", "answer": "Grafton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Grafton"], "entity_annotations": ["Clarence Valley Council"], "answer_entity_name": null, "predicted_answer": "Grafton", "extracted_entity": "Clarence_Valley_Council"}
{"question": "what is the capital of Later Qin?", "answer": "Chang'an", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chang'an"], "entity_annotations": ["Later Qin"], "answer_entity_name": null, "predicted_answer": "Chang'an", "extracted_entity": "Later_Qin"}
{"question": "what is the capital of Former Shu?", "answer": "Chengdu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chengdu"], "entity_annotations": ["Former Shu"], "answer_entity_name": null, "predicted_answer": "Chengdu", "extracted_entity": "Former_Shu"}
{"question": "what is the capital of Northamptonshire?", "answer": "Northampton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Northampton"], "entity_annotations": ["Northamptonshire"], "answer_entity_name": null, "predicted_answer": "Northampton", "extracted_entity": "Northamptonshire"}
{"question": "what is the capital of Schellenberg?", "answer": "Vaduz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vaduz"], "entity_annotations": ["Schellenberg"], "answer_entity_name": null, "predicted_answer": "Schellenberg", "extracted_entity": "Schellenberg"}
{"question": "what is the capital of Province of Frosinone?", "answer": "Frosinone", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frosinone"], "entity_annotations": ["Province of Frosinone"], "answer_entity_name": null, "predicted_answer": "The capital of Province of Frosinone is", "extracted_entity": "Province_of_Frosinone"}
{"question": "what is the capital of British rule in Burma?", "answer": "Yangon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yangon"], "entity_annotations": ["British rule in Burma"], "answer_entity_name": null, "predicted_answer": "Rangoon", "extracted_entity": "British_rule_in_Burma"}
{"question": "what is the capital of Masbate?", "answer": "Masbate City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Masbate City"], "entity_annotations": ["Masbate"], "answer_entity_name": null, "predicted_answer": "Masbate City", "extracted_entity": "Masbate"}
{"question": "what is the capital of West Lancashire?", "answer": "Ormskirk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ormskirk"], "entity_annotations": ["West Lancashire"], "answer_entity_name": null, "predicted_answer": "Ormskirk", "extracted_entity": "West_Lancashire"}
{"question": "what is the capital of Khwarazmian dynasty?", "answer": "Konye-Urgench", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Konye-Urgench"], "entity_annotations": ["Khwarazmian dynasty"], "answer_entity_name": null, "predicted_answer": "Nasa", "extracted_entity": "Khwarazmian_dynasty"}
{"question": "what is the capital of South Northamptonshire?", "answer": "Towcester", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Towcester"], "entity_annotations": ["South Northamptonshire"], "answer_entity_name": null, "predicted_answer": "Towcester", "extracted_entity": "South_Northamptonshire"}
{"question": "what is the capital of Hesse?", "answer": "Wiesbaden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wiesbaden"], "entity_annotations": ["Hesse"], "answer_entity_name": null, "predicted_answer": "Wiesbaden", "extracted_entity": "Hesse"}
{"question": "what is the capital of Telemark?", "answer": "Skien", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Skien"], "entity_annotations": ["Telemark"], "answer_entity_name": null, "predicted_answer": "Porsgrunn", "extracted_entity": "Telemark"}
{"question": "what is the capital of Mono Department?", "answer": "Lokossa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lokossa"], "entity_annotations": ["Mono Department"], "answer_entity_name": null, "predicted_answer": "Lokossa", "extracted_entity": "Mono_Department"}
{"question": "what is the capital of Kushinagar district?", "answer": "Padrauna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Padrauna"], "entity_annotations": ["Kushinagar district"], "answer_entity_name": null, "predicted_answer": "Kushinagar district is a district of the state", "extracted_entity": "Kushinagar_district"}
{"question": "what is the capital of Province of Reggio Calabria?", "answer": "Reggio Calabria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reggio Calabria"], "entity_annotations": ["Province of Reggio Calabria"], "answer_entity_name": null, "predicted_answer": "The capital of Province of Reggio Calabria", "extracted_entity": "Province_of_Reggio_Calabria"}
{"question": "what is the capital of Chin State?", "answer": "Hakha", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hakha"], "entity_annotations": ["Chin State"], "answer_entity_name": null, "predicted_answer": "Hakha", "extracted_entity": "Chin_State"}
{"question": "what is the capital of Volga Bulgaria?", "answer": "Bolghar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bolghar"], "entity_annotations": ["Volga Bulgaria"], "answer_entity_name": null, "predicted_answer": "Volga Bulgaria", "extracted_entity": "Volga_Bulgaria"}
{"question": "what is the capital of Tartar District?", "answer": "Tartar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tartar"], "entity_annotations": ["Tartar District"], "answer_entity_name": null, "predicted_answer": "Tartar", "extracted_entity": "Tartar_District"}
{"question": "what is the capital of Jarabulus District?", "answer": "Jarabulus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jarabulus"], "entity_annotations": ["Jarabulus District"], "answer_entity_name": null, "predicted_answer": "Jarabulus", "extracted_entity": "Jarabulus_District"}
{"question": "what is the capital of Sisak-Moslavina County?", "answer": "Sisak", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sisak"], "entity_annotations": ["Sisak-Moslavina County"], "answer_entity_name": null, "predicted_answer": "Sisak", "extracted_entity": "Sisak-Moslavina_County"}
{"question": "what is the capital of Pune district?", "answer": "Pune", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pune"], "entity_annotations": ["Pune district"], "answer_entity_name": null, "predicted_answer": "Pune", "extracted_entity": "Pune_district"}
{"question": "what is the capital of French Indochina?", "answer": "Hanoi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hanoi"], "entity_annotations": ["French Indochina"], "answer_entity_name": null, "predicted_answer": "Hanoi", "extracted_entity": "French_Indochina"}
{"question": "what is the capital of Camiguin?", "answer": "Mambajao", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mambajao"], "entity_annotations": ["Camiguin"], "answer_entity_name": null, "predicted_answer": "Mambajao", "extracted_entity": "Camiguin"}
{"question": "what is the capital of Namsky District?", "answer": "Namtsy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Namtsy"], "entity_annotations": ["Namsky District"], "answer_entity_name": null, "predicted_answer": "capital of Namsky District is Namtsy", "extracted_entity": "Namsky_District"}
{"question": "what is the capital of Gagauzia?", "answer": "Comrat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Comrat"], "entity_annotations": ["Gagauzia"], "answer_entity_name": null, "predicted_answer": "Comrat", "extracted_entity": "Gagauzia"}
{"question": "what is the capital of Zand dynasty?", "answer": "Shiraz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shiraz"], "entity_annotations": ["Zand dynasty"], "answer_entity_name": null, "predicted_answer": "Shiraz", "extracted_entity": "Zand_dynasty"}
{"question": "what is the capital of Ghazni?", "answer": "Ghazni", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ghazni"], "entity_annotations": ["Ghazni"], "answer_entity_name": null, "predicted_answer": "Ghazni", "extracted_entity": "Ghazni"}
{"question": "what is the capital of Santa Fe Province?", "answer": "Santa Fe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Santa Fe"], "entity_annotations": ["Santa Fe Province"], "answer_entity_name": null, "predicted_answer": "Santa Fe", "extracted_entity": "Santa_Fe_Province"}
{"question": "what is the capital of Galanta District?", "answer": "Galanta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Galanta"], "entity_annotations": ["Galanta District"], "answer_entity_name": null, "predicted_answer": "Galanta", "extracted_entity": "Galanta_District"}
{"question": "what is the capital of Tissemsilt Province?", "answer": "Tissemsilt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tissemsilt"], "entity_annotations": ["Tissemsilt Province"], "answer_entity_name": null, "predicted_answer": "Tissemsilt", "extracted_entity": "Tissemsilt_Province"}
{"question": "what is the capital of Quebec?", "answer": "Quebec City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Quebec City"], "entity_annotations": ["Quebec"], "answer_entity_name": null, "predicted_answer": "Quebec City", "extracted_entity": "Quebec"}
{"question": "what is the capital of Sylhet District?", "answer": "Sylhet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sylhet"], "entity_annotations": ["Sylhet District"], "answer_entity_name": null, "predicted_answer": "Sylhet", "extracted_entity": "Sylhet_District"}
{"question": "what is the capital of Phetchaburi?", "answer": "Phetchaburi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Phetchaburi"], "entity_annotations": ["Phetchaburi"], "answer_entity_name": null, "predicted_answer": "Phetchaburi is a town (\"thesaban", "extracted_entity": "Phetchaburi"}
{"question": "what is the capital of Quintana Roo?", "answer": "Chetumal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chetumal"], "entity_annotations": ["Quintana Roo"], "answer_entity_name": null, "predicted_answer": "Chetumal", "extracted_entity": "Quintana_Roo"}
{"question": "what is the capital of Saptari District?", "answer": "Rajbiraj", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rajbiraj"], "entity_annotations": ["Saptari District"], "answer_entity_name": null, "predicted_answer": "Rajbiraj", "extracted_entity": "Saptari_District"}
{"question": "what is the capital of OR Tambo District Municipality?", "answer": "Mthatha", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mthatha"], "entity_annotations": ["OR Tambo District Municipality"], "answer_entity_name": null, "predicted_answer": "Mthatha.", "extracted_entity": "OR_Tambo_District_Municipality"}
{"question": "what is the capital of Kars Oblast?", "answer": "Kars", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kars"], "entity_annotations": ["Kars Oblast"], "answer_entity_name": null, "predicted_answer": "the city of Kars", "extracted_entity": "Kars_Oblast"}
{"question": "what is the capital of Colonial Brazil?", "answer": "Salvador", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Salvador"], "entity_annotations": ["Colonial Brazil"], "answer_entity_name": null, "predicted_answer": "Rio de Janeiro", "extracted_entity": "Colonial_Brazil"}
{"question": "what is the capital of Chaouia-Ouardigha?", "answer": "Settat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Settat"], "entity_annotations": ["Chaouia-Ouardigha"], "answer_entity_name": null, "predicted_answer": "Settat", "extracted_entity": "Chaouia-Ouardigha"}
{"question": "what is the capital of Province of Nuoro?", "answer": "Nuoro", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nuoro"], "entity_annotations": ["Province of Nuoro"], "answer_entity_name": null, "predicted_answer": "uoro", "extracted_entity": "Province_of_Nuoro"}
{"question": "what is the capital of Puster Valley?", "answer": "Bruneck", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bruneck"], "entity_annotations": ["Puster Valley"], "answer_entity_name": null, "predicted_answer": "the capital of Puster Valley is.", "extracted_entity": "Puster_Valley"}
{"question": "what is the capital of Bojanala Platinum District Municipality?", "answer": "Rustenburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rustenburg"], "entity_annotations": ["Bojanala Platinum District Municipality"], "answer_entity_name": null, "predicted_answer": "Rustenburg", "extracted_entity": "Bojanala_Platinum_District_Municipality"}
{"question": "what is the capital of Haskovo Province?", "answer": "Haskovo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Haskovo"], "entity_annotations": ["Haskovo Province"], "answer_entity_name": null, "predicted_answer": "Haskovo", "extracted_entity": "Haskovo_Province"}
{"question": "what is the capital of Southern Federal District?", "answer": "Rostov-on-Don", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rostov-on-Don"], "entity_annotations": ["Southern Federal District"], "answer_entity_name": null, "predicted_answer": "Rostov-on-Don", "extracted_entity": "Southern_Federal_District"}
{"question": "what is the capital of New Brunswick?", "answer": "Fredericton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fredericton"], "entity_annotations": ["New Brunswick"], "answer_entity_name": null, "predicted_answer": "Fredericton", "extracted_entity": "New_Brunswick"}
{"question": "what is the capital of Mahshahr County?", "answer": "Bandar-e Mahshahr", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bandar-e Mahshahr"], "entity_annotations": ["Mahshahr County"], "answer_entity_name": null, "predicted_answer": "Bandar-e Mahshahr", "extracted_entity": "Mahshahr_County"}
{"question": "what is the capital of Banke District?", "answer": "Nepalgunj", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nepalgunj"], "entity_annotations": ["Banke District"], "answer_entity_name": null, "predicted_answer": "Nepalganj", "extracted_entity": "Banke_District"}
{"question": "what is the capital of Greece?", "answer": "Athens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Athens"], "entity_annotations": ["Greece"], "answer_entity_name": null, "predicted_answer": "Athens", "extracted_entity": "Greece"}
{"question": "what is the capital of Centrocaspian Dictatorship?", "answer": "Baku", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Baku"], "entity_annotations": ["Centrocaspian Dictatorship"], "answer_entity_name": null, "predicted_answer": "Baku", "extracted_entity": "Centrocaspian_Dictatorship"}
{"question": "what is the capital of Stirling?", "answer": "Stirling", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stirling"], "entity_annotations": ["Stirling"], "answer_entity_name": null, "predicted_answer": "Stirling", "extracted_entity": "Stirling"}
{"question": "what is the capital of Champasak Province?", "answer": "Pakse", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pakse"], "entity_annotations": ["Champasak Province"], "answer_entity_name": null, "predicted_answer": "Pakse", "extracted_entity": "Champasak_Province"}
{"question": "what is the capital of South Sinai Governorate?", "answer": "El-Tor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["El-Tor"], "entity_annotations": ["South Sinai Governorate"], "answer_entity_name": null, "predicted_answer": "It is located in the east of the country,", "extracted_entity": "South_Sinai_Governorate"}
{"question": "what is the capital of Vologda Governorate?", "answer": "Vologda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vologda"], "entity_annotations": ["Vologda Governorate"], "answer_entity_name": null, "predicted_answer": "Vologda", "extracted_entity": "Vologda_Governorate"}
{"question": "what is the capital of Electorate of Cologne?", "answer": "Cologne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cologne"], "entity_annotations": ["Electorate of Cologne"], "answer_entity_name": null, "predicted_answer": "Bonn", "extracted_entity": "Electorate_of_Cologne"}
{"question": "what is the capital of Province of Matera?", "answer": "Matera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Matera"], "entity_annotations": ["Province of Matera"], "answer_entity_name": null, "predicted_answer": "the capital of Province of Matera is Matera", "extracted_entity": "Province_of_Matera"}
{"question": "what is the capital of Saxe-Gotha?", "answer": "Gotha", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gotha"], "entity_annotations": ["Saxe-Gotha"], "answer_entity_name": null, "predicted_answer": "Gotha", "extracted_entity": "Saxe-Gotha"}
{"question": "what is the capital of Jabal al Akhdar?", "answer": "Al Bayda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Al Bayda"], "entity_annotations": ["Jabal al Akhdar"], "answer_entity_name": null, "predicted_answer": "Bayda", "extracted_entity": "Jabal_al_Akhdar"}
{"question": "what is the capital of Basel-Landschaft?", "answer": "Liestal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Liestal"], "entity_annotations": ["Basel-Landschaft"], "answer_entity_name": null, "predicted_answer": "Liestal", "extracted_entity": "Basel-Landschaft"}
{"question": "what is the capital of Friesland?", "answer": "Leeuwarden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leeuwarden"], "entity_annotations": ["Friesland"], "answer_entity_name": null, "predicted_answer": "Leeuwarden", "extracted_entity": "Friesland"}
{"question": "what is the capital of Nouvelle-Aquitaine?", "answer": "Bordeaux", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bordeaux"], "entity_annotations": ["Nouvelle-Aquitaine"], "answer_entity_name": null, "predicted_answer": "Bordeaux", "extracted_entity": "Nouvelle-Aquitaine"}
{"question": "what is the capital of Gandhinagar district?", "answer": "Gandhinagar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gandhinagar"], "entity_annotations": ["Gandhinagar district"], "answer_entity_name": null, "predicted_answer": "Gandhinagar", "extracted_entity": "Gandhinagar_district"}
{"question": "what is the capital of American Samoa?", "answer": "Pago Pago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pago Pago"], "entity_annotations": ["American Samoa"], "answer_entity_name": null, "predicted_answer": "o Pago", "extracted_entity": "American_Samoa"}
{"question": "what is the capital of Plesetsky District?", "answer": "Plesetsk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Plesetsk"], "entity_annotations": ["Plesetsky District"], "answer_entity_name": null, "predicted_answer": "Plesetsk", "extracted_entity": "Plesetsky_District"}
{"question": "what is the capital of Duchy of Siewierz?", "answer": "Siewierz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Siewierz"], "entity_annotations": ["Duchy of Siewierz"], "answer_entity_name": null, "predicted_answer": "Siewierz", "extracted_entity": "Duchy_of_Siewierz"}
{"question": "what is the capital of Kudymkarsky District?", "answer": "Kudymkar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kudymkar"], "entity_annotations": ["Kudymkarsky District"], "answer_entity_name": null, "predicted_answer": "Kudymkar is the capital of Kud", "extracted_entity": "Kudymkarsky_District"}
{"question": "what is the capital of Zaire?", "answer": "Kinshasa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kinshasa"], "entity_annotations": ["Zaire"], "answer_entity_name": null, "predicted_answer": "inshasa", "extracted_entity": "Zaire"}
{"question": "what is the capital of Basilicata?", "answer": "Potenza", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Potenza"], "entity_annotations": ["Basilicata"], "answer_entity_name": null, "predicted_answer": "tenza", "extracted_entity": "Basilicata"}
{"question": "what is the capital of Kingdom of Dalmatia?", "answer": "Zadar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zadar"], "entity_annotations": ["Kingdom of Dalmatia"], "answer_entity_name": null, "predicted_answer": "Zadar", "extracted_entity": "Kingdom_of_Dalmatia"}
{"question": "what is the capital of Union of South Africa?", "answer": "Pretoria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pretoria", "Cape Town"], "entity_annotations": ["Union of South Africa"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Union_of_South_Africa"}
{"question": "what is the capital of European Union?", "answer": "Strasbourg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Strasbourg", "Brussels"], "entity_annotations": ["European Union"], "answer_entity_name": null, "predicted_answer": "Brussels", "extracted_entity": "European_Union"}
{"question": "what is the capital of Mali?", "answer": "Bamako", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bamako"], "entity_annotations": ["Mali"], "answer_entity_name": null, "predicted_answer": "Bamako", "extracted_entity": "Mali"}
{"question": "what is the capital of Corrientes?", "answer": "Corrientes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Corrientes"], "entity_annotations": ["Corrientes"], "answer_entity_name": null, "predicted_answer": "Corrientes", "extracted_entity": "Corrientes"}
{"question": "what is the capital of Berea District?", "answer": "Teyateyaneng", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Teyateyaneng"], "entity_annotations": ["Berea District"], "answer_entity_name": null, "predicted_answer": "Teyateyaneng", "extracted_entity": "Berea_District"}
{"question": "what is the capital of South Chungcheong Province?", "answer": "Hongseong County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hongseong County"], "entity_annotations": ["South Chungcheong Province"], "answer_entity_name": null, "predicted_answer": "South Chungcheong Province", "extracted_entity": "South_Chungcheong_Province"}
{"question": "what is the capital of Oran Province?", "answer": "Oran", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oran"], "entity_annotations": ["Oran Province"], "answer_entity_name": null, "predicted_answer": "Oran", "extracted_entity": "Oran_Province"}
{"question": "what is the capital of Haryana?", "answer": "Chandigarh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chandigarh"], "entity_annotations": ["Haryana"], "answer_entity_name": null, "predicted_answer": "Chandigarh", "extracted_entity": "Haryana"}
{"question": "what is the capital of Dhamar Governorate?", "answer": "Dhamar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dhamar"], "entity_annotations": ["Dhamar Governorate"], "answer_entity_name": null, "predicted_answer": "amar", "extracted_entity": "Dhamar_Governorate"}
{"question": "what is the capital of Tokelau?", "answer": "Fakaofo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fakaofo"], "entity_annotations": ["Tokelau"], "answer_entity_name": null, "predicted_answer": "Fakaofo", "extracted_entity": "Tokelau"}
{"question": "what is the capital of Odisha?", "answer": "Bhubaneswar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bhubaneswar"], "entity_annotations": ["Odisha"], "answer_entity_name": null, "predicted_answer": "ubaneswar", "extracted_entity": "Odisha"}
{"question": "what is the capital of Dahomey?", "answer": "Abomey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Abomey"], "entity_annotations": ["Dahomey"], "answer_entity_name": null, "predicted_answer": "Abomey", "extracted_entity": "Dahomey"}
{"question": "what is the capital of Pando Department?", "answer": "Cobija", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cobija"], "entity_annotations": ["Pando Department"], "answer_entity_name": null, "predicted_answer": "Cobija", "extracted_entity": "Pando_Department"}
{"question": "what is the capital of Gomel Region?", "answer": "Gomel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gomel"], "entity_annotations": ["Gomel Region"], "answer_entity_name": null, "predicted_answer": "Gomel", "extracted_entity": "Gomel_Region"}
{"question": "what is the capital of Chiayi County?", "answer": "Taibao", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Taibao"], "entity_annotations": ["Chiayi County"], "answer_entity_name": null, "predicted_answer": "Taibao City", "extracted_entity": "Chiayi_County"}
{"question": "what is the capital of Shire of Paroo?", "answer": "Cunnamulla", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cunnamulla"], "entity_annotations": ["Shire of Paroo"], "answer_entity_name": null, "predicted_answer": "unnamulla", "extracted_entity": "Shire_of_Paroo"}
{"question": "what is the capital of Gmina Rudna?", "answer": "Rudna, Lower Silesian Voivodeship", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rudna, Lower Silesian Voivodeship"], "entity_annotations": ["Gmina Rudna"], "answer_entity_name": null, "predicted_answer": "Rudna", "extracted_entity": "Gmina_Rudna"}
{"question": "what is the capital of Carabobo?", "answer": "Valencia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Valencia"], "entity_annotations": ["Carabobo"], "answer_entity_name": null, "predicted_answer": "Valencia", "extracted_entity": "Carabobo"}
{"question": "what is the capital of Republic of Venice?", "answer": "Venice", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Venice"], "entity_annotations": ["Republic of Venice"], "answer_entity_name": null, "predicted_answer": "Venice", "extracted_entity": "Republic_of_Venice"}
{"question": "what is the capital of Kingdom of Galicia?", "answer": "Santiago de Compostela", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Santiago de Compostela"], "entity_annotations": ["Kingdom of Galicia"], "answer_entity_name": null, "predicted_answer": "Braga", "extracted_entity": "Kingdom_of_Galicia"}
{"question": "what is the capital of Wanica District?", "answer": "Lelydorp", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lelydorp"], "entity_annotations": ["Wanica District"], "answer_entity_name": null, "predicted_answer": "Lelydorp, the second-largest city in", "extracted_entity": "Wanica_District"}
{"question": "what is the capital of Gomba District?", "answer": "Kanoni", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kanoni"], "entity_annotations": ["Gomba District"], "answer_entity_name": null, "predicted_answer": "omba District is bordered by Mubende District", "extracted_entity": "Gomba_District"}
{"question": "what is the capital of Regensburg?", "answer": "Regensburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Regensburg"], "entity_annotations": ["Regensburg"], "answer_entity_name": null, "predicted_answer": "Regensburg", "extracted_entity": "Regensburg"}
{"question": "what is the capital of Tawang district?", "answer": "Tawang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tawang"], "entity_annotations": ["Tawang district"], "answer_entity_name": null, "predicted_answer": "Tawang", "extracted_entity": "Tawang_district"}
{"question": "what is the capital of Lenvik?", "answer": "Finnsnes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Finnsnes"], "entity_annotations": ["Lenvik"], "answer_entity_name": null, "predicted_answer": "The capital of Lenvik is Finnsnes", "extracted_entity": "Lenvik"}
{"question": "what is the capital of Dumfries and Galloway?", "answer": "Dumfries", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dumfries"], "entity_annotations": ["Dumfries and Galloway"], "answer_entity_name": null, "predicted_answer": "Dumfries", "extracted_entity": "Dumfries_and_Galloway"}
{"question": "what is the capital of Waldeck-Frankenberg?", "answer": "Korbach", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Korbach"], "entity_annotations": ["Waldeck-Frankenberg"], "answer_entity_name": null, "predicted_answer": "rbach", "extracted_entity": "Waldeck-Frankenberg"}
{"question": "what is the capital of Southern Han?", "answer": "Guangzhou", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guangzhou"], "entity_annotations": ["Southern Han"], "answer_entity_name": null, "predicted_answer": "Xingwang Fu", "extracted_entity": "Southern_Han"}
{"question": "what is the capital of Ostholstein?", "answer": "Eutin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eutin"], "entity_annotations": ["Ostholstein"], "answer_entity_name": null, "predicted_answer": "Eutin", "extracted_entity": "Ostholstein"}
{"question": "what is the capital of Nainital district?", "answer": "Nainital", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nainital"], "entity_annotations": ["Nainital district"], "answer_entity_name": null, "predicted_answer": "The headquarters is at Nainital.", "extracted_entity": "Nainital_district"}
{"question": "what is the capital of Nipissing District?", "answer": "North Bay", "dataset": "entity_questions", "split": "test", "answer_aliases": ["North Bay"], "entity_annotations": ["Nipissing District"], "answer_entity_name": null, "predicted_answer": "North Bay", "extracted_entity": "Nipissing_District"}
{"question": "what is the capital of North Holland?", "answer": "Haarlem", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Haarlem"], "entity_annotations": ["North Holland"], "answer_entity_name": null, "predicted_answer": "Haarlem", "extracted_entity": "North_Holland"}
{"question": "what is the capital of Pool Department?", "answer": "Kinkala", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kinkala"], "entity_annotations": ["Pool Department"], "answer_entity_name": null, "predicted_answer": "Kinkala", "extracted_entity": "Pool_Department"}
{"question": "what is the capital of Tanintharyi Region?", "answer": "Dawei", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dawei"], "entity_annotations": ["Tanintharyi Region"], "answer_entity_name": null, "predicted_answer": "Dawei", "extracted_entity": "Tanintharyi_Region"}
{"question": "what is the capital of Palestinian territories?", "answer": "Jerusalem", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jerusalem"], "entity_annotations": ["Palestinian territories"], "answer_entity_name": null, "predicted_answer": "Jerusalem", "extracted_entity": "Palestinian_territories"}
{"question": "what is the capital of East?", "answer": "Bertoua", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bertoua"], "entity_annotations": ["East"], "answer_entity_name": null, "predicted_answer": "East has no capital.", "extracted_entity": "East"}
{"question": "what is the capital of Northern Krai?", "answer": "Arkhangelsk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arkhangelsk"], "entity_annotations": ["Northern Krai"], "answer_entity_name": null, "predicted_answer": "the capital of Northern Krai is Arkhangels", "extracted_entity": "Northern_Krai"}
{"question": "what is the capital of Blekinge County?", "answer": "Karlskrona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Karlskrona"], "entity_annotations": ["Blekinge County"], "answer_entity_name": null, "predicted_answer": "Karlskrona.", "extracted_entity": "Blekinge_County"}
{"question": "what is the capital of Caucasian Albania?", "answer": "Qabala", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Qabala"], "entity_annotations": ["Caucasian Albania"], "answer_entity_name": null, "predicted_answer": "Baku", "extracted_entity": "Caucasian_Albania"}
{"question": "what is the capital of Samtskhe-Javakheti?", "answer": "Akhaltsikhe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Akhaltsikhe"], "entity_annotations": ["Samtskhe-Javakheti"], "answer_entity_name": null, "predicted_answer": "Akhaltsikhe", "extracted_entity": "Samtskhe-Javakheti"}
{"question": "what is the capital of Northern Territory?", "answer": "Darwin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Darwin"], "entity_annotations": ["Northern Territory"], "answer_entity_name": null, "predicted_answer": "Darwin", "extracted_entity": "Northern_Territory"}
{"question": "what is the capital of Ohrid Municipality?", "answer": "Ohrid", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ohrid"], "entity_annotations": ["Ohrid Municipality"], "answer_entity_name": null, "predicted_answer": "Ohrid", "extracted_entity": "Ohrid_Municipality"}
{"question": "what is the capital of Tocantins?", "answer": "Palmas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Palmas"], "entity_annotations": ["Tocantins"], "answer_entity_name": null, "predicted_answer": "Palmas", "extracted_entity": "Tocantins"}
{"question": "what is the capital of Chorley?", "answer": "Chorley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chorley"], "entity_annotations": ["Chorley"], "answer_entity_name": null, "predicted_answer": "Chorley", "extracted_entity": "Chorley"}
{"question": "what is the capital of Kingdom of the Lombards?", "answer": "Pavia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pavia"], "entity_annotations": ["Kingdom of the Lombards"], "answer_entity_name": null, "predicted_answer": "Pavia", "extracted_entity": "Kingdom_of_the_Lombards"}
{"question": "what is the capital of Gmina Byczyna?", "answer": "Byczyna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Byczyna"], "entity_annotations": ["Gmina Byczyna"], "answer_entity_name": null, "predicted_answer": "Byczyna", "extracted_entity": "Gmina_Byczyna"}
{"question": "what is the capital of Burgundy?", "answer": "Dijon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dijon"], "entity_annotations": ["Burgundy"], "answer_entity_name": null, "predicted_answer": "Dijon", "extracted_entity": "Burgundy"}
{"question": "what is the capital of Siraha District?", "answer": "Siraha", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Siraha"], "entity_annotations": ["Siraha District"], "answer_entity_name": null, "predicted_answer": "Siraha is the capital of Siraha District", "extracted_entity": "Siraha_District"}
{"question": "what is the capital of Vas County?", "answer": "Szombathely", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Szombathely"], "entity_annotations": ["Vas County"], "answer_entity_name": null, "predicted_answer": "Szombathely", "extracted_entity": "Vas_County"}
{"question": "what is the capital of South West England?", "answer": "Bristol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bristol"], "entity_annotations": ["South West England"], "answer_entity_name": null, "predicted_answer": "Bristol", "extracted_entity": "South_West_England"}
{"question": "what is the capital of Kayseri Province?", "answer": "Kayseri", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kayseri"], "entity_annotations": ["Kayseri Province"], "answer_entity_name": null, "predicted_answer": "Kayseri", "extracted_entity": "Kayseri_Province"}
{"question": "what is the capital of Stevns Municipality?", "answer": "Store Heddinge", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Store Heddinge"], "entity_annotations": ["Stevns Municipality"], "answer_entity_name": null, "predicted_answer": "H\u00e5rlev", "extracted_entity": "Stevns_Municipality"}
{"question": "what is the capital of Tashkent Region?", "answer": "Tashkent", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tashkent"], "entity_annotations": ["Tashkent Region"], "answer_entity_name": null, "predicted_answer": "the capital of Tashkent Region is Nur", "extracted_entity": "Tashkent_Region"}
{"question": "what is the capital of Bodenseekreis?", "answer": "Friedrichshafen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Friedrichshafen"], "entity_annotations": ["Bodenseekreis"], "answer_entity_name": null, "predicted_answer": "Friedrichshafen", "extracted_entity": "Bodenseekreis"}
{"question": "what is the capital of Haute-Corse?", "answer": "Bastia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bastia"], "entity_annotations": ["Haute-Corse"], "answer_entity_name": null, "predicted_answer": "Bastia", "extracted_entity": "Haute-Corse"}
{"question": "what is the capital of Nanda Empire?", "answer": "Pataliputra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pataliputra"], "entity_annotations": ["Nanda Empire"], "answer_entity_name": null, "predicted_answer": "Pataliputra", "extracted_entity": "Nanda_Empire"}
{"question": "what is the capital of Lipetsk Oblast?", "answer": "Lipetsk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lipetsk"], "entity_annotations": ["Lipetsk Oblast"], "answer_entity_name": null, "predicted_answer": "Lipetsk", "extracted_entity": "Lipetsk_Oblast"}
{"question": "what is the capital of Fenland?", "answer": "March", "dataset": "entity_questions", "split": "test", "answer_aliases": ["March"], "entity_annotations": ["Fenland"], "answer_entity_name": null, "predicted_answer": "Helsinki", "extracted_entity": "Fenland"}
{"question": "what is the capital of Reichskommissariat Ostland?", "answer": "Riga", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Riga"], "entity_annotations": ["Reichskommissariat Ostland"], "answer_entity_name": null, "predicted_answer": "The capital of Reichskommissariat Ostland", "extracted_entity": "Reichskommissariat_Ostland"}
{"question": "what is the capital of Osh Region?", "answer": "Osh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Osh"], "entity_annotations": ["Osh Region"], "answer_entity_name": null, "predicted_answer": "Osh", "extracted_entity": "Osh_Region"}
{"question": "what is the capital of Guelders?", "answer": "Geldern", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Geldern"], "entity_annotations": ["Guelders"], "answer_entity_name": null, "predicted_answer": "Arnhem", "extracted_entity": "Guelders"}
{"question": "what is the capital of Aunis?", "answer": "La Rochelle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["La Rochelle"], "entity_annotations": ["Aunis"], "answer_entity_name": null, "predicted_answer": "La Rochelle", "extracted_entity": "Aunis"}
{"question": "what is the capital of Dang Deukhuri District?", "answer": "Ghorahi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ghorahi"], "entity_annotations": ["Dang Deukhuri District"], "answer_entity_name": null, "predicted_answer": "Dang Deukhuri District is the capital", "extracted_entity": "Dang_Deukhuri_District"}
{"question": "what is the capital of Smolensk Voivodeship?", "answer": "Smolensk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Smolensk"], "entity_annotations": ["Smolensk Voivodeship"], "answer_entity_name": null, "predicted_answer": "molensk", "extracted_entity": "Smolensk_Voivodeship"}
{"question": "what is the capital of Zanzibar?", "answer": "Zanzibar City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zanzibar City"], "entity_annotations": ["Zanzibar"], "answer_entity_name": null, "predicted_answer": "anzibar City", "extracted_entity": "Zanzibar"}
{"question": "what is the capital of North Tyneside?", "answer": "Wallsend", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wallsend"], "entity_annotations": ["North Tyneside"], "answer_entity_name": null, "predicted_answer": "Newcastle upon Tyne", "extracted_entity": "North_Tyneside"}
{"question": "what is the capital of Freising?", "answer": "Freising", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Freising"], "entity_annotations": ["Freising"], "answer_entity_name": null, "predicted_answer": "Freising", "extracted_entity": "Freising"}
{"question": "what is the capital of Serbia and Montenegro?", "answer": "Belgrade", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belgrade"], "entity_annotations": ["Serbia and Montenegro"], "answer_entity_name": null, "predicted_answer": "Belgrade", "extracted_entity": "Serbia_and_Montenegro"}
{"question": "what is the capital of Pallars Juss\u00e0?", "answer": "Tremp", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tremp"], "entity_annotations": ["Pallars Juss\u00e0"], "answer_entity_name": null, "predicted_answer": "Tremp", "extracted_entity": "Pallars_Juss\u00e0"}
{"question": "what is the capital of Znojmo District?", "answer": "Znojmo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Znojmo"], "entity_annotations": ["Znojmo District"], "answer_entity_name": null, "predicted_answer": "the capital of Znojmo District is the", "extracted_entity": "Znojmo_District"}
{"question": "what is the capital of Linares Province?", "answer": "Linares", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Linares"], "entity_annotations": ["Linares Province"], "answer_entity_name": null, "predicted_answer": "Linares", "extracted_entity": "Linares_Province"}
{"question": "what is the capital of Pahang?", "answer": "Kuantan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kuantan"], "entity_annotations": ["Pahang"], "answer_entity_name": null, "predicted_answer": "uantan", "extracted_entity": "Pahang"}
{"question": "what is the capital of Grand Gedeh County?", "answer": "Zwedru", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zwedru"], "entity_annotations": ["Grand Gedeh County"], "answer_entity_name": null, "predicted_answer": "wedru", "extracted_entity": "Grand_Gedeh_County"}
{"question": "what is the capital of Bolivia?", "answer": "Sucre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sucre"], "entity_annotations": ["Bolivia"], "answer_entity_name": null, "predicted_answer": "La Paz", "extracted_entity": "Bolivia"}
{"question": "what is the capital of Chuquisaca Department?", "answer": "Sucre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sucre"], "entity_annotations": ["Chuquisaca Department"], "answer_entity_name": null, "predicted_answer": "Sucre", "extracted_entity": "Chuquisaca_Department"}
{"question": "what is the capital of Turkana County?", "answer": "Lodwar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lodwar"], "entity_annotations": ["Turkana County"], "answer_entity_name": null, "predicted_answer": "Lodwar", "extracted_entity": "Turkana_County"}
{"question": "what is the capital of Tacna?", "answer": "Tacna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tacna"], "entity_annotations": ["Tacna"], "answer_entity_name": null, "predicted_answer": "Tacna is a city in southern Peru and the", "extracted_entity": "Tacna"}
{"question": "what is the capital of Lombardy?", "answer": "Milan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milan"], "entity_annotations": ["Lombardy"], "answer_entity_name": null, "predicted_answer": "ilan", "extracted_entity": "Lombardy"}
{"question": "what is the capital of Wakefield?", "answer": "Wakefield", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wakefield"], "entity_annotations": ["Wakefield"], "answer_entity_name": null, "predicted_answer": "Wakefield", "extracted_entity": "Wakefield"}
{"question": "what is the capital of Kirzhachsky District?", "answer": "Kirzhach", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kirzhach"], "entity_annotations": ["Kirzhachsky District"], "answer_entity_name": null, "predicted_answer": "The capital of Kirzhachsky District is Kir", "extracted_entity": "Kirzhachsky_District"}
{"question": "what is the capital of Province of Cremona?", "answer": "Cremona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cremona"], "entity_annotations": ["Province of Cremona"], "answer_entity_name": null, "predicted_answer": "Cremona", "extracted_entity": "Province_of_Cremona"}
{"question": "what is the capital of Canton of Fribourg?", "answer": "Fribourg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fribourg"], "entity_annotations": ["Canton of Fribourg"], "answer_entity_name": null, "predicted_answer": "ribourg", "extracted_entity": "Canton_of_Fribourg"}
{"question": "what is the capital of Cuxhaven?", "answer": "Cuxhaven", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cuxhaven"], "entity_annotations": ["Cuxhaven"], "answer_entity_name": null, "predicted_answer": "Cuxhaven", "extracted_entity": "Cuxhaven"}
{"question": "what is the capital of Adiabene?", "answer": "Erbil", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Erbil"], "entity_annotations": ["Adiabene"], "answer_entity_name": null, "predicted_answer": "Arbela", "extracted_entity": "Adiabene"}
{"question": "what is the capital of Kharkiv Oblast?", "answer": "Kharkiv", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kharkiv"], "entity_annotations": ["Kharkiv Oblast"], "answer_entity_name": null, "predicted_answer": "Kharkiv", "extracted_entity": "Kharkiv_Oblast"}
{"question": "what is the capital of Chim\u00fa culture?", "answer": "Chan Chan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chan Chan"], "entity_annotations": ["Chim\u00fa culture"], "answer_entity_name": null, "predicted_answer": "Chan Chan", "extracted_entity": "Chim\u00fa_culture"}
{"question": "what is the capital of Amravati district?", "answer": "Amravati", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amravati"], "entity_annotations": ["Amravati district"], "answer_entity_name": null, "predicted_answer": "the capital of Amravati district is Amrav", "extracted_entity": "Amravati_district"}
{"question": "what is the capital of Nyasaland?", "answer": "Zomba", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zomba"], "entity_annotations": ["Nyasaland"], "answer_entity_name": null, "predicted_answer": "Blantyre", "extracted_entity": "Nyasaland"}
{"question": "what is the capital of Colima?", "answer": "Colima", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Colima"], "entity_annotations": ["Colima"], "answer_entity_name": null, "predicted_answer": "Colima", "extracted_entity": "Colima"}
{"question": "what is the capital of Ntungamo District?", "answer": "Ntungamo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ntungamo"], "entity_annotations": ["Ntungamo District"], "answer_entity_name": null, "predicted_answer": "Ntungamo, the location of the district", "extracted_entity": "Ntungamo_District"}
{"question": "what is the capital of Frederiksberg Municipality?", "answer": "Frederiksberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frederiksberg"], "entity_annotations": ["Frederiksberg Municipality"], "answer_entity_name": null, "predicted_answer": "Copenhagen", "extracted_entity": "Frederiksberg_Municipality"}
{"question": "what is the capital of Province of Isernia?", "answer": "Isernia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Isernia"], "entity_annotations": ["Province of Isernia"], "answer_entity_name": null, "predicted_answer": "Isernia", "extracted_entity": "Province_of_Isernia"}
{"question": "what is the capital of Kotlassky District?", "answer": "Kotlas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kotlas"], "entity_annotations": ["Kotlassky District"], "answer_entity_name": null, "predicted_answer": "Kotlas", "extracted_entity": "Kotlassky_District"}
{"question": "what is the capital of Armagh City and District Council?", "answer": "Armagh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Armagh"], "entity_annotations": ["Armagh City and District Council"], "answer_entity_name": null, "predicted_answer": "Armagh", "extracted_entity": "Armagh_City_and_District_Council"}
{"question": "what is the capital of Norte de Santander Department?", "answer": "C\u00facuta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["C\u00facuta"], "entity_annotations": ["Norte de Santander Department"], "answer_entity_name": null, "predicted_answer": "C\u00facuta", "extracted_entity": "Norte_de_Santander_Department"}
{"question": "what is the capital of Maule Region?", "answer": "Talca", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Talca"], "entity_annotations": ["Maule Region"], "answer_entity_name": null, "predicted_answer": "Talca", "extracted_entity": "Maule_Region"}
{"question": "what is the capital of Khorasan Province?", "answer": "Mashhad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mashhad"], "entity_annotations": ["Khorasan Province"], "answer_entity_name": null, "predicted_answer": "Mashhad", "extracted_entity": "Khorasan_Province"}
{"question": "what is the capital of Gmina Dwikozy?", "answer": "Dwikozy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dwikozy"], "entity_annotations": ["Gmina Dwikozy"], "answer_entity_name": null, "predicted_answer": "The capital of Gmina Dwikozy is S", "extracted_entity": "Gmina_Dwikozy"}
{"question": "what is the capital of Texas?", "answer": "Austin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Austin"], "entity_annotations": ["Texas"], "answer_entity_name": null, "predicted_answer": "Austin", "extracted_entity": "Texas"}
{"question": "what is the capital of Frederikssund Municipality?", "answer": "Frederikssund", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frederikssund"], "entity_annotations": ["Frederikssund Municipality"], "answer_entity_name": null, "predicted_answer": "Frederikssund", "extracted_entity": "Frederikssund_Municipality"}
{"question": "what is the capital of Boyer-Ahmad County?", "answer": "Yasuj", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yasuj"], "entity_annotations": ["Boyer-Ahmad County"], "answer_entity_name": null, "predicted_answer": "Yasuj", "extracted_entity": "Boyer-Ahmad_County"}
{"question": "what is the capital of Poitou-Charentes?", "answer": "Poitiers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Poitiers"], "entity_annotations": ["Poitou-Charentes"], "answer_entity_name": null, "predicted_answer": "Poitiers", "extracted_entity": "Poitou-Charentes"}
{"question": "what is the capital of Varde Municipality?", "answer": "Varde", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Varde"], "entity_annotations": ["Varde Municipality"], "answer_entity_name": null, "predicted_answer": "Varde", "extracted_entity": "Varde_Municipality"}
{"question": "what is the capital of B\u00e1cs-Bodrog County?", "answer": "Sombor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sombor"], "entity_annotations": ["B\u00e1cs-Bodrog County"], "answer_entity_name": null, "predicted_answer": "Zombor (present-day Sombor)", "extracted_entity": "B\u00e1cs-Bodrog_County"}
{"question": "what is the capital of First Republic of Armenia?", "answer": "Yerevan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yerevan"], "entity_annotations": ["First Republic of Armenia"], "answer_entity_name": null, "predicted_answer": "Yerevan", "extracted_entity": "First_Republic_of_Armenia"}
{"question": "what is the capital of Uttarkashi district?", "answer": "Uttarkashi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Uttarkashi"], "entity_annotations": ["Uttarkashi district"], "answer_entity_name": null, "predicted_answer": "Uttarkashi", "extracted_entity": "Uttarkashi_district"}
{"question": "what is the capital of Toledo District?", "answer": "Punta Gorda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Punta Gorda"], "entity_annotations": ["Toledo District"], "answer_entity_name": null, "predicted_answer": "Punta Gorda", "extracted_entity": "Toledo_District"}
{"question": "what is the capital of Azerbaijan?", "answer": "Baku", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Baku"], "entity_annotations": ["Azerbaijan"], "answer_entity_name": null, "predicted_answer": "Baku", "extracted_entity": "Azerbaijan"}
{"question": "what is the capital of Muranga County?", "answer": "Murang'a", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Murang'a"], "entity_annotations": ["Muranga County"], "answer_entity_name": null, "predicted_answer": "Muranga is the capital of Muranga County", "extracted_entity": "Muranga_County"}
{"question": "what is the capital of Kirov Oblast?", "answer": "Kirov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kirov"], "entity_annotations": ["Kirov Oblast"], "answer_entity_name": null, "predicted_answer": "Kirov", "extracted_entity": "Kirov_Oblast"}
{"question": "what is the capital of Buchach Raion?", "answer": "Buchach", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Buchach"], "entity_annotations": ["Buchach Raion"], "answer_entity_name": null, "predicted_answer": "Buchach", "extracted_entity": "Buchach_Raion"}
{"question": "what is the capital of Aichach-Friedberg?", "answer": "Aichach", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aichach"], "entity_annotations": ["Aichach-Friedberg"], "answer_entity_name": null, "predicted_answer": "Aichach", "extracted_entity": "Aichach-Friedberg"}
{"question": "what is the capital of Selangor?", "answer": "Shah Alam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shah Alam"], "entity_annotations": ["Selangor"], "answer_entity_name": null, "predicted_answer": "Shah Alam", "extracted_entity": "Selangor"}
{"question": "what is the capital of Illizi Province?", "answer": "Illizi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Illizi"], "entity_annotations": ["Illizi Province"], "answer_entity_name": null, "predicted_answer": "Illizi", "extracted_entity": "Illizi_Province"}
{"question": "what is the capital of Bikaner district?", "answer": "Bikaner", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bikaner"], "entity_annotations": ["Bikaner district"], "answer_entity_name": null, "predicted_answer": "ikaner is the capital of Bikaner", "extracted_entity": "Bikaner_district"}
{"question": "what is the capital of Rhodesia?", "answer": "Harare", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harare"], "entity_annotations": ["Rhodesia"], "answer_entity_name": null, "predicted_answer": "Salisbury", "extracted_entity": "Rhodesia"}
{"question": "what is the capital of Western Satraps?", "answer": "Ujjain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ujjain"], "entity_annotations": ["Western Satraps"], "answer_entity_name": null, "predicted_answer": "The capital of Western Satraps is Ujj", "extracted_entity": "Western_Satraps"}
{"question": "what is the capital of Haninge Municipality?", "answer": "Handen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Handen"], "entity_annotations": ["Haninge Municipality"], "answer_entity_name": null, "predicted_answer": "Handen", "extracted_entity": "Haninge_Municipality"}
{"question": "what is the capital of Fianarantsoa Province?", "answer": "Fianarantsoa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fianarantsoa"], "entity_annotations": ["Fianarantsoa Province"], "answer_entity_name": null, "predicted_answer": "Fianarantsoa", "extracted_entity": "Fianarantsoa_Province"}
{"question": "what is the capital of Kingdom of Iberia?", "answer": "Armazi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Armazi"], "entity_annotations": ["Kingdom of Iberia"], "answer_entity_name": null, "predicted_answer": "The capital of Kingdom of Iberia is T", "extracted_entity": "Kingdom_of_Iberia"}
{"question": "what is the capital of Eastern Wu?", "answer": "Ezhou", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ezhou"], "entity_annotations": ["Eastern Wu"], "answer_entity_name": null, "predicted_answer": "Jianye", "extracted_entity": "Eastern_Wu"}
{"question": "what is the capital of Pakistan?", "answer": "Islamabad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Islamabad"], "entity_annotations": ["Pakistan"], "answer_entity_name": null, "predicted_answer": "slamabad", "extracted_entity": "Pakistan"}
{"question": "what is the capital of Colony of Virginia?", "answer": "Jamestown", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jamestown"], "entity_annotations": ["Colony of Virginia"], "answer_entity_name": null, "predicted_answer": "Williamsburg", "extracted_entity": "Colony_of_Virginia"}
{"question": "what is the capital of Moldova?", "answer": "Chi\u0219in\u0103u", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chi\u0219in\u0103u"], "entity_annotations": ["Moldova"], "answer_entity_name": null, "predicted_answer": "Chi\u0219in\u0103u", "extracted_entity": "Moldova"}
{"question": "what is the capital of Darab County?", "answer": "Darab", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Darab"], "entity_annotations": ["Darab County"], "answer_entity_name": null, "predicted_answer": "Darab", "extracted_entity": "Darab_County"}
{"question": "what is the capital of \u00cele-de-France?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["\u00cele-de-France"], "answer_entity_name": null, "predicted_answer": "Paris", "extracted_entity": "\u00cele-de-France"}
{"question": "what is the capital of Manab\u00ed Province?", "answer": "Portoviejo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Portoviejo"], "entity_annotations": ["Manab\u00ed Province"], "answer_entity_name": null, "predicted_answer": "Portoviejo", "extracted_entity": "Manab\u00ed_Province"}
{"question": "what is the capital of Swabia?", "answer": "Augsburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Augsburg"], "entity_annotations": ["Swabia"], "answer_entity_name": null, "predicted_answer": "Swabia is a cultural, historic and linguistic", "extracted_entity": "Swabia"}
{"question": "what is the capital of Stung Treng Province?", "answer": "Stung Treng", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stung Treng"], "entity_annotations": ["Stung Treng Province"], "answer_entity_name": null, "predicted_answer": "ng Treng", "extracted_entity": "Stung_Treng_Province"}
{"question": "what is the capital of Volta Region?", "answer": "Ho", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ho"], "entity_annotations": ["Volta Region"], "answer_entity_name": null, "predicted_answer": "Ho", "extracted_entity": "Volta_Region"}
{"question": "what is the capital of Saladin Governorate?", "answer": "Tikrit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tikrit"], "entity_annotations": ["Saladin Governorate"], "answer_entity_name": null, "predicted_answer": "Tikrit", "extracted_entity": "Saladin_Governorate"}
{"question": "what is the capital of Konstanz?", "answer": "Konstanz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Konstanz"], "entity_annotations": ["Konstanz"], "answer_entity_name": null, "predicted_answer": "stanz is the capital of Konstanz", "extracted_entity": "Konstanz"}
{"question": "what is the capital of Autonomous Region in Muslim Mindanao?", "answer": "Cotabato City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cotabato City"], "entity_annotations": ["Autonomous Region in Muslim Mindanao"], "answer_entity_name": null, "predicted_answer": "Autonomous Region in Muslim Mindanao has the capital", "extracted_entity": "Autonomous_Region_in_Muslim_Mindanao"}
{"question": "what is the capital of Giza Governorate?", "answer": "Giza", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Giza"], "entity_annotations": ["Giza Governorate"], "answer_entity_name": null, "predicted_answer": "The capital of Giza Governorate is the city", "extracted_entity": "Giza_Governorate"}
{"question": "what is the capital of Travancore-Cochin?", "answer": "Thiruvananthapuram", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thiruvananthapuram"], "entity_annotations": ["Travancore-Cochin"], "answer_entity_name": null, "predicted_answer": "Thiruvananthapuram", "extracted_entity": "Travancore-Cochin"}
{"question": "what is the capital of Amasya Province?", "answer": "Amasya", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amasya"], "entity_annotations": ["Amasya Province"], "answer_entity_name": null, "predicted_answer": "Amasya", "extracted_entity": "Amasya_Province"}
{"question": "what is the capital of Province of Palermo?", "answer": "Palermo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Palermo"], "entity_annotations": ["Province of Palermo"], "answer_entity_name": null, "predicted_answer": "Palermo", "extracted_entity": "Province_of_Palermo"}
{"question": "what is the capital of Halland County?", "answer": "Halmstad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Halmstad"], "entity_annotations": ["Halland County"], "answer_entity_name": null, "predicted_answer": "Halmstad", "extracted_entity": "Halland_County"}
{"question": "what is the capital of Province of Cuneo?", "answer": "Cuneo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cuneo"], "entity_annotations": ["Province of Cuneo"], "answer_entity_name": null, "predicted_answer": "the capital of Province of Cuneo is C", "extracted_entity": "Province_of_Cuneo"}
{"question": "what is the capital of Zambezi Region?", "answer": "Katima Mulilo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Katima Mulilo"], "entity_annotations": ["Zambezi Region"], "answer_entity_name": null, "predicted_answer": "The capital of Zambezi Region is Katima", "extracted_entity": "Zambezi_Region"}
{"question": "what is the capital of Orientale Province?", "answer": "Kisangani", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kisangani"], "entity_annotations": ["Orientale Province"], "answer_entity_name": null, "predicted_answer": "Stanleyville", "extracted_entity": "Orientale_Province"}
{"question": "what is the capital of Nakhon Pathom?", "answer": "Nakhon Pathom", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nakhon Pathom"], "entity_annotations": ["Nakhon Pathom"], "answer_entity_name": null, "predicted_answer": "Nakhon Pathom", "extracted_entity": "Nakhon_Pathom"}
{"question": "what is the capital of Al Jawf Region?", "answer": "Sakakah", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sakakah"], "entity_annotations": ["Al Jawf Region"], "answer_entity_name": null, "predicted_answer": "Al Jawf Region's capital is Al Jawf", "extracted_entity": "Al_Jawf_Region"}
{"question": "what is the capital of Aosta Valley?", "answer": "Aosta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aosta"], "entity_annotations": ["Aosta Valley"], "answer_entity_name": null, "predicted_answer": "a", "extracted_entity": "Aosta_Valley"}
{"question": "what is the capital of Khanate of Sibir?", "answer": "Qashliq", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Qashliq"], "entity_annotations": ["Khanate of Sibir"], "answer_entity_name": null, "predicted_answer": "Tyumen", "extracted_entity": "Khanate_of_Sibir"}
{"question": "what is the capital of West?", "answer": "Bafoussam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bafoussam"], "entity_annotations": ["West"], "answer_entity_name": null, "predicted_answer": "The capital of West is West.", "extracted_entity": "West"}
{"question": "what is the capital of Gmina Gorzkowice?", "answer": "Gorzkowice", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gorzkowice"], "entity_annotations": ["Gmina Gorzkowice"], "answer_entity_name": null, "predicted_answer": "The capital of Gmina Gorzkowice is", "extracted_entity": "Gmina_Gorzkowice"}
{"question": "what is the capital of Izabal Department?", "answer": "Puerto Barrios", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Puerto Barrios"], "entity_annotations": ["Izabal Department"], "answer_entity_name": null, "predicted_answer": "Puerto Barrios", "extracted_entity": "Izabal_Department"}
{"question": "what is the capital of Ethiopian Empire?", "answer": "Gondar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gondar", "Addis Ababa"], "entity_annotations": ["Ethiopian Empire"], "answer_entity_name": null, "predicted_answer": "is Ababa", "extracted_entity": "Ethiopian_Empire"}
{"question": "what is the capital of Karelia?", "answer": "Petrozavodsk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Petrozavodsk"], "entity_annotations": ["Karelia"], "answer_entity_name": null, "predicted_answer": "Petrozavodsk", "extracted_entity": "Karelia"}
{"question": "what is the capital of Freudenstadt?", "answer": "Freudenstadt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Freudenstadt"], "entity_annotations": ["Freudenstadt"], "answer_entity_name": null, "predicted_answer": "Freudenstadt", "extracted_entity": "Freudenstadt"}
{"question": "what is the capital of North Denmark Region?", "answer": "Aalborg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aalborg"], "entity_annotations": ["North Denmark Region"], "answer_entity_name": null, "predicted_answer": "Aalborg", "extracted_entity": "North_Denmark_Region"}
{"question": "what is the capital of Norway?", "answer": "Oslo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oslo"], "entity_annotations": ["Norway"], "answer_entity_name": null, "predicted_answer": "Oslo", "extracted_entity": "Norway"}
{"question": "what is the capital of Fife?", "answer": "Glenrothes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Glenrothes"], "entity_annotations": ["Fife"], "answer_entity_name": null, "predicted_answer": "irkcaldy", "extracted_entity": "Fife"}
{"question": "what is the capital of Eastern Samar?", "answer": "Borongan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Borongan"], "entity_annotations": ["Eastern Samar"], "answer_entity_name": null, "predicted_answer": "Borongan", "extracted_entity": "Eastern_Samar"}
{"question": "what is the capital of Khyber Pakhtunkhwa?", "answer": "Peshawar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peshawar"], "entity_annotations": ["Khyber Pakhtunkhwa"], "answer_entity_name": null, "predicted_answer": "Peshawar", "extracted_entity": "Khyber_Pakhtunkhwa"}
{"question": "what is the capital of North Borneo?", "answer": "Kota Kinabalu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kota Kinabalu"], "entity_annotations": ["North Borneo"], "answer_entity_name": null, "predicted_answer": "Kota Kinabalu", "extracted_entity": "North_Borneo"}
{"question": "what is the capital of Grand Duchy of Finland?", "answer": "Helsinki", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Helsinki"], "entity_annotations": ["Grand Duchy of Finland"], "answer_entity_name": null, "predicted_answer": "Helsinki", "extracted_entity": "Grand_Duchy_of_Finland"}
{"question": "what is the capital of \u00d6v\u00f6rkhangai Province?", "answer": "Arvaikheer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arvaikheer"], "entity_annotations": ["\u00d6v\u00f6rkhangai Province"], "answer_entity_name": null, "predicted_answer": "Arvaikheer", "extracted_entity": "\u00d6v\u00f6rkhangai_Province"}
{"question": "what is the capital of Gmina Lubin?", "answer": "Lubin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lubin"], "entity_annotations": ["Gmina Lubin"], "answer_entity_name": null, "predicted_answer": "Lubin", "extracted_entity": "Gmina_Lubin"}
{"question": "what is the capital of Niger?", "answer": "Niamey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Niamey"], "entity_annotations": ["Niger"], "answer_entity_name": null, "predicted_answer": "iamey", "extracted_entity": "Niger"}
{"question": "what is the capital of Upper East Region?", "answer": "Bolgatanga", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bolgatanga"], "entity_annotations": ["Upper East Region"], "answer_entity_name": null, "predicted_answer": "Bolgatanga", "extracted_entity": "Upper_East_Region"}
{"question": "what is the capital of Oman?", "answer": "Muscat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Muscat"], "entity_annotations": ["Oman"], "answer_entity_name": null, "predicted_answer": "Muscat", "extracted_entity": "Oman"}
{"question": "what is the capital of Indramayu?", "answer": "Indramayu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Indramayu"], "entity_annotations": ["Indramayu"], "answer_entity_name": null, "predicted_answer": "Indramayu", "extracted_entity": "Indramayu"}
{"question": "what is the capital of Province of Messina?", "answer": "Messina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Messina"], "entity_annotations": ["Province of Messina"], "answer_entity_name": null, "predicted_answer": "ssina", "extracted_entity": "Province_of_Messina"}
{"question": "what is the capital of Guria?", "answer": "Ozurgeti", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ozurgeti"], "entity_annotations": ["Guria"], "answer_entity_name": null, "predicted_answer": "Ozurgeti", "extracted_entity": "Guria"}
{"question": "what is the capital of Ingavi Province?", "answer": "Viacha", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Viacha"], "entity_annotations": ["Ingavi Province"], "answer_entity_name": null, "predicted_answer": "Viacha", "extracted_entity": "Ingavi_Province"}
{"question": "what is the capital of Zamboanga del Norte?", "answer": "Dipolog", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dipolog"], "entity_annotations": ["Zamboanga del Norte"], "answer_entity_name": null, "predicted_answer": "Dipolog", "extracted_entity": "Zamboanga_del_Norte"}
{"question": "what is the capital of Kingdom of the Isles?", "answer": "Isle of Man", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Isle of Man"], "entity_annotations": ["Kingdom of the Isles"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Kingdom_of_the_Isles"}
{"question": "what is the capital of City of Johannesburg Metropolitan Municipality?", "answer": "Johannesburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Johannesburg"], "entity_annotations": ["City of Johannesburg Metropolitan Municipality"], "answer_entity_name": null, "predicted_answer": "Johannesburg is the capital of City of Johannesburg Metropolitan Municip", "extracted_entity": "City_of_Johannesburg_Metropolitan_Municipality"}
{"question": "what is the capital of Achkhoy-Martanovsky District?", "answer": "Achkhoy-Martan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Achkhoy-Martan"], "entity_annotations": ["Achkhoy-Martanovsky District"], "answer_entity_name": null, "predicted_answer": "chkhoy-Martanovsky District", "extracted_entity": "Achkhoy-Martanovsky_District"}
{"question": "what is the capital of Bong County?", "answer": "Gbarnga", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gbarnga"], "entity_annotations": ["Bong County"], "answer_entity_name": null, "predicted_answer": "Gbarnga", "extracted_entity": "Bong_County"}
{"question": "what is the capital of East Punjab?", "answer": "Chandigarh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chandigarh", "Himachal Pradesh", "Punjab", "Shimla"], "entity_annotations": ["East Punjab"], "answer_entity_name": null, "predicted_answer": "Chandigarh", "extracted_entity": "East_Punjab"}
{"question": "what is the capital of Sukhothai Kingdom?", "answer": "Sukhothai Historical Park", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sukhothai Historical Park"], "entity_annotations": ["Sukhothai Kingdom"], "answer_entity_name": null, "predicted_answer": "ukhothai", "extracted_entity": "Sukhothai_Kingdom"}
{"question": "what is the capital of Western Wei?", "answer": "Chang'an", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chang'an"], "entity_annotations": ["Western Wei"], "answer_entity_name": null, "predicted_answer": "Chang'an", "extracted_entity": "Western_Wei"}
{"question": "what is the capital of New Ireland Province?", "answer": "Kavieng", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kavieng"], "entity_annotations": ["New Ireland Province"], "answer_entity_name": null, "predicted_answer": "Kavieng", "extracted_entity": "New_Ireland_Province"}
{"question": "what is the capital of Otjozondjupa Region?", "answer": "Otjiwarongo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Otjiwarongo"], "entity_annotations": ["Otjozondjupa Region"], "answer_entity_name": null, "predicted_answer": "Otjiwarongo", "extracted_entity": "Otjozondjupa_Region"}
{"question": "what is the capital of Vhembe District Municipality?", "answer": "Thohoyandou", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thohoyandou"], "entity_annotations": ["Vhembe District Municipality"], "answer_entity_name": null, "predicted_answer": "Thohoyandou", "extracted_entity": "Vhembe_District_Municipality"}
{"question": "what is the capital of Socialist Federal Republic of Yugoslavia?", "answer": "Belgrade", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belgrade"], "entity_annotations": ["Socialist Federal Republic of Yugoslavia"], "answer_entity_name": null, "predicted_answer": "The capital of Socialist Federal Republic of Yugoslavia is Bel", "extracted_entity": "Socialist_Federal_Republic_of_Yugoslavia"}
{"question": "what is the capital of Goa?", "answer": "Panjim", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Panjim"], "entity_annotations": ["Goa"], "answer_entity_name": null, "predicted_answer": "Panaji", "extracted_entity": "Goa"}
{"question": "what is the capital of Western Area?", "answer": "Freetown", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Freetown"], "entity_annotations": ["Western Area"], "answer_entity_name": null, "predicted_answer": "Freetown", "extracted_entity": "Western_Area"}
{"question": "what is the capital of Guangzhouwan?", "answer": "Zhanjiang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zhanjiang"], "entity_annotations": ["Guangzhouwan"], "answer_entity_name": null, "predicted_answer": "Fort-Bayard", "extracted_entity": "Guangzhouwan"}
{"question": "what is the capital of Wieliczka County?", "answer": "Wieliczka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wieliczka"], "entity_annotations": ["Wieliczka County"], "answer_entity_name": null, "predicted_answer": "Wieliczka", "extracted_entity": "Wieliczka_County"}
{"question": "what is the capital of Suntarsky District?", "answer": "Suntar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Suntar"], "entity_annotations": ["Suntarsky District"], "answer_entity_name": null, "predicted_answer": "tar", "extracted_entity": "Suntarsky_District"}
{"question": "what is the capital of Chanthaburi?", "answer": "Chanthaburi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chanthaburi"], "entity_annotations": ["Chanthaburi"], "answer_entity_name": null, "predicted_answer": "Chanthaburi", "extracted_entity": "Chanthaburi"}
{"question": "what is the capital of Oryol Oblast?", "answer": "Oryol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oryol"], "entity_annotations": ["Oryol Oblast"], "answer_entity_name": null, "predicted_answer": "Oblast", "extracted_entity": "Oryol_Oblast"}
{"question": "what is the capital of Fareham?", "answer": "Fareham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fareham"], "entity_annotations": ["Fareham"], "answer_entity_name": null, "predicted_answer": "Fareham", "extracted_entity": "Fareham"}
{"question": "what is the capital of Uttarakhand?", "answer": "Dehradun", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dehradun"], "entity_annotations": ["Uttarakhand"], "answer_entity_name": null, "predicted_answer": "ehradun", "extracted_entity": "Uttarakhand"}
{"question": "what is the capital of South Kordofan?", "answer": "Kaduqli", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kaduqli"], "entity_annotations": ["South Kordofan"], "answer_entity_name": null, "predicted_answer": "Kaduqli", "extracted_entity": "South_Kordofan"}
{"question": "what is the capital of Kakamega County?", "answer": "Kakamega", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kakamega"], "entity_annotations": ["Kakamega County"], "answer_entity_name": null, "predicted_answer": "Kakamega", "extracted_entity": "Kakamega_County"}
{"question": "what is the capital of Orhei District?", "answer": "Orhei", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Orhei"], "entity_annotations": ["Orhei District"], "answer_entity_name": null, "predicted_answer": "Orhei", "extracted_entity": "Orhei_District"}
{"question": "what is the capital of Svobodnensky District?", "answer": "Svobodny", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Svobodny"], "entity_annotations": ["Svobodnensky District"], "answer_entity_name": null, "predicted_answer": "Svobodny", "extracted_entity": "Svobodnensky_District"}
{"question": "what is the capital of Kyrgyzstan?", "answer": "Bishkek", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bishkek"], "entity_annotations": ["Kyrgyzstan"], "answer_entity_name": null, "predicted_answer": "Bishkek", "extracted_entity": "Kyrgyzstan"}
{"question": "what is the capital of Tiruvarur district?", "answer": "Thiruvarur", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thiruvarur"], "entity_annotations": ["Tiruvarur district"], "answer_entity_name": null, "predicted_answer": "Tiruvarur", "extracted_entity": "Tiruvarur_district"}
{"question": "what is the capital of Honduras?", "answer": "Tegucigalpa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tegucigalpa"], "entity_annotations": ["Honduras"], "answer_entity_name": null, "predicted_answer": "Tegucigalpa", "extracted_entity": "Honduras"}
{"question": "what is the capital of Navarre?", "answer": "Pamplona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pamplona"], "entity_annotations": ["Navarre"], "answer_entity_name": null, "predicted_answer": "Pamplona", "extracted_entity": "Navarre"}
{"question": "what is the capital of Ma'an Governorate?", "answer": "Ma'an", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ma'an"], "entity_annotations": ["Ma'an Governorate"], "answer_entity_name": null, "predicted_answer": "the capital of Ma'an Governorate is Ma'an", "extracted_entity": "Ma'an_Governorate"}
{"question": "what is the capital of Starnberg?", "answer": "Starnberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Starnberg"], "entity_annotations": ["Starnberg"], "answer_entity_name": null, "predicted_answer": "Starnberg", "extracted_entity": "Starnberg"}
{"question": "what is the capital of Malkangiri district?", "answer": "Malkangiri", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Malkangiri"], "entity_annotations": ["Malkangiri district"], "answer_entity_name": null, "predicted_answer": "Malkangiri is the capital of Malkangiri", "extracted_entity": "Malkangiri_district"}
{"question": "what is the capital of Hama Governorate?", "answer": "Hama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hama"], "entity_annotations": ["Hama Governorate"], "answer_entity_name": null, "predicted_answer": "Hama", "extracted_entity": "Hama_Governorate"}
{"question": "what is the capital of Tagant Region?", "answer": "Tidjikja", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tidjikja"], "entity_annotations": ["Tagant Region"], "answer_entity_name": null, "predicted_answer": "Tidjikja", "extracted_entity": "Tagant_Region"}
{"question": "what is the capital of Al Hudaydah Governorate?", "answer": "Al Hudaydah", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Al Hudaydah"], "entity_annotations": ["Al Hudaydah Governorate"], "answer_entity_name": null, "predicted_answer": "Al Hudaydah", "extracted_entity": "Al_Hudaydah_Governorate"}
{"question": "what is the capital of North?", "answer": "Garoua", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Garoua"], "entity_annotations": ["North"], "answer_entity_name": null, "predicted_answer": "North is one of the four compass points or cardinal", "extracted_entity": "North"}
{"question": "what is the capital of Republic of Kosova?", "answer": "Pristina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pristina"], "entity_annotations": ["Republic of Kosova"], "answer_entity_name": null, "predicted_answer": "Pristina", "extracted_entity": "Republic_of_Kosova"}
{"question": "what is the capital of North Kosovo?", "answer": "Mitrovica", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mitrovica"], "entity_annotations": ["North Kosovo"], "answer_entity_name": null, "predicted_answer": "North Kosovo's capital is North Mitrovica.", "extracted_entity": "North_Kosovo"}
{"question": "what is the capital of County Westmeath?", "answer": "Mullingar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mullingar"], "entity_annotations": ["County Westmeath"], "answer_entity_name": null, "predicted_answer": "Mullingar", "extracted_entity": "County_Westmeath"}
{"question": "what is the capital of Spanish Texas?", "answer": "San Antonio", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Antonio"], "entity_annotations": ["Spanish Texas"], "answer_entity_name": null, "predicted_answer": "San Antonio", "extracted_entity": "Spanish_Texas"}
{"question": "what is the capital of Nelson Mandela Bay Metropolitan Municipality?", "answer": "Port Elizabeth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Port Elizabeth"], "entity_annotations": ["Nelson Mandela Bay Metropolitan Municipality"], "answer_entity_name": null, "predicted_answer": "Gqeberha", "extracted_entity": "Nelson_Mandela_Bay_Metropolitan_Municipality"}
{"question": "what is the capital of Kingdom of Saxony?", "answer": "Dresden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dresden"], "entity_annotations": ["Kingdom of Saxony"], "answer_entity_name": null, "predicted_answer": "The capital of Kingdom of Saxony is Dresden.", "extracted_entity": "Kingdom_of_Saxony"}
{"question": "what is the capital of Aalborg Municipality?", "answer": "Aalborg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aalborg"], "entity_annotations": ["Aalborg Municipality"], "answer_entity_name": null, "predicted_answer": "Aalborg", "extracted_entity": "Aalborg_Municipality"}
{"question": "what is the capital of Golestan Province?", "answer": "Gorgan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gorgan"], "entity_annotations": ["Golestan Province"], "answer_entity_name": null, "predicted_answer": "Gorgan", "extracted_entity": "Golestan_Province"}
{"question": "what is the capital of Burgas Province?", "answer": "Burgas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Burgas"], "entity_annotations": ["Burgas Province"], "answer_entity_name": null, "predicted_answer": "Burgas", "extracted_entity": "Burgas_Province"}
{"question": "what is the capital of As-Suwayda Governorate?", "answer": "Al-Suwayda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Al-Suwayda"], "entity_annotations": ["As-Suwayda Governorate"], "answer_entity_name": null, "predicted_answer": "al-Suwayda", "extracted_entity": "As-Suwayda_Governorate"}
{"question": "what is the capital of Quirino?", "answer": "Cabarroguis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cabarroguis"], "entity_annotations": ["Quirino"], "answer_entity_name": null, "predicted_answer": "Cabarroguis", "extracted_entity": "Quirino"}
{"question": "what is the capital of Ladakh?", "answer": "Leh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leh"], "entity_annotations": ["Ladakh"], "answer_entity_name": null, "predicted_answer": "Leh", "extracted_entity": "Ladakh"}
{"question": "what is the capital of Armenia?", "answer": "Yerevan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yerevan"], "entity_annotations": ["Armenia"], "answer_entity_name": null, "predicted_answer": "Yerevan", "extracted_entity": "Armenia"}
{"question": "what is the capital of United Arab Emirates?", "answer": "Abu Dhabi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Abu Dhabi"], "entity_annotations": ["United Arab Emirates"], "answer_entity_name": null, "predicted_answer": "Abu Dhabi", "extracted_entity": "United_Arab_Emirates"}
{"question": "what is the capital of Gmina Nowy Korczyn?", "answer": "Nowy Korczyn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nowy Korczyn"], "entity_annotations": ["Gmina Nowy Korczyn"], "answer_entity_name": null, "predicted_answer": "Nowy Korczyn", "extracted_entity": "Gmina_Nowy_Korczyn"}
{"question": "what is the capital of Santa Catarina Island?", "answer": "Florian\u00f3polis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florian\u00f3polis"], "entity_annotations": ["Santa Catarina Island"], "answer_entity_name": null, "predicted_answer": "Florian\u00f3polis", "extracted_entity": "Santa_Catarina_Island"}
{"question": "what is the capital of Hoysala Empire?", "answer": "Halebidu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Halebidu"], "entity_annotations": ["Hoysala Empire"], "answer_entity_name": null, "predicted_answer": "Belur", "extracted_entity": "Hoysala_Empire"}
{"question": "what is the capital of Austrian Silesia?", "answer": "Opava", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Opava"], "entity_annotations": ["Austrian Silesia"], "answer_entity_name": null, "predicted_answer": "Austrian Silesia has no capital.", "extracted_entity": "Austrian_Silesia"}
{"question": "what is the capital of Vest-Agder?", "answer": "Kristiansand", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kristiansand"], "entity_annotations": ["Vest-Agder"], "answer_entity_name": null, "predicted_answer": "Kristiansand", "extracted_entity": "Vest-Agder"}
{"question": "what is the capital of Dakar?", "answer": "Dakar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dakar"], "entity_annotations": ["Dakar"], "answer_entity_name": null, "predicted_answer": "Dakar", "extracted_entity": "Dakar"}
{"question": "what is the capital of Tres de Febrero Partido?", "answer": "Caseros", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Caseros"], "entity_annotations": ["Tres de Febrero Partido"], "answer_entity_name": null, "predicted_answer": "Isidro Casanova", "extracted_entity": "Tres_de_Febrero_Partido"}
{"question": "what is the capital of Rivers State?", "answer": "Port Harcourt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Port Harcourt"], "entity_annotations": ["Rivers State"], "answer_entity_name": null, "predicted_answer": "Port Harcourt", "extracted_entity": "Rivers_State"}
{"question": "what is the capital of Republic of Formosa?", "answer": "Tainan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tainan"], "entity_annotations": ["Republic of Formosa"], "answer_entity_name": null, "predicted_answer": "Tainan", "extracted_entity": "Republic_of_Formosa"}
{"question": "what is the capital of Bheri Zone?", "answer": "Nepalgunj", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nepalgunj"], "entity_annotations": ["Bheri Zone"], "answer_entity_name": null, "predicted_answer": "Nepalgunj", "extracted_entity": "Bheri_Zone"}
{"question": "what is the capital of Afyonkarahisar Province?", "answer": "Afyonkarahisar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Afyonkarahisar"], "entity_annotations": ["Afyonkarahisar Province"], "answer_entity_name": null, "predicted_answer": "Afyonkarahisar", "extracted_entity": "Afyonkarahisar_Province"}
{"question": "what is the capital of Mount Lebanon Governorate?", "answer": "Beirut", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Beirut"], "entity_annotations": ["Mount Lebanon Governorate"], "answer_entity_name": null, "predicted_answer": "Baabda", "extracted_entity": "Mount_Lebanon_Governorate"}
{"question": "what is the capital of Ain?", "answer": "Bourg-en-Bresse", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bourg-en-Bresse"], "entity_annotations": ["Ain"], "answer_entity_name": null, "predicted_answer": "Bourg-en-Bresse", "extracted_entity": "Ain"}
{"question": "what is the capital of Opoczno County?", "answer": "Opoczno", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Opoczno"], "entity_annotations": ["Opoczno County"], "answer_entity_name": null, "predicted_answer": "Opoczno", "extracted_entity": "Opoczno_County"}
{"question": "what is the capital of North Chungcheong Province?", "answer": "Cheongju", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cheongju"], "entity_annotations": ["North Chungcheong Province"], "answer_entity_name": null, "predicted_answer": "Cheongju", "extracted_entity": "North_Chungcheong_Province"}
{"question": "what is the capital of Province of Trapani?", "answer": "Trapani", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Trapani"], "entity_annotations": ["Province of Trapani"], "answer_entity_name": null, "predicted_answer": "Trapani", "extracted_entity": "Province_of_Trapani"}
{"question": "what is the capital of Kingdom of Kongo?", "answer": "M'banza-Kongo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["M'banza-Kongo"], "entity_annotations": ["Kingdom of Kongo"], "answer_entity_name": null, "predicted_answer": "the capital of Kingdom of Kongo is Sao Salvador", "extracted_entity": "Kingdom_of_Kongo"}
{"question": "what is the capital of Bsharri District?", "answer": "Bsharri", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bsharri"], "entity_annotations": ["Bsharri District"], "answer_entity_name": null, "predicted_answer": "Bsharri", "extracted_entity": "Bsharri_District"}
{"question": "what is the capital of Bay of Plenty Region?", "answer": "Whakatane", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Whakatane"], "entity_annotations": ["Bay of Plenty Region"], "answer_entity_name": null, "predicted_answer": "Tauranga", "extracted_entity": "Bay_of_Plenty_Region"}
{"question": "what is the capital of Simrishamn Municipality?", "answer": "Simrishamn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Simrishamn"], "entity_annotations": ["Simrishamn Municipality"], "answer_entity_name": null, "predicted_answer": "Simrishamn", "extracted_entity": "Simrishamn_Municipality"}
{"question": "what is the capital of V\u00e4stra G\u00f6taland County?", "answer": "Gothenburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gothenburg"], "entity_annotations": ["V\u00e4stra G\u00f6taland County"], "answer_entity_name": null, "predicted_answer": "Gothenburg", "extracted_entity": "V\u00e4stra_G\u00f6taland_County"}
{"question": "what is the capital of Nayagarh district?", "answer": "Nayagarh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nayagarh"], "entity_annotations": ["Nayagarh district"], "answer_entity_name": null, "predicted_answer": "Nayagarh", "extracted_entity": "Nayagarh_district"}
{"question": "what is the capital of City of Joondalup?", "answer": "Joondalup", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joondalup"], "entity_annotations": ["City of Joondalup"], "answer_entity_name": null, "predicted_answer": "Joondalup", "extracted_entity": "City_of_Joondalup"}
{"question": "what is the capital of Nemuro Subprefecture?", "answer": "Nemuro", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nemuro"], "entity_annotations": ["Nemuro Subprefecture"], "answer_entity_name": null, "predicted_answer": "Nemuro", "extracted_entity": "Nemuro_Subprefecture"}
{"question": "what is the capital of Gagra District?", "answer": "Gagra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gagra"], "entity_annotations": ["Gagra District"], "answer_entity_name": null, "predicted_answer": "Gagra", "extracted_entity": "Gagra_District"}
{"question": "what is the capital of Okayama Prefecture?", "answer": "Okayama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Okayama"], "entity_annotations": ["Okayama Prefecture"], "answer_entity_name": null, "predicted_answer": "Okayama", "extracted_entity": "Okayama_Prefecture"}
{"question": "what is the capital of Pinneberg?", "answer": "Pinneberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pinneberg"], "entity_annotations": ["Pinneberg"], "answer_entity_name": null, "predicted_answer": "Pinneberg", "extracted_entity": "Pinneberg"}
{"question": "what is the capital of Marinduque?", "answer": "Boac", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Boac"], "entity_annotations": ["Marinduque"], "answer_entity_name": null, "predicted_answer": "Boac", "extracted_entity": "Marinduque"}
{"question": "what is the capital of Najaf Governorate?", "answer": "Najaf", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Najaf"], "entity_annotations": ["Najaf Governorate"], "answer_entity_name": null, "predicted_answer": "the capital of Najaf Governorate is Najaf", "extracted_entity": "Najaf_Governorate"}
{"question": "what is the capital of Rottweil?", "answer": "Rottweil", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rottweil"], "entity_annotations": ["Rottweil"], "answer_entity_name": null, "predicted_answer": "Rottweil", "extracted_entity": "Rottweil"}
{"question": "what is the capital of Gunma Prefecture?", "answer": "Maebashi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maebashi"], "entity_annotations": ["Gunma Prefecture"], "answer_entity_name": null, "predicted_answer": "Maebashi", "extracted_entity": "Gunma_Prefecture"}
{"question": "what is the capital of Bi\u00e9 Province?", "answer": "Kuito", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kuito"], "entity_annotations": ["Bi\u00e9 Province"], "answer_entity_name": null, "predicted_answer": "Kuito", "extracted_entity": "Bi\u00e9_Province"}
{"question": "who is Carol II of Romania married to?", "answer": "Zizi Lambrino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zizi Lambrino", "Helen of Greece and Denmark"], "entity_annotations": ["Carol II of Romania"], "answer_entity_name": null, "predicted_answer": "Zizi Lambrino", "extracted_entity": "Carol_II_of_Romania"}
{"question": "who is Philip the Bold married to?", "answer": "Margaret III, Countess of Flanders", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Margaret III, Countess of Flanders"], "entity_annotations": ["Philip the Bold"], "answer_entity_name": null, "predicted_answer": "Margaret", "extracted_entity": "Philip_the_Bold"}
{"question": "who is Mehmed the Conqueror married to?", "answer": "M\u00fckrime Hatun", "dataset": "entity_questions", "split": "test", "answer_aliases": ["M\u00fckrime Hatun"], "entity_annotations": ["Mehmed the Conqueror"], "answer_entity_name": null, "predicted_answer": "Mara Brankovi\u0107", "extracted_entity": "Mehmed_the_Conqueror"}
{"question": "who is Willard Huyck married to?", "answer": "Gloria Katz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gloria Katz"], "entity_annotations": ["Willard Huyck"], "answer_entity_name": null, "predicted_answer": "Gloria Katz.", "extracted_entity": "Willard_Huyck"}
{"question": "who is Katey Sagal married to?", "answer": "Kurt Sutter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kurt Sutter"], "entity_annotations": ["Katey Sagal"], "answer_entity_name": null, "predicted_answer": "Sagal was married to Jack White (musician", "extracted_entity": "Katey_Sagal"}
{"question": "who is Kurt Vonnegut married to?", "answer": "Jill Krementz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jill Krementz"], "entity_annotations": ["Kurt Vonnegut"], "answer_entity_name": null, "predicted_answer": "Kurt Vonnegut is married to Jane Marie", "extracted_entity": "Kurt_Vonnegut"}
{"question": "who is Princess Augusta of Hesse-Kassel married to?", "answer": "Prince Adolphus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prince Adolphus"], "entity_annotations": ["Princess Augusta of Hesse-Kassel"], "answer_entity_name": null, "predicted_answer": "Princess Augusta of Hesse-Kassel married to Prince", "extracted_entity": "Princess_Augusta_of_Hesse-Kassel"}
{"question": "who is Samyuktha Varma married to?", "answer": "Biju Menon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Biju Menon"], "entity_annotations": ["Samyuktha Varma"], "answer_entity_name": null, "predicted_answer": "Biju Menon", "extracted_entity": "Samyuktha_Varma"}
{"question": "who is Marlon Brando married to?", "answer": "Movita Castaneda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Movita Castaneda", "Anna Kashfi", "Tarita Teriipaia"], "entity_annotations": ["Marlon Brando"], "answer_entity_name": null, "predicted_answer": "Marlon Brando is married to Tarita Ter", "extracted_entity": "Marlon_Brando"}
{"question": "who is Goffredo Alessandrini married to?", "answer": "Anna Magnani", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anna Magnani"], "entity_annotations": ["Goffredo Alessandrini"], "answer_entity_name": null, "predicted_answer": "Anna Magnani", "extracted_entity": "Goffredo_Alessandrini"}
{"question": "who is Margaret Drabble married to?", "answer": "Michael Holroyd", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Holroyd"], "entity_annotations": ["Margaret Drabble"], "answer_entity_name": null, "predicted_answer": "Margaret Drabble married to Clive Swift", "extracted_entity": "Margaret_Drabble"}
{"question": "who is Maria Muldaur married to?", "answer": "Geoff Muldaur", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Geoff Muldaur"], "entity_annotations": ["Maria Muldaur"], "answer_entity_name": null, "predicted_answer": "Geoff Muldaur", "extracted_entity": "Maria_Muldaur"}
{"question": "who is David Johnston married to?", "answer": "Sharon Johnston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sharon Johnston"], "entity_annotations": ["David Johnston"], "answer_entity_name": null, "predicted_answer": "David Johnston is married to Nancy Southam.", "extracted_entity": "David_Johnston"}
{"question": "who is Caresse Crosby married to?", "answer": "Harry Crosby", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harry Crosby", "Richard R. Peabody"], "entity_annotations": ["Caresse Crosby"], "answer_entity_name": null, "predicted_answer": "Harry Crosby", "extracted_entity": "Caresse_Crosby"}
{"question": "who is Cynthia Weil married to?", "answer": "Barry Mann", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barry Mann"], "entity_annotations": ["Cynthia Weil"], "answer_entity_name": null, "predicted_answer": "Cynthia Weil is married to Barry Mann.", "extracted_entity": "Cynthia_Weil"}
{"question": "who is Jack Welch married to?", "answer": "Suzy Welch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Suzy Welch"], "entity_annotations": ["Jack Welch"], "answer_entity_name": null, "predicted_answer": "Jane Beasley", "extracted_entity": "Jack_Welch"}
{"question": "who is William de la Pole, 1st Duke of Suffolk married to?", "answer": "Alice de la Pole", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alice de la Pole"], "entity_annotations": ["William de la Pole, 1st Duke of Suffolk"], "answer_entity_name": null, "predicted_answer": "Alice Chaucer", "extracted_entity": "William_de_la_Pole,_1st_Duke_of_Suffolk"}
{"question": "who is Peter Paul Rubens married to?", "answer": "Helena Fourment", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Helena Fourment", "Isabella Brant"], "entity_annotations": ["Peter Paul Rubens"], "answer_entity_name": null, "predicted_answer": "He married Isabella Brant in 1609", "extracted_entity": "Peter_Paul_Rubens"}
{"question": "who is Robert Frank married to?", "answer": "Mary Frank", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mary Frank"], "entity_annotations": ["Robert Frank"], "answer_entity_name": null, "predicted_answer": "Mary Frank", "extracted_entity": "Robert_Frank"}
{"question": "who is Elisabeth of Romania married to?", "answer": "George II of Greece", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George II of Greece"], "entity_annotations": ["Elisabeth of Romania"], "answer_entity_name": null, "predicted_answer": "George II of Greece", "extracted_entity": "Elisabeth_of_Romania"}
{"question": "who is Maud Gonne married to?", "answer": "John MacBride", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John MacBride"], "entity_annotations": ["Maud Gonne"], "answer_entity_name": null, "predicted_answer": "Maud Gonne is married to John MacB", "extracted_entity": "Maud_Gonne"}
{"question": "who is Errol Flynn married to?", "answer": "Lili Damita", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lili Damita", "Patrice Wymore"], "entity_annotations": ["Errol Flynn"], "answer_entity_name": null, "predicted_answer": "Patrice Wymore", "extracted_entity": "Errol_Flynn"}
{"question": "who is Cleopatra Selene II married to?", "answer": "Juba II", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Juba II"], "entity_annotations": ["Cleopatra Selene II"], "answer_entity_name": null, "predicted_answer": "Juba II of Numidia and Mauret", "extracted_entity": "Cleopatra_Selene_II"}
{"question": "who is Se\u00e1n Gleeson married to?", "answer": "Stirling Gallacher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stirling Gallacher"], "entity_annotations": ["Se\u00e1n Gleeson"], "answer_entity_name": null, "predicted_answer": "Stirling Gallacher", "extracted_entity": "Se\u00e1n_Gleeson"}
{"question": "who is David Guetta married to?", "answer": "Cathy Lob\u00e9", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cathy Lob\u00e9"], "entity_annotations": ["David Guetta"], "answer_entity_name": null, "predicted_answer": "Guetta is married to Cathy Guetta.", "extracted_entity": "David_Guetta"}
{"question": "who is Lee Harvey Oswald married to?", "answer": "Marina Oswald Porter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Marina Oswald Porter"], "entity_annotations": ["Lee Harvey Oswald"], "answer_entity_name": null, "predicted_answer": "Marina", "extracted_entity": "Lee_Harvey_Oswald"}
{"question": "who is Tim McGraw married to?", "answer": "Faith Hill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Faith Hill"], "entity_annotations": ["Tim McGraw"], "answer_entity_name": null, "predicted_answer": "Faith Hill", "extracted_entity": "Tim_McGraw"}
{"question": "who is Jacques Parizeau married to?", "answer": "Lisette Lapointe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lisette Lapointe"], "entity_annotations": ["Jacques Parizeau"], "answer_entity_name": null, "predicted_answer": "Jacqueline Parizeau", "extracted_entity": "Jacques_Parizeau"}
{"question": "who is Muzaffar Ali married to?", "answer": "Subhashini Ali", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Subhashini Ali"], "entity_annotations": ["Muzaffar Ali"], "answer_entity_name": null, "predicted_answer": "Meera Ali", "extracted_entity": "Muzaffar_Ali"}
{"question": "who is Constance Garnett married to?", "answer": "Edward Garnett", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edward Garnett"], "entity_annotations": ["Constance Garnett"], "answer_entity_name": null, "predicted_answer": "Edward Garnett", "extracted_entity": "Constance_Garnett"}
{"question": "who is Courtney Love married to?", "answer": "Kurt Cobain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kurt Cobain"], "entity_annotations": ["Courtney Love"], "answer_entity_name": null, "predicted_answer": "Courtney Love is not married.", "extracted_entity": "Courtney_Love"}
{"question": "who is Ted Hughes married to?", "answer": "Sylvia Plath", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sylvia Plath"], "entity_annotations": ["Ted Hughes"], "answer_entity_name": null, "predicted_answer": "Ted Hughes was married to American poet Sylvia Plath", "extracted_entity": "Ted_Hughes"}
{"question": "who is Bulle Ogier married to?", "answer": "Barbet Schroeder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barbet Schroeder"], "entity_annotations": ["Bulle Ogier"], "answer_entity_name": null, "predicted_answer": "Bulle Ogier is married to producer and director", "extracted_entity": "Bulle_Ogier"}
{"question": "who is Julia Domna married to?", "answer": "Septimius Severus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Septimius Severus"], "entity_annotations": ["Julia Domna"], "answer_entity_name": null, "predicted_answer": "Julia Domna is married to Septimius Sever", "extracted_entity": "Julia_Domna"}
{"question": "who is Nancy Benoit married to?", "answer": "Chris Benoit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chris Benoit"], "entity_annotations": ["Nancy Benoit"], "answer_entity_name": null, "predicted_answer": "Chris Benoit", "extracted_entity": "Nancy_Benoit"}
{"question": "who is Sarah Millican married to?", "answer": "Gary Delaney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gary Delaney"], "entity_annotations": ["Sarah Millican"], "answer_entity_name": null, "predicted_answer": "Sarah Millican is married to Gary Delaney", "extracted_entity": "Sarah_Millican"}
{"question": "who is Grand Duke Paul Alexandrovich of Russia married to?", "answer": "Princess Olga Paley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Princess Olga Paley", "Grand Duchess Alexandra Georgievna of Russia"], "entity_annotations": ["Grand Duke Paul Alexandrovich of Russia"], "answer_entity_name": null, "predicted_answer": "Grand Duke Paul Alexandrovich of Russia is married", "extracted_entity": "Grand_Duke_Paul_Alexandrovich_of_Russia"}
{"question": "who is Nam June Paik married to?", "answer": "Shigeko Kubota", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shigeko Kubota"], "entity_annotations": ["Nam June Paik"], "answer_entity_name": null, "predicted_answer": "Shigeko Kubota", "extracted_entity": "Nam_June_Paik"}
{"question": "who is Jane Henson married to?", "answer": "Jim Henson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jim Henson"], "entity_annotations": ["Jane Henson"], "answer_entity_name": null, "predicted_answer": "Jane Henson is married to Jim Henson.", "extracted_entity": "Jane_Henson"}
{"question": "who is Marella Agnelli married to?", "answer": "Gianni Agnelli", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gianni Agnelli"], "entity_annotations": ["Marella Agnelli"], "answer_entity_name": null, "predicted_answer": "Marella Agnelli is married to Gianni", "extracted_entity": "Marella_Agnelli"}
{"question": "who is Yolande of Aragon married to?", "answer": "Louis II of Naples", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Louis II of Naples"], "entity_annotations": ["Yolande of Aragon"], "answer_entity_name": null, "predicted_answer": "Yolande of Aragon married to Louis II of", "extracted_entity": "Yolande_of_Aragon"}
{"question": "who is Ramesh Sippy married to?", "answer": "Kiran Juneja", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kiran Juneja"], "entity_annotations": ["Ramesh Sippy"], "answer_entity_name": null, "predicted_answer": "Ramesh Sippy is married to Kiran", "extracted_entity": "Ramesh_Sippy"}
{"question": "who is Cosimo I de' Medici, Grand Duke of Tuscany married to?", "answer": "Eleanor of Toledo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eleanor of Toledo"], "entity_annotations": ["Cosimo I de' Medici, Grand Duke of Tuscany"], "answer_entity_name": null, "predicted_answer": "Eleonora di Toledo", "extracted_entity": "Cosimo_I_de'_Medici,_Grand_Duke_of_Tuscany"}
{"question": "who is Bess Meredyth married to?", "answer": "Wilfred Lucas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wilfred Lucas", "Michael Curtiz"], "entity_annotations": ["Bess Meredyth"], "answer_entity_name": null, "predicted_answer": "Michael Curtiz", "extracted_entity": "Bess_Meredyth"}
{"question": "who is Kenji Nojima married to?", "answer": "Chie Sawaguchi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chie Sawaguchi"], "entity_annotations": ["Kenji Nojima"], "answer_entity_name": null, "predicted_answer": "Kenji Nojima is married to Ayako", "extracted_entity": "Kenji_Nojima"}
{"question": "who is Alfred L. Kroeber married to?", "answer": "Theodora Kroeber", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Theodora Kroeber"], "entity_annotations": ["Alfred L. Kroeber"], "answer_entity_name": null, "predicted_answer": "Ursula Kroeber", "extracted_entity": "Alfred_L._Kroeber"}
{"question": "who is Paul Bern married to?", "answer": "Jean Harlow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jean Harlow"], "entity_annotations": ["Paul Bern"], "answer_entity_name": null, "predicted_answer": "Jean Harlow", "extracted_entity": "Paul_Bern"}
{"question": "who is Don Harron married to?", "answer": "Virginia Leith", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Virginia Leith"], "entity_annotations": ["Don Harron"], "answer_entity_name": null, "predicted_answer": "Don Harron is married to Jane.", "extracted_entity": "Don_Harron"}
{"question": "who is Constantine the Great married to?", "answer": "Minervina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Minervina"], "entity_annotations": ["Constantine the Great"], "answer_entity_name": null, "predicted_answer": "He is married to Fausta", "extracted_entity": "Constantine_the_Great"}
{"question": "who is Yury Grigorovich married to?", "answer": "Natalia Bessmertnova", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Natalia Bessmertnova"], "entity_annotations": ["Yury Grigorovich"], "answer_entity_name": null, "predicted_answer": "Natalia Bessmertnova.", "extracted_entity": "Yury_Grigorovich"}
{"question": "who is Charles Vyner Brooke married to?", "answer": "Sylvia Brett", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sylvia Brett"], "entity_annotations": ["Charles Vyner Brooke"], "answer_entity_name": null, "predicted_answer": "The Hon. Sylvia Brett", "extracted_entity": "Charles_Vyner_Brooke"}
{"question": "who is Constantine V married to?", "answer": "Tzitzak", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tzitzak"], "entity_annotations": ["Constantine V"], "answer_entity_name": null, "predicted_answer": "Tzitzak", "extracted_entity": "Constantine_V"}
{"question": "who is Stewart Farrar married to?", "answer": "Janet Farrar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Janet Farrar"], "entity_annotations": ["Stewart Farrar"], "answer_entity_name": null, "predicted_answer": "Stewart Farrar is married to Janet Farrar.", "extracted_entity": "Stewart_Farrar"}
{"question": "who is Elisabeth Farnese married to?", "answer": "Philip V of Spain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philip V of Spain"], "entity_annotations": ["Elisabeth Farnese"], "answer_entity_name": null, "predicted_answer": "King Philip V", "extracted_entity": "Elisabeth_Farnese"}
{"question": "who is Humphrey Bogart married to?", "answer": "Mary Philips", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mary Philips", "Mayo Methot", "Lauren Bacall"], "entity_annotations": ["Humphrey Bogart"], "answer_entity_name": null, "predicted_answer": "Ingrid Bergman", "extracted_entity": "Humphrey_Bogart"}
{"question": "who is Cesare d'Este, Duke of Modena married to?", "answer": "Virginia de' Medici", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Virginia de' Medici"], "entity_annotations": ["Cesare d'Este, Duke of Modena"], "answer_entity_name": null, "predicted_answer": "Virginia de' Medici", "extracted_entity": "Cesare_d'Este,_Duke_of_Modena"}
{"question": "who is Betty White married to?", "answer": "Allen Ludden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Allen Ludden"], "entity_annotations": ["Betty White"], "answer_entity_name": null, "predicted_answer": "Betty White was never married.", "extracted_entity": "Betty_White"}
{"question": "who is Howard Hughes married to?", "answer": "Jean Peters", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jean Peters"], "entity_annotations": ["Howard Hughes"], "answer_entity_name": null, "predicted_answer": "Howard Hughes married to Jean Peters", "extracted_entity": "Howard_Hughes"}
{"question": "who is Vasily Shukshin married to?", "answer": "Lidiya Fedoseyeva-Shukshina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lidiya Fedoseyeva-Shukshina"], "entity_annotations": ["Vasily Shukshin"], "answer_entity_name": null, "predicted_answer": "Vasily Shukshin is married to K", "extracted_entity": "Vasily_Shukshin"}
{"question": "who is Daniel Johns married to?", "answer": "Natalie Imbruglia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Natalie Imbruglia"], "entity_annotations": ["Daniel Johns"], "answer_entity_name": null, "predicted_answer": "Daniel Johns is not married.", "extracted_entity": "Daniel_Johns"}
{"question": "who is Bert Lytell married to?", "answer": "Claire Windsor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Claire Windsor"], "entity_annotations": ["Bert Lytell"], "answer_entity_name": null, "predicted_answer": "Claire Windsor", "extracted_entity": "Bert_Lytell"}
{"question": "who is Maria Fitzherbert married to?", "answer": "George IV of the United Kingdom", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George IV of the United Kingdom"], "entity_annotations": ["Maria Fitzherbert"], "answer_entity_name": null, "predicted_answer": "Maria Fitzherbert is married to George, Prince", "extracted_entity": "Maria_Fitzherbert"}
{"question": "who is Jeff Gordon married to?", "answer": "Ingrid Vandebosch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ingrid Vandebosch"], "entity_annotations": ["Jeff Gordon"], "answer_entity_name": null, "predicted_answer": "Ina Mac Danley", "extracted_entity": "Jeff_Gordon"}
{"question": "who is George P. Putnam married to?", "answer": "Amelia Earhart", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amelia Earhart"], "entity_annotations": ["George P. Putnam"], "answer_entity_name": null, "predicted_answer": "Amelia Earhart", "extracted_entity": "George_P._Putnam"}
{"question": "who is Sarah Palin married to?", "answer": "Todd Palin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Todd Palin"], "entity_annotations": ["Sarah Palin"], "answer_entity_name": null, "predicted_answer": "Sarah Palin is married to Todd Palin.", "extracted_entity": "Sarah_Palin"}
{"question": "who is Laius married to?", "answer": "Jocasta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jocasta"], "entity_annotations": ["Laius"], "answer_entity_name": null, "predicted_answer": "Jocasta", "extracted_entity": "Laius"}
{"question": "who is Amphitryon married to?", "answer": "Alkmene", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alkmene"], "entity_annotations": ["Amphitryon"], "answer_entity_name": null, "predicted_answer": "Alcmene", "extracted_entity": "Amphitryon"}
{"question": "who is Rasoherina married to?", "answer": "Rainilaiarivony", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rainilaiarivony", "Radama II", "Rainivoninahitriniony"], "entity_annotations": ["Rasoherina"], "answer_entity_name": null, "predicted_answer": "Rasoherina was married to Radama II", "extracted_entity": "Rasoherina"}
{"question": "who is Gerald Ford married to?", "answer": "Betty Ford", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Betty Ford"], "entity_annotations": ["Gerald Ford"], "answer_entity_name": null, "predicted_answer": "Betty Ford", "extracted_entity": "Gerald_Ford"}
{"question": "who is Romy Rosemont married to?", "answer": "Stephen Root", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stephen Root"], "entity_annotations": ["Romy Rosemont"], "answer_entity_name": null, "predicted_answer": "Stephen Root", "extracted_entity": "Romy_Rosemont"}
{"question": "who is Elizabeth Taylor married to?", "answer": "John Warner", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Warner", "Eddie Fisher", "Mike Todd", "Conrad Hilton, Jr."], "entity_annotations": ["Elizabeth Taylor"], "answer_entity_name": null, "predicted_answer": "Richard Burton", "extracted_entity": "Elizabeth_Taylor"}
{"question": "who is Eric Schmidt married to?", "answer": "Wendy Schmidt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wendy Schmidt"], "entity_annotations": ["Eric Schmidt"], "answer_entity_name": null, "predicted_answer": "Eric Schmidt is married to Wendy Schmidt.", "extracted_entity": "Eric_Schmidt"}
{"question": "who is Nick Cheung married to?", "answer": "Esther Kwan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Esther Kwan"], "entity_annotations": ["Nick Cheung"], "answer_entity_name": null, "predicted_answer": "Nick Cheung is married to Esther Kwan.", "extracted_entity": "Nick_Cheung"}
{"question": "who is Adil Shah married to?", "answer": "Princess Ketevan of Kakheti", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Princess Ketevan of Kakheti"], "entity_annotations": ["Adil Shah"], "answer_entity_name": null, "predicted_answer": "Ketevan, daughter of the Georgian king Te", "extracted_entity": "Adil_Shah"}
{"question": "who is Aragorn married to?", "answer": "Arwen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arwen"], "entity_annotations": ["Aragorn"], "answer_entity_name": null, "predicted_answer": "Aragorn is married to Arwen", "extracted_entity": "Aragorn"}
{"question": "who is Zhuge Liang married to?", "answer": "Huang Yueying", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Huang Yueying"], "entity_annotations": ["Zhuge Liang"], "answer_entity_name": null, "predicted_answer": "Zhuge Liang is married to Yue E.", "extracted_entity": "Zhuge_Liang"}
{"question": "who is John Gorton married to?", "answer": "Bettina Gorton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bettina Gorton"], "entity_annotations": ["John Gorton"], "answer_entity_name": null, "predicted_answer": "John Gorton is married to a woman named Martha", "extracted_entity": "John_Gorton"}
{"question": "who is Barbara Feldon married to?", "answer": "Burt Nodella", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Burt Nodella"], "entity_annotations": ["Barbara Feldon"], "answer_entity_name": null, "predicted_answer": "Barbara Feldon is married to Tony Pantages.", "extracted_entity": "Barbara_Feldon"}
{"question": "who is Halle Berry married to?", "answer": "Olivier Martinez", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Olivier Martinez"], "entity_annotations": ["Halle Berry"], "answer_entity_name": null, "predicted_answer": "Halle Berry is married to David Justice", "extracted_entity": "Halle_Berry"}
{"question": "who is Amos Bronson Alcott married to?", "answer": "Abby May", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Abby May"], "entity_annotations": ["Amos Bronson Alcott"], "answer_entity_name": null, "predicted_answer": "Abby May", "extracted_entity": "Amos_Bronson_Alcott"}
{"question": "who is Archduchess Maria Maddalena of Austria married to?", "answer": "Cosimo II de' Medici", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cosimo II de' Medici"], "entity_annotations": ["Archduchess Maria Maddalena of Austria"], "answer_entity_name": null, "predicted_answer": "Cosimo de' Medici", "extracted_entity": "Archduchess_Maria_Maddalena_of_Austria"}
{"question": "who is Andrzej Seweryn married to?", "answer": "Krystyna Janda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Krystyna Janda"], "entity_annotations": ["Andrzej Seweryn"], "answer_entity_name": null, "predicted_answer": "Andrzej Seweryn is married to Anna K", "extracted_entity": "Andrzej_Seweryn"}
{"question": "who is Henry II of Castile married to?", "answer": "Juana Manuel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Juana Manuel"], "entity_annotations": ["Henry II of Castile"], "answer_entity_name": null, "predicted_answer": "Henry II of Castile married to Joanna of Cast", "extracted_entity": "Henry_II_of_Castile"}
{"question": "who is Amal Clooney married to?", "answer": "George Clooney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Clooney"], "entity_annotations": ["Amal Clooney"], "answer_entity_name": null, "predicted_answer": "Amal Clooney is married to George Clooney", "extracted_entity": "Amal_Clooney"}
{"question": "who is Brooke Logan married to?", "answer": "Ridge Forrester", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ridge Forrester", "Eric Forrester"], "entity_annotations": ["Brooke Logan"], "answer_entity_name": null, "predicted_answer": "Brooke Logan is married to Ridge Forrester.", "extracted_entity": "Brooke_Logan"}
{"question": "who is Aidan Quinn married to?", "answer": "Elizabeth Bracco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth Bracco"], "entity_annotations": ["Aidan Quinn"], "answer_entity_name": null, "predicted_answer": "Elizabeth Bracco", "extracted_entity": "Aidan_Quinn"}
{"question": "who is John McCain married to?", "answer": "Cindy McCain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cindy McCain"], "entity_annotations": ["John McCain"], "answer_entity_name": null, "predicted_answer": "John McCain is married to Cindy McCain.", "extracted_entity": "John_McCain"}
{"question": "who is Grigory Potanin married to?", "answer": "Aleksandra Potanina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aleksandra Potanina"], "entity_annotations": ["Grigory Potanin"], "answer_entity_name": null, "predicted_answer": "Grigory Potanin married to", "extracted_entity": "Grigory_Potanin"}
{"question": "who is Manco C\u00e1pac married to?", "answer": "Mama Ocllo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mama Ocllo"], "entity_annotations": ["Manco C\u00e1pac"], "answer_entity_name": null, "predicted_answer": "Manco C\u00e1pac is married to Mama U", "extracted_entity": "Manco_C\u00e1pac"}
{"question": "who is Abhishek Bachchan married to?", "answer": "Aishwarya Rai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aishwarya Rai"], "entity_annotations": ["Abhishek Bachchan"], "answer_entity_name": null, "predicted_answer": "Aishwarya Rai", "extracted_entity": "Abhishek_Bachchan"}
{"question": "who is Shabana Azmi married to?", "answer": "Javed Akhtar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Javed Akhtar"], "entity_annotations": ["Shabana Azmi"], "answer_entity_name": null, "predicted_answer": "She is married to poet and screenwriter Javed", "extracted_entity": "Shabana_Azmi"}
{"question": "who is Edward Albert married to?", "answer": "Katherine Woodville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Katherine Woodville"], "entity_annotations": ["Edward Albert"], "answer_entity_name": null, "predicted_answer": "Albert was married to Jane Sowerby from", "extracted_entity": "Edward_Albert"}
{"question": "who is Valentinian III married to?", "answer": "Licinia Eudoxia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Licinia Eudoxia"], "entity_annotations": ["Valentinian III"], "answer_entity_name": null, "predicted_answer": "Licinia Eudoxia", "extracted_entity": "Valentinian_III"}
{"question": "who is Alexander I of Russia married to?", "answer": "Elizabeth Alexeievna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth Alexeievna"], "entity_annotations": ["Alexander I of Russia"], "answer_entity_name": null, "predicted_answer": "Elizabeth Alexeievna", "extracted_entity": "Alexander_I_of_Russia"}
{"question": "who is Julius Caesar married to?", "answer": "Cornelia the Younger", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cornelia the Younger", "Calpurnia Pisonis"], "entity_annotations": ["Julius Caesar"], "answer_entity_name": null, "predicted_answer": "Calpurnia", "extracted_entity": "Julius_Caesar"}
{"question": "who is Joseph Smith married to?", "answer": "Emma Smith", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Emma Smith"], "entity_annotations": ["Joseph Smith"], "answer_entity_name": null, "predicted_answer": "Emma Hale", "extracted_entity": "Joseph_Smith"}
{"question": "who is Radama I married to?", "answer": "Ranavalona I", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ranavalona I"], "entity_annotations": ["Radama I"], "answer_entity_name": null, "predicted_answer": "Ranavalona I", "extracted_entity": "Radama_I"}
{"question": "who is Howard Lindsay married to?", "answer": "Dorothy Stickney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dorothy Stickney"], "entity_annotations": ["Howard Lindsay"], "answer_entity_name": null, "predicted_answer": "Howard Lindsay is married to Dorothy Stickney.", "extracted_entity": "Howard_Lindsay"}
{"question": "who is Billy Rose married to?", "answer": "Fanny Brice", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fanny Brice"], "entity_annotations": ["Billy Rose"], "answer_entity_name": null, "predicted_answer": "Billy Rose is married to Fanny Brice.", "extracted_entity": "Billy_Rose"}
{"question": "who is Trevor Nunn married to?", "answer": "Imogen Stubbs", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Imogen Stubbs"], "entity_annotations": ["Trevor Nunn"], "answer_entity_name": null, "predicted_answer": "He is married to Imogen Stubbs.", "extracted_entity": "Trevor_Nunn"}
{"question": "who is Dirch Passer married to?", "answer": "Sigrid Horne-Rasmussen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sigrid Horne-Rasmussen"], "entity_annotations": ["Dirch Passer"], "answer_entity_name": null, "predicted_answer": "He was married to Inger Stender.", "extracted_entity": "Dirch_Passer"}
{"question": "who is Stavros Niarchos married to?", "answer": "Athina Livanos", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Athina Livanos", "Eugenia Livanos"], "entity_annotations": ["Stavros Niarchos"], "answer_entity_name": null, "predicted_answer": "Eugenie Niarchos", "extracted_entity": "Stavros_Niarchos"}
{"question": "who is Anne Jeffreys married to?", "answer": "Robert Sterling", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robert Sterling"], "entity_annotations": ["Anne Jeffreys"], "answer_entity_name": null, "predicted_answer": "Anne Jeffreys was married to Robert Sterling.", "extracted_entity": "Anne_Jeffreys"}
{"question": "who is Laura Gemser married to?", "answer": "Gabriele Tinti", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gabriele Tinti"], "entity_annotations": ["Laura Gemser"], "answer_entity_name": null, "predicted_answer": "Gabriele Tinti", "extracted_entity": "Laura_Gemser"}
{"question": "who is Karl Kennedy married to?", "answer": "Susan Kennedy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Susan Kennedy"], "entity_annotations": ["Karl Kennedy"], "answer_entity_name": null, "predicted_answer": "Susan Kennedy", "extracted_entity": "Karl_Kennedy"}
{"question": "who is Annie Oakley married to?", "answer": "Frank E. Butler", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frank E. Butler"], "entity_annotations": ["Annie Oakley"], "answer_entity_name": null, "predicted_answer": "Annie Oakley is married to Frank E. Butler", "extracted_entity": "Annie_Oakley"}
{"question": "who is Yaroslav the Wise married to?", "answer": "Ingegerd Olofsdotter of Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ingegerd Olofsdotter of Sweden"], "entity_annotations": ["Yaroslav the Wise"], "answer_entity_name": null, "predicted_answer": "Ingegerd Olofsdotter", "extracted_entity": "Yaroslav_the_Wise"}
{"question": "who is John Beaufort, 1st Earl of Somerset married to?", "answer": "Margaret Beaufort, Countess of Somerset", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Margaret Beaufort, Countess of Somerset"], "entity_annotations": ["John Beaufort, 1st Earl of Somerset"], "answer_entity_name": null, "predicted_answer": "Margaret Holland", "extracted_entity": "John_Beaufort,_1st_Earl_of_Somerset"}
{"question": "who is Michael McKean married to?", "answer": "Annette O'Toole", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Annette O'Toole"], "entity_annotations": ["Michael McKean"], "answer_entity_name": null, "predicted_answer": "Michael McKean is married to Annette O\u2019", "extracted_entity": "Michael_McKean"}
{"question": "who is Patricia Medina married to?", "answer": "Joseph Cotten", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joseph Cotten"], "entity_annotations": ["Patricia Medina"], "answer_entity_name": null, "predicted_answer": "Patricia Medina was married to Errol Flynn, Robert", "extracted_entity": "Patricia_Medina"}
{"question": "who is Katharine Graham married to?", "answer": "Phil Graham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Phil Graham"], "entity_annotations": ["Katharine Graham"], "answer_entity_name": null, "predicted_answer": "Graham married Philip Graham in 1940. She", "extracted_entity": "Katharine_Graham"}
{"question": "who is Wang Shenzhi married to?", "answer": "Empress Dowager Huang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Empress Dowager Huang"], "entity_annotations": ["Wang Shenzhi"], "answer_entity_name": null, "predicted_answer": "Wang Shenzhi married to a woman named Dong", "extracted_entity": "Wang_Shenzhi"}
{"question": "who is William Marshal, 1st Earl of Pembroke married to?", "answer": "Isabel de Clare, 4th Countess of Pembroke", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Isabel de Clare, 4th Countess of Pembroke"], "entity_annotations": ["William Marshal, 1st Earl of Pembroke"], "answer_entity_name": null, "predicted_answer": "Isabel de Clare", "extracted_entity": "William_Marshal,_1st_Earl_of_Pembroke"}
{"question": "who is Peter MacKay married to?", "answer": "Nazanin Afshin-Jam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nazanin Afshin-Jam"], "entity_annotations": ["Peter MacKay"], "answer_entity_name": null, "predicted_answer": "Peter MacKay married to Nazanin Afsh", "extracted_entity": "Peter_MacKay"}
{"question": "who is Josip Broz Tito married to?", "answer": "Jovanka Broz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jovanka Broz"], "entity_annotations": ["Josip Broz Tito"], "answer_entity_name": null, "predicted_answer": "Josip Broz Tito is married to J", "extracted_entity": "Josip_Broz_Tito"}
{"question": "who is Vibia Sabina married to?", "answer": "Hadrian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hadrian"], "entity_annotations": ["Vibia Sabina"], "answer_entity_name": null, "predicted_answer": "Hadrian", "extracted_entity": "Vibia_Sabina"}
{"question": "who is Connie Chung married to?", "answer": "Maury Povich", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maury Povich"], "entity_annotations": ["Connie Chung"], "answer_entity_name": null, "predicted_answer": "Chung married Maury Povich in 1984", "extracted_entity": "Connie_Chung"}
{"question": "who is Lee Grant married to?", "answer": "Arnold Manoff", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arnold Manoff"], "entity_annotations": ["Lee Grant"], "answer_entity_name": null, "predicted_answer": "Grant married Joseph Feury, a talent agent,", "extracted_entity": "Lee_Grant"}
{"question": "who is Willem de Kooning married to?", "answer": "Elaine de Kooning", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elaine de Kooning"], "entity_annotations": ["Willem de Kooning"], "answer_entity_name": null, "predicted_answer": "Elaine Fried", "extracted_entity": "Willem_de_Kooning"}
{"question": "who is Buffy Sainte-Marie married to?", "answer": "Jack Nitzsche", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jack Nitzsche"], "entity_annotations": ["Buffy Sainte-Marie"], "answer_entity_name": null, "predicted_answer": "Buffy Sainte-Marie is married to Dewain", "extracted_entity": "Buffy_Sainte-Marie"}
{"question": "who is Jean Louis married to?", "answer": "Loretta Young", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Loretta Young"], "entity_annotations": ["Jean Louis"], "answer_entity_name": null, "predicted_answer": "Loretta Young", "extracted_entity": "Jean_Louis"}
{"question": "who is Samuel Liddell MacGregor Mathers married to?", "answer": "Moina Mathers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moina Mathers"], "entity_annotations": ["Samuel Liddell MacGregor Mathers"], "answer_entity_name": null, "predicted_answer": "Samuel Liddell MacGregor Mathers married", "extracted_entity": "Samuel_Liddell_MacGregor_Mathers"}
{"question": "who is Carla Bley married to?", "answer": "Michael Mantler", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Mantler", "Steve Swallow", "Paul Bley"], "entity_annotations": ["Carla Bley"], "answer_entity_name": null, "predicted_answer": "Paul Bley", "extracted_entity": "Carla_Bley"}
{"question": "who is Jay Mohr married to?", "answer": "Nikki Cox", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nikki Cox"], "entity_annotations": ["Jay Mohr"], "answer_entity_name": null, "predicted_answer": "Nikki Cox.", "extracted_entity": "Jay_Mohr"}
{"question": "who is Asif Ali Zardari married to?", "answer": "Benazir Bhutto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Benazir Bhutto"], "entity_annotations": ["Asif Ali Zardari"], "answer_entity_name": null, "predicted_answer": "He is married to Benazir Bhutto.", "extracted_entity": "Asif_Ali_Zardari"}
{"question": "who is Malcolm X married to?", "answer": "Betty Shabazz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Betty Shabazz"], "entity_annotations": ["Malcolm X"], "answer_entity_name": null, "predicted_answer": "Betty Shabazz", "extracted_entity": "Malcolm_X"}
{"question": "who is Paul Buhle married to?", "answer": "Mari Jo Buhle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mari Jo Buhle"], "entity_annotations": ["Paul Buhle"], "answer_entity_name": null, "predicted_answer": "Paul Buhle is married to Mari Jo Kup", "extracted_entity": "Paul_Buhle"}
{"question": "who is Barbara of Cilli married to?", "answer": "Sigismund", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sigismund"], "entity_annotations": ["Barbara of Cilli"], "answer_entity_name": null, "predicted_answer": "Barbara of Cilli is married to Sigismund", "extracted_entity": "Barbara_of_Cilli"}
{"question": "who is Marius Petipa married to?", "answer": "Mariia Surovshchikova-Petipa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mariia Surovshchikova-Petipa"], "entity_annotations": ["Marius Petipa"], "answer_entity_name": null, "predicted_answer": "he is married to a woman named Marie Petipa", "extracted_entity": "Marius_Petipa"}
{"question": "who is Edward LeSaint married to?", "answer": "Stella LeSaint", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stella LeSaint"], "entity_annotations": ["Edward LeSaint"], "answer_entity_name": null, "predicted_answer": "Stella Razetto", "extracted_entity": "Edward_LeSaint"}
{"question": "who is Bruce Cabot married to?", "answer": "Adrienne Ames", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Adrienne Ames"], "entity_annotations": ["Bruce Cabot"], "answer_entity_name": null, "predicted_answer": "Bruce Cabot married to", "extracted_entity": "Bruce_Cabot"}
{"question": "who is Henry Stephenson married to?", "answer": "Ann Shoemaker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ann Shoemaker"], "entity_annotations": ["Henry Stephenson"], "answer_entity_name": null, "predicted_answer": "Henry Stephenson is married to", "extracted_entity": "Henry_Stephenson"}
{"question": "who is Agilulf married to?", "answer": "Theodelinda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Theodelinda"], "entity_annotations": ["Agilulf"], "answer_entity_name": null, "predicted_answer": "Theodelinda", "extracted_entity": "Agilulf"}
{"question": "who is Yuli Daniel married to?", "answer": "Larisa Bogoraz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Larisa Bogoraz"], "entity_annotations": ["Yuli Daniel"], "answer_entity_name": null, "predicted_answer": "Larisa Bogoraz", "extracted_entity": "Yuli_Daniel"}
{"question": "who is William Riker married to?", "answer": "Deanna Troi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Deanna Troi"], "entity_annotations": ["William Riker"], "answer_entity_name": null, "predicted_answer": "William Riker is married to Deanna Troi", "extracted_entity": "William_Riker"}
{"question": "who is Lil Wayne married to?", "answer": "Antonia Wright", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Antonia Wright"], "entity_annotations": ["Lil Wayne"], "answer_entity_name": null, "predicted_answer": "Toya Johnson", "extracted_entity": "Lil_Wayne"}
{"question": "who is Messalina married to?", "answer": "Claudius", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Claudius"], "entity_annotations": ["Messalina"], "answer_entity_name": null, "predicted_answer": "Claudius", "extracted_entity": "Messalina"}
{"question": "who is Emperor Taiwu of Northern Wei married to?", "answer": "Empress Helian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Empress Helian"], "entity_annotations": ["Emperor Taiwu of Northern Wei"], "answer_entity_name": null, "predicted_answer": "Emperor Taiwu of Northern Wei married to Empress", "extracted_entity": "Emperor_Taiwu_of_Northern_Wei"}
{"question": "who is Johannes Heesters married to?", "answer": "Louisa Ghijs", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Louisa Ghijs"], "entity_annotations": ["Johannes Heesters"], "answer_entity_name": null, "predicted_answer": "Johannes Heesters married to Hilde Haase", "extracted_entity": "Johannes_Heesters"}
{"question": "who is Darius II married to?", "answer": "Parysatis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Parysatis"], "entity_annotations": ["Darius II"], "answer_entity_name": null, "predicted_answer": "Parysatis", "extracted_entity": "Darius_II"}
{"question": "who is Laurance Rockefeller married to?", "answer": "Mary French Rockefeller", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mary French Rockefeller"], "entity_annotations": ["Laurance Rockefeller"], "answer_entity_name": null, "predicted_answer": "Mary French", "extracted_entity": "Laurance_Rockefeller"}
{"question": "who is Mario Merz married to?", "answer": "Marisa Merz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Marisa Merz"], "entity_annotations": ["Mario Merz"], "answer_entity_name": null, "predicted_answer": "Mario Merz is married to Marisa Merz", "extracted_entity": "Mario_Merz"}
{"question": "who is Charles Sanders Peirce married to?", "answer": "Juliette Peirce", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Juliette Peirce"], "entity_annotations": ["Charles Sanders Peirce"], "answer_entity_name": null, "predicted_answer": "Juliette Froissy Peirce", "extracted_entity": "Charles_Sanders_Peirce"}
{"question": "who is Karl-Theodor zu Guttenberg married to?", "answer": "Stephanie zu Guttenberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stephanie zu Guttenberg"], "entity_annotations": ["Karl-Theodor zu Guttenberg"], "answer_entity_name": null, "predicted_answer": "Karl-Theodor zu Guttenberg is married to", "extracted_entity": "Karl-Theodor_zu_Guttenberg"}
{"question": "who is Maria Jacquemetton married to?", "answer": "Andre Jacquemetton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Andre Jacquemetton"], "entity_annotations": ["Maria Jacquemetton"], "answer_entity_name": null, "predicted_answer": "Maria Jacquemetton is married to Andre Jacquemet", "extracted_entity": "Maria_Jacquemetton"}
{"question": "who is Senta Berger married to?", "answer": "Michael Verhoeven", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Verhoeven"], "entity_annotations": ["Senta Berger"], "answer_entity_name": null, "predicted_answer": "Senta Berger married to Michael Verhoeven.", "extracted_entity": "Senta_Berger"}
{"question": "who is Robert Crumb married to?", "answer": "Aline Kominsky-Crumb", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aline Kominsky-Crumb"], "entity_annotations": ["Robert Crumb"], "answer_entity_name": null, "predicted_answer": "Aline Kominsky-Crumb", "extracted_entity": "Robert_Crumb"}
{"question": "who is Steve Buscemi married to?", "answer": "Jo Andres", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jo Andres"], "entity_annotations": ["Steve Buscemi"], "answer_entity_name": null, "predicted_answer": "Jo Andres", "extracted_entity": "Steve_Buscemi"}
{"question": "who is Arline Judge married to?", "answer": "Dan Topping", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dan Topping"], "entity_annotations": ["Arline Judge"], "answer_entity_name": null, "predicted_answer": "Arline Judge married to Wesley Ruggles", "extracted_entity": "Arline_Judge"}
{"question": "who is Billie Burke married to?", "answer": "Florenz Ziegfeld, Jr.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florenz Ziegfeld, Jr."], "entity_annotations": ["Billie Burke"], "answer_entity_name": null, "predicted_answer": "Florenz Ziegfeld Jr.", "extracted_entity": "Billie_Burke"}
{"question": "who is Robert Erskine Childers married to?", "answer": "Molly Childers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Molly Childers"], "entity_annotations": ["Robert Erskine Childers"], "answer_entity_name": null, "predicted_answer": "Robert Erskine Childers married to Mary Ald", "extracted_entity": "Robert_Erskine_Childers"}
{"question": "who is Henry Hudson Kitson married to?", "answer": "Theo Alice Ruggles Kitson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Theo Alice Ruggles Kitson"], "entity_annotations": ["Henry Hudson Kitson"], "answer_entity_name": null, "predicted_answer": "Theo Alice Ruggles Kitson", "extracted_entity": "Henry_Hudson_Kitson"}
{"question": "who is Mark Gil married to?", "answer": "Jaclyn Jose", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jaclyn Jose"], "entity_annotations": ["Mark Gil"], "answer_entity_name": null, "predicted_answer": "Maricar Jacinto", "extracted_entity": "Mark_Gil"}
{"question": "who is Ed Solomon married to?", "answer": "Cynthia Cleese", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cynthia Cleese"], "entity_annotations": ["Ed Solomon"], "answer_entity_name": null, "predicted_answer": "Ed Solomon is married to Cynthia Cleese.", "extracted_entity": "Ed_Solomon"}
{"question": "who is Francine Pascal married to?", "answer": "John Pascal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Pascal"], "entity_annotations": ["Francine Pascal"], "answer_entity_name": null, "predicted_answer": "John Pascal", "extracted_entity": "Francine_Pascal"}
{"question": "who is Charles Laughton married to?", "answer": "Elsa Lanchester", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elsa Lanchester"], "entity_annotations": ["Charles Laughton"], "answer_entity_name": null, "predicted_answer": "Elsa Lanchester", "extracted_entity": "Charles_Laughton"}
{"question": "who is Salim Khan married to?", "answer": "Helen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Helen"], "entity_annotations": ["Salim Khan"], "answer_entity_name": null, "predicted_answer": "Sushila Charak (a.k.a.", "extracted_entity": "Salim_Khan"}
{"question": "who is Jared Kushner married to?", "answer": "Ivanka Trump", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ivanka Trump"], "entity_annotations": ["Jared Kushner"], "answer_entity_name": null, "predicted_answer": "Ivanka Trump", "extracted_entity": "Jared_Kushner"}
{"question": "who is Dara Shikoh married to?", "answer": "Nadira Banu Begum", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nadira Banu Begum"], "entity_annotations": ["Dara Shikoh"], "answer_entity_name": null, "predicted_answer": "Dara Shikoh married to Nur Jahan", "extracted_entity": "Dara_Shikoh"}
{"question": "who is Miss Ellie Ewing married to?", "answer": "Jock Ewing", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jock Ewing"], "entity_annotations": ["Miss Ellie Ewing"], "answer_entity_name": null, "predicted_answer": "she is married to Jock Ewing", "extracted_entity": "Miss_Ellie_Ewing"}
{"question": "who is Caroline Matilda of Great Britain married to?", "answer": "Christian VII of Denmark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Christian VII of Denmark"], "entity_annotations": ["Caroline Matilda of Great Britain"], "answer_entity_name": null, "predicted_answer": "Christian VII of Denmark and Norway", "extracted_entity": "Caroline_Matilda_of_Great_Britain"}
{"question": "who is Stewart Lee married to?", "answer": "Bridget Christie", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bridget Christie"], "entity_annotations": ["Stewart Lee"], "answer_entity_name": null, "predicted_answer": "Stewart Lee is married to.", "extracted_entity": "Stewart_Lee"}
{"question": "who is Imelda Marcos married to?", "answer": "Ferdinand Marcos", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ferdinand Marcos"], "entity_annotations": ["Imelda Marcos"], "answer_entity_name": null, "predicted_answer": "Ferdinand Marcos", "extracted_entity": "Imelda_Marcos"}
{"question": "who is Heraclius II of Georgia married to?", "answer": "Darejan Dadiani", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Darejan Dadiani"], "entity_annotations": ["Heraclius II of Georgia"], "answer_entity_name": null, "predicted_answer": "Heraclius II of Georgia is married to T", "extracted_entity": "Heraclius_II_of_Georgia"}
{"question": "who is Karla Homolka married to?", "answer": "Paul Bernardo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paul Bernardo"], "entity_annotations": ["Karla Homolka"], "answer_entity_name": null, "predicted_answer": "Karla Homolka is married to a brother", "extracted_entity": "Karla_Homolka"}
{"question": "who is Kathy Baker married to?", "answer": "Steven Robman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Steven Robman"], "entity_annotations": ["Kathy Baker"], "answer_entity_name": null, "predicted_answer": "She is married to George Clooney.", "extracted_entity": "Kathy_Baker"}
{"question": "who is Anthony Weiner married to?", "answer": "Huma Abedin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Huma Abedin"], "entity_annotations": ["Anthony Weiner"], "answer_entity_name": null, "predicted_answer": "Huma Abedin", "extracted_entity": "Anthony_Weiner"}
{"question": "who is Will Durant married to?", "answer": "Ariel Durant", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ariel Durant"], "entity_annotations": ["Will Durant"], "answer_entity_name": null, "predicted_answer": "Will Durant is married to Ariel Durant.", "extracted_entity": "Will_Durant"}
{"question": "who is Jane Frazee married to?", "answer": "Glenn Tryon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Glenn Tryon"], "entity_annotations": ["Jane Frazee"], "answer_entity_name": null, "predicted_answer": "Jane Frazee married to Glenn Tryon", "extracted_entity": "Jane_Frazee"}
{"question": "who is Queen Silvia of Sweden married to?", "answer": "Carl XVI Gustaf of Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carl XVI Gustaf of Sweden"], "entity_annotations": ["Queen Silvia of Sweden"], "answer_entity_name": null, "predicted_answer": "King Carl XVI Gustaf", "extracted_entity": "Queen_Silvia_of_Sweden"}
{"question": "who is Linda Lovelace married to?", "answer": "Chuck Traynor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chuck Traynor"], "entity_annotations": ["Linda Lovelace"], "answer_entity_name": null, "predicted_answer": "Chuck Traynor", "extracted_entity": "Linda_Lovelace"}
{"question": "who is Tolui married to?", "answer": "Sorghaghtani Beki", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sorghaghtani Beki"], "entity_annotations": ["Tolui"], "answer_entity_name": null, "predicted_answer": "Sorghaghtani Beki", "extracted_entity": "Tolui"}
{"question": "who is Serena married to?", "answer": "Stilicho", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stilicho"], "entity_annotations": ["Serena"], "answer_entity_name": null, "predicted_answer": "Serena is married to Alexis Ohanian", "extracted_entity": "Serena"}
{"question": "who is Kasturba Gandhi married to?", "answer": "Mohandas Karamchand Gandhi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mohandas Karamchand Gandhi"], "entity_annotations": ["Kasturba Gandhi"], "answer_entity_name": null, "predicted_answer": "Kasturba Gandhi is married to Mohandas", "extracted_entity": "Kasturba_Gandhi"}
{"question": "who is Jane Porter married to?", "answer": "Tarzan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tarzan"], "entity_annotations": ["Jane Porter"], "answer_entity_name": null, "predicted_answer": "Jane Porter is married to William Porter.", "extracted_entity": "Jane_Porter"}
{"question": "who is Margaret Trudeau married to?", "answer": "Pierre Trudeau", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pierre Trudeau"], "entity_annotations": ["Margaret Trudeau"], "answer_entity_name": null, "predicted_answer": "Margaret Trudeau is married to Pierre Trudeau.", "extracted_entity": "Margaret_Trudeau"}
{"question": "who is Carrie Preston married to?", "answer": "Michael Emerson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Emerson"], "entity_annotations": ["Carrie Preston"], "answer_entity_name": null, "predicted_answer": "Michael Emerson", "extracted_entity": "Carrie_Preston"}
{"question": "who is Satyajit Ray married to?", "answer": "Bijoya Ray", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bijoya Ray"], "entity_annotations": ["Satyajit Ray"], "answer_entity_name": null, "predicted_answer": "Bijoya Ray", "extracted_entity": "Satyajit_Ray"}
{"question": "who is Nina Persson married to?", "answer": "Nathan Larson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nathan Larson"], "entity_annotations": ["Nina Persson"], "answer_entity_name": null, "predicted_answer": "Nina Persson is married to Nathan Larson.", "extracted_entity": "Nina_Persson"}
{"question": "who is Hypermnestra married to?", "answer": "Lynceus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lynceus"], "entity_annotations": ["Hypermnestra"], "answer_entity_name": null, "predicted_answer": "Lynceus", "extracted_entity": "Hypermnestra"}
{"question": "who is Claude Chabrol married to?", "answer": "St\u00e9phane Audran", "dataset": "entity_questions", "split": "test", "answer_aliases": ["St\u00e9phane Audran"], "entity_annotations": ["Claude Chabrol"], "answer_entity_name": null, "predicted_answer": "Claude Chabrol is married to St\u00e9ph", "extracted_entity": "Claude_Chabrol"}
{"question": "who is Aamina Sheikh married to?", "answer": "Mohib Mirza", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mohib Mirza"], "entity_annotations": ["Aamina Sheikh"], "answer_entity_name": null, "predicted_answer": "Aamina Sheikh is married to Mohib Mirza", "extracted_entity": "Aamina_Sheikh"}
{"question": "who is Chiron married to?", "answer": "Chariclo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chariclo"], "entity_annotations": ["Chiron"], "answer_entity_name": null, "predicted_answer": "Chariclo", "extracted_entity": "Chiron"}
{"question": "who is Hak Ja Han married to?", "answer": "Sun Myung Moon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sun Myung Moon"], "entity_annotations": ["Hak Ja Han"], "answer_entity_name": null, "predicted_answer": "She is married to Sun Myung Moon.", "extracted_entity": "Hak_Ja_Han"}
{"question": "who is Joyce Banda married to?", "answer": "Richard Banda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Richard Banda"], "entity_annotations": ["Joyce Banda"], "answer_entity_name": null, "predicted_answer": "Joyce Banda is married to Richard Banda.", "extracted_entity": "Joyce_Banda"}
{"question": "who is Billie Dove married to?", "answer": "Irvin Willat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Irvin Willat"], "entity_annotations": ["Billie Dove"], "answer_entity_name": null, "predicted_answer": "she married wealthy oil executive Robert Alan Kenaston in", "extracted_entity": "Billie_Dove"}
{"question": "who is Blake Edwards married to?", "answer": "Julie Andrews", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Julie Andrews"], "entity_annotations": ["Blake Edwards"], "answer_entity_name": null, "predicted_answer": "Blake Edwards was married to Julie Andrews.", "extracted_entity": "Blake_Edwards"}
{"question": "who is Lady Charlotte Guest married to?", "answer": "John Josiah Guest", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Josiah Guest"], "entity_annotations": ["Lady Charlotte Guest"], "answer_entity_name": null, "predicted_answer": "Lady Charlotte Guest married to John Josiah Guest", "extracted_entity": "Lady_Charlotte_Guest"}
{"question": "who is Benjamin Harrison married to?", "answer": "Caroline Harrison", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Caroline Harrison", "Mary Dimmick Harrison"], "entity_annotations": ["Benjamin Harrison"], "answer_entity_name": null, "predicted_answer": "Caroline Harrison", "extracted_entity": "Benjamin_Harrison"}
{"question": "who is Derek Farr married to?", "answer": "Muriel Pavlow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Muriel Pavlow"], "entity_annotations": ["Derek Farr"], "answer_entity_name": null, "predicted_answer": "Muriel Pavlow", "extracted_entity": "Derek_Farr"}
{"question": "who is James Joyce married to?", "answer": "Nora Barnacle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nora Barnacle"], "entity_annotations": ["James Joyce"], "answer_entity_name": null, "predicted_answer": "Nora Barnacle", "extracted_entity": "James_Joyce"}
{"question": "who is J. R. Ewing married to?", "answer": "Sue Ellen Ewing", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sue Ellen Ewing"], "entity_annotations": ["J. R. Ewing"], "answer_entity_name": null, "predicted_answer": "Sue Ellen Ewing", "extracted_entity": "J._R._Ewing"}
{"question": "who is Milton Resnick married to?", "answer": "Pat Passlof", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pat Passlof"], "entity_annotations": ["Milton Resnick"], "answer_entity_name": null, "predicted_answer": "Pat Passlof", "extracted_entity": "Milton_Resnick"}
{"question": "who is Isabella of Portugal married to?", "answer": "Charles V", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles V"], "entity_annotations": ["Isabella of Portugal"], "answer_entity_name": null, "predicted_answer": "Charles V, Holy Roman Emperor, King of Spain", "extracted_entity": "Isabella_of_Portugal"}
{"question": "who is Alexander of Greece married to?", "answer": "Aspasia Manos", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aspasia Manos"], "entity_annotations": ["Alexander of Greece"], "answer_entity_name": null, "predicted_answer": "Aspasia Manos", "extracted_entity": "Alexander_of_Greece"}
{"question": "who is Menelaus married to?", "answer": "Helen of Troy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Helen of Troy"], "entity_annotations": ["Menelaus"], "answer_entity_name": null, "predicted_answer": "len", "extracted_entity": "Menelaus"}
{"question": "who is Miguel Ferrer married to?", "answer": "Leilani Sarelle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leilani Sarelle"], "entity_annotations": ["Miguel Ferrer"], "answer_entity_name": null, "predicted_answer": "Ferrer married Leilani Sarelle in", "extracted_entity": "Miguel_Ferrer"}
{"question": "who is Scoot McNairy married to?", "answer": "Whitney Able", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Whitney Able"], "entity_annotations": ["Scoot McNairy"], "answer_entity_name": null, "predicted_answer": "He is married to Whitney McNairy", "extracted_entity": "Scoot_McNairy"}
{"question": "who is Roman Abramovich married to?", "answer": "Dasha Zhukova", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dasha Zhukova"], "entity_annotations": ["Roman Abramovich"], "answer_entity_name": null, "predicted_answer": "Roman Abramovich is married to Daria Zhuk", "extracted_entity": "Roman_Abramovich"}
{"question": "who is Linus Pauling married to?", "answer": "Ava Helen Pauling", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ava Helen Pauling"], "entity_annotations": ["Linus Pauling"], "answer_entity_name": null, "predicted_answer": "Ava Helen Pauling", "extracted_entity": "Linus_Pauling"}
{"question": "who is Caroline Aherne married to?", "answer": "Peter Hook", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peter Hook"], "entity_annotations": ["Caroline Aherne"], "answer_entity_name": null, "predicted_answer": "Caroline Aherne married to", "extracted_entity": "Caroline_Aherne"}
{"question": "who is Victoria, Princess Royal married to?", "answer": "Friedrich III of Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Friedrich III of Germany"], "entity_annotations": ["Victoria, Princess Royal"], "answer_entity_name": null, "predicted_answer": "she is married to Prince Frederick of Prussia", "extracted_entity": "Victoria,_Princess_Royal"}
{"question": "who is Marco Enr\u00edquez-Ominami married to?", "answer": "Karen Doggenweiler", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Karen Doggenweiler"], "entity_annotations": ["Marco Enr\u00edquez-Ominami"], "answer_entity_name": null, "predicted_answer": "the Chilean TV hostess Karen Doggenwe", "extracted_entity": "Marco_Enr\u00edquez-Ominami"}
{"question": "who is Benny Andersson married to?", "answer": "Anni-Frid Lyngstad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anni-Frid Lyngstad"], "entity_annotations": ["Benny Andersson"], "answer_entity_name": null, "predicted_answer": "Anni-Frid Lyngstad", "extracted_entity": "Benny_Andersson"}
{"question": "who is Shachi married to?", "answer": "Indra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Indra"], "entity_annotations": ["Shachi"], "answer_entity_name": null, "predicted_answer": "Shachi is married to Shachi.", "extracted_entity": "Shachi"}
{"question": "who is Tiger Woods married to?", "answer": "Elin Nordegren", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elin Nordegren"], "entity_annotations": ["Tiger Woods"], "answer_entity_name": null, "predicted_answer": "Elin", "extracted_entity": "Tiger_Woods"}
{"question": "who is Harry Shearer married to?", "answer": "Judith Owen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Judith Owen"], "entity_annotations": ["Harry Shearer"], "answer_entity_name": null, "predicted_answer": "Harry Shearer is married to Judith Owen.", "extracted_entity": "Harry_Shearer"}
{"question": "who is Robert Browning married to?", "answer": "Elizabeth Barrett Browning", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth Barrett Browning"], "entity_annotations": ["Robert Browning"], "answer_entity_name": null, "predicted_answer": "Robert Browning is married to Elizabeth Barrett.", "extracted_entity": "Robert_Browning"}
{"question": "who is Tamar of Georgia married to?", "answer": "Yury Bogolyubsky", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yury Bogolyubsky", "David Soslan"], "entity_annotations": ["Tamar of Georgia"], "answer_entity_name": null, "predicted_answer": "Tamar of Georgia is married to Yuri of Russia", "extracted_entity": "Tamar_of_Georgia"}
{"question": "who is George Jivajirao Scindia married to?", "answer": "Vijayaraje Scindia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vijayaraje Scindia"], "entity_annotations": ["George Jivajirao Scindia"], "answer_entity_name": null, "predicted_answer": "George Jivajirao Scindia married", "extracted_entity": "George_Jivajirao_Scindia"}
{"question": "who is Carloman I married to?", "answer": "Gerberga, Queen of the Franks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gerberga, Queen of the Franks"], "entity_annotations": ["Carloman I"], "answer_entity_name": null, "predicted_answer": "Carloman I was married to Gerberga of", "extracted_entity": "Carloman_I"}
{"question": "who is Hank Baskett married to?", "answer": "Kendra Wilkinson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kendra Wilkinson"], "entity_annotations": ["Hank Baskett"], "answer_entity_name": null, "predicted_answer": "Kendra Wilkinson", "extracted_entity": "Hank_Baskett"}
{"question": "who is Christian-Jaque married to?", "answer": "Martine Carol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Martine Carol"], "entity_annotations": ["Christian-Jaque"], "answer_entity_name": null, "predicted_answer": "Martine Carol", "extracted_entity": "Christian-Jaque"}
{"question": "who is Kamehameha IV married to?", "answer": "Queen Emma of Hawaii", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Queen Emma of Hawaii"], "entity_annotations": ["Kamehameha IV"], "answer_entity_name": null, "predicted_answer": "Kamehameha IV is married to Emma", "extracted_entity": "Kamehameha_IV"}
{"question": "who is Mut married to?", "answer": "Amun", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amun"], "entity_annotations": ["Mut"], "answer_entity_name": null, "predicted_answer": "Mut is married to Amun", "extracted_entity": "Mut"}
{"question": "who is Ann-Margret married to?", "answer": "Roger Smith", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Roger Smith"], "entity_annotations": ["Ann-Margret"], "answer_entity_name": null, "predicted_answer": "Ann-Margret is married to Roger Smith", "extracted_entity": "Ann-Margret"}
{"question": "who is Arwen married to?", "answer": "Aragorn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aragorn"], "entity_annotations": ["Arwen"], "answer_entity_name": null, "predicted_answer": "Aragorn", "extracted_entity": "Arwen"}
{"question": "who is Larry David married to?", "answer": "Laurie David", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Laurie David"], "entity_annotations": ["Larry David"], "answer_entity_name": null, "predicted_answer": "Larry David is married to Laurie Lennard", "extracted_entity": "Larry_David"}
{"question": "who is Anna Komnene married to?", "answer": "Nikephoros Bryennios the Younger", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nikephoros Bryennios the Younger"], "entity_annotations": ["Anna Komnene"], "answer_entity_name": null, "predicted_answer": "She married Nikephoros Bryennios in", "extracted_entity": "Anna_Komnene"}
{"question": "who is Husayn ibn Ali married to?", "answer": "Shahrbanu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shahrbanu"], "entity_annotations": ["Husayn ibn Ali"], "answer_entity_name": null, "predicted_answer": "Husayn ibn Ali is married to Fat", "extracted_entity": "Husayn_ibn_Ali"}
{"question": "who is Paul Gross married to?", "answer": "Martha Burns", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Martha Burns"], "entity_annotations": ["Paul Gross"], "answer_entity_name": null, "predicted_answer": "marie-michele desrosiers", "extracted_entity": "Paul_Gross"}
{"question": "who is Howard Dean married to?", "answer": "Judith Steinberg Dean", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Judith Steinberg Dean"], "entity_annotations": ["Howard Dean"], "answer_entity_name": null, "predicted_answer": "Judith Steinberg", "extracted_entity": "Howard_Dean"}
{"question": "who is Joseph Needham married to?", "answer": "Lu Gwei-djen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lu Gwei-djen", "Dorothy M. Needham"], "entity_annotations": ["Joseph Needham"], "answer_entity_name": null, "predicted_answer": "Dorothy Needham", "extracted_entity": "Joseph_Needham"}
{"question": "who is Lars Hanson married to?", "answer": "Karin Molander", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Karin Molander"], "entity_annotations": ["Lars Hanson"], "answer_entity_name": null, "predicted_answer": "Karin Molander", "extracted_entity": "Lars_Hanson"}
{"question": "who is Paul Martin married to?", "answer": "Sheila Martin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sheila Martin"], "entity_annotations": ["Paul Martin"], "answer_entity_name": null, "predicted_answer": "Sheila Martin", "extracted_entity": "Paul_Martin"}
{"question": "who is Denise Scott Brown married to?", "answer": "Robert Venturi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robert Venturi"], "entity_annotations": ["Denise Scott Brown"], "answer_entity_name": null, "predicted_answer": "Denise Scott Brown is married to Robert Scott Brown.", "extracted_entity": "Denise_Scott_Brown"}
{"question": "who is Clotilde married to?", "answer": "Clovis I", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clovis I"], "entity_annotations": ["Clotilde"], "answer_entity_name": null, "predicted_answer": "Clovis I", "extracted_entity": "Clotilde"}
{"question": "who is Rudolph I of Burgundy married to?", "answer": "Guilla of Provence", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guilla of Provence"], "entity_annotations": ["Rudolph I of Burgundy"], "answer_entity_name": null, "predicted_answer": "Rudolph I of Burgundy married to Guilla", "extracted_entity": "Rudolph_I_of_Burgundy"}
{"question": "who is Galadriel married to?", "answer": "Celeborn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Celeborn"], "entity_annotations": ["Galadriel"], "answer_entity_name": null, "predicted_answer": "Celeborn", "extracted_entity": "Galadriel"}
{"question": "who is Elizabeth Schuyler Hamilton married to?", "answer": "Alexander Hamilton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexander Hamilton"], "entity_annotations": ["Elizabeth Schuyler Hamilton"], "answer_entity_name": null, "predicted_answer": "Alexander Hamilton", "extracted_entity": "Elizabeth_Schuyler_Hamilton"}
{"question": "who is Danish Taimoor married to?", "answer": "Aiza Khan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aiza Khan"], "entity_annotations": ["Danish Taimoor"], "answer_entity_name": null, "predicted_answer": "Ayeza Khan", "extracted_entity": "Danish_Taimoor"}
{"question": "who is Christopher de Leon married to?", "answer": "Sandy Andolong", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sandy Andolong"], "entity_annotations": ["Christopher de Leon"], "answer_entity_name": null, "predicted_answer": "He is married to Sandy Andolong.", "extracted_entity": "Christopher_de_Leon"}
{"question": "who is Eadgyth married to?", "answer": "Otto I the chicken", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Otto I the chicken"], "entity_annotations": ["Eadgyth"], "answer_entity_name": null, "predicted_answer": "Eadgyth is married to Otto I,", "extracted_entity": "Eadgyth"}
{"question": "who is Antonio Aguilar married to?", "answer": "Flor Silvestre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Flor Silvestre"], "entity_annotations": ["Antonio Aguilar"], "answer_entity_name": null, "predicted_answer": "Antonio Aguilar is married to Flor Silvestre", "extracted_entity": "Antonio_Aguilar"}
{"question": "who is Ali MacGraw married to?", "answer": "Steve McQueen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Steve McQueen"], "entity_annotations": ["Ali MacGraw"], "answer_entity_name": null, "predicted_answer": "Ali MacGraw is married to Steve Krantz", "extracted_entity": "Ali_MacGraw"}
{"question": "who is Kevin Corrigan married to?", "answer": "Elizabeth Berridge", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth Berridge"], "entity_annotations": ["Kevin Corrigan"], "answer_entity_name": null, "predicted_answer": "Kevin Corrigan is married to.", "extracted_entity": "Kevin_Corrigan"}
{"question": "who is Coosje van Bruggen married to?", "answer": "Claes Oldenburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Claes Oldenburg"], "entity_annotations": ["Coosje van Bruggen"], "answer_entity_name": null, "predicted_answer": "Claes Oldenburg", "extracted_entity": "Coosje_van_Bruggen"}
{"question": "who is David Mamet married to?", "answer": "Rebecca Pidgeon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rebecca Pidgeon"], "entity_annotations": ["David Mamet"], "answer_entity_name": null, "predicted_answer": "David Mamet married Lindsay Crouse in", "extracted_entity": "David_Mamet"}
{"question": "who is Peter III of Russia married to?", "answer": "Catherine II of Russia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Catherine II of Russia"], "entity_annotations": ["Peter III of Russia"], "answer_entity_name": null, "predicted_answer": "Catherine II of Russia", "extracted_entity": "Peter_III_of_Russia"}
{"question": "who is Mette-Marit, Crown Princess of Norway married to?", "answer": "Haakon, Crown Prince of Norway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Haakon, Crown Prince of Norway"], "entity_annotations": ["Mette-Marit, Crown Princess of Norway"], "answer_entity_name": null, "predicted_answer": "Crown Prince Haakon", "extracted_entity": "Mette-Marit,_Crown_Princess_of_Norway"}
{"question": "who is Chen Shubao married to?", "answer": "Consort Zhang Lihua", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Consort Zhang Lihua", "Empress Shen Wuhua"], "entity_annotations": ["Chen Shubao"], "answer_entity_name": null, "predicted_answer": "Lady Xu", "extracted_entity": "Chen_Shubao"}
{"question": "who is Gao Wei married to?", "answer": "Empress Hul\u00fc", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Empress Hul\u00fc", "Feng Xiaolian"], "entity_annotations": ["Gao Wei"], "answer_entity_name": null, "predicted_answer": "Hul\u00fc Guang", "extracted_entity": "Gao_Wei"}
{"question": "who is Drusus Julius Caesar married to?", "answer": "Livilla", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Livilla"], "entity_annotations": ["Drusus Julius Caesar"], "answer_entity_name": null, "predicted_answer": "Livilla", "extracted_entity": "Drusus_Julius_Caesar"}
{"question": "who is Isabella of France married to?", "answer": "Edward II of England", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edward II of England"], "entity_annotations": ["Isabella of France"], "answer_entity_name": null, "predicted_answer": "Isabella of France is married to Edward II", "extracted_entity": "Isabella_of_France"}
{"question": "who is Elizabeth Raleigh married to?", "answer": "Walter Raleigh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Walter Raleigh"], "entity_annotations": ["Elizabeth Raleigh"], "answer_entity_name": null, "predicted_answer": "Elizabeth Raleigh is married to Sir Walter Raleigh.", "extracted_entity": "Elizabeth_Raleigh"}
{"question": "who is Jack Rosenthal married to?", "answer": "Maureen Lipman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maureen Lipman"], "entity_annotations": ["Jack Rosenthal"], "answer_entity_name": null, "predicted_answer": "Jack Rosenthal married to Ann Davies", "extracted_entity": "Jack_Rosenthal"}
{"question": "who is Amarinder Singh married to?", "answer": "Preneet Kaur", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Preneet Kaur"], "entity_annotations": ["Amarinder Singh"], "answer_entity_name": null, "predicted_answer": "Amarinder Singh is married to Preneet K", "extracted_entity": "Amarinder_Singh"}
{"question": "who is Ashley Judd married to?", "answer": "Dario Franchitti", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dario Franchitti"], "entity_annotations": ["Ashley Judd"], "answer_entity_name": null, "predicted_answer": "Ashley Judd is not married.", "extracted_entity": "Ashley_Judd"}
{"question": "who is Rose Friedman married to?", "answer": "Milton Friedman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milton Friedman"], "entity_annotations": ["Rose Friedman"], "answer_entity_name": null, "predicted_answer": "Rose Friedman married to Milton Friedman", "extracted_entity": "Rose_Friedman"}
{"question": "who is Margaret Bentinck, Duchess of Portland married to?", "answer": "William Bentinck, 2nd Duke of Portland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Bentinck, 2nd Duke of Portland"], "entity_annotations": ["Margaret Bentinck, Duchess of Portland"], "answer_entity_name": null, "predicted_answer": "Margaret Bentinck, Duchess of Portland married to", "extracted_entity": "Margaret_Bentinck,_Duchess_of_Portland"}
{"question": "who is Lugalbanda married to?", "answer": "Ninsun", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ninsun"], "entity_annotations": ["Lugalbanda"], "answer_entity_name": null, "predicted_answer": "Ninsun", "extracted_entity": "Lugalbanda"}
{"question": "who is Gloria Swanson married to?", "answer": "Wallace Beery", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wallace Beery"], "entity_annotations": ["Gloria Swanson"], "answer_entity_name": null, "predicted_answer": "Gloria Swanson married to Wallace Beery", "extracted_entity": "Gloria_Swanson"}
{"question": "who is John Stuart Mill married to?", "answer": "Harriet Taylor Mill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harriet Taylor Mill"], "entity_annotations": ["John Stuart Mill"], "answer_entity_name": null, "predicted_answer": "Harriet Taylor", "extracted_entity": "John_Stuart_Mill"}
{"question": "who is Steven Bochco married to?", "answer": "Barbara Bosson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barbara Bosson"], "entity_annotations": ["Steven Bochco"], "answer_entity_name": null, "predicted_answer": "JoAnn Pflug", "extracted_entity": "Steven_Bochco"}
{"question": "who is Roger Spottiswoode married to?", "answer": "Holly Palance", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Holly Palance"], "entity_annotations": ["Roger Spottiswoode"], "answer_entity_name": null, "predicted_answer": "he is married to Loretta Spottis", "extracted_entity": "Roger_Spottiswoode"}
{"question": "who is Christie Brinkley married to?", "answer": "Billy Joel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Billy Joel"], "entity_annotations": ["Christie Brinkley"], "answer_entity_name": null, "predicted_answer": "Christie Brinkley married to Peter Cook.", "extracted_entity": "Christie_Brinkley"}
{"question": "who is George Burns married to?", "answer": "Gracie Allen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gracie Allen"], "entity_annotations": ["George Burns"], "answer_entity_name": null, "predicted_answer": "Gracie Allen", "extracted_entity": "George_Burns"}
{"question": "who is John Kerry married to?", "answer": "Teresa Heinz Kerry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Teresa Heinz Kerry"], "entity_annotations": ["John Kerry"], "answer_entity_name": null, "predicted_answer": "Teresa Heinz Kerry", "extracted_entity": "John_Kerry"}
{"question": "who is Kathryn Bigelow married to?", "answer": "James Cameron", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James Cameron"], "entity_annotations": ["Kathryn Bigelow"], "answer_entity_name": null, "predicted_answer": "Kathryn Bigelow is married to James Cameron.", "extracted_entity": "Kathryn_Bigelow"}
{"question": "who is Wolf Albach-Retty married to?", "answer": "Trude Marlen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Trude Marlen", "Magda Schneider"], "entity_annotations": ["Wolf Albach-Retty"], "answer_entity_name": null, "predicted_answer": "Magda Schneider", "extracted_entity": "Wolf_Albach-Retty"}
{"question": "who is Hunter Foster married to?", "answer": "Jennifer Cody", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jennifer Cody"], "entity_annotations": ["Hunter Foster"], "answer_entity_name": null, "predicted_answer": "he is married to Sutton Foster", "extracted_entity": "Hunter_Foster"}
{"question": "who is Sombhu Mitra married to?", "answer": "Tripti Mitra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tripti Mitra"], "entity_annotations": ["Sombhu Mitra"], "answer_entity_name": null, "predicted_answer": "Sombhu Mitra was married to the actress", "extracted_entity": "Sombhu_Mitra"}
{"question": "who is Louise Homer married to?", "answer": "Sidney Homer, Sr.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sidney Homer, Sr."], "entity_annotations": ["Louise Homer"], "answer_entity_name": null, "predicted_answer": "Louise Homer married to Sidney Homer", "extracted_entity": "Louise_Homer"}
{"question": "who is Christian Krohg married to?", "answer": "Oda Krohg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oda Krohg"], "entity_annotations": ["Christian Krohg"], "answer_entity_name": null, "predicted_answer": "He was married to Oda Krohg.", "extracted_entity": "Christian_Krohg"}
{"question": "who is Acamapichtli married to?", "answer": "Tezcatlan Miyahuatzin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tezcatlan Miyahuatzin"], "entity_annotations": ["Acamapichtli"], "answer_entity_name": null, "predicted_answer": "Ilancueitl", "extracted_entity": "Acamapichtli"}
{"question": "who is Mahasweta Devi married to?", "answer": "Bijon Bhattacharya", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bijon Bhattacharya"], "entity_annotations": ["Mahasweta Devi"], "answer_entity_name": null, "predicted_answer": "She is married to Bireshwar Sen.", "extracted_entity": "Mahasweta_Devi"}
{"question": "who is Natalia Sedova married to?", "answer": "Leon Trotsky", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leon Trotsky"], "entity_annotations": ["Natalia Sedova"], "answer_entity_name": null, "predicted_answer": "She was married to Leon Trotsky", "extracted_entity": "Natalia_Sedova"}
{"question": "who is James Wong Howe married to?", "answer": "Sanora Babb", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sanora Babb"], "entity_annotations": ["James Wong Howe"], "answer_entity_name": null, "predicted_answer": "James Wong Howe is married to Jean Wong Howe.", "extracted_entity": "James_Wong_Howe"}
{"question": "who is Porsha Williams married to?", "answer": "Kordell Stewart", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kordell Stewart"], "entity_annotations": ["Porsha Williams"], "answer_entity_name": null, "predicted_answer": "She married Kordell Stewart in 2011", "extracted_entity": "Porsha_Williams"}
{"question": "who is Matthew Freud married to?", "answer": "Elisabeth Murdoch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elisabeth Murdoch"], "entity_annotations": ["Matthew Freud"], "answer_entity_name": null, "predicted_answer": "Elisabeth Murdoch", "extracted_entity": "Matthew_Freud"}
{"question": "who is Julie London married to?", "answer": "Jack Webb", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jack Webb", "Bobby Troup"], "entity_annotations": ["Julie London"], "answer_entity_name": null, "predicted_answer": "Julie London was married to Jack Webb, Bobby T", "extracted_entity": "Julie_London"}
{"question": "who is Priscilla Presley married to?", "answer": "Elvis Presley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elvis Presley"], "entity_annotations": ["Priscilla Presley"], "answer_entity_name": null, "predicted_answer": "Priscilla Presley married to the late American", "extracted_entity": "Priscilla_Presley"}
{"question": "who is Eudokia Makrembolitissa married to?", "answer": "Romanos IV Diogenes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Romanos IV Diogenes", "Constantine X Doukas"], "entity_annotations": ["Eudokia Makrembolitissa"], "answer_entity_name": null, "predicted_answer": "Constantine X Doukas", "extracted_entity": "Eudokia_Makrembolitissa"}
{"question": "who is Christa Miller married to?", "answer": "Bill Lawrence", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bill Lawrence"], "entity_annotations": ["Christa Miller"], "answer_entity_name": null, "predicted_answer": "Christa Miller is married to Bill Lawrence.", "extracted_entity": "Christa_Miller"}
{"question": "who is Albert IV, Duke of Bavaria married to?", "answer": "Kunigunde of Austria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kunigunde of Austria"], "entity_annotations": ["Albert IV, Duke of Bavaria"], "answer_entity_name": null, "predicted_answer": "Albert IV, Duke of Bavaria married to Kun", "extracted_entity": "Albert_IV,_Duke_of_Bavaria"}
{"question": "who is Ernie Kovacs married to?", "answer": "Edie Adams", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edie Adams"], "entity_annotations": ["Ernie Kovacs"], "answer_entity_name": null, "predicted_answer": "Edie Adams", "extracted_entity": "Ernie_Kovacs"}
{"question": "who is Isaac Asimov married to?", "answer": "Janet Asimov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Janet Asimov"], "entity_annotations": ["Isaac Asimov"], "answer_entity_name": null, "predicted_answer": "Janet Asimov", "extracted_entity": "Isaac_Asimov"}
{"question": "who is Jackson Pollock married to?", "answer": "Lee Krasner", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lee Krasner"], "entity_annotations": ["Jackson Pollock"], "answer_entity_name": null, "predicted_answer": "Lee Krasner", "extracted_entity": "Jackson_Pollock"}
{"question": "who is Joan Bennett married to?", "answer": "Walter Wanger", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Walter Wanger"], "entity_annotations": ["Joan Bennett"], "answer_entity_name": null, "predicted_answer": "Joan Bennett married to Walter Wanger", "extracted_entity": "Joan_Bennett"}
{"question": "who is Amy Poehler married to?", "answer": "Will Arnett", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Will Arnett"], "entity_annotations": ["Amy Poehler"], "answer_entity_name": null, "predicted_answer": "She is married to Will Arnett.", "extracted_entity": "Amy_Poehler"}
{"question": "who is Carmen Electra married to?", "answer": "Dennis Rodman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dennis Rodman", "Dave Navarro"], "entity_annotations": ["Carmen Electra"], "answer_entity_name": null, "predicted_answer": "Carmen Electra is married to Dave Navarro.", "extracted_entity": "Carmen_Electra"}
{"question": "who is Carmel Tebbutt married to?", "answer": "Anthony Albanese", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anthony Albanese"], "entity_annotations": ["Carmel Tebbutt"], "answer_entity_name": null, "predicted_answer": "Michael Daley", "extracted_entity": "Carmel_Tebbutt"}
{"question": "who is David Birney married to?", "answer": "Meredith Baxter", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Meredith Baxter"], "entity_annotations": ["David Birney"], "answer_entity_name": null, "predicted_answer": "Meredith Baxter", "extracted_entity": "David_Birney"}
{"question": "who is Roxana married to?", "answer": "Alexander the Great", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexander the Great"], "entity_annotations": ["Roxana"], "answer_entity_name": null, "predicted_answer": "Roxana is married to Alexander the Great.", "extracted_entity": "Roxana"}
{"question": "who is DeWolf Hopper married to?", "answer": "Hedda Hopper", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hedda Hopper"], "entity_annotations": ["DeWolf Hopper"], "answer_entity_name": null, "predicted_answer": "DeWolf Hopper married to", "extracted_entity": "DeWolf_Hopper"}
{"question": "who is Gisela of Hungary married to?", "answer": "Stephen I of Hungary", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stephen I of Hungary"], "entity_annotations": ["Gisela of Hungary"], "answer_entity_name": null, "predicted_answer": "Gisela of Hungary married to Stephen I of", "extracted_entity": "Gisela_of_Hungary"}
{"question": "who is Mirella Freni married to?", "answer": "Nicolai Ghiaurov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nicolai Ghiaurov"], "entity_annotations": ["Mirella Freni"], "answer_entity_name": null, "predicted_answer": "Mirella Freni is married to Nicol", "extracted_entity": "Mirella_Freni"}
{"question": "who is Rukmini married to?", "answer": "Krishna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Krishna"], "entity_annotations": ["Rukmini"], "answer_entity_name": null, "predicted_answer": "Rukmini is married to Krishna", "extracted_entity": "Rukmini"}
{"question": "who is Bhushan Kumar married to?", "answer": "Divya Khosla Kumar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Divya Khosla Kumar"], "entity_annotations": ["Bhushan Kumar"], "answer_entity_name": null, "predicted_answer": "Divya Khosla Kumar", "extracted_entity": "Bhushan_Kumar"}
{"question": "who is Emperor Xuan of Northern Zhou married to?", "answer": "Empress Chen Yueyi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Empress Chen Yueyi", "Empress Yuchi Chifan", "Yang Lihua", "Empress Zhu Manyue"], "entity_annotations": ["Emperor Xuan of Northern Zhou"], "answer_entity_name": null, "predicted_answer": "Yang Lihua", "extracted_entity": "Emperor_Xuan_of_Northern_Zhou"}
{"question": "who is Elon Musk married to?", "answer": "Talulah Riley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Talulah Riley"], "entity_annotations": ["Elon Musk"], "answer_entity_name": null, "predicted_answer": "Grimes", "extracted_entity": "Elon_Musk"}
{"question": "who is Frederick VI of Denmark married to?", "answer": "Marie of Hesse-Kassel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Marie of Hesse-Kassel"], "entity_annotations": ["Frederick VI of Denmark"], "answer_entity_name": null, "predicted_answer": "Frederick VI of Denmark married to Marie of Hesse", "extracted_entity": "Frederick_VI_of_Denmark"}
{"question": "who is Gunnhild, Mother of Kings married to?", "answer": "Eric Bloodaxe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eric Bloodaxe"], "entity_annotations": ["Gunnhild, Mother of Kings"], "answer_entity_name": null, "predicted_answer": "Eric Bloodaxe", "extracted_entity": "Gunnhild,_Mother_of_Kings"}
{"question": "who is Libby Holman married to?", "answer": "Louis Schanker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Louis Schanker", "Zachary Smith Reynolds"], "entity_annotations": ["Libby Holman"], "answer_entity_name": null, "predicted_answer": "She is married to her uncle's wife's brother", "extracted_entity": "Libby_Holman"}
{"question": "who is Erskine Caldwell married to?", "answer": "Margaret Bourke-White", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Margaret Bourke-White"], "entity_annotations": ["Erskine Caldwell"], "answer_entity_name": null, "predicted_answer": "Caldwell married to Margaret Bourke-White", "extracted_entity": "Erskine_Caldwell"}
{"question": "who is Yash Chopra married to?", "answer": "Pamela Chopra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pamela Chopra"], "entity_annotations": ["Yash Chopra"], "answer_entity_name": null, "predicted_answer": "Yash Chopra is married to Pamela Chopra", "extracted_entity": "Yash_Chopra"}
{"question": "who is Andrei Linde married to?", "answer": "Renata Kallosh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Renata Kallosh"], "entity_annotations": ["Andrei Linde"], "answer_entity_name": null, "predicted_answer": "Linde is married to N. S. G", "extracted_entity": "Andrei_Linde"}
{"question": "who is Max Mallowan married to?", "answer": "Agatha Christie", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Agatha Christie"], "entity_annotations": ["Max Mallowan"], "answer_entity_name": null, "predicted_answer": "Max Mallowan is married to Agatha Christie", "extracted_entity": "Max_Mallowan"}
{"question": "who is Marie Louise, Duchess of Parma married to?", "answer": "Napoleon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Napoleon", "Adam Albert von Neipperg"], "entity_annotations": ["Marie Louise, Duchess of Parma"], "answer_entity_name": null, "predicted_answer": "Napoleon Bonaparte", "extracted_entity": "Marie_Louise,_Duchess_of_Parma"}
{"question": "who is Selena married to?", "answer": "Chris P\u00e9rez", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chris P\u00e9rez"], "entity_annotations": ["Selena"], "answer_entity_name": null, "predicted_answer": "Selena married to Chris Perez", "extracted_entity": "Selena"}
{"question": "who is Murong Chui married to?", "answer": "Empress Duan Yuanfei", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Empress Duan Yuanfei", "Empress Dowager Duan"], "entity_annotations": ["Murong Chui"], "answer_entity_name": null, "predicted_answer": "Murong Chui married to Murong Ping.", "extracted_entity": "Murong_Chui"}
{"question": "who is James Brolin married to?", "answer": "Barbra Streisand", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barbra Streisand"], "entity_annotations": ["James Brolin"], "answer_entity_name": null, "predicted_answer": "James Brolin is married to Barbra Stre", "extracted_entity": "James_Brolin"}
{"question": "who is James Stockdale married to?", "answer": "Sybil Stockdale", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sybil Stockdale"], "entity_annotations": ["James Stockdale"], "answer_entity_name": null, "predicted_answer": "Sybil Stockdale", "extracted_entity": "James_Stockdale"}
{"question": "who is Boudica married to?", "answer": "Prasutagus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prasutagus"], "entity_annotations": ["Boudica"], "answer_entity_name": null, "predicted_answer": "Prasutagus", "extracted_entity": "Boudica"}
{"question": "who is Dante Ferretti married to?", "answer": "Francesca Lo Schiavo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Francesca Lo Schiavo"], "entity_annotations": ["Dante Ferretti"], "answer_entity_name": null, "predicted_answer": "Francesca Lo Schiavo", "extracted_entity": "Dante_Ferretti"}
{"question": "who is Elliott Gould married to?", "answer": "Barbra Streisand", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barbra Streisand"], "entity_annotations": ["Elliott Gould"], "answer_entity_name": null, "predicted_answer": "Barbara Streisand", "extracted_entity": "Elliott_Gould"}
{"question": "who is Cyd Charisse married to?", "answer": "Tony Martin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tony Martin"], "entity_annotations": ["Cyd Charisse"], "answer_entity_name": null, "predicted_answer": "she is married to Nico Charisse.", "extracted_entity": "Cyd_Charisse"}
{"question": "who is Ngapoi Ngawang Jigme married to?", "answer": "Ngapoi Cedain Zhoigar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ngapoi Cedain Zhoigar"], "entity_annotations": ["Ngapoi Ngawang Jigme"], "answer_entity_name": null, "predicted_answer": "Ngapoi Cedain Zhoigar, Vice", "extracted_entity": "Ngapoi_Ngawang_Jigme"}
{"question": "who is Joseph Stalin married to?", "answer": "Nadezhda Alliluyeva", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nadezhda Alliluyeva"], "entity_annotations": ["Joseph Stalin"], "answer_entity_name": null, "predicted_answer": "Joseph Stalin was married to Nadezhda All", "extracted_entity": "Joseph_Stalin"}
{"question": "who is Margaret Leijonhufvud married to?", "answer": "Gustav I of Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gustav I of Sweden"], "entity_annotations": ["Margaret Leijonhufvud"], "answer_entity_name": null, "predicted_answer": "Gustav I", "extracted_entity": "Margaret_Leijonhufvud"}
{"question": "who is Orson Pratt married to?", "answer": "Sarah Marinda Bates Pratt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sarah Marinda Bates Pratt"], "entity_annotations": ["Orson Pratt"], "answer_entity_name": null, "predicted_answer": "Orson Pratt was married to Sarah Marinda Bates", "extracted_entity": "Orson_Pratt"}
{"question": "who is Edwin Edwards married to?", "answer": "Elaine Schwartzenburg Edwards", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elaine Schwartzenburg Edwards"], "entity_annotations": ["Edwin Edwards"], "answer_entity_name": null, "predicted_answer": "Edwin Edwards married to Trina Grimes", "extracted_entity": "Edwin_Edwards"}
{"question": "who is Clark Gable married to?", "answer": "Josephine Dillon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Josephine Dillon", "Sylvia Ashley", "Carole Lombard"], "entity_annotations": ["Clark Gable"], "answer_entity_name": null, "predicted_answer": "He was married to Carole Lombard.", "extracted_entity": "Clark_Gable"}
{"question": "who is Leo Marks married to?", "answer": "Elena Gaussen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elena Gaussen"], "entity_annotations": ["Leo Marks"], "answer_entity_name": null, "predicted_answer": "Leo Marks is married to Anne Marks.", "extracted_entity": "Leo_Marks"}
{"question": "who is Leon Golub married to?", "answer": "Nancy Spero", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nancy Spero"], "entity_annotations": ["Leon Golub"], "answer_entity_name": null, "predicted_answer": "Leon Golub is married to Nancy Spero", "extracted_entity": "Leon_Golub"}
{"question": "who is Charles Sutherland Elton married to?", "answer": "E. J. Scovell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["E. J. Scovell"], "entity_annotations": ["Charles Sutherland Elton"], "answer_entity_name": null, "predicted_answer": "Edith Joy Scovell", "extracted_entity": "Charles_Sutherland_Elton"}
{"question": "who is Elin Nordegren married to?", "answer": "Tiger Woods", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tiger Woods"], "entity_annotations": ["Elin Nordegren"], "answer_entity_name": null, "predicted_answer": "Elin Nordegren is married to Tiger Woods", "extracted_entity": "Elin_Nordegren"}
{"question": "who is Abigail married to?", "answer": "David", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David", "Nabal"], "entity_annotations": ["Abigail"], "answer_entity_name": null, "predicted_answer": "Abigail was married to Nabal.", "extracted_entity": "Abigail"}
{"question": "who is Marcian married to?", "answer": "Pulcheria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pulcheria"], "entity_annotations": ["Marcian"], "answer_entity_name": null, "predicted_answer": "Pulcheria", "extracted_entity": "Marcian"}
{"question": "who is Shu Qi married to?", "answer": "Stephen Fung", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stephen Fung"], "entity_annotations": ["Shu Qi"], "answer_entity_name": null, "predicted_answer": "Shu Qi is married to Stephen Fung.", "extracted_entity": "Shu_Qi"}
{"question": "who is Ryan Phillippe married to?", "answer": "Reese Witherspoon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reese Witherspoon"], "entity_annotations": ["Ryan Phillippe"], "answer_entity_name": null, "predicted_answer": "Ryan Phillippe is married to Reese Witherspoon", "extracted_entity": "Ryan_Phillippe"}
{"question": "who is Bharathi Vishnuvardhan married to?", "answer": "Vishnuvardhan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vishnuvardhan"], "entity_annotations": ["Bharathi Vishnuvardhan"], "answer_entity_name": null, "predicted_answer": "Vishnuvardhan", "extracted_entity": "Bharathi_Vishnuvardhan"}
{"question": "who is Carlotta Grisi married to?", "answer": "Jules Perrot", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jules Perrot"], "entity_annotations": ["Carlotta Grisi"], "answer_entity_name": null, "predicted_answer": "She was married to Jules Perrot.", "extracted_entity": "Carlotta_Grisi"}
{"question": "who is Lynn Bari married to?", "answer": "Sidney Luft", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sidney Luft"], "entity_annotations": ["Lynn Bari"], "answer_entity_name": null, "predicted_answer": "Lynn Bari married to John Manard Fisher", "extracted_entity": "Lynn_Bari"}
{"question": "who is John Diefenbaker married to?", "answer": "Edna Diefenbaker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edna Diefenbaker", "Olive Diefenbaker"], "entity_annotations": ["John Diefenbaker"], "answer_entity_name": null, "predicted_answer": "John Diefenbaker is married to Ol", "extracted_entity": "John_Diefenbaker"}
{"question": "who is Fredrik Reinfeldt married to?", "answer": "Filippa Reinfeldt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Filippa Reinfeldt"], "entity_annotations": ["Fredrik Reinfeldt"], "answer_entity_name": null, "predicted_answer": "He is married to Filippa Reinfeldt", "extracted_entity": "Fredrik_Reinfeldt"}
{"question": "who is Yumi Matsutoya married to?", "answer": "Masataka Matsutoya", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Masataka Matsutoya"], "entity_annotations": ["Yumi Matsutoya"], "answer_entity_name": null, "predicted_answer": "e is married to Masataka Matsutoya,", "extracted_entity": "Yumi_Matsutoya"}
{"question": "who is Azlan Shah of Perak married to?", "answer": "Tuanku Bainun", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tuanku Bainun"], "entity_annotations": ["Azlan Shah of Perak"], "answer_entity_name": null, "predicted_answer": "Tuanku Bainun Binti Mohd", "extracted_entity": "Azlan_Shah_of_Perak"}
{"question": "who is Gaius Caesar married to?", "answer": "Livilla", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Livilla"], "entity_annotations": ["Gaius Caesar"], "answer_entity_name": null, "predicted_answer": "his second cousin Livilla", "extracted_entity": "Gaius_Caesar"}
{"question": "who is Anne Rice married to?", "answer": "Stan Rice", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stan Rice"], "entity_annotations": ["Anne Rice"], "answer_entity_name": null, "predicted_answer": "Stan Rice", "extracted_entity": "Anne_Rice"}
{"question": "who is Lloyd Kaufman married to?", "answer": "Pat Swinney Kaufman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pat Swinney Kaufman"], "entity_annotations": ["Lloyd Kaufman"], "answer_entity_name": null, "predicted_answer": "Lloyd Kaufman is married to Pat Kaufman.", "extracted_entity": "Lloyd_Kaufman"}
{"question": "who is Bob Dylan married to?", "answer": "Carolyn Dennis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carolyn Dennis", "Sara Dylan"], "entity_annotations": ["Bob Dylan"], "answer_entity_name": null, "predicted_answer": "Bob Dylan is not married.", "extracted_entity": "Bob_Dylan"}
{"question": "who is Michael Ondaatje married to?", "answer": "Linda Spalding", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Linda Spalding"], "entity_annotations": ["Michael Ondaatje"], "answer_entity_name": null, "predicted_answer": "Michael Ondaatje is married to Linda Sp", "extracted_entity": "Michael_Ondaatje"}
{"question": "who is Grant Withers married to?", "answer": "Loretta Young", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Loretta Young"], "entity_annotations": ["Grant Withers"], "answer_entity_name": null, "predicted_answer": "he is married to Betty.", "extracted_entity": "Grant_Withers"}
{"question": "who is Chaim Weizmann married to?", "answer": "Vera Weizmann", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vera Weizmann"], "entity_annotations": ["Chaim Weizmann"], "answer_entity_name": null, "predicted_answer": "Chaim Weizmann was married to Vera We", "extracted_entity": "Chaim_Weizmann"}
{"question": "who is Djamaluddin Malik married to?", "answer": "Elly Yunara", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elly Yunara"], "entity_annotations": ["Djamaluddin Malik"], "answer_entity_name": null, "predicted_answer": "Elly Yunara", "extracted_entity": "Djamaluddin_Malik"}
{"question": "who is Miss Elizabeth married to?", "answer": "Randy Savage", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Randy Savage"], "entity_annotations": ["Miss Elizabeth"], "answer_entity_name": null, "predicted_answer": "Miss Elizabeth is married to \"Macho Man\"", "extracted_entity": "Miss_Elizabeth"}
{"question": "who is Cao Pi married to?", "answer": "Guo N\u00fcwang", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guo N\u00fcwang", "Lady Zhen"], "entity_annotations": ["Cao Pi"], "answer_entity_name": null, "predicted_answer": "Cao Pi is married to Lady Zhen.", "extracted_entity": "Cao_Pi"}
{"question": "who is Claudia Cardinale married to?", "answer": "Franco Cristaldi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Franco Cristaldi"], "entity_annotations": ["Claudia Cardinale"], "answer_entity_name": null, "predicted_answer": "Franco Cristaldi", "extracted_entity": "Claudia_Cardinale"}
{"question": "who is Jed Whedon married to?", "answer": "Maurissa Tancharoen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maurissa Tancharoen"], "entity_annotations": ["Jed Whedon"], "answer_entity_name": null, "predicted_answer": "Maurissa Tancharoen", "extracted_entity": "Jed_Whedon"}
{"question": "who is Jack Dromey married to?", "answer": "Harriet Harman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harriet Harman"], "entity_annotations": ["Jack Dromey"], "answer_entity_name": null, "predicted_answer": "Jack Dromey was married to long-serving MP", "extracted_entity": "Jack_Dromey"}
{"question": "who is Mamie Van Doren married to?", "answer": "Ray Anthony", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ray Anthony"], "entity_annotations": ["Mamie Van Doren"], "answer_entity_name": null, "predicted_answer": "Mamie Van Doren is married to Peter K", "extracted_entity": "Mamie_Van_Doren"}
{"question": "who is Edith Roosevelt married to?", "answer": "Theodore Roosevelt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Theodore Roosevelt"], "entity_annotations": ["Edith Roosevelt"], "answer_entity_name": null, "predicted_answer": "Theodore Roosevelt", "extracted_entity": "Edith_Roosevelt"}
{"question": "who is Brian Austin Green married to?", "answer": "Megan Fox", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Megan Fox"], "entity_annotations": ["Brian Austin Green"], "answer_entity_name": null, "predicted_answer": "Brian Austin Green is married to Megan Fox.", "extracted_entity": "Brian_Austin_Green"}
{"question": "who is David Bordwell married to?", "answer": "Kristin Thompson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kristin Thompson"], "entity_annotations": ["David Bordwell"], "answer_entity_name": null, "predicted_answer": "Kristin Thompson", "extracted_entity": "David_Bordwell"}
{"question": "who is Cosima Wagner married to?", "answer": "Richard Wagner", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Richard Wagner", "Hans von B\u00fclow"], "entity_annotations": ["Cosima Wagner"], "answer_entity_name": null, "predicted_answer": "Richard Wagner", "extracted_entity": "Cosima_Wagner"}
{"question": "who is John Justin married to?", "answer": "Barbara Murray", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barbara Murray"], "entity_annotations": ["John Justin"], "answer_entity_name": null, "predicted_answer": "John Justin was married to Rosemary Ann Hopkin", "extracted_entity": "John_Justin"}
{"question": "who is Delia Smith married to?", "answer": "Michael Wynn-Jones", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Wynn-Jones"], "entity_annotations": ["Delia Smith"], "answer_entity_name": null, "predicted_answer": "Michael Wynn-Jones", "extracted_entity": "Delia_Smith"}
{"question": "who is Carole Lombard married to?", "answer": "Clark Gable", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clark Gable", "William Powell"], "entity_annotations": ["Carole Lombard"], "answer_entity_name": null, "predicted_answer": "Clark Gable", "extracted_entity": "Carole_Lombard"}
{"question": "who is Marshall Neilan married to?", "answer": "Blanche Sweet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Blanche Sweet"], "entity_annotations": ["Marshall Neilan"], "answer_entity_name": null, "predicted_answer": "Mary Pickford", "extracted_entity": "Marshall_Neilan"}
{"question": "who is Ellaline Terriss married to?", "answer": "Seymour Hicks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seymour Hicks"], "entity_annotations": ["Ellaline Terriss"], "answer_entity_name": null, "predicted_answer": "Seymour Hicks", "extracted_entity": "Ellaline_Terriss"}
{"question": "who is Gustaf V of Sweden married to?", "answer": "Victoria of Baden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Victoria of Baden"], "entity_annotations": ["Gustaf V of Sweden"], "answer_entity_name": null, "predicted_answer": "Gustaf V of Sweden is married to Victoria of", "extracted_entity": "Gustaf_V_of_Sweden"}
{"question": "who is Joseph Edward Mayer married to?", "answer": "Maria Goeppert Mayer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maria Goeppert Mayer"], "entity_annotations": ["Joseph Edward Mayer"], "answer_entity_name": null, "predicted_answer": "Maria Goeppert Mayer", "extracted_entity": "Joseph_Edward_Mayer"}
{"question": "who is Augustus married to?", "answer": "Livia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Livia", "Scribonia"], "entity_annotations": ["Augustus"], "answer_entity_name": null, "predicted_answer": "Livia", "extracted_entity": "Augustus"}
{"question": "who is Lady Randolph Churchill married to?", "answer": "Lord Randolph Churchill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lord Randolph Churchill", "George Cornwallis-West"], "entity_annotations": ["Lady Randolph Churchill"], "answer_entity_name": null, "predicted_answer": "Jennie Spencer-Churchill", "extracted_entity": "Lady_Randolph_Churchill"}
{"question": "who is Nikephoros Bryennios the Younger married to?", "answer": "Anna Komnene", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anna Komnene"], "entity_annotations": ["Nikephoros Bryennios the Younger"], "answer_entity_name": null, "predicted_answer": "Nikephoros Bryennios the Younger", "extracted_entity": "Nikephoros_Bryennios_the_Younger"}
{"question": "who is Betty Ford married to?", "answer": "Gerald Ford", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gerald Ford"], "entity_annotations": ["Betty Ford"], "answer_entity_name": null, "predicted_answer": "Gerald Ford", "extracted_entity": "Betty_Ford"}
{"question": "who is Henry Browne Blackwell married to?", "answer": "Lucy Stone", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lucy Stone"], "entity_annotations": ["Henry Browne Blackwell"], "answer_entity_name": null, "predicted_answer": "Lucy Stone", "extracted_entity": "Henry_Browne_Blackwell"}
{"question": "who is George XII of Georgia married to?", "answer": "Mariam Tsitsishvili", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mariam Tsitsishvili"], "entity_annotations": ["George XII of Georgia"], "answer_entity_name": null, "predicted_answer": "George XII of Georgia married to", "extracted_entity": "George_XII_of_Georgia"}
{"question": "who is Amanda Palmer married to?", "answer": "Neil Gaiman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Neil Gaiman"], "entity_annotations": ["Amanda Palmer"], "answer_entity_name": null, "predicted_answer": "Amanda Palmer is married to Neil Gaiman.", "extracted_entity": "Amanda_Palmer"}
{"question": "who is Harry James married to?", "answer": "Betty Grable", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Betty Grable"], "entity_annotations": ["Harry James"], "answer_entity_name": null, "predicted_answer": "Myrtle Maybelle (Stewart), an", "extracted_entity": "Harry_James"}
{"question": "who is John Simm married to?", "answer": "Kate Magowan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kate Magowan"], "entity_annotations": ["John Simm"], "answer_entity_name": null, "predicted_answer": "John Simm is married to Kate Magowan.", "extracted_entity": "John_Simm"}
{"question": "who is Sheri Moon Zombie married to?", "answer": "Rob Zombie", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rob Zombie"], "entity_annotations": ["Sheri Moon Zombie"], "answer_entity_name": null, "predicted_answer": "Rob Zombie", "extracted_entity": "Sheri_Moon_Zombie"}
{"question": "who is Brady Smith married to?", "answer": "Tiffani Thiessen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tiffani Thiessen"], "entity_annotations": ["Brady Smith"], "answer_entity_name": null, "predicted_answer": "Brady Smith is married to his wife.", "extracted_entity": "Brady_Smith"}
{"question": "who is Dorothy Stratten married to?", "answer": "Paul Snider", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paul Snider"], "entity_annotations": ["Dorothy Stratten"], "answer_entity_name": null, "predicted_answer": "Dorothy Stratten is married to Paul Snider.", "extracted_entity": "Dorothy_Stratten"}
{"question": "who is Jackie Burroughs married to?", "answer": "Zal Yanovsky", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zal Yanovsky"], "entity_annotations": ["Jackie Burroughs"], "answer_entity_name": null, "predicted_answer": "Jackie Burroughs is married to Paul Bradley.", "extracted_entity": "Jackie_Burroughs"}
{"question": "who is Basil Dearden married to?", "answer": "Melissa Stribling", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melissa Stribling"], "entity_annotations": ["Basil Dearden"], "answer_entity_name": null, "predicted_answer": "Basil Dearden married to", "extracted_entity": "Basil_Dearden"}
{"question": "who is William Clito married to?", "answer": "Sibylla of Anjou", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sibylla of Anjou"], "entity_annotations": ["William Clito"], "answer_entity_name": null, "predicted_answer": "William Clito married Sibylla of An", "extracted_entity": "William_Clito"}
{"question": "who is Lucretia married to?", "answer": "Lucius Tarquinius Collatinus", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lucius Tarquinius Collatinus"], "entity_annotations": ["Lucretia"], "answer_entity_name": null, "predicted_answer": "Lucretia is married to Collatinus", "extracted_entity": "Lucretia"}
{"question": "who is Parvati married to?", "answer": "Shiva", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shiva"], "entity_annotations": ["Parvati"], "answer_entity_name": null, "predicted_answer": "Shiva", "extracted_entity": "Parvati"}
{"question": "who is Jack Cassidy married to?", "answer": "Shirley Jones", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shirley Jones"], "entity_annotations": ["Jack Cassidy"], "answer_entity_name": null, "predicted_answer": "Jack Cassidy was married to Shirley Jones from 195", "extracted_entity": "Jack_Cassidy"}
{"question": "who is Twosret married to?", "answer": "Seti II", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seti II"], "entity_annotations": ["Twosret"], "answer_entity_name": null, "predicted_answer": "Seti II", "extracted_entity": "Twosret"}
{"question": "who is Brad Paisley married to?", "answer": "Kimberly Williams-Paisley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kimberly Williams-Paisley"], "entity_annotations": ["Brad Paisley"], "answer_entity_name": null, "predicted_answer": "Brad Paisley is married to Kimberly Williams.", "extracted_entity": "Brad_Paisley"}
{"question": "who is Muhammad Ali Jinnah married to?", "answer": "Rattanbai Jinnah", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rattanbai Jinnah"], "entity_annotations": ["Muhammad Ali Jinnah"], "answer_entity_name": null, "predicted_answer": "Ruttie Jinnah", "extracted_entity": "Muhammad_Ali_Jinnah"}
{"question": "who is Sarah Childress Polk married to?", "answer": "James K. Polk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James K. Polk"], "entity_annotations": ["Sarah Childress Polk"], "answer_entity_name": null, "predicted_answer": "Sarah Childress Polk is married to James K", "extracted_entity": "Sarah_Childress_Polk"}
{"question": "who is Tina Fey married to?", "answer": "Jeff Richmond", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jeff Richmond"], "entity_annotations": ["Tina Fey"], "answer_entity_name": null, "predicted_answer": "Tina Fey is married to Jeff Richmond.", "extracted_entity": "Tina_Fey"}
{"question": "who is John Franklin married to?", "answer": "Jane Franklin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jane Franklin"], "entity_annotations": ["John Franklin"], "answer_entity_name": null, "predicted_answer": "he is married to Hannah Weekes", "extracted_entity": "John_Franklin"}
{"question": "who is Betsy Drake married to?", "answer": "Cary Grant", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cary Grant"], "entity_annotations": ["Betsy Drake"], "answer_entity_name": null, "predicted_answer": "Cary Grant", "extracted_entity": "Betsy_Drake"}
{"question": "who is Henry Morgentaler married to?", "answer": "Chava Rosenfarb", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chava Rosenfarb"], "entity_annotations": ["Henry Morgentaler"], "answer_entity_name": null, "predicted_answer": "Henry Morgentaler married to.", "extracted_entity": "Henry_Morgentaler"}
{"question": "who is Paul Anka married to?", "answer": "Anna Anka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anna Anka"], "entity_annotations": ["Paul Anka"], "answer_entity_name": null, "predicted_answer": "Anna Anka", "extracted_entity": "Paul_Anka"}
{"question": "who is Zwentibold married to?", "answer": "Oda of Saxony", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oda of Saxony"], "entity_annotations": ["Zwentibold"], "answer_entity_name": null, "predicted_answer": "Zwentibold married to Oda", "extracted_entity": "Zwentibold"}
{"question": "who is Ernest I, Duke of Saxe-Coburg and Gotha married to?", "answer": "Duchess Marie of W\u00fcrttemberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Duchess Marie of W\u00fcrttemberg"], "entity_annotations": ["Ernest I, Duke of Saxe-Coburg and Gotha"], "answer_entity_name": null, "predicted_answer": "Princess Louise of Saxe-Gotha-Alten", "extracted_entity": "Ernest_I,_Duke_of_Saxe-Coburg_and_Gotha"}
{"question": "who is Sophia Magdalena of Denmark married to?", "answer": "Gustav III of Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gustav III of Sweden"], "entity_annotations": ["Sophia Magdalena of Denmark"], "answer_entity_name": null, "predicted_answer": "Gustav III of Sweden", "extracted_entity": "Sophia_Magdalena_of_Denmark"}
{"question": "who is Emperor Shirakawa married to?", "answer": "Fujiwara no Kenshi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fujiwara no Kenshi"], "entity_annotations": ["Emperor Shirakawa"], "answer_entity_name": null, "predicted_answer": "He was the eldest son of Emperor Go-Sanj", "extracted_entity": "Emperor_Shirakawa"}
{"question": "who is Emperor Wen of Liu Song married to?", "answer": "Empress Dowager Lu Huinan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Empress Dowager Lu Huinan"], "entity_annotations": ["Emperor Wen of Liu Song"], "answer_entity_name": null, "predicted_answer": "Empress Dowager Zhang", "extracted_entity": "Emperor_Wen_of_Liu_Song"}
{"question": "who is Randhir Kapoor married to?", "answer": "Babita", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Babita"], "entity_annotations": ["Randhir Kapoor"], "answer_entity_name": null, "predicted_answer": "Babita", "extracted_entity": "Randhir_Kapoor"}
{"question": "who is Miles Davis married to?", "answer": "Cicely Tyson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cicely Tyson"], "entity_annotations": ["Miles Davis"], "answer_entity_name": null, "predicted_answer": "C\u00e9cile Cassandra \"Cindy\" Blackman", "extracted_entity": "Miles_Davis"}
{"question": "who is Jean Erdman married to?", "answer": "Joseph Campbell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joseph Campbell"], "entity_annotations": ["Jean Erdman"], "answer_entity_name": null, "predicted_answer": "Joseph Campbell", "extracted_entity": "Jean_Erdman"}
{"question": "who is William Asher married to?", "answer": "Elizabeth Montgomery", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth Montgomery"], "entity_annotations": ["William Asher"], "answer_entity_name": null, "predicted_answer": "William Asher is married to Elizabeth Montgomery.", "extracted_entity": "William_Asher"}
{"question": "who is John William Waterhouse married to?", "answer": "Esther Kenworthy Waterhouse", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Esther Kenworthy Waterhouse"], "entity_annotations": ["John William Waterhouse"], "answer_entity_name": null, "predicted_answer": "John William Waterhouse is married to Mary Theresa Water", "extracted_entity": "John_William_Waterhouse"}
{"question": "who is Alexios III Angelos married to?", "answer": "Euphrosyne Doukaina Kamatera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Euphrosyne Doukaina Kamatera"], "entity_annotations": ["Alexios III Angelos"], "answer_entity_name": null, "predicted_answer": "Irene Angelina", "extracted_entity": "Alexios_III_Angelos"}
{"question": "who is Christopher Pratt married to?", "answer": "Mary Pratt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mary Pratt"], "entity_annotations": ["Christopher Pratt"], "answer_entity_name": null, "predicted_answer": "He is married to his wife, Susan.", "extracted_entity": "Christopher_Pratt"}
{"question": "who is William Faversham married to?", "answer": "Julie Opp", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Julie Opp"], "entity_annotations": ["William Faversham"], "answer_entity_name": null, "predicted_answer": "William Faversham married to stage actresses Edith", "extracted_entity": "William_Faversham"}
{"question": "who is Marshall Eriksen married to?", "answer": "Lily Aldrin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lily Aldrin"], "entity_annotations": ["Marshall Eriksen"], "answer_entity_name": null, "predicted_answer": "Lily Aldrin", "extracted_entity": "Marshall_Eriksen"}
{"question": "who is Henry Schoolcraft married to?", "answer": "Jane Johnston Schoolcraft", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jane Johnston Schoolcraft"], "entity_annotations": ["Henry Schoolcraft"], "answer_entity_name": null, "predicted_answer": "Mary Howard", "extracted_entity": "Henry_Schoolcraft"}
{"question": "who is Ad-Rock married to?", "answer": "Kathleen Hanna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kathleen Hanna"], "entity_annotations": ["Ad-Rock"], "answer_entity_name": null, "predicted_answer": "Kathleen Hanna", "extracted_entity": "Ad-Rock"}
{"question": "who is Leopold Mozart married to?", "answer": "Anna Maria Mozart", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Anna Maria Mozart"], "entity_annotations": ["Leopold Mozart"], "answer_entity_name": null, "predicted_answer": "Anna Maria Mozart", "extracted_entity": "Leopold_Mozart"}
{"question": "who is Kunal Khemu married to?", "answer": "Soha Ali Khan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Soha Ali Khan"], "entity_annotations": ["Kunal Khemu"], "answer_entity_name": null, "predicted_answer": "Soha Ali Khan Pataudi", "extracted_entity": "Kunal_Khemu"}
{"question": "who is Shashi Kapoor married to?", "answer": "Jennifer Kendal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jennifer Kendal"], "entity_annotations": ["Shashi Kapoor"], "answer_entity_name": null, "predicted_answer": "Jennifer Kendal", "extracted_entity": "Shashi_Kapoor"}
{"question": "who is Alexander Hamilton married to?", "answer": "Elizabeth Schuyler Hamilton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elizabeth Schuyler Hamilton"], "entity_annotations": ["Alexander Hamilton"], "answer_entity_name": null, "predicted_answer": "Elizabeth Schuyler", "extracted_entity": "Alexander_Hamilton"}
{"question": "which country was Disco created in?", "answer": "Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germany"], "entity_annotations": ["Disco"], "answer_entity_name": null, "predicted_answer": "The United States of America", "extracted_entity": "Disco"}
{"question": "which country was Sons of the Pioneers created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Sons of the Pioneers"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Sons_of_the_Pioneers"}
{"question": "which country was The Forester Sisters created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Forester Sisters"], "answer_entity_name": null, "predicted_answer": "The Forester Sisters was created in Lookout Mountain", "extracted_entity": "The_Forester_Sisters"}
{"question": "which country was Meat Puppets created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Meat Puppets"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Meat_Puppets"}
{"question": "which country was Star Gazers created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Star Gazers"], "answer_entity_name": null, "predicted_answer": "Star Gazers was created in United States", "extracted_entity": "Star_Gazers"}
{"question": "which country was Don't Cha created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Don't Cha"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Don't_Cha"}
{"question": "which country was Ripley's Believe It or Not! created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Ripley's Believe It or Not!"], "answer_entity_name": null, "predicted_answer": "The United States", "extracted_entity": "Ripley's_Believe_It_or_Not!"}
{"question": "which country was Goatwhore created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Goatwhore"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Goatwhore"}
{"question": "which country was Good Charlotte created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Good Charlotte"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Good_Charlotte"}
{"question": "which country was System of a Down created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["System of a Down"], "answer_entity_name": null, "predicted_answer": "Glendale, California", "extracted_entity": "System_of_a_Down"}
{"question": "which country was Blister created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Blister"], "answer_entity_name": null, "predicted_answer": "Blister was created in.", "extracted_entity": "Blister"}
{"question": "which country was Unwound created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Unwound"], "answer_entity_name": null, "predicted_answer": "Unwound was created in Tumwater and", "extracted_entity": "Unwound"}
{"question": "which country was Comedy Central Presents created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Comedy Central Presents"], "answer_entity_name": null, "predicted_answer": "Comedy Central Presents was created in United States.", "extracted_entity": "Comedy_Central_Presents"}
{"question": "which country was One Touch of Venus created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["One Touch of Venus"], "answer_entity_name": null, "predicted_answer": "One Touch of Venus was created in the United States", "extracted_entity": "One_Touch_of_Venus"}
{"question": "which country was Caddyshack created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Caddyshack"], "answer_entity_name": null, "predicted_answer": "The United States", "extracted_entity": "Caddyshack"}
{"question": "which country was Terminator 2: Judgment Day created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Terminator 2: Judgment Day"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Terminator_2:_Judgment_Day"}
{"question": "which country was Friends created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Friends"], "answer_entity_name": null, "predicted_answer": "USA", "extracted_entity": "Friends"}
{"question": "which country was Anthony Bourdain: Parts Unknown created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Anthony Bourdain: Parts Unknown"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Anthony_Bourdain:_Parts_Unknown"}
{"question": "which country was The World's Fastest Indian created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The World's Fastest Indian"], "answer_entity_name": null, "predicted_answer": "New Zealand", "extracted_entity": "The_World's_Fastest_Indian"}
{"question": "which country was Cirque du Freak: The Vampire's Assistant created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Cirque du Freak: The Vampire's Assistant"], "answer_entity_name": null, "predicted_answer": "United States.", "extracted_entity": "Cirque_du_Freak:_The_Vampire's_Assistant"}
{"question": "which country was Mutiny on the Bounty created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Mutiny on the Bounty"], "answer_entity_name": null, "predicted_answer": "Mutiny on the Bounty was created in.", "extracted_entity": "Mutiny_on_the_Bounty"}
{"question": "which country was The Scarlet Letter created in?", "answer": "South Korea", "dataset": "entity_questions", "split": "test", "answer_aliases": ["South Korea"], "entity_annotations": ["The Scarlet Letter"], "answer_entity_name": null, "predicted_answer": "The Scarlet Letter was created in United States", "extracted_entity": "The_Scarlet_Letter"}
{"question": "which country was M61 Vulcan created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["M61 Vulcan"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "M61_Vulcan"}
{"question": "which country was Hikaru no Go created in?", "answer": "Japan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Japan"], "entity_annotations": ["Hikaru no Go"], "answer_entity_name": null, "predicted_answer": "Japan", "extracted_entity": "Hikaru_no_Go"}
{"question": "which country was Blackout created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Blackout"], "answer_entity_name": null, "predicted_answer": "United Kingdom", "extracted_entity": "Blackout"}
{"question": "which country was The Russians Are Coming, the Russians Are Coming created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Russians Are Coming, the Russians Are Coming"], "answer_entity_name": null, "predicted_answer": "The Russians Are Coming, the Russians Are Coming was", "extracted_entity": "The_Russians_Are_Coming,_the_Russians_Are_Coming"}
{"question": "which country was Without Me created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Without Me"], "answer_entity_name": null, "predicted_answer": "The United States of America", "extracted_entity": "Without_Me"}
{"question": "which country was Lunachicks created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Lunachicks"], "answer_entity_name": null, "predicted_answer": "America", "extracted_entity": "Lunachicks"}
{"question": "which country was Showtime Championship Boxing created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Showtime Championship Boxing"], "answer_entity_name": null, "predicted_answer": "Showtime Championship Boxing was created in United States.", "extracted_entity": "Showtime_Championship_Boxing"}
{"question": "which country was Aloha created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Aloha"], "answer_entity_name": null, "predicted_answer": "Hawaii", "extracted_entity": "Aloha"}
{"question": "which country was Duffy's Tavern created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Duffy's Tavern"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Duffy's_Tavern"}
{"question": "which country was Echobelly created in?", "answer": "Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sweden"], "entity_annotations": ["Echobelly"], "answer_entity_name": null, "predicted_answer": "UK", "extracted_entity": "Echobelly"}
{"question": "which country was Giant created in?", "answer": "Argentina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Argentina"], "entity_annotations": ["Giant"], "answer_entity_name": null, "predicted_answer": "The United States", "extracted_entity": "Giant"}
{"question": "which country was Moxy Fr\u00fcvous created in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["Moxy Fr\u00fcvous"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Moxy_Fr\u00fcvous"}
{"question": "which country was Maria Cosway created in?", "answer": "Italy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Italy"], "entity_annotations": ["Maria Cosway"], "answer_entity_name": null, "predicted_answer": "Italy", "extracted_entity": "Maria_Cosway"}
{"question": "which country was Hollywood Squares created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Hollywood Squares"], "answer_entity_name": null, "predicted_answer": "United States of America. (Edit)", "extracted_entity": "Hollywood_Squares"}
{"question": "which country was Thai curry created in?", "answer": "Thailand", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thailand"], "entity_annotations": ["Thai curry"], "answer_entity_name": null, "predicted_answer": "Thailand", "extracted_entity": "Thai_curry"}
{"question": "which country was The Clovers created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Clovers"], "answer_entity_name": null, "predicted_answer": "The Clovers was created in United States", "extracted_entity": "The_Clovers"}
{"question": "which country was Future Shock created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Future Shock"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Future_Shock"}
{"question": "which country was HowStuffWorks created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["HowStuffWorks"], "answer_entity_name": null, "predicted_answer": "America", "extracted_entity": "HowStuffWorks"}
{"question": "which country was Hannah and Her Sisters created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Hannah and Her Sisters"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Hannah_and_Her_Sisters"}
{"question": "which country was The Suicide Machines created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Suicide Machines"], "answer_entity_name": null, "predicted_answer": "The Suicide Machines was created in United States", "extracted_entity": "The_Suicide_Machines"}
{"question": "which country was Mrs. Parker and the Vicious Circle created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Mrs. Parker and the Vicious Circle"], "answer_entity_name": null, "predicted_answer": "USA", "extracted_entity": "Mrs._Parker_and_the_Vicious_Circle"}
{"question": "which country was Hope Floats created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Hope Floats"], "answer_entity_name": null, "predicted_answer": "Hope Floats was created in United States.", "extracted_entity": "Hope_Floats"}
{"question": "which country was Sherlock Holmes created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Sherlock Holmes"], "answer_entity_name": null, "predicted_answer": "England", "extracted_entity": "Sherlock_Holmes"}
{"question": "which country was Head Like a Hole created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Head Like a Hole"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Head_Like_a_Hole"}
{"question": "which country was The Pointer Sisters created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Pointer Sisters"], "answer_entity_name": null, "predicted_answer": "The Pointer Sisters were created in the USA.", "extracted_entity": "The_Pointer_Sisters"}
{"question": "which country was Evans Blue created in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["Evans Blue"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Evans_Blue"}
{"question": "which country was What's Happening Now!! created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["What's Happening Now!!"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "What's_Happening_Now!!"}
{"question": "which country was Australia created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America", "Australia"], "entity_annotations": ["Australia"], "answer_entity_name": null, "predicted_answer": "Australia", "extracted_entity": "Australia"}
{"question": "which country was For Your Love created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["For Your Love"], "answer_entity_name": null, "predicted_answer": "United Kingdom", "extracted_entity": "For_Your_Love"}
{"question": "which country was Faster Pussycat created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Faster Pussycat"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Faster_Pussycat"}
{"question": "which country was CNN Philippines created in?", "answer": "Philippines", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philippines"], "entity_annotations": ["CNN Philippines"], "answer_entity_name": null, "predicted_answer": "Philippines", "extracted_entity": "CNN_Philippines"}
{"question": "which country was Match Point created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Match Point"], "answer_entity_name": null, "predicted_answer": "The United Kingdom", "extracted_entity": "Match_Point"}
{"question": "which country was Sukeban Deka created in?", "answer": "Japan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Japan"], "entity_annotations": ["Sukeban Deka"], "answer_entity_name": null, "predicted_answer": "apan", "extracted_entity": "Sukeban_Deka"}
{"question": "which country was Silent Night, Deadly Night created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Silent Night, Deadly Night"], "answer_entity_name": null, "predicted_answer": "Silent Night, Deadly Night was created in United States", "extracted_entity": "Silent_Night,_Deadly_Night"}
{"question": "which country was Like Mike created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Like Mike"], "answer_entity_name": null, "predicted_answer": "Like Mike was created in United States", "extracted_entity": "Like_Mike"}
{"question": "which country was Copper Canyon created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Copper Canyon"], "answer_entity_name": null, "predicted_answer": "exico", "extracted_entity": "Copper_Canyon"}
{"question": "which country was Oklahoma created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Oklahoma"], "answer_entity_name": null, "predicted_answer": "Q: what is the nickname of Oklahoma", "extracted_entity": "Oklahoma"}
{"question": "which country was Sleep created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Sleep"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Sleep"}
{"question": "which country was Strangefolk created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Strangefolk"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Strangefolk"}
{"question": "which country was Notre Dame Football on NBC created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Notre Dame Football on NBC"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Notre_Dame_Football_on_NBC"}
{"question": "which country was Brat Pack created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Brat Pack"], "answer_entity_name": null, "predicted_answer": "Brat Pack was created in United States.", "extracted_entity": "Brat_Pack"}
{"question": "which country was Davey and Goliath created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Davey and Goliath"], "answer_entity_name": null, "predicted_answer": "USA", "extracted_entity": "Davey_and_Goliath"}
{"question": "which country was Pitch Perfect 2 created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Pitch Perfect 2"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Pitch_Perfect_2"}
{"question": "which country was An American Werewolf in London created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["An American Werewolf in London"], "answer_entity_name": null, "predicted_answer": "An American Werewolf in London was created in the", "extracted_entity": "An_American_Werewolf_in_London"}
{"question": "which country was The Rainbow created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Rainbow"], "answer_entity_name": null, "predicted_answer": "Great Britain", "extracted_entity": "The_Rainbow"}
{"question": "which country was Slash's Snakepit created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Slash's Snakepit"], "answer_entity_name": null, "predicted_answer": "Slash's Snakepit was created in United States", "extracted_entity": "Slash's_Snakepit"}
{"question": "which country was Pimp My Ride created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Pimp My Ride"], "answer_entity_name": null, "predicted_answer": "The United States of America", "extracted_entity": "Pimp_My_Ride"}
{"question": "which country was Journal of Virology created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Journal of Virology"], "answer_entity_name": null, "predicted_answer": "Journal of Virology was created in United States", "extracted_entity": "Journal_of_Virology"}
{"question": "which country was Kiss Land created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Kiss Land"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Kiss_Land"}
{"question": "which country was Dawn created in?", "answer": "Pakistan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pakistan"], "entity_annotations": ["Dawn"], "answer_entity_name": null, "predicted_answer": "Dawn was created in the United States.", "extracted_entity": "Dawn"}
{"question": "which country was Across the Universe created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Across the Universe"], "answer_entity_name": null, "predicted_answer": "Across the Universe was created in the United States.", "extracted_entity": "Across_the_Universe"}
{"question": "which country was The Maze Runner created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Maze Runner"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "The_Maze_Runner"}
{"question": "which country was Jonah created in?", "answer": "Australia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Australia"], "entity_annotations": ["Jonah"], "answer_entity_name": null, "predicted_answer": "the united states", "extracted_entity": "Jonah"}
{"question": "which country was The Strokes created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Strokes"], "answer_entity_name": null, "predicted_answer": "The Strokes was created in the United States", "extracted_entity": "The_Strokes"}
{"question": "which country was Changeling created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Changeling"], "answer_entity_name": null, "predicted_answer": "Changeling was created in the United States.", "extracted_entity": "Changeling"}
{"question": "which country was The Cincinnati Kid created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Cincinnati Kid"], "answer_entity_name": null, "predicted_answer": "The Cincinnati Kid was created in United States of America", "extracted_entity": "The_Cincinnati_Kid"}
{"question": "which country was Hannity & Colmes created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Hannity & Colmes"], "answer_entity_name": null, "predicted_answer": "United States.", "extracted_entity": "Hannity_&_Colmes"}
{"question": "which country was DNA created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["DNA"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "DNA"}
{"question": "which country was The Sound of Music created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Sound of Music"], "answer_entity_name": null, "predicted_answer": "Austria", "extracted_entity": "The_Sound_of_Music"}
{"question": "which country was Donna Leon created in?", "answer": "Germany", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germany"], "entity_annotations": ["Donna Leon"], "answer_entity_name": null, "predicted_answer": "Italy", "extracted_entity": "Donna_Leon"}
{"question": "which country was Shanghai created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Shanghai"], "answer_entity_name": null, "predicted_answer": "hina", "extracted_entity": "Shanghai"}
{"question": "which country was The Smile Sessions created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Smile Sessions"], "answer_entity_name": null, "predicted_answer": "The Smile Sessions was created in United States of America", "extracted_entity": "The_Smile_Sessions"}
{"question": "which country was Captain Beyond created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Captain Beyond"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Captain_Beyond"}
{"question": "which country was Eli Stone created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Eli Stone"], "answer_entity_name": null, "predicted_answer": "Eli Stone was created in United States", "extracted_entity": "Eli_Stone"}
{"question": "which country was Digable Planets created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Digable Planets"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Digable_Planets"}
{"question": "which country was Hard Boiled created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Hard Boiled"], "answer_entity_name": null, "predicted_answer": "Hong Kong", "extracted_entity": "Hard_Boiled"}
{"question": "which country was Browning Hi-Power created in?", "answer": "Belgium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belgium"], "entity_annotations": ["Browning Hi-Power"], "answer_entity_name": null, "predicted_answer": "Belgium", "extracted_entity": "Browning_Hi-Power"}
{"question": "which country was Comedy Now! created in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["Comedy Now!"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Comedy_Now!"}
{"question": "which country was Idiocracy created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Idiocracy"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Idiocracy"}
{"question": "which country was United States of Tara created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["United States of Tara"], "answer_entity_name": null, "predicted_answer": "United States of Tara was created in United States of", "extracted_entity": "United_States_of_Tara"}
{"question": "which country was The Glee Project created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Glee Project"], "answer_entity_name": null, "predicted_answer": "The Glee Project was created in United States.", "extracted_entity": "The_Glee_Project"}
{"question": "which country was The Friday Times created in?", "answer": "Pakistan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pakistan"], "entity_annotations": ["The Friday Times"], "answer_entity_name": null, "predicted_answer": "Pakistan", "extracted_entity": "The_Friday_Times"}
{"question": "which country was Cocktail created in?", "answer": "India", "dataset": "entity_questions", "split": "test", "answer_aliases": ["India"], "entity_annotations": ["Cocktail"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Cocktail"}
{"question": "which country was Child's Play 2 created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Child's Play 2"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Child's_Play_2"}
{"question": "which country was Muppets from Space created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Muppets from Space"], "answer_entity_name": null, "predicted_answer": "Muppets from Space was created in United States", "extracted_entity": "Muppets_from_Space"}
{"question": "which country was Check on It created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Check on It"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Check_on_It"}
{"question": "which country was Stella Artois created in?", "answer": "Belgium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belgium", "Leuven"], "entity_annotations": ["Stella Artois"], "answer_entity_name": null, "predicted_answer": "Belgium", "extracted_entity": "Stella_Artois"}
{"question": "which country was Dungen created in?", "answer": "Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sweden"], "entity_annotations": ["Dungen"], "answer_entity_name": null, "predicted_answer": "Sweden", "extracted_entity": "Dungen"}
{"question": "which country was Just What I Needed created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Just What I Needed"], "answer_entity_name": null, "predicted_answer": "ited States", "extracted_entity": "Just_What_I_Needed"}
{"question": "which country was Urdu created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Urdu"], "answer_entity_name": null, "predicted_answer": "India", "extracted_entity": "Urdu"}
{"question": "which country was The Dollyrots created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Dollyrots"], "answer_entity_name": null, "predicted_answer": "The Dollyrots was created in United States.", "extracted_entity": "The_Dollyrots"}
{"question": "which country was The Cisco Kid created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Cisco Kid"], "answer_entity_name": null, "predicted_answer": "The United States", "extracted_entity": "The_Cisco_Kid"}
{"question": "which country was Primal Scream created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Primal Scream"], "answer_entity_name": null, "predicted_answer": "Scotland", "extracted_entity": "Primal_Scream"}
{"question": "which country was Piranha 3D created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Piranha 3D"], "answer_entity_name": null, "predicted_answer": "Piranha 3D was created in the", "extracted_entity": "Piranha_3D"}
{"question": "which country was Bison created in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["Bison"], "answer_entity_name": null, "predicted_answer": "Bison was created in United States", "extracted_entity": "Bison"}
{"question": "which country was Hello created in?", "answer": "Uganda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Uganda"], "entity_annotations": ["Hello"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Hello"}
{"question": "which country was Uncanny X-Men created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Uncanny X-Men"], "answer_entity_name": null, "predicted_answer": "The X-Men comic book series was created in the", "extracted_entity": "Uncanny_X-Men"}
{"question": "which country was Tennessee Waltz created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Tennessee Waltz"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Tennessee_Waltz"}
{"question": "which country was Alls\u00e5ng p\u00e5 Skansen created in?", "answer": "Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sweden"], "entity_annotations": ["Alls\u00e5ng p\u00e5 Skansen"], "answer_entity_name": null, "predicted_answer": "Sweden. Go to list of countries", "extracted_entity": "Alls\u00e5ng_p\u00e5_Skansen"}
{"question": "which country was Leftover Salmon created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Leftover Salmon"], "answer_entity_name": null, "predicted_answer": "Leftover Salmon was created in the United States.", "extracted_entity": "Leftover_Salmon"}
{"question": "which country was The Color Morale created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Color Morale"], "answer_entity_name": null, "predicted_answer": "The Color Morale was created in United States of", "extracted_entity": "The_Color_Morale"}
{"question": "which country was Otep created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Otep"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Otep"}
{"question": "which country was Beach House created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Beach House"], "answer_entity_name": null, "predicted_answer": "America", "extracted_entity": "Beach_House"}
{"question": "which country was Take Five created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Take Five"], "answer_entity_name": null, "predicted_answer": "the United States of America", "extracted_entity": "Take_Five"}
{"question": "which country was Philadelphia Grand Opera Company created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Philadelphia Grand Opera Company"], "answer_entity_name": null, "predicted_answer": "the United States of America", "extracted_entity": "Philadelphia_Grand_Opera_Company"}
{"question": "which country was Hung Up created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Hung Up"], "answer_entity_name": null, "predicted_answer": "The song was created in United States of America", "extracted_entity": "Hung_Up"}
{"question": "which country was Ultimates created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Ultimates"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Ultimates"}
{"question": "which country was The Doors created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Doors"], "answer_entity_name": null, "predicted_answer": "The Doors was created in United States", "extracted_entity": "The_Doors"}
{"question": "which country was Killing in the Name created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Killing in the Name"], "answer_entity_name": null, "predicted_answer": "The United States of America.", "extracted_entity": "Killing_in_the_Name"}
{"question": "which country was Devdas created in?", "answer": "Bangladesh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bangladesh"], "entity_annotations": ["Devdas"], "answer_entity_name": null, "predicted_answer": "India", "extracted_entity": "Devdas"}
{"question": "which country was Ghost Whisperer created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Ghost Whisperer"], "answer_entity_name": null, "predicted_answer": "Ghost Whisperer was created in the United States of", "extracted_entity": "Ghost_Whisperer"}
{"question": "which country was One Froggy Evening created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["One Froggy Evening"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "One_Froggy_Evening"}
{"question": "which country was Son of the Beach created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Son of the Beach"], "answer_entity_name": null, "predicted_answer": "USA.", "extracted_entity": "Son_of_the_Beach"}
{"question": "which country was Warlock created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Warlock"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Warlock"}
{"question": "which country was Gulf News created in?", "answer": "United Arab Emirates", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United Arab Emirates"], "entity_annotations": ["Gulf News"], "answer_entity_name": null, "predicted_answer": "United Arab Emirates", "extracted_entity": "Gulf_News"}
{"question": "which country was X Ambassadors created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["X Ambassadors"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "X_Ambassadors"}
{"question": "which country was Little Nemo: Adventures in Slumberland created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America", "Japan"], "entity_annotations": ["Little Nemo: Adventures in Slumberland"], "answer_entity_name": null, "predicted_answer": "Japan", "extracted_entity": "Little_Nemo:_Adventures_in_Slumberland"}
{"question": "which country was Bidi Bidi Bom Bom created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Bidi Bidi Bom Bom"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Bidi_Bidi_Bom_Bom"}
{"question": "which country was Peer Gynt created in?", "answer": "Norway", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Norway"], "entity_annotations": ["Peer Gynt"], "answer_entity_name": null, "predicted_answer": "Norway", "extracted_entity": "Peer_Gynt"}
{"question": "which country was Grandaddy created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Grandaddy"], "answer_entity_name": null, "predicted_answer": "The United States", "extracted_entity": "Grandaddy"}
{"question": "which country was The Columbian created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Columbian"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "The_Columbian"}
{"question": "which country was My War created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["My War"], "answer_entity_name": null, "predicted_answer": "My War was created in United States", "extracted_entity": "My_War"}
{"question": "which country was Without a Trace created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Without a Trace"], "answer_entity_name": null, "predicted_answer": "Without a Trace is an American police procedural drama television", "extracted_entity": "Without_a_Trace"}
{"question": "which country was Lady created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Lady"], "answer_entity_name": null, "predicted_answer": "England", "extracted_entity": "Lady"}
{"question": "which country was 45 Grave created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["45 Grave"], "answer_entity_name": null, "predicted_answer": "The band was founded during the punk rock movement by", "extracted_entity": "45_Grave"}
{"question": "which country was The Dresden Dolls created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Dresden Dolls"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "The_Dresden_Dolls"}
{"question": "which country was Relish created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Relish"], "answer_entity_name": null, "predicted_answer": "USA", "extracted_entity": "Relish"}
{"question": "which country was John Adams created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["John Adams"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "John_Adams"}
{"question": "which country was Hinterland created in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["Hinterland"], "answer_entity_name": null, "predicted_answer": "Germany", "extracted_entity": "Hinterland"}
{"question": "which country was \u00a1Tr\u00e9! created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["\u00a1Tr\u00e9!"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "\u00a1Tr\u00e9!"}
{"question": "which country was Being Erica created in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["Being Erica"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Being_Erica"}
{"question": "which country was Madama Butterfly created in?", "answer": "Italy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Italy"], "entity_annotations": ["Madama Butterfly"], "answer_entity_name": null, "predicted_answer": "Italy", "extracted_entity": "Madama_Butterfly"}
{"question": "which country was A Farewell to Arms created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["A Farewell to Arms"], "answer_entity_name": null, "predicted_answer": "A Farewell to Arms was created in United States", "extracted_entity": "A_Farewell_to_Arms"}
{"question": "which country was Grace and Frankie created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Grace and Frankie"], "answer_entity_name": null, "predicted_answer": "American", "extracted_entity": "Grace_and_Frankie"}
{"question": "which country was A Place to Bury Strangers created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["A Place to Bury Strangers"], "answer_entity_name": null, "predicted_answer": "The United States", "extracted_entity": "A_Place_to_Bury_Strangers"}
{"question": "which country was Eureeka's Castle created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Eureeka's Castle"], "answer_entity_name": null, "predicted_answer": "Eureeka's Castle was created in United States", "extracted_entity": "Eureeka's_Castle"}
{"question": "which country was Mentallo and the Fixer created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Mentallo and the Fixer"], "answer_entity_name": null, "predicted_answer": "Mentallo and the Fixer was created in the", "extracted_entity": "Mentallo_and_the_Fixer"}
{"question": "which country was Wake Island created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Wake Island"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Wake_Island"}
{"question": "which country was The Sheepdogs created in?", "answer": "Canada", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Canada"], "entity_annotations": ["The Sheepdogs"], "answer_entity_name": null, "predicted_answer": "The Sheepdogs was created in Canada", "extracted_entity": "The_Sheepdogs"}
{"question": "which country was Scorpion created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Scorpion"], "answer_entity_name": null, "predicted_answer": "Scorpion was created in United States", "extracted_entity": "Scorpion"}
{"question": "which country was Real Simple created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Real Simple"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Real_Simple"}
{"question": "which country was The Delltones created in?", "answer": "Australia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Australia"], "entity_annotations": ["The Delltones"], "answer_entity_name": null, "predicted_answer": "Australia", "extracted_entity": "The_Delltones"}
{"question": "which country was Sicko created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Sicko"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Sicko"}
{"question": "which country was Tom and Jerry created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Tom and Jerry"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Tom_and_Jerry"}
{"question": "which country was True Detective created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["True Detective"], "answer_entity_name": null, "predicted_answer": "The United States", "extracted_entity": "True_Detective"}
{"question": "which country was The Milk Carton Kids created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Milk Carton Kids"], "answer_entity_name": null, "predicted_answer": "The Milk Carton Kids was created in United States", "extracted_entity": "The_Milk_Carton_Kids"}
{"question": "which country was Virginia Symphony Orchestra created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Virginia Symphony Orchestra"], "answer_entity_name": null, "predicted_answer": "Virginia Symphony Orchestra was created in United States.", "extracted_entity": "Virginia_Symphony_Orchestra"}
{"question": "which country was Satya created in?", "answer": "India", "dataset": "entity_questions", "split": "test", "answer_aliases": ["India"], "entity_annotations": ["Satya"], "answer_entity_name": null, "predicted_answer": "India", "extracted_entity": "Satya"}
{"question": "which country was Blade: The Series created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Blade: The Series"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Blade:_The_Series"}
{"question": "which country was Closing Bell created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Closing Bell"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Closing_Bell"}
{"question": "which country was Revenge created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Revenge"], "answer_entity_name": null, "predicted_answer": "Revenge was created in Japan", "extracted_entity": "Revenge"}
{"question": "which country was Death Has a Shadow created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Death Has a Shadow"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Death_Has_a_Shadow"}
{"question": "which country was Nightmare created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Nightmare"], "answer_entity_name": null, "predicted_answer": "Nightmare was created in United States", "extracted_entity": "Nightmare"}
{"question": "which country was The Format created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Format"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "The_Format"}
{"question": "which country was Pyramid created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Pyramid"], "answer_entity_name": null, "predicted_answer": "Egypt", "extracted_entity": "Pyramid"}
{"question": "which country was Dirt created in?", "answer": "People's Republic of China", "dataset": "entity_questions", "split": "test", "answer_aliases": ["People's Republic of China"], "entity_annotations": ["Dirt"], "answer_entity_name": null, "predicted_answer": "UK", "extracted_entity": "Dirt"}
{"question": "which country was Snapple created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Snapple"], "answer_entity_name": null, "predicted_answer": "the United States", "extracted_entity": "Snapple"}
{"question": "which country was The Bridges at Toko-Ri created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["The Bridges at Toko-Ri"], "answer_entity_name": null, "predicted_answer": "The Bridges at Toko-Ri was created in", "extracted_entity": "The_Bridges_at_Toko-Ri"}
{"question": "which country was The Color of Pomegranates created in?", "answer": "Soviet Union", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Soviet Union"], "entity_annotations": ["The Color of Pomegranates"], "answer_entity_name": null, "predicted_answer": "The Color of Pomegranates was created in", "extracted_entity": "The_Color_of_Pomegranates"}
{"question": "which country was Wayward Pines created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Wayward Pines"], "answer_entity_name": null, "predicted_answer": "Wayward Pines is an American television series created", "extracted_entity": "Wayward_Pines"}
{"question": "which country was Tess of the d'Urbervilles created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Tess of the d'Urbervilles"], "answer_entity_name": null, "predicted_answer": "England", "extracted_entity": "Tess_of_the_d'Urbervilles"}
{"question": "which country was Armstrong Circle Theatre created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Armstrong Circle Theatre"], "answer_entity_name": null, "predicted_answer": "Armstrong Circle Theatre was created in United States", "extracted_entity": "Armstrong_Circle_Theatre"}
{"question": "which country was Halloween III: Season of the Witch created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Halloween III: Season of the Witch"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Halloween_III:_Season_of_the_Witch"}
{"question": "which country was All I Really Want to Do created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["All I Really Want to Do"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "All_I_Really_Want_to_Do"}
{"question": "which country was Saint created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Saint"], "answer_entity_name": null, "predicted_answer": "Saint was created in France", "extracted_entity": "Saint"}
{"question": "which country was Dziennik Ustaw created in?", "answer": "Poland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Poland"], "entity_annotations": ["Dziennik Ustaw"], "answer_entity_name": null, "predicted_answer": "Dziennik Ustaw was created in Poland", "extracted_entity": "Dziennik_Ustaw"}
{"question": "which country was Resurrection Band created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Resurrection Band"], "answer_entity_name": null, "predicted_answer": "Resurrection Band was created in United States.", "extracted_entity": "Resurrection_Band"}
{"question": "which country was All About My Mother created in?", "answer": "Spain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spain"], "entity_annotations": ["All About My Mother"], "answer_entity_name": null, "predicted_answer": "Spain", "extracted_entity": "All_About_My_Mother"}
{"question": "which country was Five Finger Death Punch created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Five Finger Death Punch"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Five_Finger_Death_Punch"}
{"question": "which country was Jimmy Eat World created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Jimmy Eat World"], "answer_entity_name": null, "predicted_answer": "The United States", "extracted_entity": "Jimmy_Eat_World"}
{"question": "which country was Downstairs created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Downstairs"], "answer_entity_name": null, "predicted_answer": "United Kingdom", "extracted_entity": "Downstairs"}
{"question": "which country was My Own Private Idaho created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["My Own Private Idaho"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "My_Own_Private_Idaho"}
{"question": "which country was Rocky IV created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Rocky IV"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Rocky_IV"}
{"question": "which country was Rage Against the Machine created in?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Rage Against the Machine"], "answer_entity_name": null, "predicted_answer": "America", "extracted_entity": "Rage_Against_the_Machine"}
{"question": "what music label is The Famous Flames represented by?", "answer": "Federal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Federal"], "entity_annotations": ["The Famous Flames"], "answer_entity_name": null, "predicted_answer": "The Famous Flames are represented by the music label Universal", "extracted_entity": "The_Famous_Flames"}
{"question": "what music label is Down with Webster represented by?", "answer": "Universal Motown Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Universal Motown Records"], "entity_annotations": ["Down with Webster"], "answer_entity_name": null, "predicted_answer": "Universal Motown", "extracted_entity": "Down_with_Webster"}
{"question": "what music label is Brazilian Girls represented by?", "answer": "Verve Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Verve Records"], "entity_annotations": ["Brazilian Girls"], "answer_entity_name": null, "predicted_answer": "They are represented by the record label Verve Records", "extracted_entity": "Brazilian_Girls"}
{"question": "what music label is Romeo and Juliet represented by?", "answer": "RCA Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["RCA Records"], "entity_annotations": ["Romeo and Juliet"], "answer_entity_name": null, "predicted_answer": "n/a", "extracted_entity": "Romeo_and_Juliet"}
{"question": "what music label is Sensor represented by?", "answer": "Island Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Island Records"], "entity_annotations": ["Sensor"], "answer_entity_name": null, "predicted_answer": "Universal Music Group", "extracted_entity": "Sensor"}
{"question": "what music label is Groovin' represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["Groovin'"], "answer_entity_name": null, "predicted_answer": "Groovin' is represented by Atlantic Records", "extracted_entity": "Groovin'"}
{"question": "what music label is Blue represented by?", "answer": "Epic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Epic"], "entity_annotations": ["Blue"], "answer_entity_name": null, "predicted_answer": "Sony BMG", "extracted_entity": "Blue"}
{"question": "what music label is True represented by?", "answer": "Chrysalis Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chrysalis Records"], "entity_annotations": ["True"], "answer_entity_name": null, "predicted_answer": "True is represented by the music label Sony Music Entertainment", "extracted_entity": "True"}
{"question": "what music label is Shock Value II represented by?", "answer": "Blackground Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Blackground Records", "Mosley Music Group"], "entity_annotations": ["Shock Value II"], "answer_entity_name": null, "predicted_answer": "Blackground Records", "extracted_entity": "Shock_Value_II"}
{"question": "what music label is A New Day Has Come represented by?", "answer": "Columbia Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Records"], "entity_annotations": ["A New Day Has Come"], "answer_entity_name": null, "predicted_answer": "Sony Music", "extracted_entity": "A_New_Day_Has_Come"}
{"question": "what music label is Innerspeaker represented by?", "answer": "Modular Recordings", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Modular Recordings"], "entity_annotations": ["Innerspeaker"], "answer_entity_name": null, "predicted_answer": "Modular Recordings", "extracted_entity": "Innerspeaker"}
{"question": "what music label is Dehumanizer represented by?", "answer": "Polydor Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Polydor Records"], "entity_annotations": ["Dehumanizer"], "answer_entity_name": null, "predicted_answer": "I.R.S. Records", "extracted_entity": "Dehumanizer"}
{"question": "what music label is Gasoline represented by?", "answer": "Roadrunner Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Roadrunner Records", "604 Records"], "entity_annotations": ["Gasoline"], "answer_entity_name": null, "predicted_answer": "N/A", "extracted_entity": "Gasoline"}
{"question": "what music label is It Ain't Me Babe represented by?", "answer": "Columbia Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Records"], "entity_annotations": ["It Ain't Me Babe"], "answer_entity_name": null, "predicted_answer": "It Ain't Me Babe is represented by Columbia Records", "extracted_entity": "It_Ain't_Me_Babe"}
{"question": "what music label is Cosmos represented by?", "answer": "Blue Note Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Blue Note Records"], "entity_annotations": ["Cosmos"], "answer_entity_name": null, "predicted_answer": "it's represented by the music label \"Mondo", "extracted_entity": "Cosmos"}
{"question": "what music label is Ricky Martin represented by?", "answer": "Columbia Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Records"], "entity_annotations": ["Ricky Martin"], "answer_entity_name": null, "predicted_answer": "Sony Music", "extracted_entity": "Ricky_Martin"}
{"question": "what music label is Revolver represented by?", "answer": "Capitol Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Capitol Records"], "entity_annotations": ["Revolver"], "answer_entity_name": null, "predicted_answer": "Warner Music Group", "extracted_entity": "Revolver"}
{"question": "what music label is Irreplaceable represented by?", "answer": "Columbia Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Records"], "entity_annotations": ["Irreplaceable"], "answer_entity_name": null, "predicted_answer": "Columbia Records", "extracted_entity": "Irreplaceable"}
{"question": "what music label is Desire represented by?", "answer": "SRC Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["SRC Records"], "entity_annotations": ["Desire"], "answer_entity_name": null, "predicted_answer": "Desire is represented by Desire.", "extracted_entity": "Desire"}
{"question": "what music label is George Michael represented by?", "answer": "Columbia Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Records", "DreamWorks Records", "Epic", "Virgin Records"], "entity_annotations": ["George Michael"], "answer_entity_name": null, "predicted_answer": "Sony Music Entertainment", "extracted_entity": "George_Michael"}
{"question": "what music label is Tyshawn Sorey represented by?", "answer": "Pi Recordings", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pi Recordings"], "entity_annotations": ["Tyshawn Sorey"], "answer_entity_name": null, "predicted_answer": "International Anthem.", "extracted_entity": "Tyshawn_Sorey"}
{"question": "what music label is The Baseball Project represented by?", "answer": "Yep Roc Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yep Roc Records"], "entity_annotations": ["The Baseball Project"], "answer_entity_name": null, "predicted_answer": "Yep Roc Records", "extracted_entity": "The_Baseball_Project"}
{"question": "what music label is Orchestrion represented by?", "answer": "Nonesuch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nonesuch"], "entity_annotations": ["Orchestrion"], "answer_entity_name": null, "predicted_answer": "Nonesuch.", "extracted_entity": "Orchestrion"}
{"question": "what music label is Tom Dowd represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["Tom Dowd"], "answer_entity_name": null, "predicted_answer": "Atlantic Records", "extracted_entity": "Tom_Dowd"}
{"question": "what music label is The Dillards represented by?", "answer": "Elektra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elektra"], "entity_annotations": ["The Dillards"], "answer_entity_name": null, "predicted_answer": "The Dillards are represented by Sugar Hill Records", "extracted_entity": "The_Dillards"}
{"question": "what music label is Manhattan Project represented by?", "answer": "Bee Hive Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bee Hive Records"], "entity_annotations": ["Manhattan Project"], "answer_entity_name": null, "predicted_answer": "Manhattan Project is represented by Sire Records", "extracted_entity": "Manhattan_Project"}
{"question": "what music label is The Righteous Brothers represented by?", "answer": "Moonglow Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moonglow Records"], "entity_annotations": ["The Righteous Brothers"], "answer_entity_name": null, "predicted_answer": "The Righteous Brothers is represented by The Righteous", "extracted_entity": "The_Righteous_Brothers"}
{"question": "what music label is Never Mind the Bollocks, Here's the Sex Pistols represented by?", "answer": "Virgin Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Virgin Records"], "entity_annotations": ["Never Mind the Bollocks, Here's the Sex Pistols"], "answer_entity_name": null, "predicted_answer": "Virgin Records", "extracted_entity": "Never_Mind_the_Bollocks,_Here's_the_Sex_Pistols"}
{"question": "what music label is Wannabe represented by?", "answer": "Virgin Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Virgin Records"], "entity_annotations": ["Wannabe"], "answer_entity_name": null, "predicted_answer": "Virgin", "extracted_entity": "Wannabe"}
{"question": "what music label is Gravity's Rainbow represented by?", "answer": "Chrysalis Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chrysalis Records"], "entity_annotations": ["Gravity's Rainbow"], "answer_entity_name": null, "predicted_answer": "Warner Bros.", "extracted_entity": "Gravity's_Rainbow"}
{"question": "what music label is Jennifer Love Hewitt represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["Jennifer Love Hewitt"], "answer_entity_name": null, "predicted_answer": "Universal Music Group", "extracted_entity": "Jennifer_Love_Hewitt"}
{"question": "what music label is Azure Ray represented by?", "answer": "Saddle Creek Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saddle Creek Records"], "entity_annotations": ["Azure Ray"], "answer_entity_name": null, "predicted_answer": "Saddle Creek Records", "extracted_entity": "Azure_Ray"}
{"question": "what music label is Artie Shaw represented by?", "answer": "Musicraft Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Musicraft Records"], "entity_annotations": ["Artie Shaw"], "answer_entity_name": null, "predicted_answer": "the music label is \"Bluebird\".", "extracted_entity": "Artie_Shaw"}
{"question": "what music label is Ugetsu represented by?", "answer": "Riverside Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Riverside Records"], "entity_annotations": ["Ugetsu"], "answer_entity_name": null, "predicted_answer": "getsu is represented by the music label Universal", "extracted_entity": "Ugetsu"}
{"question": "what music label is Split represented by?", "answer": "Stardumb Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stardumb Records"], "entity_annotations": ["Split"], "answer_entity_name": null, "predicted_answer": "N/A", "extracted_entity": "Split"}
{"question": "what music label is Jimmy Barnes represented by?", "answer": "Mushroom Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mushroom Records"], "entity_annotations": ["Jimmy Barnes"], "answer_entity_name": null, "predicted_answer": "Jimmy Barnes is represented by Warner Music.", "extracted_entity": "Jimmy_Barnes"}
{"question": "what music label is Johnny Rivers represented by?", "answer": "Big Tree Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Big Tree Records", "Imperial"], "entity_annotations": ["Johnny Rivers"], "answer_entity_name": null, "predicted_answer": "Suede label", "extracted_entity": "Johnny_Rivers"}
{"question": "what music label is Garage Inc. represented by?", "answer": "Elektra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elektra"], "entity_annotations": ["Garage Inc."], "answer_entity_name": null, "predicted_answer": "Elektra Records", "extracted_entity": "Garage_Inc."}
{"question": "what music label is Gandalf represented by?", "answer": "Earache Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Earache Records"], "entity_annotations": ["Gandalf"], "answer_entity_name": null, "predicted_answer": "\"Gandalf\" is the name of a", "extracted_entity": "Gandalf"}
{"question": "what music label is Ai Otsuka represented by?", "answer": "Avex Trax", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Avex Trax", "Avex Group"], "entity_annotations": ["Ai Otsuka"], "answer_entity_name": null, "predicted_answer": "Avex", "extracted_entity": "Ai_Otsuka"}
{"question": "what music label is Kutless represented by?", "answer": "BEC Recordings", "dataset": "entity_questions", "split": "test", "answer_aliases": ["BEC Recordings"], "entity_annotations": ["Kutless"], "answer_entity_name": null, "predicted_answer": "BEC Recordings", "extracted_entity": "Kutless"}
{"question": "what music label is Shaun Cassidy represented by?", "answer": "Warner Bros. Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Bros. Records"], "entity_annotations": ["Shaun Cassidy"], "answer_entity_name": null, "predicted_answer": "Warner Bros. Records", "extracted_entity": "Shaun_Cassidy"}
{"question": "what music label is Ken Andrews represented by?", "answer": "Slash Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Slash Records"], "entity_annotations": ["Ken Andrews"], "answer_entity_name": null, "predicted_answer": "Ken Andrews is represented by Dinosaur Fight Records.", "extracted_entity": "Ken_Andrews"}
{"question": "what music label is New Boyz represented by?", "answer": "Asylum Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Asylum Records"], "entity_annotations": ["New Boyz"], "answer_entity_name": null, "predicted_answer": "E1 Music", "extracted_entity": "New_Boyz"}
{"question": "what music label is Malcolm Middleton represented by?", "answer": "Chemikal Underground", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chemikal Underground"], "entity_annotations": ["Malcolm Middleton"], "answer_entity_name": null, "predicted_answer": "The label is \"Chemikal Underground\".", "extracted_entity": "Malcolm_Middleton"}
{"question": "what music label is Damien Jurado represented by?", "answer": "Secretly Canadian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Secretly Canadian"], "entity_annotations": ["Damien Jurado"], "answer_entity_name": null, "predicted_answer": "Damien Jurado is represented by Secretly Canadian.", "extracted_entity": "Damien_Jurado"}
{"question": "what music label is Porgy and Bess represented by?", "answer": "Columbia Masterworks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Masterworks"], "entity_annotations": ["Porgy and Bess"], "answer_entity_name": null, "predicted_answer": "the music label is Naxos Digital Services.", "extracted_entity": "Porgy_and_Bess"}
{"question": "what music label is Metamorphosis represented by?", "answer": "ABKCO Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["ABKCO Records"], "entity_annotations": ["Metamorphosis"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Metamorphosis"}
{"question": "what music label is Civet represented by?", "answer": "Hellcat Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hellcat Records"], "entity_annotations": ["Civet"], "answer_entity_name": null, "predicted_answer": "\"Civet is a San Francisco-based indie rock", "extracted_entity": "Civet"}
{"question": "what music label is Snake River Conspiracy represented by?", "answer": "Reprise Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reprise Records"], "entity_annotations": ["Snake River Conspiracy"], "answer_entity_name": null, "predicted_answer": "Reprise Records", "extracted_entity": "Snake_River_Conspiracy"}
{"question": "what music label is Burnt by the Sun represented by?", "answer": "Relapse Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Relapse Records"], "entity_annotations": ["Burnt by the Sun"], "answer_entity_name": null, "predicted_answer": "Metal Blade Records", "extracted_entity": "Burnt_by_the_Sun"}
{"question": "what music label is A Static Lullaby represented by?", "answer": "Fearless Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fearless Records"], "entity_annotations": ["A Static Lullaby"], "answer_entity_name": null, "predicted_answer": "Ferret Records", "extracted_entity": "A_Static_Lullaby"}
{"question": "what music label is Big Pimpin' represented by?", "answer": "Roc-A-Fella Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Roc-A-Fella Records"], "entity_annotations": ["Big Pimpin'"], "answer_entity_name": null, "predicted_answer": "EMI Records", "extracted_entity": "Big_Pimpin'"}
{"question": "what music label is Supper represented by?", "answer": "Drag City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Drag City"], "entity_annotations": ["Supper"], "answer_entity_name": null, "predicted_answer": "The record company is Supper.", "extracted_entity": "Supper"}
{"question": "what music label is Soldier represented by?", "answer": "Arista", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arista"], "entity_annotations": ["Soldier"], "answer_entity_name": null, "predicted_answer": "er is represented by the music label Sony BMG", "extracted_entity": "Soldier"}
{"question": "what music label is Linda Davis represented by?", "answer": "Liberty", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Liberty"], "entity_annotations": ["Linda Davis"], "answer_entity_name": null, "predicted_answer": "Davis is represented by MCA Nashville", "extracted_entity": "Linda_Davis"}
{"question": "what music label is The Road represented by?", "answer": "Inpop Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Inpop Records"], "entity_annotations": ["The Road"], "answer_entity_name": null, "predicted_answer": "None.", "extracted_entity": "The_Road"}
{"question": "what music label is By Divine Right represented by?", "answer": "Nettwerk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nettwerk"], "entity_annotations": ["By Divine Right"], "answer_entity_name": null, "predicted_answer": "Squirtgun Records", "extracted_entity": "By_Divine_Right"}
{"question": "what music label is Suction represented by?", "answer": "Rough Trade Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rough Trade Records"], "entity_annotations": ["Suction"], "answer_entity_name": null, "predicted_answer": "Suction is represented by the music label of", "extracted_entity": "Suction"}
{"question": "what music label is Verbal Jint represented by?", "answer": "Brand New Music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brand New Music"], "entity_annotations": ["Verbal Jint"], "answer_entity_name": null, "predicted_answer": "Brand New Music", "extracted_entity": "Verbal_Jint"}
{"question": "what music label is Mstislav Rostropovich represented by?", "answer": "Deutsche Grammophon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Deutsche Grammophon"], "entity_annotations": ["Mstislav Rostropovich"], "answer_entity_name": null, "predicted_answer": "eutsche Grammophon", "extracted_entity": "Mstislav_Rostropovich"}
{"question": "what music label is Esther Phillips represented by?", "answer": "CTI Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["CTI Records"], "entity_annotations": ["Esther Phillips"], "answer_entity_name": null, "predicted_answer": "Savoy Records", "extracted_entity": "Esther_Phillips"}
{"question": "what music label is Black Celebration represented by?", "answer": "Mute Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mute Records", "Sire"], "entity_annotations": ["Black Celebration"], "answer_entity_name": null, "predicted_answer": "Mute Records", "extracted_entity": "Black_Celebration"}
{"question": "what music label is Yung Joc represented by?", "answer": "Bad Boy Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bad Boy Records"], "entity_annotations": ["Yung Joc"], "answer_entity_name": null, "predicted_answer": "Bad Boy South", "extracted_entity": "Yung_Joc"}
{"question": "what music label is Lard represented by?", "answer": "Alternative Tentacles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alternative Tentacles"], "entity_annotations": ["Lard"], "answer_entity_name": null, "predicted_answer": "Lard is represented by the label \"Sword", "extracted_entity": "Lard"}
{"question": "what music label is Sarah Buxton represented by?", "answer": "Lyric Street Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lyric Street Records"], "entity_annotations": ["Sarah Buxton"], "answer_entity_name": null, "predicted_answer": "Lyric Street Records", "extracted_entity": "Sarah_Buxton"}
{"question": "what music label is Led Zeppelin represented by?", "answer": "Decca", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Decca", "Atlantic Records"], "entity_annotations": ["Led Zeppelin"], "answer_entity_name": null, "predicted_answer": "Atlantic Records", "extracted_entity": "Led_Zeppelin"}
{"question": "what music label is Genesis P-Orridge represented by?", "answer": "Industrial Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Industrial Records"], "entity_annotations": ["Genesis P-Orridge"], "answer_entity_name": null, "predicted_answer": "Genesis P-Orridge is represented by Dais", "extracted_entity": "Genesis_P-Orridge"}
{"question": "what music label is Master P represented by?", "answer": "No Limit Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["No Limit Records"], "entity_annotations": ["Master P"], "answer_entity_name": null, "predicted_answer": "New No Limit Records through Universal Records and Koch Records", "extracted_entity": "Master_P"}
{"question": "what music label is Anna Calvi represented by?", "answer": "Domino Recording Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Domino Recording Company"], "entity_annotations": ["Anna Calvi"], "answer_entity_name": null, "predicted_answer": "Domino Records", "extracted_entity": "Anna_Calvi"}
{"question": "what music label is Freddy Cannon represented by?", "answer": "Swan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Swan"], "entity_annotations": ["Freddy Cannon"], "answer_entity_name": null, "predicted_answer": "Freddy Cannon is represented by the music label Swan Records", "extracted_entity": "Freddy_Cannon"}
{"question": "what music label is Dru Hill represented by?", "answer": "Island Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Island Records"], "entity_annotations": ["Dru Hill"], "answer_entity_name": null, "predicted_answer": "Island Records", "extracted_entity": "Dru_Hill"}
{"question": "what music label is Bringing It All Back Home represented by?", "answer": "Columbia Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Records"], "entity_annotations": ["Bringing It All Back Home"], "answer_entity_name": null, "predicted_answer": "Columbia Records.", "extracted_entity": "Bringing_It_All_Back_Home"}
{"question": "what music label is Suicide Commando represented by?", "answer": "Dependent Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dependent Records"], "entity_annotations": ["Suicide Commando"], "answer_entity_name": null, "predicted_answer": "Dependent", "extracted_entity": "Suicide_Commando"}
{"question": "what music label is Portugal. The Man represented by?", "answer": "Fearless Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fearless Records"], "entity_annotations": ["Portugal. The Man"], "answer_entity_name": null, "predicted_answer": "The band is represented by Atlantic Records.", "extracted_entity": "Portugal._The_Man"}
{"question": "what music label is 808s & Heartbreak represented by?", "answer": "Roc-A-Fella Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Roc-A-Fella Records"], "entity_annotations": ["808s & Heartbreak"], "answer_entity_name": null, "predicted_answer": "Def Jam Recordings", "extracted_entity": "808s_&_Heartbreak"}
{"question": "what music label is Ruth Brown represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["Ruth Brown"], "answer_entity_name": null, "predicted_answer": "Atlantic Records", "extracted_entity": "Ruth_Brown"}
{"question": "what music label is Counting Crows represented by?", "answer": "Capitol Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Capitol Records", "Geffen Records", "Cooking Vinyl"], "entity_annotations": ["Counting Crows"], "answer_entity_name": null, "predicted_answer": "Geffen Records", "extracted_entity": "Counting_Crows"}
{"question": "what music label is Written on the Wind represented by?", "answer": "Polydor Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Polydor Records"], "entity_annotations": ["Written on the Wind"], "answer_entity_name": null, "predicted_answer": "Universal Pictures", "extracted_entity": "Written_on_the_Wind"}
{"question": "what music label is Chuck Negron represented by?", "answer": "Dunhill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dunhill"], "entity_annotations": ["Chuck Negron"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Chuck_Negron"}
{"question": "what music label is Here I Go Again represented by?", "answer": "Parlophone", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Parlophone"], "entity_annotations": ["Here I Go Again"], "answer_entity_name": null, "predicted_answer": "The song was written by the lead singer, David", "extracted_entity": "Here_I_Go_Again"}
{"question": "what music label is Cheap Trick represented by?", "answer": "Warner Bros. Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Bros. Records", "Epic"], "entity_annotations": ["Cheap Trick"], "answer_entity_name": null, "predicted_answer": "Cheap Trick is represented by Epic Records, Sony Music", "extracted_entity": "Cheap_Trick"}
{"question": "what music label is The Corrs represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["The Corrs"], "answer_entity_name": null, "predicted_answer": "Atlantic Records", "extracted_entity": "The_Corrs"}
{"question": "what music label is History represented by?", "answer": "Show Dog-Universal Music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Show Dog-Universal Music"], "entity_annotations": ["History"], "answer_entity_name": null, "predicted_answer": "Polydor Records", "extracted_entity": "History"}
{"question": "what music label is Toby Keith represented by?", "answer": "DreamWorks Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["DreamWorks Records"], "entity_annotations": ["Toby Keith"], "answer_entity_name": null, "predicted_answer": "Show Dog-Universal Music", "extracted_entity": "Toby_Keith"}
{"question": "what music label is Audio Adrenaline represented by?", "answer": "ForeFront Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["ForeFront Records"], "entity_annotations": ["Audio Adrenaline"], "answer_entity_name": null, "predicted_answer": "Forefront Records", "extracted_entity": "Audio_Adrenaline"}
{"question": "what music label is Here Comes the Sun represented by?", "answer": "RCA Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["RCA Records"], "entity_annotations": ["Here Comes the Sun"], "answer_entity_name": null, "predicted_answer": "Here Comes the Sun is represented by Capitol Records.", "extracted_entity": "Here_Comes_the_Sun"}
{"question": "what music label is Necrophagist represented by?", "answer": "Relapse Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Relapse Records"], "entity_annotations": ["Necrophagist"], "answer_entity_name": null, "predicted_answer": "Willowtip Records, Relapse Records", "extracted_entity": "Necrophagist"}
{"question": "what music label is Trip Lee represented by?", "answer": "Reach Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reach Records"], "entity_annotations": ["Trip Lee"], "answer_entity_name": null, "predicted_answer": "Reach Records", "extracted_entity": "Trip_Lee"}
{"question": "what music label is Flame represented by?", "answer": "MCA Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["MCA Records"], "entity_annotations": ["Flame"], "answer_entity_name": null, "predicted_answer": "Flame is represented by Clear Sight Music.", "extracted_entity": "Flame"}
{"question": "what music label is You Make Me Wanna... represented by?", "answer": "LaFace Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["LaFace Records", "Arista"], "entity_annotations": ["You Make Me Wanna..."], "answer_entity_name": null, "predicted_answer": "Arista Records", "extracted_entity": "You_Make_Me_Wanna..."}
{"question": "what music label is Ninth represented by?", "answer": "Nettwerk", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nettwerk"], "entity_annotations": ["Ninth"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Ninth"}
{"question": "what music label is The Real McKenzies represented by?", "answer": "Fat Wreck Chords", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fat Wreck Chords"], "entity_annotations": ["The Real McKenzies"], "answer_entity_name": null, "predicted_answer": "Fat Wreck Chords", "extracted_entity": "The_Real_McKenzies"}
{"question": "what music label is Professor Longhair represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["Professor Longhair"], "answer_entity_name": null, "predicted_answer": "Mercury Records", "extracted_entity": "Professor_Longhair"}
{"question": "what music label is Adrenalize represented by?", "answer": "Mercury Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mercury Records"], "entity_annotations": ["Adrenalize"], "answer_entity_name": null, "predicted_answer": "Mercury Records", "extracted_entity": "Adrenalize"}
{"question": "what music label is Jesse Fuller represented by?", "answer": "Good Time Jazz Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Good Time Jazz Records"], "entity_annotations": ["Jesse Fuller"], "answer_entity_name": null, "predicted_answer": "Blind Pig Records", "extracted_entity": "Jesse_Fuller"}
{"question": "what music label is No Me Queda M\u00e1s represented by?", "answer": "Capitol Latin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Capitol Latin"], "entity_annotations": ["No Me Queda M\u00e1s"], "answer_entity_name": null, "predicted_answer": "EMI Latin", "extracted_entity": "No_Me_Queda_M\u00e1s"}
{"question": "what music label is The Seekers represented by?", "answer": "W&G Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["W&G Records"], "entity_annotations": ["The Seekers"], "answer_entity_name": null, "predicted_answer": "The Seekers are represented by Decca Records.", "extracted_entity": "The_Seekers"}
{"question": "what music label is Transition represented by?", "answer": "Impulse! Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Impulse! Records"], "entity_annotations": ["Transition"], "answer_entity_name": null, "predicted_answer": "Transition", "extracted_entity": "Transition"}
{"question": "what music label is From Under the Cork Tree represented by?", "answer": "Island Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Island Records"], "entity_annotations": ["From Under the Cork Tree"], "answer_entity_name": null, "predicted_answer": "Island Records", "extracted_entity": "From_Under_the_Cork_Tree"}
{"question": "what music label is Shawn Colvin represented by?", "answer": "Columbia Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Records"], "entity_annotations": ["Shawn Colvin"], "answer_entity_name": null, "predicted_answer": "Sony Music", "extracted_entity": "Shawn_Colvin"}
{"question": "what music label is Alligator represented by?", "answer": "Capitol Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Capitol Records"], "entity_annotations": ["Alligator"], "answer_entity_name": null, "predicted_answer": "igator is represented by \"Alligator\"", "extracted_entity": "Alligator"}
{"question": "what music label is Chayanne represented by?", "answer": "Sony Music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sony Music"], "entity_annotations": ["Chayanne"], "answer_entity_name": null, "predicted_answer": "RCA V\u00edctor", "extracted_entity": "Chayanne"}
{"question": "what music label is Damnation represented by?", "answer": "Massacre Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Massacre Records"], "entity_annotations": ["Damnation"], "answer_entity_name": null, "predicted_answer": "The record label is: Metal Blade Records", "extracted_entity": "Damnation"}
{"question": "what music label is Brave New World represented by?", "answer": "GRP Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["GRP Records"], "entity_annotations": ["Brave New World"], "answer_entity_name": null, "predicted_answer": "Brave New World is represented by Warner Bros. Records", "extracted_entity": "Brave_New_World"}
{"question": "what music label is Dwight Twilley represented by?", "answer": "Shelter Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shelter Records"], "entity_annotations": ["Dwight Twilley"], "answer_entity_name": null, "predicted_answer": "Shelter Records", "extracted_entity": "Dwight_Twilley"}
{"question": "what music label is Living in a Box represented by?", "answer": "Chrysalis Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chrysalis Records"], "entity_annotations": ["Living in a Box"], "answer_entity_name": null, "predicted_answer": "EMI Records", "extracted_entity": "Living_in_a_Box"}
{"question": "what music label is Donald Fagen represented by?", "answer": "ABC Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["ABC Records"], "entity_annotations": ["Donald Fagen"], "answer_entity_name": null, "predicted_answer": "Warner Bros. Records", "extracted_entity": "Donald_Fagen"}
{"question": "what music label is The Sixth Sense represented by?", "answer": "Black Saint/Soul Note", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Black Saint/Soul Note"], "entity_annotations": ["The Sixth Sense"], "answer_entity_name": null, "predicted_answer": "Buena Vista Pictures", "extracted_entity": "The_Sixth_Sense"}
{"question": "what music label is Aly & Fila represented by?", "answer": "Armada Music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Armada Music"], "entity_annotations": ["Aly & Fila"], "answer_entity_name": null, "predicted_answer": "Aly & Fila is represented by the German record", "extracted_entity": "Aly_&_Fila"}
{"question": "what music label is Willa Ford represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["Willa Ford"], "answer_entity_name": null, "predicted_answer": "Atlantic Records", "extracted_entity": "Willa_Ford"}
{"question": "what music label is Michel'le represented by?", "answer": "Death Row Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Death Row Records"], "entity_annotations": ["Michel'le"], "answer_entity_name": null, "predicted_answer": "Ruthless Records", "extracted_entity": "Michel'le"}
{"question": "what music label is Thrust represented by?", "answer": "Columbia Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Records"], "entity_annotations": ["Thrust"], "answer_entity_name": null, "predicted_answer": "Thrust is represented by the label Warner Bros.", "extracted_entity": "Thrust"}
{"question": "what music label is Ty Segall represented by?", "answer": "Drag City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Drag City"], "entity_annotations": ["Ty Segall"], "answer_entity_name": null, "predicted_answer": "In 2010, Segall signed with Drag", "extracted_entity": "Ty_Segall"}
{"question": "what music label is Max Herre represented by?", "answer": "Four Music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Four Music"], "entity_annotations": ["Max Herre"], "answer_entity_name": null, "predicted_answer": "Nesola", "extracted_entity": "Max_Herre"}
{"question": "what music label is Puffy AmiYumi represented by?", "answer": "Tofu Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tofu Records", "Sony Music Entertainment Japan"], "entity_annotations": ["Puffy AmiYumi"], "answer_entity_name": null, "predicted_answer": "Sony Music Entertainment", "extracted_entity": "Puffy_AmiYumi"}
{"question": "what music label is The Three O'Clock represented by?", "answer": "I.R.S. Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["I.R.S. Records"], "entity_annotations": ["The Three O'Clock"], "answer_entity_name": null, "predicted_answer": "The Three O'Clock is represented by Frontier Records", "extracted_entity": "The_Three_O'Clock"}
{"question": "what music label is The Soft Parade represented by?", "answer": "Elektra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elektra"], "entity_annotations": ["The Soft Parade"], "answer_entity_name": null, "predicted_answer": "Elektra Records", "extracted_entity": "The_Soft_Parade"}
{"question": "what music label is Shaheen Jafargholi represented by?", "answer": "Island Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Island Records"], "entity_annotations": ["Shaheen Jafargholi"], "answer_entity_name": null, "predicted_answer": "Sony Music Entertainment", "extracted_entity": "Shaheen_Jafargholi"}
{"question": "what music label is Kentucky Thunder represented by?", "answer": "Epic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Epic"], "entity_annotations": ["Kentucky Thunder"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Kentucky_Thunder"}
{"question": "what music label is Destiny represented by?", "answer": "Warner Bros. Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Bros. Records"], "entity_annotations": ["Destiny"], "answer_entity_name": null, "predicted_answer": "Destiny is represented by the label Sony Music Entertainment.", "extracted_entity": "Destiny"}
{"question": "what music label is DJ Khalil represented by?", "answer": "Aftermath Entertainment", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aftermath Entertainment"], "entity_annotations": ["DJ Khalil"], "answer_entity_name": null, "predicted_answer": "Aftermath Entertainment", "extracted_entity": "DJ_Khalil"}
{"question": "what music label is Shpongle represented by?", "answer": "Twisted Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Twisted Records"], "entity_annotations": ["Shpongle"], "answer_entity_name": null, "predicted_answer": "Twisted Records.", "extracted_entity": "Shpongle"}
{"question": "what music label is Charlie McCoy represented by?", "answer": "Monument", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Monument"], "entity_annotations": ["Charlie McCoy"], "answer_entity_name": null, "predicted_answer": "Charlie McCoy is represented by the music label Monument Records", "extracted_entity": "Charlie_McCoy"}
{"question": "what music label is Life represented by?", "answer": "RCA Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["RCA Records"], "entity_annotations": ["Life"], "answer_entity_name": null, "predicted_answer": "Life is represented by Music", "extracted_entity": "Life"}
{"question": "what music label is The Who represented by?", "answer": "Decca", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Decca", "Atco Records", "Brunswick"], "entity_annotations": ["The Who"], "answer_entity_name": null, "predicted_answer": "Decca Records", "extracted_entity": "The_Who"}
{"question": "what music label is When Doves Cry represented by?", "answer": "Warner Bros. Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Bros. Records"], "entity_annotations": ["When Doves Cry"], "answer_entity_name": null, "predicted_answer": "Warner Bros.", "extracted_entity": "When_Doves_Cry"}
{"question": "what music label is Summit represented by?", "answer": "Organized Nature", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Organized Nature"], "entity_annotations": ["Summit"], "answer_entity_name": null, "predicted_answer": "Sony Music", "extracted_entity": "Summit"}
{"question": "what music label is Close to the Edge represented by?", "answer": "Arista", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arista"], "entity_annotations": ["Close to the Edge"], "answer_entity_name": null, "predicted_answer": "Atlantic Records", "extracted_entity": "Close_to_the_Edge"}
{"question": "what music label is Glassheart represented by?", "answer": "Syco Music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Syco Music", "Sony Music"], "entity_annotations": ["Glassheart"], "answer_entity_name": null, "predicted_answer": "Syco Music", "extracted_entity": "Glassheart"}
{"question": "what music label is A Christmas Gift for You from Phil Spector represented by?", "answer": "Philles Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philles Records"], "entity_annotations": ["A Christmas Gift for You from Phil Spector"], "answer_entity_name": null, "predicted_answer": "The album was originally released on Phil Spector's", "extracted_entity": "A_Christmas_Gift_for_You_from_Phil_Spector"}
{"question": "what music label is Ceremonials represented by?", "answer": "Island Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Island Records"], "entity_annotations": ["Ceremonials"], "answer_entity_name": null, "predicted_answer": "Island Records", "extracted_entity": "Ceremonials"}
{"question": "what music label is Odyssey represented by?", "answer": "ECM Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["ECM Records"], "entity_annotations": ["Odyssey"], "answer_entity_name": null, "predicted_answer": "Odyssey is represented by Sony Music Entertainment", "extracted_entity": "Odyssey"}
{"question": "what music label is Dinosaur Jr. represented by?", "answer": "Jagjaguwar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jagjaguwar", "Blast First"], "entity_annotations": ["Dinosaur Jr."], "answer_entity_name": null, "predicted_answer": "Homestead Records", "extracted_entity": "Dinosaur_Jr."}
{"question": "what music label is Commander Cody and His Lost Planet Airmen represented by?", "answer": "Warner Bros. Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Bros. Records"], "entity_annotations": ["Commander Cody and His Lost Planet Airmen"], "answer_entity_name": null, "predicted_answer": "Paramount Records", "extracted_entity": "Commander_Cody_and_His_Lost_Planet_Airmen"}
{"question": "what music label is Kathy Troccoli represented by?", "answer": "Reunion Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reunion Records"], "entity_annotations": ["Kathy Troccoli"], "answer_entity_name": null, "predicted_answer": "Reunion Records label, in Nashville, specifically to", "extracted_entity": "Kathy_Troccoli"}
{"question": "what music label is Life After Death represented by?", "answer": "Bad Boy Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bad Boy Records"], "entity_annotations": ["Life After Death"], "answer_entity_name": null, "predicted_answer": "Bad Boy Records", "extracted_entity": "Life_After_Death"}
{"question": "what music label is Coco Jones represented by?", "answer": "Hollywood Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hollywood Records"], "entity_annotations": ["Coco Jones"], "answer_entity_name": null, "predicted_answer": "Def Jam Recordings", "extracted_entity": "Coco_Jones"}
{"question": "what music label is The Lumineers represented by?", "answer": "Dualtone Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dualtone Records"], "entity_annotations": ["The Lumineers"], "answer_entity_name": null, "predicted_answer": "Dualtone Records", "extracted_entity": "The_Lumineers"}
{"question": "what music label is Paper Planes represented by?", "answer": "Interscope Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Interscope Records", "XL Recordings"], "entity_annotations": ["Paper Planes"], "answer_entity_name": null, "predicted_answer": "XL Recordings", "extracted_entity": "Paper_Planes"}
{"question": "what music label is Ten City represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["Ten City"], "answer_entity_name": null, "predicted_answer": "Atlantic Records", "extracted_entity": "Ten_City"}
{"question": "what music label is Collaboration represented by?", "answer": "Sony", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sony"], "entity_annotations": ["Collaboration"], "answer_entity_name": null, "predicted_answer": "Collaboration is represented by the label Warner Music Group.", "extracted_entity": "Collaboration"}
{"question": "what music label is Firefly represented by?", "answer": "Concord Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Concord Records"], "entity_annotations": ["Firefly"], "answer_entity_name": null, "predicted_answer": "7digital Music", "extracted_entity": "Firefly"}
{"question": "what music label is Evolution represented by?", "answer": "Motown", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Motown"], "entity_annotations": ["Evolution"], "answer_entity_name": null, "predicted_answer": "evolution", "extracted_entity": "Evolution"}
{"question": "what music label is Flip & Fill represented by?", "answer": "All Around the World Productions", "dataset": "entity_questions", "split": "test", "answer_aliases": ["All Around the World Productions"], "entity_annotations": ["Flip & Fill"], "answer_entity_name": null, "predicted_answer": "Filtrate", "extracted_entity": "Flip_&_Fill"}
{"question": "what music label is Ginuwine represented by?", "answer": "Sony Music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sony Music", "Epic", "550 Music"], "entity_annotations": ["Ginuwine"], "answer_entity_name": null, "predicted_answer": "Epic Records", "extracted_entity": "Ginuwine"}
{"question": "what music label is This Providence represented by?", "answer": "Fueled by Ramen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fueled by Ramen"], "entity_annotations": ["This Providence"], "answer_entity_name": null, "predicted_answer": "Fueled by Ramen", "extracted_entity": "This_Providence"}
{"question": "what music label is Phil Vassar represented by?", "answer": "Arista Nashville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arista Nashville"], "entity_annotations": ["Phil Vassar"], "answer_entity_name": null, "predicted_answer": "Universal South Records (now Show Dog-Universal Music", "extracted_entity": "Phil_Vassar"}
{"question": "what music label is Anton Fier represented by?", "answer": "Tzadik Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tzadik Records"], "entity_annotations": ["Anton Fier"], "answer_entity_name": null, "predicted_answer": "Anton Fier is represented by the music label M", "extracted_entity": "Anton_Fier"}
{"question": "what music label is Captain represented by?", "answer": "EMI Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["EMI Records"], "entity_annotations": ["Captain"], "answer_entity_name": null, "predicted_answer": "hat is the date of", "extracted_entity": "Captain"}
{"question": "what music label is Hag represented by?", "answer": "Capitol Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Capitol Records"], "entity_annotations": ["Hag"], "answer_entity_name": null, "predicted_answer": "D", "extracted_entity": "Hag"}
{"question": "what music label is Francesco Guccini represented by?", "answer": "EMI", "dataset": "entity_questions", "split": "test", "answer_aliases": ["EMI"], "entity_annotations": ["Francesco Guccini"], "answer_entity_name": null, "predicted_answer": "Francesco Guccini is represented by the music label", "extracted_entity": "Francesco_Guccini"}
{"question": "what music label is 1983 represented by?", "answer": "Plug Research", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Plug Research"], "entity_annotations": ["1983"], "answer_entity_name": null, "predicted_answer": "4AD", "extracted_entity": "1983"}
{"question": "what music label is Semisonic represented by?", "answer": "MCA Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["MCA Records"], "entity_annotations": ["Semisonic"], "answer_entity_name": null, "predicted_answer": "MCA", "extracted_entity": "Semisonic"}
{"question": "what music label is Canvas represented by?", "answer": "Blue Note Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Blue Note Records"], "entity_annotations": ["Canvas"], "answer_entity_name": null, "predicted_answer": "Canvas is represented by Canvas", "extracted_entity": "Canvas"}
{"question": "what music label is Barry Adamson represented by?", "answer": "Mute Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mute Records"], "entity_annotations": ["Barry Adamson"], "answer_entity_name": null, "predicted_answer": "Mute Records", "extracted_entity": "Barry_Adamson"}
{"question": "what music label is Die Antwoord represented by?", "answer": "Interscope Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Interscope Records"], "entity_annotations": ["Die Antwoord"], "answer_entity_name": null, "predicted_answer": "Zef Records", "extracted_entity": "Die_Antwoord"}
{"question": "what music label is Ed Drewett represented by?", "answer": "Virgin Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Virgin Records"], "entity_annotations": ["Ed Drewett"], "answer_entity_name": null, "predicted_answer": "Virgin Records", "extracted_entity": "Ed_Drewett"}
{"question": "what music label is Iyaz represented by?", "answer": "Beluga Heights Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Beluga Heights Records"], "entity_annotations": ["Iyaz"], "answer_entity_name": null, "predicted_answer": "Beluga Heights Records", "extracted_entity": "Iyaz"}
{"question": "what music label is Sylosis represented by?", "answer": "Nuclear Blast", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nuclear Blast"], "entity_annotations": ["Sylosis"], "answer_entity_name": null, "predicted_answer": "Nuclear Blast Records", "extracted_entity": "Sylosis"}
{"question": "what music label is Mos Def represented by?", "answer": "Rawkus Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rawkus Records"], "entity_annotations": ["Mos Def"], "answer_entity_name": null, "predicted_answer": "Rawkus Records", "extracted_entity": "Mos_Def"}
{"question": "what music label is Badmotorfinger represented by?", "answer": "A&M Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["A&M Records"], "entity_annotations": ["Badmotorfinger"], "answer_entity_name": null, "predicted_answer": "A&M Records", "extracted_entity": "Badmotorfinger"}
{"question": "what music label is Brandi Carlile represented by?", "answer": "Columbia Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Records"], "entity_annotations": ["Brandi Carlile"], "answer_entity_name": null, "predicted_answer": "Brandi Carlile is represented by Warner Music Group", "extracted_entity": "Brandi_Carlile"}
{"question": "what music label is When Love Takes Over represented by?", "answer": "Virgin Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Virgin Records"], "entity_annotations": ["When Love Takes Over"], "answer_entity_name": null, "predicted_answer": "Virgin Records", "extracted_entity": "When_Love_Takes_Over"}
{"question": "what music label is Morcheeba represented by?", "answer": "Play It Again Sam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Play It Again Sam"], "entity_annotations": ["Morcheeba"], "answer_entity_name": null, "predicted_answer": "China Records", "extracted_entity": "Morcheeba"}
{"question": "what music label is Lilys represented by?", "answer": "Slumberland Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Slumberland Records"], "entity_annotations": ["Lilys"], "answer_entity_name": null, "predicted_answer": "what music label is Lilys represented by?", "extracted_entity": "Lilys"}
{"question": "what music label is T\u00fdr represented by?", "answer": "Napalm Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Napalm Records"], "entity_annotations": ["T\u00fdr"], "answer_entity_name": null, "predicted_answer": "represented by Metal Blade Records", "extracted_entity": "T\u00fdr"}
{"question": "what music label is Mandrake represented by?", "answer": "AFM Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["AFM Records"], "entity_annotations": ["Mandrake"], "answer_entity_name": null, "predicted_answer": "Mandrake is represented by EMI.", "extracted_entity": "Mandrake"}
{"question": "what music label is Dawn represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["Dawn"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Dawn"}
{"question": "what music label is Taboo represented by?", "answer": "JVC Kenwood Victor Entertainment", "dataset": "entity_questions", "split": "test", "answer_aliases": ["JVC Kenwood Victor Entertainment"], "entity_annotations": ["Taboo"], "answer_entity_name": null, "predicted_answer": "Interscope Records", "extracted_entity": "Taboo"}
{"question": "what music label is Prizmmy represented by?", "answer": "Avex Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Avex Group"], "entity_annotations": ["Prizmmy"], "answer_entity_name": null, "predicted_answer": "Avex", "extracted_entity": "Prizmmy"}
{"question": "what music label is WYSIWYG represented by?", "answer": "EMI", "dataset": "entity_questions", "split": "test", "answer_aliases": ["EMI"], "entity_annotations": ["WYSIWYG"], "answer_entity_name": null, "predicted_answer": "WYSIWYG is represented by the label W", "extracted_entity": "WYSIWYG"}
{"question": "what music label is The Blues Brothers represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["The Blues Brothers"], "answer_entity_name": null, "predicted_answer": "The Blues Brothers are an American blues and soul revival", "extracted_entity": "The_Blues_Brothers"}
{"question": "what music label is Chthonic represented by?", "answer": "Spinefarm Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spinefarm Records"], "entity_annotations": ["Chthonic"], "answer_entity_name": null, "predicted_answer": "Rock Records", "extracted_entity": "Chthonic"}
{"question": "what music label is Doll Domination represented by?", "answer": "Interscope Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Interscope Records"], "entity_annotations": ["Doll Domination"], "answer_entity_name": null, "predicted_answer": "Interscope Records", "extracted_entity": "Doll_Domination"}
{"question": "what music label is George Olsen represented by?", "answer": "Victor Talking Machine Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Victor Talking Machine Company"], "entity_annotations": ["George Olsen"], "answer_entity_name": null, "predicted_answer": "Victor", "extracted_entity": "George_Olsen"}
{"question": "what music label is Mathematics represented by?", "answer": "Heavenly Recordings", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Heavenly Recordings"], "entity_annotations": ["Mathematics"], "answer_entity_name": null, "predicted_answer": "Mathematics is represented by Music label Mathematics.", "extracted_entity": "Mathematics"}
{"question": "what music label is Jimmy Somerville represented by?", "answer": "London Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London Records"], "entity_annotations": ["Jimmy Somerville"], "answer_entity_name": null, "predicted_answer": "2", "extracted_entity": "Jimmy_Somerville"}
{"question": "what music label is Muse represented by?", "answer": "Warner Music Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Music Group"], "entity_annotations": ["Muse"], "answer_entity_name": null, "predicted_answer": "Warner Bros. Records", "extracted_entity": "Muse"}
{"question": "what music label is Hank Crawford represented by?", "answer": "Milestone Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milestone Records", "Atlantic Records"], "entity_annotations": ["Hank Crawford"], "answer_entity_name": null, "predicted_answer": "Atlantic Records", "extracted_entity": "Hank_Crawford"}
{"question": "what music label is The Tenors represented by?", "answer": "Universal Music Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Universal Music Group"], "entity_annotations": ["The Tenors"], "answer_entity_name": null, "predicted_answer": "Universal Music Group", "extracted_entity": "The_Tenors"}
{"question": "what music label is Cyclotron represented by?", "answer": "Avant Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Avant Records"], "entity_annotations": ["Cyclotron"], "answer_entity_name": null, "predicted_answer": "Cyclotron is represented by DistroKid.", "extracted_entity": "Cyclotron"}
{"question": "what music label is Ricochet represented by?", "answer": "Columbia Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia Records"], "entity_annotations": ["Ricochet"], "answer_entity_name": null, "predicted_answer": "PolyGram Records", "extracted_entity": "Ricochet"}
{"question": "what music label is Favourite Worst Nightmare represented by?", "answer": "Domino Recording Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Domino Recording Company"], "entity_annotations": ["Favourite Worst Nightmare"], "answer_entity_name": null, "predicted_answer": "Domino Recording Company", "extracted_entity": "Favourite_Worst_Nightmare"}
{"question": "what music label is You Are Not Alone represented by?", "answer": "ANTI-", "dataset": "entity_questions", "split": "test", "answer_aliases": ["ANTI-"], "entity_annotations": ["You Are Not Alone"], "answer_entity_name": null, "predicted_answer": "Epic Records", "extracted_entity": "You_Are_Not_Alone"}
{"question": "what music label is Night of the Living Dead represented by?", "answer": "Plan 9 Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Plan 9 Records"], "entity_annotations": ["Night of the Living Dead"], "answer_entity_name": null, "predicted_answer": "1.", "extracted_entity": "Night_of_the_Living_Dead"}
{"question": "what music label is Courage represented by?", "answer": "Rock Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rock Records"], "entity_annotations": ["Courage"], "answer_entity_name": null, "predicted_answer": "Universal Music Group", "extracted_entity": "Courage"}
{"question": "what music label is The Standells represented by?", "answer": "Capitol Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Capitol Records"], "entity_annotations": ["The Standells"], "answer_entity_name": null, "predicted_answer": "Ed Cobb", "extracted_entity": "The_Standells"}
{"question": "what music label is Third Day represented by?", "answer": "Reunion Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reunion Records"], "entity_annotations": ["Third Day"], "answer_entity_name": null, "predicted_answer": "Essential Records", "extracted_entity": "Third_Day"}
{"question": "what music label is Love Unlimited represented by?", "answer": "Uni", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Uni", "MCA Records"], "entity_annotations": ["Love Unlimited"], "answer_entity_name": null, "predicted_answer": "Unlmited Gold Records", "extracted_entity": "Love_Unlimited"}
{"question": "what music label is Olly Murs represented by?", "answer": "Epic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Epic"], "entity_annotations": ["Olly Murs"], "answer_entity_name": null, "predicted_answer": "Sony Music", "extracted_entity": "Olly_Murs"}
{"question": "what music label is Parallel Lines represented by?", "answer": "Chrysalis Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chrysalis Records"], "entity_annotations": ["Parallel Lines"], "answer_entity_name": null, "predicted_answer": "Chrysalis Records", "extracted_entity": "Parallel_Lines"}
{"question": "what music label is Eyedea represented by?", "answer": "Rhymesayers Entertainment", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rhymesayers Entertainment"], "entity_annotations": ["Eyedea"], "answer_entity_name": null, "predicted_answer": "Rhymesayers Entertainment", "extracted_entity": "Eyedea"}
{"question": "what music label is Velocity Girl represented by?", "answer": "Sub Pop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sub Pop"], "entity_annotations": ["Velocity Girl"], "answer_entity_name": null, "predicted_answer": "Sub Pop", "extracted_entity": "Velocity_Girl"}
{"question": "what music label is The Holy Modal Rounders represented by?", "answer": "Elektra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elektra"], "entity_annotations": ["The Holy Modal Rounders"], "answer_entity_name": null, "predicted_answer": "Folkways Records.", "extracted_entity": "The_Holy_Modal_Rounders"}
{"question": "what music label is Steve Holy represented by?", "answer": "Curb Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Curb Records"], "entity_annotations": ["Steve Holy"], "answer_entity_name": null, "predicted_answer": "Curb Records", "extracted_entity": "Steve_Holy"}
{"question": "what music label is Welcome to My Nightmare represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["Welcome to My Nightmare"], "answer_entity_name": null, "predicted_answer": "Atlantic Records", "extracted_entity": "Welcome_to_My_Nightmare"}
{"question": "what music label is Warrior Soul represented by?", "answer": "Geffen Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Geffen Records"], "entity_annotations": ["Warrior Soul"], "answer_entity_name": null, "predicted_answer": "Geffen Records", "extracted_entity": "Warrior_Soul"}
{"question": "what music label is Ja Rule represented by?", "answer": "The Inc. Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Inc. Records"], "entity_annotations": ["Ja Rule"], "answer_entity_name": null, "predicted_answer": "Murder Inc. Records", "extracted_entity": "Ja_Rule"}
{"question": "what music label is 1969 represented by?", "answer": "Fake Four Inc.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fake Four Inc."], "entity_annotations": ["1969"], "answer_entity_name": null, "predicted_answer": "1969 is represented by the music label \"", "extracted_entity": "1969"}
{"question": "what music label is Once Upon a Time in the West represented by?", "answer": "Warner Music Group", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warner Music Group"], "entity_annotations": ["Once Upon a Time in the West"], "answer_entity_name": null, "predicted_answer": "The music label that represents Once Upon a Time in", "extracted_entity": "Once_Upon_a_Time_in_the_West"}
{"question": "what music label is Brothers Osborne represented by?", "answer": "Capitol Records Nashville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Capitol Records Nashville"], "entity_annotations": ["Brothers Osborne"], "answer_entity_name": null, "predicted_answer": "Brothers Osborne is represented by EMI Records Nashville.", "extracted_entity": "Brothers_Osborne"}
{"question": "what music label is Paul Kantner represented by?", "answer": "RCA Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["RCA Records"], "entity_annotations": ["Paul Kantner"], "answer_entity_name": null, "predicted_answer": "Grateful Dead Records", "extracted_entity": "Paul_Kantner"}
{"question": "what music label is Eisbrecher represented by?", "answer": "Dancing Ferret", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dancing Ferret", "ZYX Music"], "entity_annotations": ["Eisbrecher"], "answer_entity_name": null, "predicted_answer": "Metropolis Records", "extracted_entity": "Eisbrecher"}
{"question": "what music label is Linda Ronstadt represented by?", "answer": "Capitol Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Capitol Records", "Asylum Records"], "entity_annotations": ["Linda Ronstadt"], "answer_entity_name": null, "predicted_answer": "Warner Bros. Records", "extracted_entity": "Linda_Ronstadt"}
{"question": "what music label is Buffalo Springfield represented by?", "answer": "Atco Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atco Records"], "entity_annotations": ["Buffalo Springfield"], "answer_entity_name": null, "predicted_answer": "Atlantic Records", "extracted_entity": "Buffalo_Springfield"}
{"question": "what music label is Hunter Hayes represented by?", "answer": "Atlantic Records", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlantic Records"], "entity_annotations": ["Hunter Hayes"], "answer_entity_name": null, "predicted_answer": "Louisiana Red Hot Records", "extracted_entity": "Hunter_Hayes"}
{"question": "what music label is Boy represented by?", "answer": "Rhythm Zone", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rhythm Zone"], "entity_annotations": ["Boy"], "answer_entity_name": null, "predicted_answer": "Boy is represented by the label \"Warner Music", "extracted_entity": "Boy"}
{"question": "what music label is Richie Hawtin represented by?", "answer": "Plus 8", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Plus 8"], "entity_annotations": ["Richie Hawtin"], "answer_entity_name": null, "predicted_answer": "He is represented by Plus 8 label.", "extracted_entity": "Richie_Hawtin"}
{"question": "what music label is Mark Chesnutt represented by?", "answer": "Decca", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Decca"], "entity_annotations": ["Mark Chesnutt"], "answer_entity_name": null, "predicted_answer": "Mark Chesnutt is represented by Universal Music Group", "extracted_entity": "Mark_Chesnutt"}
{"question": "who founded Dominican Liberation Party?", "answer": "Juan Bosch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Juan Bosch"], "entity_annotations": ["Dominican Liberation Party"], "answer_entity_name": null, "predicted_answer": "Juan Bosch", "extracted_entity": "Dominican_Liberation_Party"}
{"question": "who founded Gemini Studios?", "answer": "S. S. Vasan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["S. S. Vasan"], "entity_annotations": ["Gemini Studios"], "answer_entity_name": null, "predicted_answer": "S. S. Vasan", "extracted_entity": "Gemini_Studios"}
{"question": "who founded Caroline Records?", "answer": "Richard Branson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Richard Branson"], "entity_annotations": ["Caroline Records"], "answer_entity_name": null, "predicted_answer": "Richard Branson", "extracted_entity": "Caroline_Records"}
{"question": "who founded We the Best Music Group?", "answer": "DJ Khaled", "dataset": "entity_questions", "split": "test", "answer_aliases": ["DJ Khaled"], "entity_annotations": ["We the Best Music Group"], "answer_entity_name": null, "predicted_answer": "DJ Khaled.", "extracted_entity": "We_the_Best_Music_Group"}
{"question": "who founded Harry Winston, Inc.?", "answer": "Harry Winston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harry Winston"], "entity_annotations": ["Harry Winston, Inc."], "answer_entity_name": null, "predicted_answer": "Harry H. Winston", "extracted_entity": "Harry_Winston,_Inc."}
{"question": "who founded The Princeton Review?", "answer": "John Katzman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Katzman"], "entity_annotations": ["The Princeton Review"], "answer_entity_name": null, "predicted_answer": "John Katzman", "extracted_entity": "The_Princeton_Review"}
{"question": "who founded Interval Research Corporation?", "answer": "Paul G. Allen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paul G. Allen"], "entity_annotations": ["Interval Research Corporation"], "answer_entity_name": null, "predicted_answer": "Paul Allen and David Liddle", "extracted_entity": "Interval_Research_Corporation"}
{"question": "who founded The Rocket Record Company?", "answer": "Elton John", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elton John", "Bernie Taupin", "Gus Dudgeon"], "entity_annotations": ["The Rocket Record Company"], "answer_entity_name": null, "predicted_answer": "Elton John", "extracted_entity": "The_Rocket_Record_Company"}
{"question": "who founded American University of Beirut?", "answer": "Daniel Bliss", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daniel Bliss"], "entity_annotations": ["American University of Beirut"], "answer_entity_name": null, "predicted_answer": "W. M. Thomson, Daniel Bliss", "extracted_entity": "American_University_of_Beirut"}
{"question": "who founded Parker Pen Company?", "answer": "George Safford Parker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Safford Parker"], "entity_annotations": ["Parker Pen Company"], "answer_entity_name": null, "predicted_answer": "George Safford Parker", "extracted_entity": "Parker_Pen_Company"}
{"question": "who founded Memphis Group?", "answer": "Ettore Sottsass", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ettore Sottsass"], "entity_annotations": ["Memphis Group"], "answer_entity_name": null, "predicted_answer": "Ettore Sottsass", "extracted_entity": "Memphis_Group"}
{"question": "who founded Discordianism?", "answer": "Malaclypse the Younger", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Malaclypse the Younger", "Kerry Wendell Thornley"], "entity_annotations": ["Discordianism"], "answer_entity_name": null, "predicted_answer": "Malaclypse the Younger (Greg", "extracted_entity": "Discordianism"}
{"question": "who founded Sahara India Pariwar?", "answer": "Subrata Roy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Subrata Roy"], "entity_annotations": ["Sahara India Pariwar"], "answer_entity_name": null, "predicted_answer": "Subrata Roy Sahara", "extracted_entity": "Sahara_India_Pariwar"}
{"question": "who founded Qadiriyya?", "answer": "Abdul Qadir Gilani", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Abdul Qadir Gilani"], "entity_annotations": ["Qadiriyya"], "answer_entity_name": null, "predicted_answer": "Abdul Qadir Gilani", "extracted_entity": "Qadiriyya"}
{"question": "who founded Square?", "answer": "Jim McKelvey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jim McKelvey", "Jack Dorsey"], "entity_annotations": ["Square"], "answer_entity_name": null, "predicted_answer": "Jack Dorsey, Jim McKelvey", "extracted_entity": "Square"}
{"question": "who founded Imperial House of Japan?", "answer": "Jimmu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jimmu"], "entity_annotations": ["Imperial House of Japan"], "answer_entity_name": null, "predicted_answer": "peror Jimmu", "extracted_entity": "Imperial_House_of_Japan"}
{"question": "who founded Rolling Stone?", "answer": "Jann Wenner", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jann Wenner"], "entity_annotations": ["Rolling Stone"], "answer_entity_name": null, "predicted_answer": "Jann Wenner and Ralph J. Gleason", "extracted_entity": "Rolling_Stone"}
{"question": "who founded Interview?", "answer": "Andy Warhol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Andy Warhol"], "entity_annotations": ["Interview"], "answer_entity_name": null, "predicted_answer": "Interview was founded by Interview.", "extracted_entity": "Interview"}
{"question": "who founded British Motor Corporation?", "answer": "Austin Motor Company", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Austin Motor Company"], "entity_annotations": ["British Motor Corporation"], "answer_entity_name": null, "predicted_answer": "Leonard Lord", "extracted_entity": "British_Motor_Corporation"}
{"question": "who founded George Washington University?", "answer": "Luther Rice", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Luther Rice"], "entity_annotations": ["George Washington University"], "answer_entity_name": null, "predicted_answer": "George Washington", "extracted_entity": "George_Washington_University"}
{"question": "who founded Draken International?", "answer": "Jared Isaacman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jared Isaacman"], "entity_annotations": ["Draken International"], "answer_entity_name": null, "predicted_answer": "Jared Isaacman", "extracted_entity": "Draken_International"}
{"question": "who founded WWE?", "answer": "Toots Mondt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toots Mondt", "Vince McMahon", "Jess McMahon"], "entity_annotations": ["WWE"], "answer_entity_name": null, "predicted_answer": "Vince McMahon", "extracted_entity": "WWE"}
{"question": "who founded MicroProse?", "answer": "Bill Stealey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bill Stealey"], "entity_annotations": ["MicroProse"], "answer_entity_name": null, "predicted_answer": "Bill Stealey, Sid Meier, and Andy", "extracted_entity": "MicroProse"}
{"question": "who founded Desilu Productions?", "answer": "Lucille Ball", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lucille Ball", "Desi Arnaz"], "entity_annotations": ["Desilu Productions"], "answer_entity_name": null, "predicted_answer": "Desi Arnaz and Lucille Ball", "extracted_entity": "Desilu_Productions"}
{"question": "who founded Pershing Square Capital Management?", "answer": "Bill Ackman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bill Ackman"], "entity_annotations": ["Pershing Square Capital Management"], "answer_entity_name": null, "predicted_answer": "Bill Ackman", "extracted_entity": "Pershing_Square_Capital_Management"}
{"question": "who founded Toys for Bob?", "answer": "Paul Reiche III", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paul Reiche III"], "entity_annotations": ["Toys for Bob"], "answer_entity_name": null, "predicted_answer": "Paul Reiche III and Fred Ford", "extracted_entity": "Toys_for_Bob"}
{"question": "who founded Damon Runyon Cancer Research Foundation?", "answer": "Walter Winchell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Walter Winchell"], "entity_annotations": ["Damon Runyon Cancer Research Foundation"], "answer_entity_name": null, "predicted_answer": "Walter Winchell", "extracted_entity": "Damon_Runyon_Cancer_Research_Foundation"}
{"question": "who founded Kawasaki Heavy Industries?", "answer": "Kawasaki Sh\u014dz\u014d", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kawasaki Sh\u014dz\u014d"], "entity_annotations": ["Kawasaki Heavy Industries"], "answer_entity_name": null, "predicted_answer": "Sh\u014dz\u014d Kawasaki", "extracted_entity": "Kawasaki_Heavy_Industries"}
{"question": "who founded Scientific Atlanta?", "answer": "Gerald Rosselot", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gerald Rosselot"], "entity_annotations": ["Scientific Atlanta"], "answer_entity_name": null, "predicted_answer": "a group of engineers from the Georgia Institute of Technology", "extracted_entity": "Scientific_Atlanta"}
{"question": "who founded Mandela Day?", "answer": "United Nations", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United Nations"], "entity_annotations": ["Mandela Day"], "answer_entity_name": null, "predicted_answer": "The day was officially declared by the United Nations in", "extracted_entity": "Mandela_Day"}
{"question": "who founded Creation Museum?", "answer": "Ken Ham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ken Ham"], "entity_annotations": ["Creation Museum"], "answer_entity_name": null, "predicted_answer": "Ken Ham", "extracted_entity": "Creation_Museum"}
{"question": "who founded Machine Shop Records?", "answer": "Mike Shinoda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mike Shinoda"], "entity_annotations": ["Machine Shop Records"], "answer_entity_name": null, "predicted_answer": "Machine Shop Records was founded by American rock band Link", "extracted_entity": "Machine_Shop_Records"}
{"question": "who founded Teach For America?", "answer": "Wendy Kopp", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wendy Kopp"], "entity_annotations": ["Teach For America"], "answer_entity_name": null, "predicted_answer": "Wendy Kopp", "extracted_entity": "Teach_For_America"}
{"question": "who founded Norwegian Cruise Line?", "answer": "Ted Arison", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ted Arison"], "entity_annotations": ["Norwegian Cruise Line"], "answer_entity_name": null, "predicted_answer": "orwegian Knut Kloster and Israeli Ted Arison", "extracted_entity": "Norwegian_Cruise_Line"}
{"question": "who founded Scripps Health?", "answer": "Ellen Browning Scripps", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ellen Browning Scripps"], "entity_annotations": ["Scripps Health"], "answer_entity_name": null, "predicted_answer": "Ellen Browning Scripps", "extracted_entity": "Scripps_Health"}
{"question": "who founded Raza Unida Party?", "answer": "Jos\u00e9 \u00c1ngel Guti\u00e9rrez", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jos\u00e9 \u00c1ngel Guti\u00e9rrez"], "entity_annotations": ["Raza Unida Party"], "answer_entity_name": null, "predicted_answer": "Raza Unida Party was founded by Jos\u00e9 Angel", "extracted_entity": "Raza_Unida_Party"}
{"question": "who founded Rolls-Royce?", "answer": "Henry Royce", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry Royce", "Charles Rolls"], "entity_annotations": ["Rolls-Royce"], "answer_entity_name": null, "predicted_answer": "Charles Rolls and Henry Royce", "extracted_entity": "Rolls-Royce"}
{"question": "who founded Hadassah Women's Zionist Organization of America?", "answer": "Henrietta Szold", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henrietta Szold"], "entity_annotations": ["Hadassah Women's Zionist Organization of America"], "answer_entity_name": null, "predicted_answer": "Henrietta Szold founded Hadassah Women's", "extracted_entity": "Hadassah_Women's_Zionist_Organization_of_America"}
{"question": "who founded Barnardo's?", "answer": "Thomas John Barnardo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas John Barnardo"], "entity_annotations": ["Barnardo's"], "answer_entity_name": null, "predicted_answer": "Thomas John Barnardo", "extracted_entity": "Barnardo's"}
{"question": "who founded Bouygues?", "answer": "Francis Bouygues", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Francis Bouygues"], "entity_annotations": ["Bouygues"], "answer_entity_name": null, "predicted_answer": "Francis Bouygues", "extracted_entity": "Bouygues"}
{"question": "who founded DeLorean Motor Company?", "answer": "John DeLorean", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John DeLorean"], "entity_annotations": ["DeLorean Motor Company"], "answer_entity_name": null, "predicted_answer": "John DeLorean", "extracted_entity": "DeLorean_Motor_Company"}
{"question": "who founded Marriott International?", "answer": "J. Willard Marriott", "dataset": "entity_questions", "split": "test", "answer_aliases": ["J. Willard Marriott"], "entity_annotations": ["Marriott International"], "answer_entity_name": null, "predicted_answer": "John Willard Marriott", "extracted_entity": "Marriott_International"}
{"question": "who founded Suburban Noize Records?", "answer": "Daddy X", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daddy X"], "entity_annotations": ["Suburban Noize Records"], "answer_entity_name": null, "predicted_answer": "The label was founded in 1997 by the", "extracted_entity": "Suburban_Noize_Records"}
{"question": "who founded Capetian House of Anjou?", "answer": "Charles I of Naples", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles I of Naples"], "entity_annotations": ["Capetian House of Anjou"], "answer_entity_name": null, "predicted_answer": "The Capetian House of Anjou,", "extracted_entity": "Capetian_House_of_Anjou"}
{"question": "who founded McCord Museum?", "answer": "David Ross McCord", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Ross McCord"], "entity_annotations": ["McCord Museum"], "answer_entity_name": null, "predicted_answer": "David Ross McCord", "extracted_entity": "McCord_Museum"}
{"question": "who founded Zipcar?", "answer": "Robin Chase", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Robin Chase"], "entity_annotations": ["Zipcar"], "answer_entity_name": null, "predicted_answer": "Antje Danielson and Robin Chase", "extracted_entity": "Zipcar"}
{"question": "who founded Fiat S.p.A.?", "answer": "Giovanni Agnelli", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Giovanni Agnelli"], "entity_annotations": ["Fiat S.p.A."], "answer_entity_name": null, "predicted_answer": "Giovanni Agnelli", "extracted_entity": "Fiat_S.p.A."}
{"question": "who founded Gnome Press?", "answer": "David Kyle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Kyle", "Martin Greenberg"], "entity_annotations": ["Gnome Press"], "answer_entity_name": null, "predicted_answer": "Martin Greenberg and David A. Kyle.", "extracted_entity": "Gnome_Press"}
{"question": "who founded Parents Television Council?", "answer": "L. Brent Bozell III", "dataset": "entity_questions", "split": "test", "answer_aliases": ["L. Brent Bozell III"], "entity_annotations": ["Parents Television Council"], "answer_entity_name": null, "predicted_answer": "L. Brent Bozell III", "extracted_entity": "Parents_Television_Council"}
{"question": "who founded British Racing Motors?", "answer": "Raymond Mays", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Raymond Mays"], "entity_annotations": ["British Racing Motors"], "answer_entity_name": null, "predicted_answer": "Raymond Mays, who had built several hillcl", "extracted_entity": "British_Racing_Motors"}
{"question": "who founded Jay Ward Productions?", "answer": "Jay Ward", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jay Ward"], "entity_annotations": ["Jay Ward Productions"], "answer_entity_name": null, "predicted_answer": "Jay Ward", "extracted_entity": "Jay_Ward_Productions"}
{"question": "who founded L'Association?", "answer": "Jean-Christophe Menu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jean-Christophe Menu"], "entity_annotations": ["L'Association"], "answer_entity_name": null, "predicted_answer": "Jean-Christophe Menu, Lewis Trondheim,", "extracted_entity": "L'Association"}
{"question": "who founded La Plata?", "answer": "Dardo Rocha", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dardo Rocha"], "entity_annotations": ["La Plata"], "answer_entity_name": null, "predicted_answer": "Dardo Rocha", "extracted_entity": "La_Plata"}
{"question": "who founded Turner Broadcasting System?", "answer": "Ted Turner", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ted Turner"], "entity_annotations": ["Turner Broadcasting System"], "answer_entity_name": null, "predicted_answer": "Ted Turner", "extracted_entity": "Turner_Broadcasting_System"}
{"question": "who founded S.L. Benfica?", "answer": "Cosme Dami\u00e3o", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cosme Dami\u00e3o"], "entity_annotations": ["S.L. Benfica"], "answer_entity_name": null, "predicted_answer": "S.L. Benfica was founded by Sport", "extracted_entity": "S.L._Benfica"}
{"question": "who founded Iliad?", "answer": "Xavier Niel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Xavier Niel"], "entity_annotations": ["Iliad"], "answer_entity_name": null, "predicted_answer": "Homer", "extracted_entity": "Iliad"}
{"question": "who founded Militant League for German Culture?", "answer": "Alfred Rosenberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alfred Rosenberg"], "entity_annotations": ["Militant League for German Culture"], "answer_entity_name": null, "predicted_answer": "Alfred Rosenberg", "extracted_entity": "Militant_League_for_German_Culture"}
{"question": "who founded Unilever?", "answer": "William Lever, 1st Viscount Leverhulme", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Lever, 1st Viscount Leverhulme"], "entity_annotations": ["Unilever"], "answer_entity_name": null, "predicted_answer": "William Lever", "extracted_entity": "Unilever"}
{"question": "who founded Bronze?", "answer": "Gerry Bron", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gerry Bron"], "entity_annotations": ["Bronze"], "answer_entity_name": null, "predicted_answer": "Middle French", "extracted_entity": "Bronze"}
{"question": "who founded Greater Romania Party?", "answer": "Corneliu Vadim Tudor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Corneliu Vadim Tudor"], "entity_annotations": ["Greater Romania Party"], "answer_entity_name": null, "predicted_answer": "Eugen Barbu and Corneliu Vadim", "extracted_entity": "Greater_Romania_Party"}
{"question": "who founded Al-Manar?", "answer": "Rida Muhammad Rashid", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rida Muhammad Rashid"], "entity_annotations": ["Al-Manar"], "answer_entity_name": null, "predicted_answer": "Hezbollah", "extracted_entity": "Al-Manar"}
{"question": "who founded Shuttleworth Foundation?", "answer": "Mark Shuttleworth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mark Shuttleworth"], "entity_annotations": ["Shuttleworth Foundation"], "answer_entity_name": null, "predicted_answer": "South African entrepreneur Mark Shuttleworth founded Shuttleworth Foundation", "extracted_entity": "Shuttleworth_Foundation"}
{"question": "who founded Sperry Corporation?", "answer": "Elmer Ambrose Sperry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elmer Ambrose Sperry"], "entity_annotations": ["Sperry Corporation"], "answer_entity_name": null, "predicted_answer": "Elmer Ambrose Sperry", "extracted_entity": "Sperry_Corporation"}
{"question": "who founded A Bathing Ape?", "answer": "Nigo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nigo"], "entity_annotations": ["A Bathing Ape"], "answer_entity_name": null, "predicted_answer": "Nigo", "extracted_entity": "A_Bathing_Ape"}
{"question": "who founded Lib\u00e9ration?", "answer": "Jean-Paul Sartre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jean-Paul Sartre"], "entity_annotations": ["Lib\u00e9ration"], "answer_entity_name": null, "predicted_answer": "ean-Paul Sartre, Philippe Gavi", "extracted_entity": "Lib\u00e9ration"}
{"question": "who founded Marks & Spencer?", "answer": "Thomas Spencer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Spencer", "Michael Marks"], "entity_annotations": ["Marks & Spencer"], "answer_entity_name": null, "predicted_answer": "Michael Marks and Thomas Spencer", "extracted_entity": "Marks_&_Spencer"}
{"question": "who founded Surtees?", "answer": "John Surtees", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Surtees"], "entity_annotations": ["Surtees"], "answer_entity_name": null, "predicted_answer": "John Surtees", "extracted_entity": "Surtees"}
{"question": "who founded Kalinga Prize?", "answer": "Biju Patnaik", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Biju Patnaik"], "entity_annotations": ["Kalinga Prize"], "answer_entity_name": null, "predicted_answer": "Biju Patnaik", "extracted_entity": "Kalinga_Prize"}
{"question": "who founded Peabody Institute?", "answer": "George Peabody", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Peabody"], "entity_annotations": ["Peabody Institute"], "answer_entity_name": null, "predicted_answer": "merchant and philanthropist George Peabody", "extracted_entity": "Peabody_Institute"}
{"question": "who founded Skokloster Castle?", "answer": "Carl Gustaf Wrangel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carl Gustaf Wrangel"], "entity_annotations": ["Skokloster Castle"], "answer_entity_name": null, "predicted_answer": "Carl Gustaf Wrangel", "extracted_entity": "Skokloster_Castle"}
{"question": "who founded Singer Corporation?", "answer": "Isaac Singer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Isaac Singer"], "entity_annotations": ["Singer Corporation"], "answer_entity_name": null, "predicted_answer": "Isaac M. Singer with New York lawyer Edward C", "extracted_entity": "Singer_Corporation"}
{"question": "who founded Bangsamoro Islamic Freedom Fighters?", "answer": "Ameril Umbra Kato", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ameril Umbra Kato"], "entity_annotations": ["Bangsamoro Islamic Freedom Fighters"], "answer_entity_name": null, "predicted_answer": "Ameril Umbra Kato", "extracted_entity": "Bangsamoro_Islamic_Freedom_Fighters"}
{"question": "who founded Pei Cobb Freed & Partners?", "answer": "Henry N. Cobb", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry N. Cobb", "I. M. Pei"], "entity_annotations": ["Pei Cobb Freed & Partners"], "answer_entity_name": null, "predicted_answer": "I. M. Pei, Eason H", "extracted_entity": "Pei_Cobb_Freed_&_Partners"}
{"question": "who founded Eric Carle Museum of Picture Book Art?", "answer": "Eric Carle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eric Carle"], "entity_annotations": ["Eric Carle Museum of Picture Book Art"], "answer_entity_name": null, "predicted_answer": "Eric and Barbara Carle", "extracted_entity": "Eric_Carle_Museum_of_Picture_Book_Art"}
{"question": "who founded Cult Awareness Network?", "answer": "Ted Patrick", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ted Patrick"], "entity_annotations": ["Cult Awareness Network"], "answer_entity_name": null, "predicted_answer": "Ted Patrick founded Cult Awareness Network.", "extracted_entity": "Cult_Awareness_Network"}
{"question": "who founded Mad Decent?", "answer": "Diplo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Diplo"], "entity_annotations": ["Mad Decent"], "answer_entity_name": null, "predicted_answer": "Diplo", "extracted_entity": "Mad_Decent"}
{"question": "who founded Stampede Wrestling?", "answer": "Stu Hart", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stu Hart"], "entity_annotations": ["Stampede Wrestling"], "answer_entity_name": null, "predicted_answer": "Stu Hart", "extracted_entity": "Stampede_Wrestling"}
{"question": "who founded Onex Corporation?", "answer": "Gerry Schwartz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gerry Schwartz"], "entity_annotations": ["Onex Corporation"], "answer_entity_name": null, "predicted_answer": "Gerry Schwartz", "extracted_entity": "Onex_Corporation"}
{"question": "who founded Westwood Studios?", "answer": "Louis Castle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Louis Castle", "Brett Sperry"], "entity_annotations": ["Westwood Studios"], "answer_entity_name": null, "predicted_answer": "Brett Sperry and Louis Castle", "extracted_entity": "Westwood_Studios"}
{"question": "who founded Shapoorji Pallonji Group?", "answer": "Pallonji Mistry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pallonji Mistry"], "entity_annotations": ["Shapoorji Pallonji Group"], "answer_entity_name": null, "predicted_answer": "Pallonji Mistry", "extracted_entity": "Shapoorji_Pallonji_Group"}
{"question": "who founded Operation Mobilisation?", "answer": "George Verwer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Verwer"], "entity_annotations": ["Operation Mobilisation"], "answer_entity_name": null, "predicted_answer": "George Verwer", "extracted_entity": "Operation_Mobilisation"}
{"question": "who founded Jet Airways?", "answer": "Naresh Goyal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Naresh Goyal"], "entity_annotations": ["Jet Airways"], "answer_entity_name": null, "predicted_answer": "Jet Airways was founded by Naresh Goyal.", "extracted_entity": "Jet_Airways"}
{"question": "who founded Mexicana Universal?", "answer": "Lupita Jones", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lupita Jones"], "entity_annotations": ["Mexicana Universal"], "answer_entity_name": null, "predicted_answer": "Lupita Jones", "extracted_entity": "Mexicana_Universal"}
{"question": "who founded Prison Reform Trust?", "answer": "Monty Finniston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Monty Finniston"], "entity_annotations": ["Prison Reform Trust"], "answer_entity_name": null, "predicted_answer": "A small group of prison reform campaigners who were unhappy", "extracted_entity": "Prison_Reform_Trust"}
{"question": "who founded Polisario Front?", "answer": "El-Ouali Mustapha Sayed", "dataset": "entity_questions", "split": "test", "answer_aliases": ["El-Ouali Mustapha Sayed"], "entity_annotations": ["Polisario Front"], "answer_entity_name": null, "predicted_answer": "Polisario Front was founded by the Movement for", "extracted_entity": "Polisario_Front"}
{"question": "who founded Republic Pictures?", "answer": "Herbert Yates", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Herbert Yates"], "entity_annotations": ["Republic Pictures"], "answer_entity_name": null, "predicted_answer": "Herbert J. Yates", "extracted_entity": "Republic_Pictures"}
{"question": "who founded Sir Joseph Williamson's Mathematical School?", "answer": "Joseph Williamson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joseph Williamson"], "entity_annotations": ["Sir Joseph Williamson's Mathematical School"], "answer_entity_name": null, "predicted_answer": "Sir Joseph Williamson", "extracted_entity": "Sir_Joseph_Williamson's_Mathematical_School"}
{"question": "who founded Bullfrog Productions?", "answer": "Peter Molyneux", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peter Molyneux"], "entity_annotations": ["Bullfrog Productions"], "answer_entity_name": null, "predicted_answer": "Peter Molyneux and Les Edgar", "extracted_entity": "Bullfrog_Productions"}
{"question": "who founded United States Department of Housing and Urban Development?", "answer": "Lyndon B. Johnson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lyndon B. Johnson"], "entity_annotations": ["United States Department of Housing and Urban Development"], "answer_entity_name": null, "predicted_answer": "Lyndon B. Johnson", "extracted_entity": "United_States_Department_of_Housing_and_Urban_Development"}
{"question": "who founded National Liberal Club?", "answer": "William Ewart Gladstone", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Ewart Gladstone"], "entity_annotations": ["National Liberal Club"], "answer_entity_name": null, "predicted_answer": "Arthur John Williams", "extracted_entity": "National_Liberal_Club"}
{"question": "who founded Wikipedia?", "answer": "Larry Sanger", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Larry Sanger", "Jimmy Wales"], "entity_annotations": ["Wikipedia"], "answer_entity_name": null, "predicted_answer": "Jimmy Wales and Larry Sanger", "extracted_entity": "Wikipedia"}
{"question": "who founded Victor Talking Machine Company?", "answer": "Eldridge R. Johnson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eldridge R. Johnson", "Emile Berliner"], "entity_annotations": ["Victor Talking Machine Company"], "answer_entity_name": null, "predicted_answer": "Eldridge R. Johnson", "extracted_entity": "Victor_Talking_Machine_Company"}
{"question": "who founded Barnes & Noble?", "answer": "Leonard Riggio", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leonard Riggio"], "entity_annotations": ["Barnes & Noble"], "answer_entity_name": null, "predicted_answer": "Gilbert Clifford Noble", "extracted_entity": "Barnes_&_Noble"}
{"question": "who founded Calvary Chapel?", "answer": "Chuck Smith", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chuck Smith"], "entity_annotations": ["Calvary Chapel"], "answer_entity_name": null, "predicted_answer": "Chuck Smith", "extracted_entity": "Calvary_Chapel"}
{"question": "who founded Fushimi Castle?", "answer": "Toyotomi Hideyoshi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toyotomi Hideyoshi"], "entity_annotations": ["Fushimi Castle"], "answer_entity_name": null, "predicted_answer": "oyotomi Hideyoshi", "extracted_entity": "Fushimi_Castle"}
{"question": "who founded The Jim Henson Company?", "answer": "Jane Henson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jane Henson", "Jim Henson"], "entity_annotations": ["The Jim Henson Company"], "answer_entity_name": null, "predicted_answer": "Jim and Jane Henson", "extracted_entity": "The_Jim_Henson_Company"}
{"question": "who founded HLW International?", "answer": "Cyrus L. W. Eidlitz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cyrus L. W. Eidlitz"], "entity_annotations": ["HLW International"], "answer_entity_name": null, "predicted_answer": "Cyrus L. W. Eidlitz", "extracted_entity": "HLW_International"}
{"question": "who founded Bad Robot Productions?", "answer": "J. J. Abrams", "dataset": "entity_questions", "split": "test", "answer_aliases": ["J. J. Abrams", "Bryan Burk"], "entity_annotations": ["Bad Robot Productions"], "answer_entity_name": null, "predicted_answer": "J.J. Abrams", "extracted_entity": "Bad_Robot_Productions"}
{"question": "who founded Minor Threat?", "answer": "Brian Baker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brian Baker", "Ian MacKaye", "Lyle Preslar"], "entity_annotations": ["Minor Threat"], "answer_entity_name": null, "predicted_answer": "Ian MacKaye and Jeff Nelson", "extracted_entity": "Minor_Threat"}
{"question": "who founded Bolivian Socialist Falange?", "answer": "\u00d3scar \u00danzaga", "dataset": "entity_questions", "split": "test", "answer_aliases": ["\u00d3scar \u00danzaga"], "entity_annotations": ["Bolivian Socialist Falange"], "answer_entity_name": null, "predicted_answer": "\u00d3scar \u00danzaga de la Vega", "extracted_entity": "Bolivian_Socialist_Falange"}
{"question": "who founded Palladium Books?", "answer": "Erick Wujcik", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Erick Wujcik", "Kevin Siembieda"], "entity_annotations": ["Palladium Books"], "answer_entity_name": null, "predicted_answer": "Kevin Siembieda founded Palladium Books.", "extracted_entity": "Palladium_Books"}
{"question": "who founded Union Solidarity and Development Party?", "answer": "Thein Sein", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thein Sein"], "entity_annotations": ["Union Solidarity and Development Party"], "answer_entity_name": null, "predicted_answer": "Thein Sein", "extracted_entity": "Union_Solidarity_and_Development_Party"}
{"question": "who founded Masco?", "answer": "Alex Manoogian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alex Manoogian"], "entity_annotations": ["Masco"], "answer_entity_name": null, "predicted_answer": "Alex Manoogian", "extracted_entity": "Masco"}
{"question": "who founded Cobrapost?", "answer": "Aniruddha Bahal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aniruddha Bahal"], "entity_annotations": ["Cobrapost"], "answer_entity_name": null, "predicted_answer": "Aniruddha Bahal", "extracted_entity": "Cobrapost"}
{"question": "who founded Royal Guelphic Order?", "answer": "George IV of the United Kingdom", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George IV of the United Kingdom"], "entity_annotations": ["Royal Guelphic Order"], "answer_entity_name": null, "predicted_answer": "Prince Regent", "extracted_entity": "Royal_Guelphic_Order"}
{"question": "who founded University of North Carolina at Chapel Hill?", "answer": "William Richardson Davie", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Richardson Davie"], "entity_annotations": ["University of North Carolina at Chapel Hill"], "answer_entity_name": null, "predicted_answer": "The University of North Carolina at Chapel Hill was founded", "extracted_entity": "University_of_North_Carolina_at_Chapel_Hill"}
{"question": "who founded Royal Society of Literature?", "answer": "George IV of the United Kingdom", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George IV of the United Kingdom"], "entity_annotations": ["Royal Society of Literature"], "answer_entity_name": null, "predicted_answer": "King George IV, to \"reward literary merit and", "extracted_entity": "Royal_Society_of_Literature"}
{"question": "who founded Toe Rag Studios?", "answer": "Liam Watson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Liam Watson"], "entity_annotations": ["Toe Rag Studios"], "answer_entity_name": null, "predicted_answer": "Liam Watson and Josh Collins", "extracted_entity": "Toe_Rag_Studios"}
{"question": "who founded Academia Brasileira de Letras?", "answer": "Joaquim Maria Machado de Assis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joaquim Maria Machado de Assis"], "entity_annotations": ["Academia Brasileira de Letras"], "answer_entity_name": null, "predicted_answer": "Machado de Assis", "extracted_entity": "Academia_Brasileira_de_Letras"}
{"question": "who founded Lotus Software?", "answer": "Mitch Kapor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mitch Kapor"], "entity_annotations": ["Lotus Software"], "answer_entity_name": null, "predicted_answer": "partners Mitch Kapor and Jonathan Sachs", "extracted_entity": "Lotus_Software"}
{"question": "who founded The Knickerbocker?", "answer": "Charles Fenno Hoffman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles Fenno Hoffman"], "entity_annotations": ["The Knickerbocker"], "answer_entity_name": null, "predicted_answer": "Charles Fenno Hoffman", "extracted_entity": "The_Knickerbocker"}
{"question": "who founded U.S. Steel?", "answer": "Andrew Carnegie", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Andrew Carnegie", "J. P. Morgan"], "entity_annotations": ["U.S. Steel"], "answer_entity_name": null, "predicted_answer": "Andrew Carnegie and J. P. Morgan", "extracted_entity": "U.S._Steel"}
{"question": "who founded ABKCO Records?", "answer": "Allen Klein", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Allen Klein"], "entity_annotations": ["ABKCO Records"], "answer_entity_name": null, "predicted_answer": "Allen Klein", "extracted_entity": "ABKCO_Records"}
{"question": "who founded WW International?", "answer": "Jean Nidetch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jean Nidetch"], "entity_annotations": ["WW International"], "answer_entity_name": null, "predicted_answer": "Jean Nidetch", "extracted_entity": "WW_International"}
{"question": "who founded Woolwich Dockyard?", "answer": "Henry VIII of England", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry VIII of England"], "entity_annotations": ["Woolwich Dockyard"], "answer_entity_name": null, "predicted_answer": "King Henry VIII", "extracted_entity": "Woolwich_Dockyard"}
{"question": "who founded The Hershey Company?", "answer": "Milton S. Hershey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milton S. Hershey"], "entity_annotations": ["The Hershey Company"], "answer_entity_name": null, "predicted_answer": "Milton S. Hershey", "extracted_entity": "The_Hershey_Company"}
{"question": "who founded Coursera?", "answer": "Andrew Y. Ng", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Andrew Y. Ng", "Daphne Koller"], "entity_annotations": ["Coursera"], "answer_entity_name": null, "predicted_answer": "Stanford University computer science professors Andrew Ng and Daph", "extracted_entity": "Coursera"}
{"question": "who founded CBS?", "answer": "William S. Paley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William S. Paley"], "entity_annotations": ["CBS"], "answer_entity_name": null, "predicted_answer": "Arthur Judson", "extracted_entity": "CBS"}
{"question": "who founded Flying Dutchman Records?", "answer": "Bob Thiele", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bob Thiele"], "entity_annotations": ["Flying Dutchman Records"], "answer_entity_name": null, "predicted_answer": "Bob Thiele", "extracted_entity": "Flying_Dutchman_Records"}
{"question": "who founded News Corp Australia?", "answer": "Keith Murdoch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Keith Murdoch"], "entity_annotations": ["News Corp Australia"], "answer_entity_name": null, "predicted_answer": "Rupert Murdoch", "extracted_entity": "News_Corp_Australia"}
{"question": "who founded House of Vasa?", "answer": "Gustav I of Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gustav I of Sweden"], "entity_annotations": ["House of Vasa"], "answer_entity_name": null, "predicted_answer": "Gustav Eriksson (Vasa)", "extracted_entity": "House_of_Vasa"}
{"question": "who founded Dangote Group?", "answer": "Aliko Dangote", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aliko Dangote"], "entity_annotations": ["Dangote Group"], "answer_entity_name": null, "predicted_answer": "Aliko Dangote", "extracted_entity": "Dangote_Group"}
{"question": "who founded Diamond Way Buddhism?", "answer": "Ole Nydahl", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ole Nydahl"], "entity_annotations": ["Diamond Way Buddhism"], "answer_entity_name": null, "predicted_answer": "Diamond Way Buddhism was founded by Hannah Nydahl", "extracted_entity": "Diamond_Way_Buddhism"}
{"question": "who founded Toyota?", "answer": "Kiichiro Toyoda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kiichiro Toyoda"], "entity_annotations": ["Toyota"], "answer_entity_name": null, "predicted_answer": "Sakichi Toyoda", "extracted_entity": "Toyota"}
{"question": "who founded NASCAR?", "answer": "Bill France", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bill France"], "entity_annotations": ["NASCAR"], "answer_entity_name": null, "predicted_answer": "Bill France Sr.", "extracted_entity": "NASCAR"}
{"question": "who founded Rashtriya Janata Dal?", "answer": "Lalu Prasad Yadav", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lalu Prasad Yadav"], "entity_annotations": ["Rashtriya Janata Dal"], "answer_entity_name": null, "predicted_answer": "Lalu Prasad Yadav. 1.", "extracted_entity": "Rashtriya_Janata_Dal"}
{"question": "who founded Luftschiffbau Zeppelin?", "answer": "Ferdinand von Zeppelin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ferdinand von Zeppelin"], "entity_annotations": ["Luftschiffbau Zeppelin"], "answer_entity_name": null, "predicted_answer": "Count Ferdinand von Zeppelin", "extracted_entity": "Luftschiffbau_Zeppelin"}
{"question": "who founded Moulin Rouge?", "answer": "Joseph Oller", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joseph Oller"], "entity_annotations": ["Moulin Rouge"], "answer_entity_name": null, "predicted_answer": "Charles Zidler and Joseph Oller", "extracted_entity": "Moulin_Rouge"}
{"question": "who founded Consumer Reports?", "answer": "Arthur Kallet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arthur Kallet"], "entity_annotations": ["Consumer Reports"], "answer_entity_name": null, "predicted_answer": "Consumers Union", "extracted_entity": "Consumer_Reports"}
{"question": "who founded European Space Agency?", "answer": "Spain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spain", "Sweden", "Denmark", "Netherlands", "Italy", "Germany", "Belgium", "Switzerland", "France"], "entity_annotations": ["European Space Agency"], "answer_entity_name": null, "predicted_answer": "The European Space Agency is an intergovernmental organisation", "extracted_entity": "European_Space_Agency"}
{"question": "who founded GEMS Education?", "answer": "Sunny Varkey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sunny Varkey"], "entity_annotations": ["GEMS Education"], "answer_entity_name": null, "predicted_answer": "Sunny Varkey", "extracted_entity": "GEMS_Education"}
{"question": "who founded Islami Jamhoori Ittehad?", "answer": "Ghulam Mustafa Jatoi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ghulam Mustafa Jatoi"], "entity_annotations": ["Islami Jamhoori Ittehad"], "answer_entity_name": null, "predicted_answer": "Nawaz Sharif", "extracted_entity": "Islami_Jamhoori_Ittehad"}
{"question": "who founded La Libre Parole?", "answer": "\u00c9douard Drumont", "dataset": "entity_questions", "split": "test", "answer_aliases": ["\u00c9douard Drumont"], "entity_annotations": ["La Libre Parole"], "answer_entity_name": null, "predicted_answer": "\u00c9douard Drumont", "extracted_entity": "La_Libre_Parole"}
{"question": "who founded PrivatBank?", "answer": "Igor Kolomoyskiy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Igor Kolomoyskiy"], "entity_annotations": ["PrivatBank"], "answer_entity_name": null, "predicted_answer": "PrivatBank was founded by Serhii Ti", "extracted_entity": "PrivatBank"}
{"question": "who founded Pattali Makkal Katchi?", "answer": "S. Ramadoss", "dataset": "entity_questions", "split": "test", "answer_aliases": ["S. Ramadoss"], "entity_annotations": ["Pattali Makkal Katchi"], "answer_entity_name": null, "predicted_answer": "S. Ramadoss", "extracted_entity": "Pattali_Makkal_Katchi"}
{"question": "who founded Barbizon school?", "answer": "Jean-Baptiste Camille Corot", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jean-Baptiste Camille Corot"], "entity_annotations": ["Barbizon school"], "answer_entity_name": null, "predicted_answer": "John Constable", "extracted_entity": "Barbizon_school"}
{"question": "who founded Jeet Kune Do?", "answer": "Bruce Lee", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bruce Lee"], "entity_annotations": ["Jeet Kune Do"], "answer_entity_name": null, "predicted_answer": "Bruce Lee", "extracted_entity": "Jeet_Kune_Do"}
{"question": "who founded Flybe?", "answer": "Jack Walker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jack Walker"], "entity_annotations": ["Flybe"], "answer_entity_name": null, "predicted_answer": "Jersey European Airways", "extracted_entity": "Flybe"}
{"question": "who founded Democratic Progressive Party?", "answer": "Bingu wa Mutharika", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bingu wa Mutharika"], "entity_annotations": ["Democratic Progressive Party"], "answer_entity_name": null, "predicted_answer": "Hsu Hsin-liang, Hsieh", "extracted_entity": "Democratic_Progressive_Party"}
{"question": "who founded Quora?", "answer": "Charlie Cheever", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charlie Cheever", "Adam D'Angelo"], "entity_annotations": ["Quora"], "answer_entity_name": null, "predicted_answer": "Adam D'Angelo and Charlie Cheever", "extracted_entity": "Quora"}
{"question": "who founded Pakistan Peoples Party?", "answer": "Zulfiqar Ali Bhutto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zulfiqar Ali Bhutto"], "entity_annotations": ["Pakistan Peoples Party"], "answer_entity_name": null, "predicted_answer": "Zulfikar Ali Bhutto", "extracted_entity": "Pakistan_Peoples_Party"}
{"question": "who founded John S. and James L. Knight Foundation?", "answer": "James L. Knight", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James L. Knight"], "entity_annotations": ["John S. and James L. Knight Foundation"], "answer_entity_name": null, "predicted_answer": "John S. and James L. Knight.", "extracted_entity": "John_S._and_James_L._Knight_Foundation"}
{"question": "who founded Disney Theatrical Productions?", "answer": "Ron Logan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ron Logan"], "entity_annotations": ["Disney Theatrical Productions"], "answer_entity_name": null, "predicted_answer": "Logan", "extracted_entity": "Disney_Theatrical_Productions"}
{"question": "who founded Pan Am Railways?", "answer": "Timothy Mellon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Timothy Mellon"], "entity_annotations": ["Pan Am Railways"], "answer_entity_name": null, "predicted_answer": "Timothy Mellon", "extracted_entity": "Pan_Am_Railways"}
{"question": "who founded Amway?", "answer": "Jay Van Andel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jay Van Andel", "Richard DeVos"], "entity_annotations": ["Amway"], "answer_entity_name": null, "predicted_answer": "Jay Van Andel and Richard DeVos", "extracted_entity": "Amway"}
{"question": "who founded Flagship?", "answer": "Yoshiki Okamoto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yoshiki Okamoto"], "entity_annotations": ["Flagship"], "answer_entity_name": null, "predicted_answer": "lagship was founded by", "extracted_entity": "Flagship"}
{"question": "who founded Volvo?", "answer": "SKF", "dataset": "entity_questions", "split": "test", "answer_aliases": ["SKF"], "entity_annotations": ["Volvo"], "answer_entity_name": null, "predicted_answer": "Assar Gabrielsson, an SKF sales manager,", "extracted_entity": "Volvo"}
{"question": "who founded Circus Circus Las Vegas?", "answer": "Jay Sarno", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jay Sarno"], "entity_annotations": ["Circus Circus Las Vegas"], "answer_entity_name": null, "predicted_answer": "Jay Sarno and Stanley Mallin.", "extracted_entity": "Circus_Circus_Las_Vegas"}
{"question": "who founded Cyprus Football Association?", "answer": "EPA Larnaca FC", "dataset": "entity_questions", "split": "test", "answer_aliases": ["EPA Larnaca FC", "Aris Limassol F.C.", "APOEL F.C.", "Olympiakos Nicosia FC", "AEL Limassol FC", "Enosis Neon Trust", "Anorthosis Famagusta FC"], "entity_annotations": ["Cyprus Football Association"], "answer_entity_name": null, "predicted_answer": "The Cyprus Football Association (CFA) was founded", "extracted_entity": "Cyprus_Football_Association"}
{"question": "who founded Royal Society for the Protection of Birds?", "answer": "Emily Williamson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Emily Williamson"], "entity_annotations": ["Royal Society for the Protection of Birds"], "answer_entity_name": null, "predicted_answer": "two groups of women", "extracted_entity": "Royal_Society_for_the_Protection_of_Birds"}
{"question": "who founded Estonian Reform Party?", "answer": "Siim Kallas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Siim Kallas"], "entity_annotations": ["Estonian Reform Party"], "answer_entity_name": null, "predicted_answer": "Siim Kallas founded Estonian Reform Party in", "extracted_entity": "Estonian_Reform_Party"}
{"question": "who founded Maximumrocknroll?", "answer": "Tim Yohannan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tim Yohannan"], "entity_annotations": ["Maximumrocknroll"], "answer_entity_name": null, "predicted_answer": "no answer", "extracted_entity": "Maximumrocknroll"}
{"question": "who founded Exit International?", "answer": "Philip Nitschke", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philip Nitschke"], "entity_annotations": ["Exit International"], "answer_entity_name": null, "predicted_answer": "Philip Nitschke", "extracted_entity": "Exit_International"}
{"question": "who founded HM Capital Partners?", "answer": "Tom Hicks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tom Hicks"], "entity_annotations": ["HM Capital Partners"], "answer_entity_name": null, "predicted_answer": "Tom Hicks and John Muse", "extracted_entity": "HM_Capital_Partners"}
{"question": "who founded Bank of Italy?", "answer": "Amadeo Giannini", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amadeo Giannini"], "entity_annotations": ["Bank of Italy"], "answer_entity_name": null, "predicted_answer": "The Bank of Italy was founded in 1893", "extracted_entity": "Bank_of_Italy"}
{"question": "who founded Bebe Stores?", "answer": "Manny Mashouf", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Manny Mashouf"], "entity_annotations": ["Bebe Stores"], "answer_entity_name": null, "predicted_answer": "Manny Mashouf", "extracted_entity": "Bebe_Stores"}
{"question": "who founded Gresham College?", "answer": "Thomas Gresham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Gresham"], "entity_annotations": ["Gresham College"], "answer_entity_name": null, "predicted_answer": "Sir Thomas Gresham", "extracted_entity": "Gresham_College"}
{"question": "who founded Disturbing tha Peace?", "answer": "Ludacris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ludacris"], "entity_annotations": ["Disturbing tha Peace"], "answer_entity_name": null, "predicted_answer": "Jeff Dixon, Chaka Zulu, and Lud", "extracted_entity": "Disturbing_tha_Peace"}
{"question": "who founded NAACP Legal Defense and Educational Fund?", "answer": "Thurgood Marshall", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thurgood Marshall"], "entity_annotations": ["NAACP Legal Defense and Educational Fund"], "answer_entity_name": null, "predicted_answer": "Thurgood Marshall founded NAACP Legal Defense and", "extracted_entity": "NAACP_Legal_Defense_and_Educational_Fund"}
{"question": "who founded Mingxing Film Company?", "answer": "Zhang Shichuan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zhang Shichuan"], "entity_annotations": ["Mingxing Film Company"], "answer_entity_name": null, "predicted_answer": "Zhang Shichuan, Zheng Zhengqiu,", "extracted_entity": "Mingxing_Film_Company"}
{"question": "who founded Coldstream Guards?", "answer": "George Monck, 1st Duke of Albemarle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Monck, 1st Duke of Albemarle"], "entity_annotations": ["Coldstream Guards"], "answer_entity_name": null, "predicted_answer": "Oliver Cromwell gave Colonel George Monck permission to", "extracted_entity": "Coldstream_Guards"}
{"question": "who founded University of Birmingham?", "answer": "Joseph Chamberlain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joseph Chamberlain"], "entity_annotations": ["University of Birmingham"], "answer_entity_name": null, "predicted_answer": "University of Birmingham was founded by William Sands Cox.", "extracted_entity": "University_of_Birmingham"}
{"question": "who founded University of Virginia?", "answer": "Thomas Jefferson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Jefferson"], "entity_annotations": ["University of Virginia"], "answer_entity_name": null, "predicted_answer": "Thomas Jefferson", "extracted_entity": "University_of_Virginia"}
{"question": "who founded Goodyear Tire and Rubber Company?", "answer": "Frank Seiberling", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frank Seiberling"], "entity_annotations": ["Goodyear Tire and Rubber Company"], "answer_entity_name": null, "predicted_answer": "Frank Seiberling", "extracted_entity": "Goodyear_Tire_and_Rubber_Company"}
{"question": "who founded Mensa International?", "answer": "Lancelot Ware", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lancelot Ware"], "entity_annotations": ["Mensa International"], "answer_entity_name": null, "predicted_answer": "Roland Berrill and Lancelot Ware", "extracted_entity": "Mensa_International"}
{"question": "who founded Royal Swedish Opera?", "answer": "Gustav III of Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gustav III of Sweden"], "entity_annotations": ["Royal Swedish Opera"], "answer_entity_name": null, "predicted_answer": "King Gustav III", "extracted_entity": "Royal_Swedish_Opera"}
{"question": "who founded Hyperdub?", "answer": "Kode9", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kode9"], "entity_annotations": ["Hyperdub"], "answer_entity_name": null, "predicted_answer": "Steve Goodman", "extracted_entity": "Hyperdub"}
{"question": "who founded Amazon?", "answer": "Jeff Bezos", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jeff Bezos"], "entity_annotations": ["Amazon"], "answer_entity_name": null, "predicted_answer": "Jeff Bezos", "extracted_entity": "Amazon"}
{"question": "who founded PIMCO?", "answer": "Bill H. Gross", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bill H. Gross"], "entity_annotations": ["PIMCO"], "answer_entity_name": null, "predicted_answer": "Pacific Life Insurance Co.", "extracted_entity": "PIMCO"}
{"question": "who founded E. Remington and Sons?", "answer": "Eliphalet Remington", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eliphalet Remington"], "entity_annotations": ["E. Remington and Sons"], "answer_entity_name": null, "predicted_answer": "Eliphalet Remington", "extracted_entity": "E._Remington_and_Sons"}
{"question": "who founded Ukrainian Helsinki Group?", "answer": "Mykola Rudenko", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mykola Rudenko"], "entity_annotations": ["Ukrainian Helsinki Group"], "answer_entity_name": null, "predicted_answer": "Ukrainian Helsinki Group was founded on November 9,", "extracted_entity": "Ukrainian_Helsinki_Group"}
{"question": "who founded Anti-Revolutionary Party?", "answer": "Abraham Kuyper", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Abraham Kuyper"], "entity_annotations": ["Anti-Revolutionary Party"], "answer_entity_name": null, "predicted_answer": "Abraham Kuyper, a neo-Calvinist", "extracted_entity": "Anti-Revolutionary_Party"}
{"question": "who founded Freer Gallery of Art?", "answer": "Charles Lang Freer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles Lang Freer"], "entity_annotations": ["Freer Gallery of Art"], "answer_entity_name": null, "predicted_answer": "Charles Lang Freer.", "extracted_entity": "Freer_Gallery_of_Art"}
{"question": "who founded Cassa Depositi e Prestiti?", "answer": "Italy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Italy"], "entity_annotations": ["Cassa Depositi e Prestiti"], "answer_entity_name": null, "predicted_answer": "The founders of Cassa Depositi e Prestit", "extracted_entity": "Cassa_Depositi_e_Prestiti"}
{"question": "who founded Revolution Software?", "answer": "Tony Warriner", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tony Warriner", "Charles Cecil"], "entity_annotations": ["Revolution Software"], "answer_entity_name": null, "predicted_answer": "Charles Cecil, Tony Warriner, David Sy", "extracted_entity": "Revolution_Software"}
{"question": "who founded PEN International?", "answer": "Catherine Amy Dawson Scott", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Catherine Amy Dawson Scott"], "entity_annotations": ["PEN International"], "answer_entity_name": null, "predicted_answer": "Catherine Amy Dawson Scott", "extracted_entity": "PEN_International"}
{"question": "who founded Indian Express Limited?", "answer": "Ramnath Goenka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ramnath Goenka"], "entity_annotations": ["Indian Express Limited"], "answer_entity_name": null, "predicted_answer": "Express Newspapers", "extracted_entity": "Indian_Express_Limited"}
{"question": "who founded F. W. Woolworth Company?", "answer": "Frank Winfield Woolworth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frank Winfield Woolworth"], "entity_annotations": ["F. W. Woolworth Company"], "answer_entity_name": null, "predicted_answer": "Frank Winfield Woolworth", "extracted_entity": "F._W._Woolworth_Company"}
{"question": "who founded CITIC Group?", "answer": "Rong Yiren", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rong Yiren"], "entity_annotations": ["CITIC Group"], "answer_entity_name": null, "predicted_answer": "Rong Yiren", "extracted_entity": "CITIC_Group"}
{"question": "who founded Rolex?", "answer": "Hans Wilsdorf", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hans Wilsdorf"], "entity_annotations": ["Rolex"], "answer_entity_name": null, "predicted_answer": "Hans Wilsdorf and Alfred Davis", "extracted_entity": "Rolex"}
{"question": "who founded Armada Music?", "answer": "Armin van Buuren", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Armin van Buuren"], "entity_annotations": ["Armada Music"], "answer_entity_name": null, "predicted_answer": "Armin van Buuren, Maykel Piron", "extracted_entity": "Armada_Music"}
{"question": "who founded Vatican Museums?", "answer": "Julius II", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Julius II"], "entity_annotations": ["Vatican Museums"], "answer_entity_name": null, "predicted_answer": "Pope Julius II", "extracted_entity": "Vatican_Museums"}
{"question": "who founded Perot Systems?", "answer": "Ross Perot", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ross Perot"], "entity_annotations": ["Perot Systems"], "answer_entity_name": null, "predicted_answer": "H. Ross Perot", "extracted_entity": "Perot_Systems"}
{"question": "who founded NPO Energomash?", "answer": "Valentin Glushko", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Valentin Glushko"], "entity_annotations": ["NPO Energomash"], "answer_entity_name": null, "predicted_answer": "alentin Glushko", "extracted_entity": "NPO_Energomash"}
{"question": "who founded U.S. Securities and Exchange Commission?", "answer": "Franklin Delano Roosevelt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Franklin Delano Roosevelt"], "entity_annotations": ["U.S. Securities and Exchange Commission"], "answer_entity_name": null, "predicted_answer": "The U.S. Securities and Exchange Commission was founded", "extracted_entity": "U.S._Securities_and_Exchange_Commission"}
{"question": "who founded Royal Victorian Order?", "answer": "Queen Victoria I", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Queen Victoria I"], "entity_annotations": ["Royal Victorian Order"], "answer_entity_name": null, "predicted_answer": "Queen Victoria", "extracted_entity": "Royal_Victorian_Order"}
{"question": "who founded C-SPAN?", "answer": "Brian Lamb", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brian Lamb"], "entity_annotations": ["C-SPAN"], "answer_entity_name": null, "predicted_answer": "Brian Lamb", "extracted_entity": "C-SPAN"}
{"question": "who founded GRP Records?", "answer": "Larry Rosen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Larry Rosen", "Dave Grusin"], "entity_annotations": ["GRP Records"], "answer_entity_name": null, "predicted_answer": "Dave Grusin and Larry Rosen", "extracted_entity": "GRP_Records"}
{"question": "who founded Warren Publishing?", "answer": "James Warren", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James Warren"], "entity_annotations": ["Warren Publishing"], "answer_entity_name": null, "predicted_answer": "James Warren", "extracted_entity": "Warren_Publishing"}
{"question": "who founded HB Studio?", "answer": "Herbert Berghof", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Herbert Berghof"], "entity_annotations": ["HB Studio"], "answer_entity_name": null, "predicted_answer": "Herbert Berghof", "extracted_entity": "HB_Studio"}
{"question": "who founded Pininfarina?", "answer": "Battista Farina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Battista Farina"], "entity_annotations": ["Pininfarina"], "answer_entity_name": null, "predicted_answer": "Battista \"Pinin\" Farina", "extracted_entity": "Pininfarina"}
{"question": "who founded Opel?", "answer": "Adam Opel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Adam Opel"], "entity_annotations": ["Opel"], "answer_entity_name": null, "predicted_answer": "Adam Opel", "extracted_entity": "Opel"}
{"question": "who founded \u00c9cole Polytechnique?", "answer": "Gaspard Monge", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gaspard Monge"], "entity_annotations": ["\u00c9cole Polytechnique"], "answer_entity_name": null, "predicted_answer": "Gaspard Monge", "extracted_entity": "\u00c9cole_Polytechnique"}
{"question": "who founded Propaganda Films?", "answer": "Steve Golin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Steve Golin"], "entity_annotations": ["Propaganda Films"], "answer_entity_name": null, "predicted_answer": "Steve Golin and Sigurj\u00f3n Sigh", "extracted_entity": "Propaganda_Films"}
{"question": "who founded Lola Cars?", "answer": "Eric Broadley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eric Broadley"], "entity_annotations": ["Lola Cars"], "answer_entity_name": null, "predicted_answer": "Eric Broadley", "extracted_entity": "Lola_Cars"}
{"question": "who founded Mosley Music Group?", "answer": "Timbaland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Timbaland"], "entity_annotations": ["Mosley Music Group"], "answer_entity_name": null, "predicted_answer": "Tim \"Timbaland\" Mosley.", "extracted_entity": "Mosley_Music_Group"}
{"question": "who founded Kurdistan Democratic Party?", "answer": "Mustafa Barzani", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mustafa Barzani"], "entity_annotations": ["Kurdistan Democratic Party"], "answer_entity_name": null, "predicted_answer": "Mustafa Barzani", "extracted_entity": "Kurdistan_Democratic_Party"}
{"question": "who founded Funny or Die?", "answer": "Chris Henchy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chris Henchy", "Adam McKay", "Will Ferrell"], "entity_annotations": ["Funny or Die"], "answer_entity_name": null, "predicted_answer": "Will Ferrell, Adam McKay, Mark Kvam", "extracted_entity": "Funny_or_Die"}
{"question": "who founded Noon?", "answer": "Diane Williams", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Diane Williams"], "entity_annotations": ["Noon"], "answer_entity_name": null, "predicted_answer": "Noon was founded in 2014 by", "extracted_entity": "Noon"}
{"question": "who founded Armenian General Benevolent Union?", "answer": "Boghos Nubar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Boghos Nubar"], "entity_annotations": ["Armenian General Benevolent Union"], "answer_entity_name": null, "predicted_answer": "rmenian General Benevolent Union was founded by Boghos", "extracted_entity": "Armenian_General_Benevolent_Union"}
{"question": "who founded University of Constantinople?", "answer": "Theodosius II", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Theodosius II"], "entity_annotations": ["University of Constantinople"], "answer_entity_name": null, "predicted_answer": "Theodosius II", "extracted_entity": "University_of_Constantinople"}
{"question": "who founded Freedom of the Press Foundation?", "answer": "Daniel Ellsberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daniel Ellsberg"], "entity_annotations": ["Freedom of the Press Foundation"], "answer_entity_name": null, "predicted_answer": "Freedom of the Press Foundation (FPF) is", "extracted_entity": "Freedom_of_the_Press_Foundation"}
{"question": "who founded British-India Steam Navigation Company?", "answer": "Sir Robert Mackenzie, 10th Baronet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sir Robert Mackenzie, 10th Baronet"], "entity_annotations": ["British-India Steam Navigation Company"], "answer_entity_name": null, "predicted_answer": "William Mackinnon and Robert Mackenzie", "extracted_entity": "British-India_Steam_Navigation_Company"}
{"question": "who founded Wand?", "answer": "Florence Greenberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florence Greenberg"], "entity_annotations": ["Wand"], "answer_entity_name": null, "predicted_answer": "A wand is a thin, light-weight rod that", "extracted_entity": "Wand"}
{"question": "who founded Mary Kay?", "answer": "Mary Kay Ash", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mary Kay Ash"], "entity_annotations": ["Mary Kay"], "answer_entity_name": null, "predicted_answer": "Mary Kay Ash", "extracted_entity": "Mary_Kay"}
{"question": "who founded General Magic?", "answer": "Bill Atkinson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bill Atkinson", "Marc Porat", "Andy Hertzfeld"], "entity_annotations": ["General Magic"], "answer_entity_name": null, "predicted_answer": "rc Porat, Andy Hertzfeld, and", "extracted_entity": "General_Magic"}
{"question": "who founded Google?", "answer": "Larry Page", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Larry Page", "Sergey Brin"], "entity_annotations": ["Google"], "answer_entity_name": null, "predicted_answer": "Larry Page and Sergey Brin", "extracted_entity": "Google"}
{"question": "who founded Strakka Racing?", "answer": "Nick Leventis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nick Leventis"], "entity_annotations": ["Strakka Racing"], "answer_entity_name": null, "predicted_answer": "Nick Leventis", "extracted_entity": "Strakka_Racing"}
{"question": "who founded Walt Disney Pictures?", "answer": "Walt Disney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Walt Disney"], "entity_annotations": ["Walt Disney Pictures"], "answer_entity_name": null, "predicted_answer": "the Disney Brothers Cartoon Studio", "extracted_entity": "Walt_Disney_Pictures"}
{"question": "who founded Broadcom?", "answer": "Henry Samueli", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry Samueli", "Henry Nicholas"], "entity_annotations": ["Broadcom"], "answer_entity_name": null, "predicted_answer": "Hewlett-Packard", "extracted_entity": "Broadcom"}
{"question": "who founded Ellen DeGeneres?", "answer": "eleveneleven", "dataset": "entity_questions", "split": "test", "answer_aliases": ["eleveneleven"], "entity_annotations": ["Ellen DeGeneres"], "answer_entity_name": null, "predicted_answer": "Ellen Lee DeGeneres ( ; born January", "extracted_entity": "Ellen_DeGeneres"}
{"question": "who founded Hewlett-Packard?", "answer": "William Redington Hewlett", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Redington Hewlett", "David Packard"], "entity_annotations": ["Hewlett-Packard"], "answer_entity_name": null, "predicted_answer": "Bill Hewlett and David Packard", "extracted_entity": "Hewlett-Packard"}
{"question": "who founded Bob Jones University?", "answer": "Bob Jones", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bob Jones"], "entity_annotations": ["Bob Jones University"], "answer_entity_name": null, "predicted_answer": "Bob Jones Sr.", "extracted_entity": "Bob_Jones_University"}
{"question": "who founded Soleil Productions?", "answer": "Mourad Boudjellal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mourad Boudjellal"], "entity_annotations": ["Soleil Productions"], "answer_entity_name": null, "predicted_answer": "Soleil Productions was founded in 1989 in", "extracted_entity": "Soleil_Productions"}
{"question": "who founded Yucaipa Companies?", "answer": "Ronald Burkle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ronald Burkle"], "entity_annotations": ["Yucaipa Companies"], "answer_entity_name": null, "predicted_answer": "Ronald Burkle", "extracted_entity": "Yucaipa_Companies"}
{"question": "who founded Saint Michael's Castle?", "answer": "Paul I of Russia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paul I of Russia"], "entity_annotations": ["Saint Michael's Castle"], "answer_entity_name": null, "predicted_answer": "Paul I", "extracted_entity": "Saint_Michael's_Castle"}
{"question": "who founded James Randi Educational Foundation?", "answer": "James Randi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James Randi"], "entity_annotations": ["James Randi Educational Foundation"], "answer_entity_name": null, "predicted_answer": "James Randi.", "extracted_entity": "James_Randi_Educational_Foundation"}
{"question": "who founded Jil Sander?", "answer": "Jil Sander", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jil Sander"], "entity_annotations": ["Jil Sander"], "answer_entity_name": null, "predicted_answer": "Heidemarie Jiline \"Jil\"", "extracted_entity": "Jil_Sander"}
{"question": "who founded David and Lucile Packard Foundation?", "answer": "David Packard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Packard"], "entity_annotations": ["David and Lucile Packard Foundation"], "answer_entity_name": null, "predicted_answer": "David Packard (co-founder of HP) and", "extracted_entity": "David_and_Lucile_Packard_Foundation"}
{"question": "who founded Doshisha University?", "answer": "Joseph Hardy Neesima", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joseph Hardy Neesima"], "entity_annotations": ["Doshisha University"], "answer_entity_name": null, "predicted_answer": "rotestant educator Niijima J\u014d (\u65b0\u5cf6", "extracted_entity": "Doshisha_University"}
{"question": "who founded Carnival Films?", "answer": "Brian Eastman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brian Eastman"], "entity_annotations": ["Carnival Films"], "answer_entity_name": null, "predicted_answer": "Brian Eastman", "extracted_entity": "Carnival_Films"}
{"question": "who founded Caesars Palace?", "answer": "Jay Sarno", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jay Sarno"], "entity_annotations": ["Caesars Palace"], "answer_entity_name": null, "predicted_answer": "Jay Sarno and Stanley Mallin", "extracted_entity": "Caesars_Palace"}
{"question": "who founded Roman Catholic Diocese of Gy\u0151r?", "answer": "Stephen I of Hungary", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stephen I of Hungary"], "entity_annotations": ["Roman Catholic Diocese of Gy\u0151r"], "answer_entity_name": null, "predicted_answer": "King Stephen I of Hungary", "extracted_entity": "Roman_Catholic_Diocese_of_Gy\u0151r"}
{"question": "who founded Edison Studios?", "answer": "Thomas Alva Edison", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Alva Edison"], "entity_annotations": ["Edison Studios"], "answer_entity_name": null, "predicted_answer": "Thomas Edison", "extracted_entity": "Edison_Studios"}
{"question": "who founded Entertainment Studios?", "answer": "Byron Allen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Byron Allen"], "entity_annotations": ["Entertainment Studios"], "answer_entity_name": null, "predicted_answer": "Byron Allen", "extracted_entity": "Entertainment_Studios"}
{"question": "who founded Kan'ei-ji?", "answer": "Tenkai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tenkai"], "entity_annotations": ["Kan'ei-ji"], "answer_entity_name": null, "predicted_answer": "Tokugawa Ieyasu", "extracted_entity": "Kan'ei-ji"}
{"question": "who founded Plan B Entertainment?", "answer": "Brad Grey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brad Grey", "Jennifer Aniston", "Brad Pitt"], "entity_annotations": ["Plan B Entertainment"], "answer_entity_name": null, "predicted_answer": "Brad Pitt, Brad Grey, Kristin Hahn", "extracted_entity": "Plan_B_Entertainment"}
{"question": "who founded Ian Fleming Publications?", "answer": "Ian Fleming", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ian Fleming"], "entity_annotations": ["Ian Fleming Publications"], "answer_entity_name": null, "predicted_answer": "Ian Fleming", "extracted_entity": "Ian_Fleming_Publications"}
{"question": "who founded Burberry?", "answer": "Thomas Burberry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Burberry"], "entity_annotations": ["Burberry"], "answer_entity_name": null, "predicted_answer": "Thomas Burberry", "extracted_entity": "Burberry"}
{"question": "who founded ArcelorMittal?", "answer": "Lakshmi Mittal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lakshmi Mittal"], "entity_annotations": ["ArcelorMittal"], "answer_entity_name": null, "predicted_answer": "Mittal Steel", "extracted_entity": "ArcelorMittal"}
{"question": "who founded Public Interest Research Group?", "answer": "Ralph Nader", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ralph Nader"], "entity_annotations": ["Public Interest Research Group"], "answer_entity_name": null, "predicted_answer": "Ralph Nader and Donald Ross", "extracted_entity": "Public_Interest_Research_Group"}
{"question": "who founded Church of Cyprus?", "answer": "Barnabas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barnabas"], "entity_annotations": ["Church of Cyprus"], "answer_entity_name": null, "predicted_answer": "Paul of Tarsus", "extracted_entity": "Church_of_Cyprus"}
{"question": "who founded JBL?", "answer": "James Bullough Lansing", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James Bullough Lansing"], "entity_annotations": ["JBL"], "answer_entity_name": null, "predicted_answer": "James Bullough Lansing", "extracted_entity": "JBL"}
{"question": "who founded Mintons?", "answer": "Thomas Minton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Minton"], "entity_annotations": ["Mintons"], "answer_entity_name": null, "predicted_answer": "Thomas Minton", "extracted_entity": "Mintons"}
{"question": "who founded World Wide Fund for Nature?", "answer": "Godfrey A. Rockefeller", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Godfrey A. Rockefeller", "Julian Huxley", "Peter Scott", "Edward Max Nicholson", "Prince Bernhard of the Netherlands"], "entity_annotations": ["World Wide Fund for Nature"], "answer_entity_name": null, "predicted_answer": "Victor Stolan", "extracted_entity": "World_Wide_Fund_for_Nature"}
{"question": "who founded Bausch & Lomb?", "answer": "John Jacob Bausch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Jacob Bausch", "Henry Lomb"], "entity_annotations": ["Bausch & Lomb"], "answer_entity_name": null, "predicted_answer": "John Bausch and Henry Lomb", "extracted_entity": "Bausch_&_Lomb"}
{"question": "who founded Future and Freedom?", "answer": "Gianfranco Fini", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gianfranco Fini"], "entity_annotations": ["Future and Freedom"], "answer_entity_name": null, "predicted_answer": "Gianfranco Fini", "extracted_entity": "Future_and_Freedom"}
{"question": "who founded American Society for Biochemistry and Molecular Biology?", "answer": "John Jacob Abel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Jacob Abel"], "entity_annotations": ["American Society for Biochemistry and Molecular Biology"], "answer_entity_name": null, "predicted_answer": "John Jacob Abel", "extracted_entity": "American_Society_for_Biochemistry_and_Molecular_Biology"}
{"question": "who founded Ave Maria University?", "answer": "Daniel Melihov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daniel Melihov"], "entity_annotations": ["Ave Maria University"], "answer_entity_name": null, "predicted_answer": "Ave Maria University was founded by Catholic philanthropist", "extracted_entity": "Ave_Maria_University"}
{"question": "who founded World AIDS Day?", "answer": "World Health Organization", "dataset": "entity_questions", "split": "test", "answer_aliases": ["World Health Organization"], "entity_annotations": ["World AIDS Day"], "answer_entity_name": null, "predicted_answer": "James W. Bunn and Thomas Netter", "extracted_entity": "World_AIDS_Day"}
{"question": "who founded Chesapeake Energy?", "answer": "Aubrey McClendon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aubrey McClendon", "Tom L. Ward"], "entity_annotations": ["Chesapeake Energy"], "answer_entity_name": null, "predicted_answer": "Aubrey McClendon and Tom L. Ward", "extracted_entity": "Chesapeake_Energy"}
{"question": "who founded Huntington Ingalls Industries?", "answer": "Collis Potter Huntington", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Collis Potter Huntington"], "entity_annotations": ["Huntington Ingalls Industries"], "answer_entity_name": null, "predicted_answer": "Collis Potter Huntington, who founded Newport News Ship", "extracted_entity": "Huntington_Ingalls_Industries"}
{"question": "who founded Grand Hustle Records?", "answer": "T.I.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["T.I."], "entity_annotations": ["Grand Hustle Records"], "answer_entity_name": null, "predicted_answer": "T.I. and his manager Jason Geter", "extracted_entity": "Grand_Hustle_Records"}
{"question": "who founded Amblimation?", "answer": "Steven Spielberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Steven Spielberg"], "entity_annotations": ["Amblimation"], "answer_entity_name": null, "predicted_answer": "Steven Spielberg", "extracted_entity": "Amblimation"}
{"question": "who founded Aftermath Entertainment?", "answer": "Dr. Dre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dr. Dre"], "entity_annotations": ["Aftermath Entertainment"], "answer_entity_name": null, "predicted_answer": "Dr. Dre", "extracted_entity": "Aftermath_Entertainment"}
{"question": "who founded University of Strathclyde?", "answer": "John Anderson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Anderson"], "entity_annotations": ["University of Strathclyde"], "answer_entity_name": null, "predicted_answer": "John Anderson, professor of Natural Philosophy at the University", "extracted_entity": "University_of_Strathclyde"}
{"question": "who founded Korea Hydro & Nuclear Power?", "answer": "Korea Electric Power Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Korea Electric Power Corporation"], "entity_annotations": ["Korea Hydro & Nuclear Power"], "answer_entity_name": null, "predicted_answer": "Korea Hydro & Nuclear Power was founded by Korea Electric", "extracted_entity": "Korea_Hydro_&_Nuclear_Power"}
{"question": "who founded Cambridge University Press?", "answer": "Henry VIII of England", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry VIII of England"], "entity_annotations": ["Cambridge University Press"], "answer_entity_name": null, "predicted_answer": "Henry VIII", "extracted_entity": "Cambridge_University_Press"}
{"question": "who founded AKOM?", "answer": "Nelson Shin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nelson Shin"], "entity_annotations": ["AKOM"], "answer_entity_name": null, "predicted_answer": "Nelson Shin", "extracted_entity": "AKOM"}
{"question": "who founded All India Bakchod?", "answer": "Gursimran Khamba", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gursimran Khamba"], "entity_annotations": ["All India Bakchod"], "answer_entity_name": null, "predicted_answer": "Tanmay Bhat and Gursimran Kh", "extracted_entity": "All_India_Bakchod"}
{"question": "who founded Novell?", "answer": "Dennis Fairclough", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dennis Fairclough"], "entity_annotations": ["Novell"], "answer_entity_name": null, "predicted_answer": "Novell was founded in 1980 by a", "extracted_entity": "Novell"}
{"question": "who founded Costco?", "answer": "Jeffrey Brotman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jeffrey Brotman"], "entity_annotations": ["Costco"], "answer_entity_name": null, "predicted_answer": "Sol Price and his son, Robert", "extracted_entity": "Costco"}
{"question": "who founded Lubin Manufacturing Company?", "answer": "Siegmund Lubin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Siegmund Lubin"], "entity_annotations": ["Lubin Manufacturing Company"], "answer_entity_name": null, "predicted_answer": "Siegmund Lubin", "extracted_entity": "Lubin_Manufacturing_Company"}
{"question": "who founded Democratic Forum for Labour and Liberties?", "answer": "Mustapha Ben Jafar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mustapha Ben Jafar"], "entity_annotations": ["Democratic Forum for Labour and Liberties"], "answer_entity_name": null, "predicted_answer": "emocratic Forum for Labour and Liberties was founded by", "extracted_entity": "Democratic_Forum_for_Labour_and_Liberties"}
{"question": "who founded Jimmy Choo Ltd?", "answer": "Jimmy Choo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jimmy Choo", "Tamara Mellon"], "entity_annotations": ["Jimmy Choo Ltd"], "answer_entity_name": null, "predicted_answer": "Jimmy Choo and Tamara Mellon", "extracted_entity": "Jimmy_Choo_Ltd"}
{"question": "who founded Gapminder Foundation?", "answer": "Hans Rosling", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hans Rosling"], "entity_annotations": ["Gapminder Foundation"], "answer_entity_name": null, "predicted_answer": "Ola Rosling, Anna Rosling R\u00f6", "extracted_entity": "Gapminder_Foundation"}
{"question": "who founded Open Library?", "answer": "Aaron Swartz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aaron Swartz"], "entity_annotations": ["Open Library"], "answer_entity_name": null, "predicted_answer": "Open Library was founded by Aaron Swartz, Brew", "extracted_entity": "Open_Library"}
{"question": "who founded BEC Recordings?", "answer": "Brandon Ebel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brandon Ebel"], "entity_annotations": ["BEC Recordings"], "answer_entity_name": null, "predicted_answer": "Brandon Ebel", "extracted_entity": "BEC_Recordings"}
{"question": "who founded Vaasa?", "answer": "Charles IX of Sweden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles IX of Sweden"], "entity_annotations": ["Vaasa"], "answer_entity_name": null, "predicted_answer": "Sweden", "extracted_entity": "Vaasa"}
{"question": "who founded Alfa Romeo?", "answer": "Nicola Romeo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nicola Romeo", "Alexandre Darracq"], "entity_annotations": ["Alfa Romeo"], "answer_entity_name": null, "predicted_answer": "Alfa Romeo was founded by Nicola Romeo in", "extracted_entity": "Alfa_Romeo"}
{"question": "who founded Museo Soumaya?", "answer": "Carlos Slim", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carlos Slim"], "entity_annotations": ["Museo Soumaya"], "answer_entity_name": null, "predicted_answer": "Carlos Slim", "extracted_entity": "Museo_Soumaya"}
{"question": "who founded Shanghai Jiao Tong University?", "answer": "Sheng Xuanhuai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sheng Xuanhuai"], "entity_annotations": ["Shanghai Jiao Tong University"], "answer_entity_name": null, "predicted_answer": "Sheng Xuanhuai", "extracted_entity": "Shanghai_Jiao_Tong_University"}
{"question": "who founded Chobani?", "answer": "Hamdi Ulukaya", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hamdi Ulukaya"], "entity_annotations": ["Chobani"], "answer_entity_name": null, "predicted_answer": "Hamdi Ulukaya", "extracted_entity": "Chobani"}
{"question": "who founded Ilmor?", "answer": "Mario Illien", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mario Illien"], "entity_annotations": ["Ilmor"], "answer_entity_name": null, "predicted_answer": "Mario Illien and Paul Morgan", "extracted_entity": "Ilmor"}
{"question": "who founded Family Research Council?", "answer": "James Dobson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James Dobson"], "entity_annotations": ["Family Research Council"], "answer_entity_name": null, "predicted_answer": "James Dobson, Armand Nicholi Jr.,", "extracted_entity": "Family_Research_Council"}
{"question": "who founded Society of Jesus?", "answer": "Ignatius of Loyola", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ignatius of Loyola"], "entity_annotations": ["Society of Jesus"], "answer_entity_name": null, "predicted_answer": "Ignatius of Loyola founded Society of Jesus", "extracted_entity": "Society_of_Jesus"}
{"question": "who founded Platonic Academy?", "answer": "Plato", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Plato"], "entity_annotations": ["Platonic Academy"], "answer_entity_name": null, "predicted_answer": "Plato", "extracted_entity": "Platonic_Academy"}
{"question": "who founded John Lewis Partnership?", "answer": "John Spedan Lewis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Spedan Lewis"], "entity_annotations": ["John Lewis Partnership"], "answer_entity_name": null, "predicted_answer": "John Lewis founded John Lewis Partnership", "extracted_entity": "John_Lewis_Partnership"}
{"question": "who founded Chunsoft?", "answer": "Koichi Nakamura", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Koichi Nakamura"], "entity_annotations": ["Chunsoft"], "answer_entity_name": null, "predicted_answer": "Koichi Nakamura", "extracted_entity": "Chunsoft"}
{"question": "who founded Moscow Helsinki Group?", "answer": "Yuri Orlov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yuri Orlov"], "entity_annotations": ["Moscow Helsinki Group"], "answer_entity_name": null, "predicted_answer": "Yelena Bonner, Yuri Orlov and", "extracted_entity": "Moscow_Helsinki_Group"}
{"question": "who founded Buddhist Society?", "answer": "Christmas Humphreys", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Christmas Humphreys"], "entity_annotations": ["Buddhist Society"], "answer_entity_name": null, "predicted_answer": "The Buddhist Society was founded by Christmas Humphreys", "extracted_entity": "Buddhist_Society"}
{"question": "who founded Hornby Railways?", "answer": "Frank Hornby", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frank Hornby"], "entity_annotations": ["Hornby Railways"], "answer_entity_name": null, "predicted_answer": "Frank Hornby", "extracted_entity": "Hornby_Railways"}
{"question": "who founded Entertainment One?", "answer": "Darren Throop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Darren Throop"], "entity_annotations": ["Entertainment One"], "answer_entity_name": null, "predicted_answer": "Records on Wheels Limited", "extracted_entity": "Entertainment_One"}
{"question": "who founded Pinterest?", "answer": "Ben Silbermann", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ben Silbermann"], "entity_annotations": ["Pinterest"], "answer_entity_name": null, "predicted_answer": "Ben Silbermann, Paul Sciarra,", "extracted_entity": "Pinterest"}
{"question": "who founded Order of Charles III?", "answer": "Charles III of Spain", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles III of Spain"], "entity_annotations": ["Order of Charles III"], "answer_entity_name": null, "predicted_answer": "Charles III", "extracted_entity": "Order_of_Charles_III"}
{"question": "who founded Catholic Worker?", "answer": "Dorothy Day", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dorothy Day", "Peter Maurin"], "entity_annotations": ["Catholic Worker"], "answer_entity_name": null, "predicted_answer": "Dorothy Day and Peter Maurin", "extracted_entity": "Catholic_Worker"}
{"question": "who founded OMF International?", "answer": "Hudson Taylor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hudson Taylor"], "entity_annotations": ["OMF International"], "answer_entity_name": null, "predicted_answer": "Hudson Taylor founded OMF International.", "extracted_entity": "OMF_International"}
{"question": "who founded Steve Jackson Games?", "answer": "Steve Jackson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Steve Jackson"], "entity_annotations": ["Steve Jackson Games"], "answer_entity_name": null, "predicted_answer": "Steve Jackson", "extracted_entity": "Steve_Jackson_Games"}
{"question": "who founded United States Military Academy?", "answer": "George Washington", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Washington"], "entity_annotations": ["United States Military Academy"], "answer_entity_name": null, "predicted_answer": "United States Military Academy was founded by Thomas Jefferson", "extracted_entity": "United_States_Military_Academy"}
{"question": "who founded The Bodley Head?", "answer": "Charles Elkin Mathews", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles Elkin Mathews"], "entity_annotations": ["The Bodley Head"], "answer_entity_name": null, "predicted_answer": "John Lane and Elkin Mathews", "extracted_entity": "The_Bodley_Head"}
{"question": "who founded Social Democratic and Labour Party?", "answer": "Gerry Fitt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gerry Fitt"], "entity_annotations": ["Social Democratic and Labour Party"], "answer_entity_name": null, "predicted_answer": "John Hume", "extracted_entity": "Social_Democratic_and_Labour_Party"}
{"question": "who founded Epic/Sony Records?", "answer": "Shigeo Maruyama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shigeo Maruyama"], "entity_annotations": ["Epic/Sony Records"], "answer_entity_name": null, "predicted_answer": "Epic Records was founded in 1953 by Columbia", "extracted_entity": "Epic/Sony_Records"}
{"question": "who founded Benaki Museum?", "answer": "Antonis Benakis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Antonis Benakis"], "entity_annotations": ["Benaki Museum"], "answer_entity_name": null, "predicted_answer": "Antonis Benakis", "extracted_entity": "Benaki_Museum"}
{"question": "who founded Institute for Science and International Security?", "answer": "David Albright", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Albright"], "entity_annotations": ["Institute for Science and International Security"], "answer_entity_name": null, "predicted_answer": "David Albright", "extracted_entity": "Institute_for_Science_and_International_Security"}
{"question": "who founded Blender Foundation?", "answer": "Ton Roosendaal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ton Roosendaal"], "entity_annotations": ["Blender Foundation"], "answer_entity_name": null, "predicted_answer": "Ton Roosendaal founded Blender Foundation.", "extracted_entity": "Blender_Foundation"}
{"question": "who founded Adani Group?", "answer": "Gautam Adani", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gautam Adani"], "entity_annotations": ["Adani Group"], "answer_entity_name": null, "predicted_answer": "Gautam Adani", "extracted_entity": "Adani_Group"}
{"question": "who founded Wellcome Trust?", "answer": "Henry Wellcome", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry Wellcome"], "entity_annotations": ["Wellcome Trust"], "answer_entity_name": null, "predicted_answer": "Henry Wellcome", "extracted_entity": "Wellcome_Trust"}
{"question": "who founded Peavey Electronics?", "answer": "Hartley Peavey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hartley Peavey"], "entity_annotations": ["Peavey Electronics"], "answer_entity_name": null, "predicted_answer": "Hartley Peavey", "extracted_entity": "Peavey_Electronics"}
{"question": "who founded Abstraction-Cr\u00e9ation?", "answer": "Georges Vantongerloo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Georges Vantongerloo", "Theo van Doesburg", "Auguste Herbin"], "entity_annotations": ["Abstraction-Cr\u00e9ation"], "answer_entity_name": null, "predicted_answer": "Theo van Doesburg, Auguste Herbin,", "extracted_entity": "Abstraction-Cr\u00e9ation"}
{"question": "who founded HBGary?", "answer": "Greg Hoglund", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Greg Hoglund"], "entity_annotations": ["HBGary"], "answer_entity_name": null, "predicted_answer": "Greg Hoglund", "extracted_entity": "HBGary"}
{"question": "who founded XCOR Aerospace?", "answer": "Jeff Greason", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jeff Greason"], "entity_annotations": ["XCOR Aerospace"], "answer_entity_name": null, "predicted_answer": "Jeff Greason, Dan DeLong, Aleta", "extracted_entity": "XCOR_Aerospace"}
{"question": "who founded Aerial Experiment Association?", "answer": "Glenn Curtiss", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Glenn Curtiss", "Alexander Graham Bell"], "entity_annotations": ["Aerial Experiment Association"], "answer_entity_name": null, "predicted_answer": "Alexander Graham Bell", "extracted_entity": "Aerial_Experiment_Association"}
{"question": "who founded Landmark Theatres?", "answer": "Kim Jorgensen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kim Jorgensen"], "entity_annotations": ["Landmark Theatres"], "answer_entity_name": null, "predicted_answer": "Kim Jorgensen", "extracted_entity": "Landmark_Theatres"}
{"question": "who founded Giant Tiger?", "answer": "Gordon Reid", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gordon Reid"], "entity_annotations": ["Giant Tiger"], "answer_entity_name": null, "predicted_answer": "Gordon Reid", "extracted_entity": "Giant_Tiger"}
{"question": "who founded The American Conservative?", "answer": "Scott McConnell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Scott McConnell"], "entity_annotations": ["The American Conservative"], "answer_entity_name": null, "predicted_answer": "The American Conservative was founded by Pat Buchanan, Scott", "extracted_entity": "The_American_Conservative"}
{"question": "who founded Dim Mak Records?", "answer": "Steve Aoki", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Steve Aoki"], "entity_annotations": ["Dim Mak Records"], "answer_entity_name": null, "predicted_answer": "Steve Aoki", "extracted_entity": "Dim_Mak_Records"}
{"question": "who was The Protectors created by?", "answer": "Gerry Anderson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gerry Anderson"], "entity_annotations": ["The Protectors"], "answer_entity_name": null, "predicted_answer": "Gerry Anderson.", "extracted_entity": "The_Protectors"}
{"question": "who was Huey, Dewey, and Louie created by?", "answer": "Al Taliaferro", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Al Taliaferro"], "entity_annotations": ["Huey, Dewey, and Louie"], "answer_entity_name": null, "predicted_answer": "Carl Barks", "extracted_entity": "Huey,_Dewey,_and_Louie"}
{"question": "who was The Huckleberry Hound Show created by?", "answer": "William Hanna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Hanna", "Joseph Barbera"], "entity_annotations": ["The Huckleberry Hound Show"], "answer_entity_name": null, "predicted_answer": "Hanna-Barbera Productions.", "extracted_entity": "The_Huckleberry_Hound_Show"}
{"question": "who was This American Life created by?", "answer": "Ira Glass", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ira Glass"], "entity_annotations": ["This American Life"], "answer_entity_name": null, "predicted_answer": "Ira Glass", "extracted_entity": "This_American_Life"}
{"question": "who was La Femme Nikita created by?", "answer": "Joel Surnow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joel Surnow"], "entity_annotations": ["La Femme Nikita"], "answer_entity_name": null, "predicted_answer": "Luc Besson", "extracted_entity": "La_Femme_Nikita"}
{"question": "who was Hacker News created by?", "answer": "Paul Graham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paul Graham"], "entity_annotations": ["Hacker News"], "answer_entity_name": null, "predicted_answer": "Paul Graham", "extracted_entity": "Hacker_News"}
{"question": "who was Dormouse created by?", "answer": "Lewis Carroll", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lewis Carroll"], "entity_annotations": ["Dormouse"], "answer_entity_name": null, "predicted_answer": "wis Carroll", "extracted_entity": "Dormouse"}
{"question": "who was City Hunter created by?", "answer": "Tsukasa H\u014dj\u014d", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tsukasa H\u014dj\u014d"], "entity_annotations": ["City Hunter"], "answer_entity_name": null, "predicted_answer": "Tsukasa Hojo", "extracted_entity": "City_Hunter"}
{"question": "who was Poirot's Early Cases created by?", "answer": "Agatha Christie", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Agatha Christie"], "entity_annotations": ["Poirot's Early Cases"], "answer_entity_name": null, "predicted_answer": "Agatha Christie", "extracted_entity": "Poirot's_Early_Cases"}
{"question": "who was Felix Leiter created by?", "answer": "Ian Fleming", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ian Fleming"], "entity_annotations": ["Felix Leiter"], "answer_entity_name": null, "predicted_answer": "Ian Fleming.", "extracted_entity": "Felix_Leiter"}
{"question": "who was Living Single created by?", "answer": "Yvette Lee Bowser", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yvette Lee Bowser"], "entity_annotations": ["Living Single"], "answer_entity_name": null, "predicted_answer": "Yvette Lee Bowser", "extracted_entity": "Living_Single"}
{"question": "who was Witchblade created by?", "answer": "Ralph Hemecker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ralph Hemecker"], "entity_annotations": ["Witchblade"], "answer_entity_name": null, "predicted_answer": "The Witchblade was created by Top Cow Productions,", "extracted_entity": "Witchblade"}
{"question": "who was Parade's End created by?", "answer": "Tom Stoppard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tom Stoppard"], "entity_annotations": ["Parade's End"], "answer_entity_name": null, "predicted_answer": "Ford Madox Ford", "extracted_entity": "Parade's_End"}
{"question": "who was Ruby created by?", "answer": "Henry Scott Tuke", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Henry Scott Tuke"], "entity_annotations": ["Ruby"], "answer_entity_name": null, "predicted_answer": "Ruby was created by Yukihiro Matsumoto", "extracted_entity": "Ruby"}
{"question": "who was The Amazing Race created by?", "answer": "Elise Doganieri", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Elise Doganieri"], "entity_annotations": ["The Amazing Race"], "answer_entity_name": null, "predicted_answer": "Elise Doganieri and Bertram van Mun", "extracted_entity": "The_Amazing_Race"}
{"question": "who was Albert Gallatin created by?", "answer": "James Earle Fraser", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James Earle Fraser"], "entity_annotations": ["Albert Gallatin"], "answer_entity_name": null, "predicted_answer": "Genevan\u2013American politician, diplomat, ethnologist", "extracted_entity": "Albert_Gallatin"}
{"question": "who was George and Mildred created by?", "answer": "Brian Cooke", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brian Cooke"], "entity_annotations": ["George and Mildred"], "answer_entity_name": null, "predicted_answer": "Brian Cooke and Johnnie Mortimer.", "extracted_entity": "George_and_Mildred"}
{"question": "who was Le Cirque created by?", "answer": "Georges Seurat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Georges Seurat"], "entity_annotations": ["Le Cirque"], "answer_entity_name": null, "predicted_answer": "Italian Sirio Maccioni", "extracted_entity": "Le_Cirque"}
{"question": "who was Vietnam Veterans Memorial created by?", "answer": "Maya Lin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Maya Lin"], "entity_annotations": ["Vietnam Veterans Memorial"], "answer_entity_name": null, "predicted_answer": "Maya Lin.", "extracted_entity": "Vietnam_Veterans_Memorial"}
{"question": "who was Cupid created by?", "answer": "Michelangelo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michelangelo"], "entity_annotations": ["Cupid"], "answer_entity_name": null, "predicted_answer": "Venus", "extracted_entity": "Cupid"}
{"question": "who was 1992 created by?", "answer": "Stefano Accorsi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stefano Accorsi"], "entity_annotations": ["1992"], "answer_entity_name": null, "predicted_answer": "the United Nations", "extracted_entity": "1992"}
{"question": "who was Road Rules created by?", "answer": "Mary-Ellis Bunim", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mary-Ellis Bunim"], "entity_annotations": ["Road Rules"], "answer_entity_name": null, "predicted_answer": "Jonathan Murray and Mary-Ellis Bunim", "extracted_entity": "Road_Rules"}
{"question": "who was Jeeves created by?", "answer": "P. G. Wodehouse", "dataset": "entity_questions", "split": "test", "answer_aliases": ["P. G. Wodehouse"], "entity_annotations": ["Jeeves"], "answer_entity_name": null, "predicted_answer": "Jeeves was created by P. G.", "extracted_entity": "Jeeves"}
{"question": "who was Daria created by?", "answer": "Glenn Eichler", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Glenn Eichler"], "entity_annotations": ["Daria"], "answer_entity_name": null, "predicted_answer": "Glenn Eichler and Susie Lewis Lynn", "extracted_entity": "Daria"}
{"question": "who was Ultimate Force created by?", "answer": "Rob Heyland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rob Heyland"], "entity_annotations": ["Ultimate Force"], "answer_entity_name": null, "predicted_answer": "Chris Ryan", "extracted_entity": "Ultimate_Force"}
{"question": "who was Cold Feet created by?", "answer": "Mike Bullen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mike Bullen"], "entity_annotations": ["Cold Feet"], "answer_entity_name": null, "predicted_answer": "Mike Bullen", "extracted_entity": "Cold_Feet"}
{"question": "who was Laura Palmer created by?", "answer": "Mark Frost", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mark Frost"], "entity_annotations": ["Laura Palmer"], "answer_entity_name": null, "predicted_answer": "David Lynch and Mark Frost", "extracted_entity": "Laura_Palmer"}
{"question": "who was Big Love created by?", "answer": "Mark V. Olsen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mark V. Olsen"], "entity_annotations": ["Big Love"], "answer_entity_name": null, "predicted_answer": "Mark V. Olsen and Will Scheffer", "extracted_entity": "Big_Love"}
{"question": "who was El Hormiguero created by?", "answer": "Pablo Motos", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pablo Motos"], "entity_annotations": ["El Hormiguero"], "answer_entity_name": null, "predicted_answer": "Pablo Motos", "extracted_entity": "El_Hormiguero"}
{"question": "who was Cold Case created by?", "answer": "Meredith Stiehm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Meredith Stiehm"], "entity_annotations": ["Cold Case"], "answer_entity_name": null, "predicted_answer": "The show was created by Meredith Stiehm.", "extracted_entity": "Cold_Case"}
{"question": "who was Headbutt created by?", "answer": "Adel Abdessemed", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Adel Abdessemed"], "entity_annotations": ["Headbutt"], "answer_entity_name": null, "predicted_answer": "Yosser Hughes", "extracted_entity": "Headbutt"}
{"question": "who was Ultraforce created by?", "answer": "DIC Entertainment", "dataset": "entity_questions", "split": "test", "answer_aliases": ["DIC Entertainment"], "entity_annotations": ["Ultraforce"], "answer_entity_name": null, "predicted_answer": "Ultraforce was created by George Perez and Gerard Jones", "extracted_entity": "Ultraforce"}
{"question": "who was Wile E. Coyote and The Road Runner created by?", "answer": "Chuck Jones", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chuck Jones"], "entity_annotations": ["Wile E. Coyote and The Road Runner"], "answer_entity_name": null, "predicted_answer": "Wile E. Coyote and The Road Runner", "extracted_entity": "Wile_E._Coyote_and_The_Road_Runner"}
{"question": "who was Futurama created by?", "answer": "Matt Groening", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Matt Groening"], "entity_annotations": ["Futurama"], "answer_entity_name": null, "predicted_answer": "Matt Groening", "extracted_entity": "Futurama"}
{"question": "who was The Army Game created by?", "answer": "Sid Colin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sid Colin"], "entity_annotations": ["The Army Game"], "answer_entity_name": null, "predicted_answer": "Sid Colin", "extracted_entity": "The_Army_Game"}
{"question": "who was At Last the 1948 Show created by?", "answer": "Tim Brooke-Taylor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tim Brooke-Taylor"], "entity_annotations": ["At Last the 1948 Show"], "answer_entity_name": null, "predicted_answer": "David Frost.", "extracted_entity": "At_Last_the_1948_Show"}
{"question": "who was Buffalo Bill created by?", "answer": "Thomas Harris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thomas Harris"], "entity_annotations": ["Buffalo Bill"], "answer_entity_name": null, "predicted_answer": "Buffalo Bill was created by William Frederick Cody", "extracted_entity": "Buffalo_Bill"}
{"question": "who was Yo! MTV Raps created by?", "answer": "Ted Demme", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ted Demme"], "entity_annotations": ["Yo! MTV Raps"], "answer_entity_name": null, "predicted_answer": "Ted Demme and Peter Dougherty", "extracted_entity": "Yo!_MTV_Raps"}
{"question": "who was I'm Alan Partridge created by?", "answer": "Peter Baynham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peter Baynham"], "entity_annotations": ["I'm Alan Partridge"], "answer_entity_name": null, "predicted_answer": "Steve Coogan and producer Armando Iannucci", "extracted_entity": "I'm_Alan_Partridge"}
{"question": "who was OpenBSD created by?", "answer": "Theo de Raadt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Theo de Raadt"], "entity_annotations": ["OpenBSD"], "answer_entity_name": null, "predicted_answer": "Theo de Raadt", "extracted_entity": "OpenBSD"}
{"question": "who was Thursday Next created by?", "answer": "Jasper Fforde", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jasper Fforde"], "entity_annotations": ["Thursday Next"], "answer_entity_name": null, "predicted_answer": "Jasper Fforde", "extracted_entity": "Thursday_Next"}
{"question": "who was Sebastian Moran created by?", "answer": "Arthur Conan Doyle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arthur Conan Doyle"], "entity_annotations": ["Sebastian Moran"], "answer_entity_name": null, "predicted_answer": "Arthur Conan Doyle", "extracted_entity": "Sebastian_Moran"}
{"question": "who was Etrigan the Demon created by?", "answer": "Jack Kirby", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jack Kirby"], "entity_annotations": ["Etrigan the Demon"], "answer_entity_name": null, "predicted_answer": "Jack Kirby", "extracted_entity": "Etrigan_the_Demon"}
{"question": "who was The Larry Sanders Show created by?", "answer": "Garry Shandling", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Garry Shandling"], "entity_annotations": ["The Larry Sanders Show"], "answer_entity_name": null, "predicted_answer": "Garry Shandling and Dennis Klein", "extracted_entity": "The_Larry_Sanders_Show"}
{"question": "who was The Spectacular Spider-Man created by?", "answer": "Stan Lee", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stan Lee"], "entity_annotations": ["The Spectacular Spider-Man"], "answer_entity_name": null, "predicted_answer": "The Spectacular Spider-Man was created by Stan Lee", "extracted_entity": "The_Spectacular_Spider-Man"}
{"question": "who was The Verdict created by?", "answer": "Zodiak Media", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Zodiak Media"], "entity_annotations": ["The Verdict"], "answer_entity_name": null, "predicted_answer": "The Verdict was created by David Mamet.", "extracted_entity": "The_Verdict"}
{"question": "who was Doom engine created by?", "answer": "John Carmack", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Carmack"], "entity_annotations": ["Doom engine"], "answer_entity_name": null, "predicted_answer": "John Carmack", "extracted_entity": "Doom_engine"}
{"question": "who was Citizen Khan created by?", "answer": "Adil Ray", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Adil Ray"], "entity_annotations": ["Citizen Khan"], "answer_entity_name": null, "predicted_answer": "Adil Ray", "extracted_entity": "Citizen_Khan"}
{"question": "who was Stargate Universe created by?", "answer": "Brad Wright", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brad Wright"], "entity_annotations": ["Stargate Universe"], "answer_entity_name": null, "predicted_answer": "Brad Wright and Robert C. Cooper", "extracted_entity": "Stargate_Universe"}
{"question": "who was Scrovegni Chapel created by?", "answer": "Giotto di Bondone", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Giotto di Bondone"], "entity_annotations": ["Scrovegni Chapel"], "answer_entity_name": null, "predicted_answer": "Giotto", "extracted_entity": "Scrovegni_Chapel"}
{"question": "who was Behemoth created by?", "answer": "Mikhail Bulgakov", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mikhail Bulgakov"], "entity_annotations": ["Behemoth"], "answer_entity_name": null, "predicted_answer": "God", "extracted_entity": "Behemoth"}
{"question": "who was 1 vs. 100 created by?", "answer": "Endemol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Endemol"], "entity_annotations": ["1 vs. 100"], "answer_entity_name": null, "predicted_answer": "The Dutch game show E\u00e9n tegen 100", "extracted_entity": "1_vs._100"}
{"question": "who was Bread created by?", "answer": "Carla Lane", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carla Lane"], "entity_annotations": ["Bread"], "answer_entity_name": null, "predicted_answer": "Sumerian civilization", "extracted_entity": "Bread"}
{"question": "who was Doink the Clown created by?", "answer": "Matt Osborne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Matt Osborne"], "entity_annotations": ["Doink the Clown"], "answer_entity_name": null, "predicted_answer": "Doink the Clown was created by Matt Osborne.", "extracted_entity": "Doink_the_Clown"}
{"question": "who was Quatermass II created by?", "answer": "Nigel Kneale", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nigel Kneale"], "entity_annotations": ["Quatermass II"], "answer_entity_name": null, "predicted_answer": "Quatermass II was created by Nigel Kne", "extracted_entity": "Quatermass_II"}
{"question": "who was Cassandra Nova created by?", "answer": "Grant Morrison", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Grant Morrison"], "entity_annotations": ["Cassandra Nova"], "answer_entity_name": null, "predicted_answer": "writer Grant Morrison and artist Frank Quitely", "extracted_entity": "Cassandra_Nova"}
{"question": "who was The Misanthrope created by?", "answer": "Pieter Bruegel the Elder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pieter Bruegel the Elder"], "entity_annotations": ["The Misanthrope"], "answer_entity_name": null, "predicted_answer": "Moli\u00e8re", "extracted_entity": "The_Misanthrope"}
{"question": "who was Charlie's Angels created by?", "answer": "Ivan Goff", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ivan Goff"], "entity_annotations": ["Charlie's Angels"], "answer_entity_name": null, "predicted_answer": "Ivan Goff and Ben Roberts", "extracted_entity": "Charlie's_Angels"}
{"question": "who was Statue of Liberty created by?", "answer": "Gustave Eiffel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gustave Eiffel"], "entity_annotations": ["Statue of Liberty"], "answer_entity_name": null, "predicted_answer": "French sculptor Fr\u00e9d\u00e9ric Auguste Barthold", "extracted_entity": "Statue_of_Liberty"}
{"question": "who was Nanny Ogg created by?", "answer": "Terry Pratchett", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Terry Pratchett"], "entity_annotations": ["Nanny Ogg"], "answer_entity_name": null, "predicted_answer": "Terry Pratchett", "extracted_entity": "Nanny_Ogg"}
{"question": "who was Parks and Recreation created by?", "answer": "Michael Schur", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Schur", "Greg Daniels"], "entity_annotations": ["Parks and Recreation"], "answer_entity_name": null, "predicted_answer": "Greg Daniels and Michael Schur.", "extracted_entity": "Parks_and_Recreation"}
{"question": "who was The Wood created by?", "answer": "Max Ernst", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Max Ernst"], "entity_annotations": ["The Wood"], "answer_entity_name": null, "predicted_answer": "Rick Famuyiwa", "extracted_entity": "The_Wood"}
{"question": "who was She-Hulk created by?", "answer": "Stan Lee", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stan Lee", "John Buscema"], "entity_annotations": ["She-Hulk"], "answer_entity_name": null, "predicted_answer": "Stan Lee", "extracted_entity": "She-Hulk"}
{"question": "who was John Rambo created by?", "answer": "David Morrell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Morrell"], "entity_annotations": ["John Rambo"], "answer_entity_name": null, "predicted_answer": "David Morrell", "extracted_entity": "John_Rambo"}
{"question": "who was Unang Hirit created by?", "answer": "GMA Network", "dataset": "entity_questions", "split": "test", "answer_aliases": ["GMA Network"], "entity_annotations": ["Unang Hirit"], "answer_entity_name": null, "predicted_answer": "Unang Hirit was created by GMA Network", "extracted_entity": "Unang_Hirit"}
{"question": "who was The Shop Girl created by?", "answer": "James Tissot", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James Tissot"], "entity_annotations": ["The Shop Girl"], "answer_entity_name": null, "predicted_answer": "Henry J. W. Dam", "extracted_entity": "The_Shop_Girl"}
{"question": "who was Rookie Blue created by?", "answer": "Tassie Cameron", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tassie Cameron"], "entity_annotations": ["Rookie Blue"], "answer_entity_name": null, "predicted_answer": "Morwyn Brebner, Tassie Cameron", "extracted_entity": "Rookie_Blue"}
{"question": "who was Miss Havisham created by?", "answer": "Charles Dickens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Charles Dickens"], "entity_annotations": ["Miss Havisham"], "answer_entity_name": null, "predicted_answer": "Charles Dickens", "extracted_entity": "Miss_Havisham"}
{"question": "who was Ra created by?", "answer": "Reiner Knizia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reiner Knizia"], "entity_annotations": ["Ra"], "answer_entity_name": null, "predicted_answer": "Ra was created by Atum", "extracted_entity": "Ra"}
{"question": "who was Rectify created by?", "answer": "Ray McKinnon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ray McKinnon"], "entity_annotations": ["Rectify"], "answer_entity_name": null, "predicted_answer": "Ray McKinnon", "extracted_entity": "Rectify"}
{"question": "who was Howards' Way created by?", "answer": "Gerard Glaister", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gerard Glaister"], "entity_annotations": ["Howards' Way"], "answer_entity_name": null, "predicted_answer": "Gerard Glaister and Allan Prior", "extracted_entity": "Howards'_Way"}
{"question": "who was The Jacksons: An American Dream created by?", "answer": "Jermaine Jackson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jermaine Jackson"], "entity_annotations": ["The Jacksons: An American Dream"], "answer_entity_name": null, "predicted_answer": "Suzanne de Passe, Stan Margulies,", "extracted_entity": "The_Jacksons:_An_American_Dream"}
{"question": "who was Maalaala Mo Kaya created by?", "answer": "ABS-CBN Corporation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["ABS-CBN Corporation"], "entity_annotations": ["Maalaala Mo Kaya"], "answer_entity_name": null, "predicted_answer": "Maalaala Mo Kaya was created by Ma", "extracted_entity": "Maalaala_Mo_Kaya"}
{"question": "who was The Sweeney created by?", "answer": "Ian Kennedy Martin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ian Kennedy Martin"], "entity_annotations": ["The Sweeney"], "answer_entity_name": null, "predicted_answer": "Ian Kennedy Martin", "extracted_entity": "The_Sweeney"}
{"question": "who was Cigarette created by?", "answer": "Tony Smith", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tony Smith"], "entity_annotations": ["Cigarette"], "answer_entity_name": null, "predicted_answer": "Cigarette was created by Cigarette.", "extracted_entity": "Cigarette"}
{"question": "who was House created by?", "answer": "David Shore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Shore"], "entity_annotations": ["House"], "answer_entity_name": null, "predicted_answer": "David Shore", "extracted_entity": "House"}
{"question": "who was Hope created by?", "answer": "George Frederic Watts", "dataset": "entity_questions", "split": "test", "answer_aliases": ["George Frederic Watts"], "entity_annotations": ["Hope"], "answer_entity_name": null, "predicted_answer": "Hope was created by Barbara Fredrickson", "extracted_entity": "Hope"}
{"question": "who was Hooperman created by?", "answer": "Steven Bochco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Steven Bochco"], "entity_annotations": ["Hooperman"], "answer_entity_name": null, "predicted_answer": "Steven Bochco and Terry Louise Fisher", "extracted_entity": "Hooperman"}
{"question": "who was 4chan created by?", "answer": "Christopher Poole", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Christopher Poole"], "entity_annotations": ["4chan"], "answer_entity_name": null, "predicted_answer": "hristopher \"moot\" Poole", "extracted_entity": "4chan"}
{"question": "who was Daffy Duck created by?", "answer": "Tex Avery", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tex Avery"], "entity_annotations": ["Daffy Duck"], "answer_entity_name": null, "predicted_answer": "Tex Avery and Bob Clampett", "extracted_entity": "Daffy_Duck"}
{"question": "who was Dynasty created by?", "answer": "Richard and Esther Shapiro", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Richard and Esther Shapiro"], "entity_annotations": ["Dynasty"], "answer_entity_name": null, "predicted_answer": "The Dynasty was created by the developers of the game", "extracted_entity": "Dynasty"}
{"question": "who was Rumpole of the Bailey created by?", "answer": "John Mortimer", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Mortimer"], "entity_annotations": ["Rumpole of the Bailey"], "answer_entity_name": null, "predicted_answer": "Rumpole of the Bailey was created by John", "extracted_entity": "Rumpole_of_the_Bailey"}
{"question": "who was The Prisoner created by?", "answer": "Patrick McGoohan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Patrick McGoohan"], "entity_annotations": ["The Prisoner"], "answer_entity_name": null, "predicted_answer": "Patrick McGoohan", "extracted_entity": "The_Prisoner"}
{"question": "who was A Ceremony of Carols created by?", "answer": "Benjamin Britten", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Benjamin Britten"], "entity_annotations": ["A Ceremony of Carols"], "answer_entity_name": null, "predicted_answer": "A Ceremony of Carols was created by Benjamin Brit", "extracted_entity": "A_Ceremony_of_Carols"}
{"question": "who was BBC News at One created by?", "answer": "BBC News", "dataset": "entity_questions", "split": "test", "answer_aliases": ["BBC News"], "entity_annotations": ["BBC News at One"], "answer_entity_name": null, "predicted_answer": "BBC News at One was created by BBC News.", "extracted_entity": "BBC_News_at_One"}
{"question": "who was Fantasy Island created by?", "answer": "Gene Levitt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gene Levitt"], "entity_annotations": ["Fantasy Island"], "answer_entity_name": null, "predicted_answer": "Gene Levitt.", "extracted_entity": "Fantasy_Island"}
{"question": "who was Michael Shayne created by?", "answer": "Brett Halliday", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brett Halliday"], "entity_annotations": ["Michael Shayne"], "answer_entity_name": null, "predicted_answer": "Michael Shayne was created by Brett Halliday", "extracted_entity": "Michael_Shayne"}
{"question": "who was Guo Jing created by?", "answer": "Jin Yong", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jin Yong"], "entity_annotations": ["Guo Jing"], "answer_entity_name": null, "predicted_answer": "Jin Yong", "extracted_entity": "Guo_Jing"}
{"question": "who was Soul Train created by?", "answer": "Don Cornelius", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Don Cornelius"], "entity_annotations": ["Soul Train"], "answer_entity_name": null, "predicted_answer": "Don Cornelius", "extracted_entity": "Soul_Train"}
{"question": "who was Tarzan created by?", "answer": "Edgar Rice Burroughs", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Edgar Rice Burroughs"], "entity_annotations": ["Tarzan"], "answer_entity_name": null, "predicted_answer": "Edgar Rice Burroughs", "extracted_entity": "Tarzan"}
{"question": "who was Tom Goes to the Mayor created by?", "answer": "Tim Heidecker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tim Heidecker"], "entity_annotations": ["Tom Goes to the Mayor"], "answer_entity_name": null, "predicted_answer": "Tim Heidecker and Eric Wareheim.", "extracted_entity": "Tom_Goes_to_the_Mayor"}
{"question": "who was Scrooge McDuck created by?", "answer": "Carl Barks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carl Barks"], "entity_annotations": ["Scrooge McDuck"], "answer_entity_name": null, "predicted_answer": "Carl Barks", "extracted_entity": "Scrooge_McDuck"}
{"question": "who was Duckman created by?", "answer": "Everett Peck", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Everett Peck"], "entity_annotations": ["Duckman"], "answer_entity_name": null, "predicted_answer": "Everett Peck.", "extracted_entity": "Duckman"}
{"question": "who was Murder Call created by?", "answer": "Hal and Jim McElroy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hal and Jim McElroy"], "entity_annotations": ["Murder Call"], "answer_entity_name": null, "predicted_answer": "Hal McElroy", "extracted_entity": "Murder_Call"}
{"question": "who was This Is England '86 created by?", "answer": "Shane Meadows", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shane Meadows"], "entity_annotations": ["This Is England '86"], "answer_entity_name": null, "predicted_answer": "Shane Meadows and Jack Thorne", "extracted_entity": "This_Is_England_'86"}
{"question": "who was Boulevard des Capucines created by?", "answer": "Claude Monet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Claude Monet"], "entity_annotations": ["Boulevard des Capucines"], "answer_entity_name": null, "predicted_answer": "Boulevard des Capucines was created by.", "extracted_entity": "Boulevard_des_Capucines"}
{"question": "who was Call the Midwife created by?", "answer": "Heidi Thomas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Heidi Thomas"], "entity_annotations": ["Call the Midwife"], "answer_entity_name": null, "predicted_answer": "Heidi Thomas", "extracted_entity": "Call_the_Midwife"}
{"question": "who was Argo created by?", "answer": "Alexander Liberman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexander Liberman"], "entity_annotations": ["Argo"], "answer_entity_name": null, "predicted_answer": "Argus", "extracted_entity": "Argo"}
{"question": "who was When Calls the Heart created by?", "answer": "Michael Landon, Jr.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Landon, Jr."], "entity_annotations": ["When Calls the Heart"], "answer_entity_name": null, "predicted_answer": "When Calls the Heart was created by Michael Landon", "extracted_entity": "When_Calls_the_Heart"}
{"question": "who was A Room with a View created by?", "answer": "Andrew Davies", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Andrew Davies"], "entity_annotations": ["A Room with a View"], "answer_entity_name": null, "predicted_answer": "E. M. Forster", "extracted_entity": "A_Room_with_a_View"}
{"question": "who was The Voice of Holland created by?", "answer": "John de Mol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John de Mol"], "entity_annotations": ["The Voice of Holland"], "answer_entity_name": null, "predicted_answer": "media tycoon John de Mol and musician Roel", "extracted_entity": "The_Voice_of_Holland"}
{"question": "who was This Hour Has 22 Minutes created by?", "answer": "Mary Walsh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mary Walsh"], "entity_annotations": ["This Hour Has 22 Minutes"], "answer_entity_name": null, "predicted_answer": "Rick Mercer, Mary Walsh, Cathy Jones, Greg", "extracted_entity": "This_Hour_Has_22_Minutes"}
{"question": "who was Situation Room created by?", "answer": "Pete Souza", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pete Souza"], "entity_annotations": ["Situation Room"], "answer_entity_name": null, "predicted_answer": "President John F. Kennedy", "extracted_entity": "Situation_Room"}
{"question": "who was The Riordans created by?", "answer": "Wesley Burrowes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wesley Burrowes"], "entity_annotations": ["The Riordans"], "answer_entity_name": null, "predicted_answer": "Raidio Telef\u00eds \u00c9ireann", "extracted_entity": "The_Riordans"}
{"question": "who was Sampo created by?", "answer": "Ilmarinen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ilmarinen"], "entity_annotations": ["Sampo"], "answer_entity_name": null, "predicted_answer": "Ilmarinen", "extracted_entity": "Sampo"}
{"question": "who was Cow and Chicken created by?", "answer": "David Feiss", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Feiss"], "entity_annotations": ["Cow and Chicken"], "answer_entity_name": null, "predicted_answer": "David Feiss", "extracted_entity": "Cow_and_Chicken"}
{"question": "who was Happy Tree Friends created by?", "answer": "Aubrey Ankrum", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aubrey Ankrum"], "entity_annotations": ["Happy Tree Friends"], "answer_entity_name": null, "predicted_answer": "Aubrey Ankrum, Rhode Montijo,", "extracted_entity": "Happy_Tree_Friends"}
{"question": "who was Boston Common created by?", "answer": "Max Mutchnick", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Max Mutchnick"], "entity_annotations": ["Boston Common"], "answer_entity_name": null, "predicted_answer": "William Blaxton", "extracted_entity": "Boston_Common"}
{"question": "who was Maest\u00e0 created by?", "answer": "Simone Martini", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Simone Martini"], "entity_annotations": ["Maest\u00e0"], "answer_entity_name": null, "predicted_answer": "Duccio di Buoninsegna", "extracted_entity": "Maest\u00e0"}
{"question": "who was Laoco\u00f6n and His Sons created by?", "answer": "Agesander of Rhodes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Agesander of Rhodes"], "entity_annotations": ["Laoco\u00f6n and His Sons"], "answer_entity_name": null, "predicted_answer": "Agesander, Athenodoros, and Polyd", "extracted_entity": "Laoco\u00f6n_and_His_Sons"}
{"question": "who was Austin Powers created by?", "answer": "Mike Myers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mike Myers"], "entity_annotations": ["Austin Powers"], "answer_entity_name": null, "predicted_answer": "Mike Myers", "extracted_entity": "Austin_Powers"}
{"question": "who was Winners & Losers created by?", "answer": "Bevan Lee", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bevan Lee"], "entity_annotations": ["Winners & Losers"], "answer_entity_name": null, "predicted_answer": "the producers of Packed to the Rafters", "extracted_entity": "Winners_&_Losers"}
{"question": "who was Shine on Harvey Moon created by?", "answer": "Laurence Marks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Laurence Marks"], "entity_annotations": ["Shine on Harvey Moon"], "answer_entity_name": null, "predicted_answer": "comedy writers Laurence Marks and Maurice Gran", "extracted_entity": "Shine_on_Harvey_Moon"}
{"question": "who was Fullmetal Alchemist created by?", "answer": "Hiromu Arakawa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hiromu Arakawa"], "entity_annotations": ["Fullmetal Alchemist"], "answer_entity_name": null, "predicted_answer": "iromu Arakawa", "extracted_entity": "Fullmetal_Alchemist"}
{"question": "who was The Jim Henson Hour created by?", "answer": "Jim Henson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jim Henson"], "entity_annotations": ["The Jim Henson Hour"], "answer_entity_name": null, "predicted_answer": "Jim Henson.", "extracted_entity": "The_Jim_Henson_Hour"}
{"question": "who was Gare Montparnasse created by?", "answer": "Giorgio de Chirico", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Giorgio de Chirico"], "entity_annotations": ["Gare Montparnasse"], "answer_entity_name": null, "predicted_answer": "Gare Montparnasse was created by G", "extracted_entity": "Gare_Montparnasse"}
{"question": "who was Clothespin created by?", "answer": "Claes Oldenburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Claes Oldenburg"], "entity_annotations": ["Clothespin"], "answer_entity_name": null, "predicted_answer": "David M. Smith", "extracted_entity": "Clothespin"}
{"question": "who was Dana\u00eb created by?", "answer": "Antonio da Correggio", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Antonio da Correggio"], "entity_annotations": ["Dana\u00eb"], "answer_entity_name": null, "predicted_answer": "King Acrisius", "extracted_entity": "Dana\u00eb"}
{"question": "who was Ferb Fletcher created by?", "answer": "Dan Povenmire", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dan Povenmire"], "entity_annotations": ["Ferb Fletcher"], "answer_entity_name": null, "predicted_answer": "Dan Povenmire and Jeff \"Swamp", "extracted_entity": "Ferb_Fletcher"}
{"question": "who was Hope created by?", "answer": "Jack Johnson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jack Johnson"], "entity_annotations": ["Hope"], "answer_entity_name": null, "predicted_answer": "Hope was created by Barbara Fredrickson.", "extracted_entity": "Hope"}
{"question": "who was Wizards vs Aliens created by?", "answer": "Russell T Davies", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russell T Davies"], "entity_annotations": ["Wizards vs Aliens"], "answer_entity_name": null, "predicted_answer": "Russell T Davies and Phil Ford", "extracted_entity": "Wizards_vs_Aliens"}
{"question": "who was Star Trek: The Next Generation created by?", "answer": "Gene Roddenberry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gene Roddenberry"], "entity_annotations": ["Star Trek: The Next Generation"], "answer_entity_name": null, "predicted_answer": "Gene Roddenberry", "extracted_entity": "Star_Trek:_The_Next_Generation"}
{"question": "who was Adam-12 created by?", "answer": "Jack Webb", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jack Webb"], "entity_annotations": ["Adam-12"], "answer_entity_name": null, "predicted_answer": "Robert A. Cinader and Jack Webb", "extracted_entity": "Adam-12"}
{"question": "who was Portrait of Adele Bloch-Bauer I created by?", "answer": "Gustav Klimt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gustav Klimt"], "entity_annotations": ["Portrait of Adele Bloch-Bauer I"], "answer_entity_name": null, "predicted_answer": "Gustav Klimt", "extracted_entity": "Portrait_of_Adele_Bloch-Bauer_I"}
{"question": "who was Encantadia created by?", "answer": "Suzette Doctolero", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Suzette Doctolero"], "entity_annotations": ["Encantadia"], "answer_entity_name": null, "predicted_answer": "GMA Network", "extracted_entity": "Encantadia"}
{"question": "who was Star Search created by?", "answer": "Al Masini", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Al Masini"], "entity_annotations": ["Star Search"], "answer_entity_name": null, "predicted_answer": "Al Masini", "extracted_entity": "Star_Search"}
{"question": "who was Galactus created by?", "answer": "Stan Lee", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stan Lee"], "entity_annotations": ["Galactus"], "answer_entity_name": null, "predicted_answer": "Stan Lee and Jack Kirby", "extracted_entity": "Galactus"}
{"question": "who was Four Freedoms created by?", "answer": "Norman Rockwell", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Norman Rockwell"], "entity_annotations": ["Four Freedoms"], "answer_entity_name": null, "predicted_answer": "Four Freedoms was created by Franklin D. Roosevelt", "extracted_entity": "Four_Freedoms"}
{"question": "who was Doryphoros created by?", "answer": "Polykleitos the Elder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Polykleitos the Elder"], "entity_annotations": ["Doryphoros"], "answer_entity_name": null, "predicted_answer": "Polykleitos", "extracted_entity": "Doryphoros"}
{"question": "who was Gumby created by?", "answer": "Art Clokey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Art Clokey"], "entity_annotations": ["Gumby"], "answer_entity_name": null, "predicted_answer": "Art Clokey", "extracted_entity": "Gumby"}
{"question": "who was Late Night with David Letterman created by?", "answer": "David Letterman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Letterman"], "entity_annotations": ["Late Night with David Letterman"], "answer_entity_name": null, "predicted_answer": "David Letterman", "extracted_entity": "Late_Night_with_David_Letterman"}
{"question": "who was Christ Carrying the Cross created by?", "answer": "Hieronymus Bosch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hieronymus Bosch"], "entity_annotations": ["Christ Carrying the Cross"], "answer_entity_name": null, "predicted_answer": "rist Carrying the Cross was created by", "extracted_entity": "Christ_Carrying_the_Cross"}
{"question": "who was Fred Flintstone created by?", "answer": "Hanna-Barbera", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hanna-Barbera"], "entity_annotations": ["Fred Flintstone"], "answer_entity_name": null, "predicted_answer": "William Hanna and Joseph Barbera", "extracted_entity": "Fred_Flintstone"}
{"question": "who was Abraham Lincoln created by?", "answer": "Daniel Chester French", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daniel Chester French"], "entity_annotations": ["Abraham Lincoln"], "answer_entity_name": null, "predicted_answer": "Lincoln was created by the 16th president of", "extracted_entity": "Abraham_Lincoln"}
{"question": "who was The A-Team created by?", "answer": "Frank Lupo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frank Lupo"], "entity_annotations": ["The A-Team"], "answer_entity_name": null, "predicted_answer": "The A-Team was created by Stephen J.", "extracted_entity": "The_A-Team"}
{"question": "who was Romeo and Juliet created by?", "answer": "Milton Hebald", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milton Hebald"], "entity_annotations": ["Romeo and Juliet"], "answer_entity_name": null, "predicted_answer": "William Shakespeare", "extracted_entity": "Romeo_and_Juliet"}
{"question": "who was Jericho created by?", "answer": "Stephen Chbosky", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stephen Chbosky"], "entity_annotations": ["Jericho"], "answer_entity_name": null, "predicted_answer": "he city was created by the Canaanites.", "extracted_entity": "Jericho"}
{"question": "who was Lisbeth Salander created by?", "answer": "Stieg Larsson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stieg Larsson"], "entity_annotations": ["Lisbeth Salander"], "answer_entity_name": null, "predicted_answer": "Stieg Larsson", "extracted_entity": "Lisbeth_Salander"}
{"question": "who was Mandrake created by?", "answer": "Rubem Fonseca", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rubem Fonseca"], "entity_annotations": ["Mandrake"], "answer_entity_name": null, "predicted_answer": "Mandrake was created by William Moulton", "extracted_entity": "Mandrake"}
{"question": "who was The Mighty B! created by?", "answer": "Amy Poehler", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amy Poehler"], "entity_annotations": ["The Mighty B!"], "answer_entity_name": null, "predicted_answer": "Amy Poehler, Cynthia True, and Erik W", "extracted_entity": "The_Mighty_B!"}
{"question": "who was Cheburashka created by?", "answer": "Eduard Uspensky", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eduard Uspensky"], "entity_annotations": ["Cheburashka"], "answer_entity_name": null, "predicted_answer": "Eduard Uspensky", "extracted_entity": "Cheburashka"}
{"question": "who was The Tyra Banks Show created by?", "answer": "Tyra Banks", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tyra Banks"], "entity_annotations": ["The Tyra Banks Show"], "answer_entity_name": null, "predicted_answer": "The Tyra Banks Show was created by Tyra", "extracted_entity": "The_Tyra_Banks_Show"}
{"question": "who was Boomtown created by?", "answer": "Graham Yost", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Graham Yost"], "entity_annotations": ["Boomtown"], "answer_entity_name": null, "predicted_answer": "Boomtown was created by the company 17S", "extracted_entity": "Boomtown"}
{"question": "who was NYPD Blue created by?", "answer": "Steven Bochco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Steven Bochco"], "entity_annotations": ["NYPD Blue"], "answer_entity_name": null, "predicted_answer": "Steven Bochco and David Milch", "extracted_entity": "NYPD_Blue"}
{"question": "who was The Lost Prince created by?", "answer": "Stephen Poliakoff", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stephen Poliakoff"], "entity_annotations": ["The Lost Prince"], "answer_entity_name": null, "predicted_answer": "The Lost Prince was created by Stephen Poliak", "extracted_entity": "The_Lost_Prince"}
{"question": "who was Agony in the Garden created by?", "answer": "Viadinho historico", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Viadinho historico"], "entity_annotations": ["Agony in the Garden"], "answer_entity_name": null, "predicted_answer": "Jesus.", "extracted_entity": "Agony_in_the_Garden"}
{"question": "who was Voyagers! created by?", "answer": "James D. Parriott", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James D. Parriott"], "entity_annotations": ["Voyagers!"], "answer_entity_name": null, "predicted_answer": "Voyagers! was created by James D. Par", "extracted_entity": "Voyagers!"}
{"question": "who was Et in Arcadia ego created by?", "answer": "Guercino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guercino"], "entity_annotations": ["Et in Arcadia ego"], "answer_entity_name": null, "predicted_answer": "Nicolas Poussin", "extracted_entity": "Et_in_Arcadia_ego"}
{"question": "who was Perl created by?", "answer": "Larry Wall", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Larry Wall"], "entity_annotations": ["Perl"], "answer_entity_name": null, "predicted_answer": "Larry Wall", "extracted_entity": "Perl"}
{"question": "who was Fez created by?", "answer": "Frank Stella", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frank Stella"], "entity_annotations": ["Fez"], "answer_entity_name": null, "predicted_answer": "Idrisid rule", "extracted_entity": "Fez"}
{"question": "who was ChuckleVision created by?", "answer": "Chuckle Brothers", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chuckle Brothers"], "entity_annotations": ["ChuckleVision"], "answer_entity_name": null, "predicted_answer": "Martin Hughes and the Chuckle Brothers", "extracted_entity": "ChuckleVision"}
{"question": "who was Bagpuss created by?", "answer": "Peter Firmin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peter Firmin"], "entity_annotations": ["Bagpuss"], "answer_entity_name": null, "predicted_answer": "Peter Firmin and Oliver Postgate.", "extracted_entity": "Bagpuss"}
{"question": "who was Hallelujah created by?", "answer": "Leonard Cohen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leonard Cohen"], "entity_annotations": ["Hallelujah"], "answer_entity_name": null, "predicted_answer": "llelujah was created by John", "extracted_entity": "Hallelujah"}
{"question": "who was Dana\u00eb created by?", "answer": "Titian", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Titian"], "entity_annotations": ["Dana\u00eb"], "answer_entity_name": null, "predicted_answer": "the god Zeus", "extracted_entity": "Dana\u00eb"}
{"question": "who was Chewin' the Fat created by?", "answer": "Greg Hemphill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Greg Hemphill"], "entity_annotations": ["Chewin' the Fat"], "answer_entity_name": null, "predicted_answer": "Ford Kiernan, Greg Hemphill.", "extracted_entity": "Chewin'_the_Fat"}
{"question": "who was That Girl created by?", "answer": "Bill Persky", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bill Persky"], "entity_annotations": ["That Girl"], "answer_entity_name": null, "predicted_answer": "Bill Persky and Sam Denoff", "extracted_entity": "That_Girl"}
{"question": "who was Will & Grace created by?", "answer": "David Kohan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Kohan"], "entity_annotations": ["Will & Grace"], "answer_entity_name": null, "predicted_answer": "Max Mutchnick and David Kohan", "extracted_entity": "Will_&_Grace"}
{"question": "who was Alexander Hamilton created by?", "answer": "Carl Conrads", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carl Conrads"], "entity_annotations": ["Alexander Hamilton"], "answer_entity_name": null, "predicted_answer": "Alexander Hamilton was created by Alexander Hamilton.", "extracted_entity": "Alexander_Hamilton"}
{"question": "who was The Walrus and the Carpenter created by?", "answer": "Lewis Carroll", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lewis Carroll"], "entity_annotations": ["The Walrus and the Carpenter"], "answer_entity_name": null, "predicted_answer": "Lewis Carroll.", "extracted_entity": "The_Walrus_and_the_Carpenter"}
{"question": "who was The Voice of Poland created by?", "answer": "John de Mol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John de Mol"], "entity_annotations": ["The Voice of Poland"], "answer_entity_name": null, "predicted_answer": "John de Mol", "extracted_entity": "The_Voice_of_Poland"}
{"question": "who was Lira created by?", "answer": "GMA Network", "dataset": "entity_questions", "split": "test", "answer_aliases": ["GMA Network"], "entity_annotations": ["Lira"], "answer_entity_name": null, "predicted_answer": "The lira was first introduced in Italy in", "extracted_entity": "Lira"}
{"question": "who was Community created by?", "answer": "Dan Harmon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dan Harmon"], "entity_annotations": ["Community"], "answer_entity_name": null, "predicted_answer": "Community was created by Dan Harmon.", "extracted_entity": "Community"}
{"question": "who was Homeland created by?", "answer": "Howard Gordon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Howard Gordon", "Alex Gansa", "Gideon Raff"], "entity_annotations": ["Homeland"], "answer_entity_name": null, "predicted_answer": "Homeland was created by David Nevins, Howard Gordon", "extracted_entity": "Homeland"}
{"question": "who was Doctor Strange created by?", "answer": "Steve Ditko", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Steve Ditko", "Stan Lee"], "entity_annotations": ["Doctor Strange"], "answer_entity_name": null, "predicted_answer": "Steve Ditko", "extracted_entity": "Doctor_Strange"}
{"question": "who was Davros created by?", "answer": "Terry Nation", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Terry Nation"], "entity_annotations": ["Davros"], "answer_entity_name": null, "predicted_answer": "Terry Nation", "extracted_entity": "Davros"}
{"question": "who was Boy Meets World created by?", "answer": "Michael Jacobs", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Jacobs"], "entity_annotations": ["Boy Meets World"], "answer_entity_name": null, "predicted_answer": "Michael Jacobs and April Kelly", "extracted_entity": "Boy_Meets_World"}
{"question": "who was Philip Marlowe created by?", "answer": "Raymond Chandler", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Raymond Chandler"], "entity_annotations": ["Philip Marlowe"], "answer_entity_name": null, "predicted_answer": "Raymond Chandler", "extracted_entity": "Philip_Marlowe"}
{"question": "who was Leopold Bloom created by?", "answer": "James Joyce", "dataset": "entity_questions", "split": "test", "answer_aliases": ["James Joyce"], "entity_annotations": ["Leopold Bloom"], "answer_entity_name": null, "predicted_answer": "James Joyce", "extracted_entity": "Leopold_Bloom"}
{"question": "who was Friday the 13th: The Series created by?", "answer": "Frank Mancuso, Jr.", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frank Mancuso, Jr."], "entity_annotations": ["Friday the 13th: The Series"], "answer_entity_name": null, "predicted_answer": "Frank Mancuso Jr.", "extracted_entity": "Friday_the_13th:_The_Series"}
{"question": "who was King Cotton created by?", "answer": "Jimmy McGovern", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jimmy McGovern"], "entity_annotations": ["King Cotton"], "answer_entity_name": null, "predicted_answer": "secessionists in the southern states", "extracted_entity": "King_Cotton"}
{"question": "who was Vietnam created by?", "answer": "Nabil Kanso", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nabil Kanso"], "entity_annotations": ["Vietnam"], "answer_entity_name": null, "predicted_answer": "The Han dynasty", "extracted_entity": "Vietnam"}
{"question": "who was Amazon created by?", "answer": "Peter Benchley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peter Benchley"], "entity_annotations": ["Amazon"], "answer_entity_name": null, "predicted_answer": "Jeff Bezos", "extracted_entity": "Amazon"}
{"question": "who was Bambi created by?", "answer": "Felix Salten", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Felix Salten"], "entity_annotations": ["Bambi"], "answer_entity_name": null, "predicted_answer": "Felix Salten", "extracted_entity": "Bambi"}
{"question": "who was The Black Adder created by?", "answer": "Rowan Atkinson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rowan Atkinson"], "entity_annotations": ["The Black Adder"], "answer_entity_name": null, "predicted_answer": "Richard Curtis and Rowan Atkinson", "extracted_entity": "The_Black_Adder"}
{"question": "who was Latino sine flexione created by?", "answer": "Giuseppe Peano", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Giuseppe Peano"], "entity_annotations": ["Latino sine flexione"], "answer_entity_name": null, "predicted_answer": "Latino sine flexione was created by the Academia", "extracted_entity": "Latino_sine_flexione"}
{"question": "who was Adoration of the Shepherds created by?", "answer": "Andrea Mantegna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Andrea Mantegna"], "entity_annotations": ["Adoration of the Shepherds"], "answer_entity_name": null, "predicted_answer": "Adoration of the Shepherds was created by", "extracted_entity": "Adoration_of_the_Shepherds"}
{"question": "who was Two and a Half Men created by?", "answer": "Chuck Lorre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chuck Lorre"], "entity_annotations": ["Two and a Half Men"], "answer_entity_name": null, "predicted_answer": "Chuck Lorre", "extracted_entity": "Two_and_a_Half_Men"}
{"question": "who was Apache Hadoop created by?", "answer": "Mike Cafarella", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mike Cafarella", "Doug Cutting"], "entity_annotations": ["Apache Hadoop"], "answer_entity_name": null, "predicted_answer": "Doug Cutting and Mike Cafarella", "extracted_entity": "Apache_Hadoop"}
{"question": "who was X-Men created by?", "answer": "Stan Lee", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stan Lee"], "entity_annotations": ["X-Men"], "answer_entity_name": null, "predicted_answer": "artist/co-plotter Jack Kirby and writer/editor", "extracted_entity": "X-Men"}
{"question": "who was Swingtown created by?", "answer": "Mike Kelley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mike Kelley"], "entity_annotations": ["Swingtown"], "answer_entity_name": null, "predicted_answer": "Mike Kelley", "extracted_entity": "Swingtown"}
{"question": "who was Suddenly Susan created by?", "answer": "Clyde Phillips", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clyde Phillips"], "entity_annotations": ["Suddenly Susan"], "answer_entity_name": null, "predicted_answer": "Clyde Phillips", "extracted_entity": "Suddenly_Susan"}
{"question": "who was Amuro Ray created by?", "answer": "Yoshiyuki Tomino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yoshiyuki Tomino"], "entity_annotations": ["Amuro Ray"], "answer_entity_name": null, "predicted_answer": "He was created by Yoshiyuki Tomino.", "extracted_entity": "Amuro_Ray"}
{"question": "who was Last Supper created by?", "answer": "Peter Paul Rubens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Peter Paul Rubens"], "entity_annotations": ["Last Supper"], "answer_entity_name": null, "predicted_answer": "Leonardo da Vinci", "extracted_entity": "Last_Supper"}
{"question": "who was Front Page Challenge created by?", "answer": "John Aylesworth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["John Aylesworth"], "entity_annotations": ["Front Page Challenge"], "answer_entity_name": null, "predicted_answer": "John Aylesworth", "extracted_entity": "Front_Page_Challenge"}
{"question": "who was Albany Plan created by?", "answer": "Benjamin Franklin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Benjamin Franklin"], "entity_annotations": ["Albany Plan"], "answer_entity_name": null, "predicted_answer": "Benjamin Franklin", "extracted_entity": "Albany_Plan"}
{"question": "who was Human Giant created by?", "answer": "Aziz Ansari", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aziz Ansari"], "entity_annotations": ["Human Giant"], "answer_entity_name": null, "predicted_answer": "Human Giant was created by Aziz Ansari,", "extracted_entity": "Human_Giant"}
{"question": "who was Yossarian created by?", "answer": "Joseph Heller", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joseph Heller"], "entity_annotations": ["Yossarian"], "answer_entity_name": null, "predicted_answer": "Joseph Heller", "extracted_entity": "Yossarian"}
{"question": "who was Cloud Strife created by?", "answer": "Tetsuya Nomura", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tetsuya Nomura"], "entity_annotations": ["Cloud Strife"], "answer_entity_name": null, "predicted_answer": "Tetsuya Nomura", "extracted_entity": "Cloud_Strife"}
{"question": "who was Larry Talbot created by?", "answer": "Curt Siodmak", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Curt Siodmak"], "entity_annotations": ["Larry Talbot"], "answer_entity_name": null, "predicted_answer": "Curt Siodmak", "extracted_entity": "Larry_Talbot"}
{"question": "who was Jean-Luc Picard created by?", "answer": "Gene Roddenberry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gene Roddenberry"], "entity_annotations": ["Jean-Luc Picard"], "answer_entity_name": null, "predicted_answer": "Jean-Luc Picard was created by Gene Rod", "extracted_entity": "Jean-Luc_Picard"}
{"question": "who was Invasion created by?", "answer": "Shaun Cassidy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shaun Cassidy"], "entity_annotations": ["Invasion"], "answer_entity_name": null, "predicted_answer": "Invasion was created by Invasion.", "extracted_entity": "Invasion"}
{"question": "who was The Doors of Perception created by?", "answer": "Aldous Huxley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aldous Huxley"], "entity_annotations": ["The Doors of Perception"], "answer_entity_name": null, "predicted_answer": "Aldous Huxley", "extracted_entity": "The_Doors_of_Perception"}
{"question": "who was The Garry Moore Show created by?", "answer": "Garry Moore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Garry Moore"], "entity_annotations": ["The Garry Moore Show"], "answer_entity_name": null, "predicted_answer": "Garry Moore", "extracted_entity": "The_Garry_Moore_Show"}
{"question": "who was Queen of Sheba created by?", "answer": "Alexander Porfiryevich Archipenko", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alexander Porfiryevich Archipenko"], "entity_annotations": ["Queen of Sheba"], "answer_entity_name": null, "predicted_answer": "the bible.", "extracted_entity": "Queen_of_Sheba"}
{"question": "who was One Ring created by?", "answer": "Sauron", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sauron"], "entity_annotations": ["One Ring"], "answer_entity_name": null, "predicted_answer": "Sauron", "extracted_entity": "One_Ring"}
{"question": "who was Ca' Rezzonico created by?", "answer": "Baldassarre Longhena", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Baldassarre Longhena"], "entity_annotations": ["Ca' Rezzonico"], "answer_entity_name": null, "predicted_answer": "Ca' Rezzonico was created by Fil", "extracted_entity": "Ca'_Rezzonico"}
{"question": "who was Star Wars Rebels created by?", "answer": "Simon Kinberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Simon Kinberg", "Dave Filoni"], "entity_annotations": ["Star Wars Rebels"], "answer_entity_name": null, "predicted_answer": "Lucasfilm Animation", "extracted_entity": "Star_Wars_Rebels"}
{"question": "who was Callie Torres created by?", "answer": "Shonda Rhimes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shonda Rhimes"], "entity_annotations": ["Callie Torres"], "answer_entity_name": null, "predicted_answer": "Callie Torres was created by Shonda Rhimes", "extracted_entity": "Callie_Torres"}
{"question": "who was Welcome Back, Kotter created by?", "answer": "Gabe Kaplan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gabe Kaplan"], "entity_annotations": ["Welcome Back, Kotter"], "answer_entity_name": null, "predicted_answer": "Welcome Back, Kotter was created by Gabe", "extracted_entity": "Welcome_Back,_Kotter"}
{"question": "who was Midnight Club 3: DUB Edition created by?", "answer": "Rockstar Games", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rockstar Games"], "entity_annotations": ["Midnight Club 3: DUB Edition"], "answer_entity_name": null, "predicted_answer": "Rockstar San Diego", "extracted_entity": "Midnight_Club_3:_DUB_Edition"}
{"question": "who was Within These Walls created by?", "answer": "David Butler", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Butler"], "entity_annotations": ["Within These Walls"], "answer_entity_name": null, "predicted_answer": "David Butler.", "extracted_entity": "Within_These_Walls"}
{"question": "who was Codename: Kids Next Door created by?", "answer": "Tom Warburton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tom Warburton"], "entity_annotations": ["Codename: Kids Next Door"], "answer_entity_name": null, "predicted_answer": "Mr. Warburton.", "extracted_entity": "Codename:_Kids_Next_Door"}
{"question": "who was This Hour Has Seven Days created by?", "answer": "Patrick Watson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Patrick Watson"], "entity_annotations": ["This Hour Has Seven Days"], "answer_entity_name": null, "predicted_answer": "Patrick Watson and Douglas Leiterman.", "extracted_entity": "This_Hour_Has_Seven_Days"}
{"question": "who was The Munsters created by?", "answer": "Allan Burns", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Allan Burns"], "entity_annotations": ["The Munsters"], "answer_entity_name": null, "predicted_answer": "The Munsters was created by Allan Burns, Chris", "extracted_entity": "The_Munsters"}
{"question": "who was Dog created by?", "answer": "Alyx Vance", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alyx Vance"], "entity_annotations": ["Dog"], "answer_entity_name": null, "predicted_answer": "Linnaeus", "extracted_entity": "Dog"}
{"question": "who was Everwood created by?", "answer": "Greg Berlanti", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Greg Berlanti"], "entity_annotations": ["Everwood"], "answer_entity_name": null, "predicted_answer": "Greg Berlanti", "extracted_entity": "Everwood"}
{"question": "who was Black Books created by?", "answer": "Graham Linehan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Graham Linehan"], "entity_annotations": ["Black Books"], "answer_entity_name": null, "predicted_answer": "Dylan Moran and Graham Linehan", "extracted_entity": "Black_Books"}
{"question": "who was Jack & Bobby created by?", "answer": "Greg Berlanti", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Greg Berlanti"], "entity_annotations": ["Jack & Bobby"], "answer_entity_name": null, "predicted_answer": "Greg Berlanti, Vanessa Taylor, Steven A", "extracted_entity": "Jack_&_Bobby"}
{"question": "who was Comics Unleashed created by?", "answer": "Byron Allen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Byron Allen"], "entity_annotations": ["Comics Unleashed"], "answer_entity_name": null, "predicted_answer": "Byron Allen", "extracted_entity": "Comics_Unleashed"}
{"question": "who was Saturday Night Live created by?", "answer": "Lorne Michaels", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lorne Michaels"], "entity_annotations": ["Saturday Night Live"], "answer_entity_name": null, "predicted_answer": "Lorne Michaels", "extracted_entity": "Saturday_Night_Live"}
{"question": "who was The Fairly OddParents created by?", "answer": "Butch Hartman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Butch Hartman"], "entity_annotations": ["The Fairly OddParents"], "answer_entity_name": null, "predicted_answer": "Butch Hartman", "extracted_entity": "The_Fairly_OddParents"}
{"question": "who was Australia's Funniest Home Videos created by?", "answer": "Vin Di Bona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vin Di Bona"], "entity_annotations": ["Australia's Funniest Home Videos"], "answer_entity_name": null, "predicted_answer": "Vin Di Bona", "extracted_entity": "Australia's_Funniest_Home_Videos"}
{"question": "who was Father Murphy created by?", "answer": "Michael Landon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Michael Landon"], "entity_annotations": ["Father Murphy"], "answer_entity_name": null, "predicted_answer": "Michael Landon", "extracted_entity": "Father_Murphy"}
{"question": "who was Dawn Summers created by?", "answer": "David Fury", "dataset": "entity_questions", "split": "test", "answer_aliases": ["David Fury", "Joss Whedon"], "entity_annotations": ["Dawn Summers"], "answer_entity_name": null, "predicted_answer": "Joss Whedon", "extracted_entity": "Dawn_Summers"}
{"question": "who was 2 Broke Girls created by?", "answer": "Whitney Cummings", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Whitney Cummings"], "entity_annotations": ["2 Broke Girls"], "answer_entity_name": null, "predicted_answer": "Michael Patrick King and Whitney Cummings", "extracted_entity": "2_Broke_Girls"}
{"question": "who was Dick Grayson created by?", "answer": "Bob Kane", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bob Kane"], "entity_annotations": ["Dick Grayson"], "answer_entity_name": null, "predicted_answer": "Bill Finger and Bob Kane", "extracted_entity": "Dick_Grayson"}
{"question": "who was Fredo Corleone created by?", "answer": "Mario Puzo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mario Puzo"], "entity_annotations": ["Fredo Corleone"], "answer_entity_name": null, "predicted_answer": "Mario Puzo", "extracted_entity": "Fredo_Corleone"}
{"question": "who was Gilligan's Island created by?", "answer": "Sherwood Schwartz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sherwood Schwartz"], "entity_annotations": ["Gilligan's Island"], "answer_entity_name": null, "predicted_answer": "Sherwood Schwartz", "extracted_entity": "Gilligan's_Island"}
{"question": "who was Adoration of the Shepherds created by?", "answer": "Giorgione", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Giorgione"], "entity_annotations": ["Adoration of the Shepherds"], "answer_entity_name": null, "predicted_answer": "Adoration of the Shepherds was created by", "extracted_entity": "Adoration_of_the_Shepherds"}
{"question": "who was Firefly created by?", "answer": "Joss Whedon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joss Whedon"], "entity_annotations": ["Firefly"], "answer_entity_name": null, "predicted_answer": "Firefly was created by Joss Whedon", "extracted_entity": "Firefly"}
{"question": "who was The Quatermass Experiment created by?", "answer": "Nigel Kneale", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nigel Kneale"], "entity_annotations": ["The Quatermass Experiment"], "answer_entity_name": null, "predicted_answer": "Nigel Kneale", "extracted_entity": "The_Quatermass_Experiment"}
{"question": "who was Last Supper created by?", "answer": "Andrea del Castagno", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Andrea del Castagno"], "entity_annotations": ["Last Supper"], "answer_entity_name": null, "predicted_answer": "Leonardo da Vinci", "extracted_entity": "Last_Supper"}
{"question": "who was Equestrian statue of Frederick the Great created by?", "answer": "Christian Daniel Rauch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Christian Daniel Rauch"], "entity_annotations": ["Equestrian statue of Frederick the Great"], "answer_entity_name": null, "predicted_answer": "Christian Daniel Rauch", "extracted_entity": "Equestrian_statue_of_Frederick_the_Great"}
{"question": "who was My Wife and Kids created by?", "answer": "Don Reo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Don Reo"], "entity_annotations": ["My Wife and Kids"], "answer_entity_name": null, "predicted_answer": "My Wife and Kids was created by Damon Wayans", "extracted_entity": "My_Wife_and_Kids"}
{"question": "who was The Ellen DeGeneres Show created by?", "answer": "Ellen DeGeneres", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ellen DeGeneres"], "entity_annotations": ["The Ellen DeGeneres Show"], "answer_entity_name": null, "predicted_answer": "Ellen DeGeneres", "extracted_entity": "The_Ellen_DeGeneres_Show"}
{"question": "who was If I Can Dream created by?", "answer": "Simon Fuller", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Simon Fuller"], "entity_annotations": ["If I Can Dream"], "answer_entity_name": null, "predicted_answer": "Elvis Presley", "extracted_entity": "If_I_Can_Dream"}
{"question": "who was Sunlight created by?", "answer": "Frank Weston Benson", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frank Weston Benson"], "entity_annotations": ["Sunlight"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Sunlight"}
{"question": "who was Criss Angel Mindfreak created by?", "answer": "Criss Angel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Criss Angel"], "entity_annotations": ["Criss Angel Mindfreak"], "answer_entity_name": null, "predicted_answer": "Criss Angel", "extracted_entity": "Criss_Angel_Mindfreak"}
{"question": "who was King Claudius created by?", "answer": "William Shakespeare", "dataset": "entity_questions", "split": "test", "answer_aliases": ["William Shakespeare"], "entity_annotations": ["King Claudius"], "answer_entity_name": null, "predicted_answer": "William Shakespeare", "extracted_entity": "King_Claudius"}
{"question": "who was You've Got a Friend created by?", "answer": "Jason Goldberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Jason Goldberg"], "entity_annotations": ["You've Got a Friend"], "answer_entity_name": null, "predicted_answer": "Carole King.", "extracted_entity": "You've_Got_a_Friend"}
{"question": "who was Porridge created by?", "answer": "Dick Clement", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dick Clement"], "entity_annotations": ["Porridge"], "answer_entity_name": null, "predicted_answer": "Porridge was created by Ronnie Barker, who was", "extracted_entity": "Porridge"}
{"question": "who was Fantasmic! created by?", "answer": "Walt Disney Creative Entertainment", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Walt Disney Creative Entertainment"], "entity_annotations": ["Fantasmic!"], "answer_entity_name": null, "predicted_answer": "Walt Disney Creative Entertainment.", "extracted_entity": "Fantasmic!"}
{"question": "who was Caleb created by?", "answer": "Joss Whedon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joss Whedon"], "entity_annotations": ["Caleb"], "answer_entity_name": null, "predicted_answer": "Caleb was created by", "extracted_entity": "Caleb"}
{"question": "who was Gilmore Girls created by?", "answer": "Amy Sherman-Palladino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amy Sherman-Palladino"], "entity_annotations": ["Gilmore Girls"], "answer_entity_name": null, "predicted_answer": "Amy Sherman-Palladino", "extracted_entity": "Gilmore_Girls"}
{"question": "who was Bulma created by?", "answer": "Akira Toriyama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Akira Toriyama"], "entity_annotations": ["Bulma"], "answer_entity_name": null, "predicted_answer": "Toriyama", "extracted_entity": "Bulma"}
{"question": "who was Bundesvision Song Contest created by?", "answer": "Stefan Raab", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stefan Raab"], "entity_annotations": ["Bundesvision Song Contest"], "answer_entity_name": null, "predicted_answer": "German entertainer Stefan Raab.", "extracted_entity": "Bundesvision_Song_Contest"}
{"question": "what position does Juan Santisteban play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Juan Santisteban"], "answer_entity_name": null, "predicted_answer": "Juan Santisteban is a midfielder", "extracted_entity": "Juan_Santisteban"}
{"question": "what position does Bob Feller play?", "answer": "starting pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["starting pitcher"], "entity_annotations": ["Bob Feller"], "answer_entity_name": null, "predicted_answer": "pitcher", "extracted_entity": "Bob_Feller"}
{"question": "what position does Kris Brown play?", "answer": "placekicker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["placekicker"], "entity_annotations": ["Kris Brown"], "answer_entity_name": null, "predicted_answer": "Kris Brown plays as a placekicker.", "extracted_entity": "Kris_Brown"}
{"question": "what position does Mason Williams play?", "answer": "outfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["outfielder"], "entity_annotations": ["Mason Williams"], "answer_entity_name": null, "predicted_answer": "Mason Williams plays classical guitar", "extracted_entity": "Mason_Williams"}
{"question": "what position does Dirk Nowitzki play?", "answer": "power forward", "dataset": "entity_questions", "split": "test", "answer_aliases": ["power forward"], "entity_annotations": ["Dirk Nowitzki"], "answer_entity_name": null, "predicted_answer": "Forward", "extracted_entity": "Dirk_Nowitzki"}
{"question": "what position does Chris Hughes play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Chris Hughes"], "answer_entity_name": null, "predicted_answer": "Chris Hughes is a entrepreneur and author", "extracted_entity": "Chris_Hughes"}
{"question": "what position does Ken O'Brien play?", "answer": "quarterback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["quarterback"], "entity_annotations": ["Ken O'Brien"], "answer_entity_name": null, "predicted_answer": "quarterback", "extracted_entity": "Ken_O'Brien"}
{"question": "what position does Glenn Healy play?", "answer": "goaltender", "dataset": "entity_questions", "split": "test", "answer_aliases": ["goaltender"], "entity_annotations": ["Glenn Healy"], "answer_entity_name": null, "predicted_answer": "Glenn Healy is a Canadian former professional ice hockey", "extracted_entity": "Glenn_Healy"}
{"question": "what position does Bobby Hebert play?", "answer": "quarterback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["quarterback"], "entity_annotations": ["Bobby Hebert"], "answer_entity_name": null, "predicted_answer": "Bobby Hebert plays the position of quarterback.", "extracted_entity": "Bobby_Hebert"}
{"question": "what position does Vince Coleman play?", "answer": "outfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["outfielder"], "entity_annotations": ["Vince Coleman"], "answer_entity_name": null, "predicted_answer": "Vince Coleman is a Left Fielder.", "extracted_entity": "Vince_Coleman"}
{"question": "what position does Didier Deschamps play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Didier Deschamps"], "answer_entity_name": null, "predicted_answer": "Didier Deschamps is a Midfielder", "extracted_entity": "Didier_Deschamps"}
{"question": "what position does \u00c1ngel Di Mar\u00eda play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["\u00c1ngel Di Mar\u00eda"], "answer_entity_name": null, "predicted_answer": "\u00c1ngel Di Mar\u00eda plays as a right winger", "extracted_entity": "\u00c1ngel_Di_Mar\u00eda"}
{"question": "what position does Mario Stani\u0107 play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Mario Stani\u0107"], "answer_entity_name": null, "predicted_answer": "Mario Stani\u0107 plays in the Forward position", "extracted_entity": "Mario_Stani\u0107"}
{"question": "what position does Brett Hundley play?", "answer": "quarterback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["quarterback"], "entity_annotations": ["Brett Hundley"], "answer_entity_name": null, "predicted_answer": "quarterback", "extracted_entity": "Brett_Hundley"}
{"question": "what position does Stephon Gilmore play?", "answer": "cornerback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["cornerback"], "entity_annotations": ["Stephon Gilmore"], "answer_entity_name": null, "predicted_answer": "Stephon Gilmore plays cornerback for the Dallas Cowboys", "extracted_entity": "Stephon_Gilmore"}
{"question": "what position does Emmanuel Sanders play?", "answer": "wide receiver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["wide receiver"], "entity_annotations": ["Emmanuel Sanders"], "answer_entity_name": null, "predicted_answer": "wide receiver", "extracted_entity": "Emmanuel_Sanders"}
{"question": "what position does Joe Ledley play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Joe Ledley"], "answer_entity_name": null, "predicted_answer": "Joe Ledley plays as a Central Midfielder", "extracted_entity": "Joe_Ledley"}
{"question": "what position does Ken Daneyko play?", "answer": "defenceman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["defenceman"], "entity_annotations": ["Ken Daneyko"], "answer_entity_name": null, "predicted_answer": "Ken Daneyko plays as a defenceman", "extracted_entity": "Ken_Daneyko"}
{"question": "what position does Eric Moulds play?", "answer": "wide receiver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["wide receiver"], "entity_annotations": ["Eric Moulds"], "answer_entity_name": null, "predicted_answer": "Eric Moulds plays the position of Wide Receiver", "extracted_entity": "Eric_Moulds"}
{"question": "what position does Johnny Pesky play?", "answer": "shortstop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["shortstop"], "entity_annotations": ["Johnny Pesky"], "answer_entity_name": null, "predicted_answer": "shortstop", "extracted_entity": "Johnny_Pesky"}
{"question": "what position does Terence Newman play?", "answer": "cornerback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["cornerback"], "entity_annotations": ["Terence Newman"], "answer_entity_name": null, "predicted_answer": "cornerback", "extracted_entity": "Terence_Newman"}
{"question": "what position does Sid Fernandez play?", "answer": "pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pitcher"], "entity_annotations": ["Sid Fernandez"], "answer_entity_name": null, "predicted_answer": "itcher", "extracted_entity": "Sid_Fernandez"}
{"question": "what position does Michael Madsen play?", "answer": "goaltender", "dataset": "entity_questions", "split": "test", "answer_aliases": ["goaltender"], "entity_annotations": ["Michael Madsen"], "answer_entity_name": null, "predicted_answer": "Michael Madsen plays the role of an actor", "extracted_entity": "Michael_Madsen"}
{"question": "what position does Brandon Webb play?", "answer": "pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pitcher"], "entity_annotations": ["Brandon Webb"], "answer_entity_name": null, "predicted_answer": "Brandon Webb is a pitcher.", "extracted_entity": "Brandon_Webb"}
{"question": "what position does Aaron Ekblad play?", "answer": "defenceman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["defenceman"], "entity_annotations": ["Aaron Ekblad"], "answer_entity_name": null, "predicted_answer": "He is a defenceman", "extracted_entity": "Aaron_Ekblad"}
{"question": "what position does Octavio Zambrano play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Octavio Zambrano"], "answer_entity_name": null, "predicted_answer": "idfielder", "extracted_entity": "Octavio_Zambrano"}
{"question": "what position does Alfredo Griffin play?", "answer": "shortstop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["shortstop"], "entity_annotations": ["Alfredo Griffin"], "answer_entity_name": null, "predicted_answer": "shortstop", "extracted_entity": "Alfredo_Griffin"}
{"question": "what position does Kent Graham play?", "answer": "quarterback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["quarterback"], "entity_annotations": ["Kent Graham"], "answer_entity_name": null, "predicted_answer": "quarterback", "extracted_entity": "Kent_Graham"}
{"question": "what position does Rich Karlis play?", "answer": "placekicker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["placekicker"], "entity_annotations": ["Rich Karlis"], "answer_entity_name": null, "predicted_answer": "placekicker", "extracted_entity": "Rich_Karlis"}
{"question": "what position does Matt Schaub play?", "answer": "quarterback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["quarterback"], "entity_annotations": ["Matt Schaub"], "answer_entity_name": null, "predicted_answer": "Quarterback", "extracted_entity": "Matt_Schaub"}
{"question": "what position does Billy Kilmer play?", "answer": "quarterback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["quarterback"], "entity_annotations": ["Billy Kilmer"], "answer_entity_name": null, "predicted_answer": "quarterback", "extracted_entity": "Billy_Kilmer"}
{"question": "what position does Adam Clayton play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Adam Clayton"], "answer_entity_name": null, "predicted_answer": "bass guitarist", "extracted_entity": "Adam_Clayton"}
{"question": "what position does Ozzie Guill\u00e9n play?", "answer": "shortstop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["shortstop"], "entity_annotations": ["Ozzie Guill\u00e9n"], "answer_entity_name": null, "predicted_answer": "shortstop", "extracted_entity": "Ozzie_Guill\u00e9n"}
{"question": "what position does A. J. Pierzynski play?", "answer": "catcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["catcher"], "entity_annotations": ["A. J. Pierzynski"], "answer_entity_name": null, "predicted_answer": "Catcher", "extracted_entity": "A._J._Pierzynski"}
{"question": "what position does Jon Rauch play?", "answer": "relief pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["relief pitcher"], "entity_annotations": ["Jon Rauch"], "answer_entity_name": null, "predicted_answer": "er", "extracted_entity": "Jon_Rauch"}
{"question": "what position does Dante Hall play?", "answer": "wide receiver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["wide receiver"], "entity_annotations": ["Dante Hall"], "answer_entity_name": null, "predicted_answer": "Dante Hall plays wide receiver.", "extracted_entity": "Dante_Hall"}
{"question": "what position does Dennis Franklin play?", "answer": "quarterback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["quarterback"], "entity_annotations": ["Dennis Franklin"], "answer_entity_name": null, "predicted_answer": "quarterback", "extracted_entity": "Dennis_Franklin"}
{"question": "what position does Kurt Suzuki play?", "answer": "catcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["catcher"], "entity_annotations": ["Kurt Suzuki"], "answer_entity_name": null, "predicted_answer": "atcher", "extracted_entity": "Kurt_Suzuki"}
{"question": "what position does Fara Williams play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Fara Williams"], "answer_entity_name": null, "predicted_answer": "central midfielder", "extracted_entity": "Fara_Williams"}
{"question": "what position does Megan Rapinoe play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Megan Rapinoe"], "answer_entity_name": null, "predicted_answer": "Megan Rapinoe is an American professional soccer player", "extracted_entity": "Megan_Rapinoe"}
{"question": "what position does Pekka Rinne play?", "answer": "goaltender", "dataset": "entity_questions", "split": "test", "answer_aliases": ["goaltender"], "entity_annotations": ["Pekka Rinne"], "answer_entity_name": null, "predicted_answer": "Pekka Rinne plays in position Goaltender", "extracted_entity": "Pekka_Rinne"}
{"question": "what position does Brian Urlacher play?", "answer": "linebacker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["linebacker"], "entity_annotations": ["Brian Urlacher"], "answer_entity_name": null, "predicted_answer": "linebacker", "extracted_entity": "Brian_Urlacher"}
{"question": "what position does Mordecai Brown play?", "answer": "pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pitcher"], "entity_annotations": ["Mordecai Brown"], "answer_entity_name": null, "predicted_answer": "pitcher", "extracted_entity": "Mordecai_Brown"}
{"question": "what position does George Abbott play?", "answer": "goaltender", "dataset": "entity_questions", "split": "test", "answer_aliases": ["goaltender"], "entity_annotations": ["George Abbott"], "answer_entity_name": null, "predicted_answer": "George Abbott plays the role of a producer, director", "extracted_entity": "George_Abbott"}
{"question": "what position does Roberto Luongo play?", "answer": "goaltender", "dataset": "entity_questions", "split": "test", "answer_aliases": ["goaltender"], "entity_annotations": ["Roberto Luongo"], "answer_entity_name": null, "predicted_answer": "Roberto Luongo is a Canadian former professional ice hockey", "extracted_entity": "Roberto_Luongo"}
{"question": "what position does Darryl Kile play?", "answer": "starting pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["starting pitcher"], "entity_annotations": ["Darryl Kile"], "answer_entity_name": null, "predicted_answer": "arryl Kile plays the position of Pitch", "extracted_entity": "Darryl_Kile"}
{"question": "what position does Dick Butkus play?", "answer": "linebacker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["linebacker"], "entity_annotations": ["Dick Butkus"], "answer_entity_name": null, "predicted_answer": "linebacker", "extracted_entity": "Dick_Butkus"}
{"question": "what position does Yu Darvish play?", "answer": "starting pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["starting pitcher"], "entity_annotations": ["Yu Darvish"], "answer_entity_name": null, "predicted_answer": "Yu Darvish is a Japanese professional baseball pitcher", "extracted_entity": "Yu_Darvish"}
{"question": "what position does Jess Fishlock play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Jess Fishlock"], "answer_entity_name": null, "predicted_answer": "Jess Fishlock plays as a midfielder.", "extracted_entity": "Jess_Fishlock"}
{"question": "what position does Zlatko Zahovi\u010d play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Zlatko Zahovi\u010d"], "answer_entity_name": null, "predicted_answer": "Zlatko Zahovi\u010d is an Attacking", "extracted_entity": "Zlatko_Zahovi\u010d"}
{"question": "what position does Cam Newton play?", "answer": "quarterback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["quarterback"], "entity_annotations": ["Cam Newton"], "answer_entity_name": null, "predicted_answer": "quarterback", "extracted_entity": "Cam_Newton"}
{"question": "what position does Scott Podsednik play?", "answer": "outfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["outfielder"], "entity_annotations": ["Scott Podsednik"], "answer_entity_name": null, "predicted_answer": "outfielder", "extracted_entity": "Scott_Podsednik"}
{"question": "what position does Frank Viola play?", "answer": "starting pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["starting pitcher"], "entity_annotations": ["Frank Viola"], "answer_entity_name": null, "predicted_answer": "Frank Viola is a pitcher.", "extracted_entity": "Frank_Viola"}
{"question": "what position does Muhsin Muhammad play?", "answer": "wide receiver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["wide receiver"], "entity_annotations": ["Muhsin Muhammad"], "answer_entity_name": null, "predicted_answer": "Wide Receiver", "extracted_entity": "Muhsin_Muhammad"}
{"question": "what position does Brad McCrimmon play?", "answer": "defenceman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["defenceman"], "entity_annotations": ["Brad McCrimmon"], "answer_entity_name": null, "predicted_answer": "defenceman", "extracted_entity": "Brad_McCrimmon"}
{"question": "what position does Evgeni Nabokov play?", "answer": "goaltender", "dataset": "entity_questions", "split": "test", "answer_aliases": ["goaltender"], "entity_annotations": ["Evgeni Nabokov"], "answer_entity_name": null, "predicted_answer": "Goaltender", "extracted_entity": "Evgeni_Nabokov"}
{"question": "what position does Brett Anderson play?", "answer": "pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pitcher"], "entity_annotations": ["Brett Anderson"], "answer_entity_name": null, "predicted_answer": "He is a singer.", "extracted_entity": "Brett_Anderson"}
{"question": "what position does Fabian Frei play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Fabian Frei"], "answer_entity_name": null, "predicted_answer": "defensive midfielder", "extracted_entity": "Fabian_Frei"}
{"question": "what position does Don Drysdale play?", "answer": "pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pitcher"], "entity_annotations": ["Don Drysdale"], "answer_entity_name": null, "predicted_answer": "Pitcher", "extracted_entity": "Don_Drysdale"}
{"question": "what position does Isaiah Rider play?", "answer": "shooting guard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["shooting guard"], "entity_annotations": ["Isaiah Rider"], "answer_entity_name": null, "predicted_answer": "guard", "extracted_entity": "Isaiah_Rider"}
{"question": "what position does Vontae Davis play?", "answer": "cornerback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["cornerback"], "entity_annotations": ["Vontae Davis"], "answer_entity_name": null, "predicted_answer": "cornerback", "extracted_entity": "Vontae_Davis"}
{"question": "what position does Joe Girardi play?", "answer": "catcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["catcher"], "entity_annotations": ["Joe Girardi"], "answer_entity_name": null, "predicted_answer": "Girardi played the catcher position", "extracted_entity": "Joe_Girardi"}
{"question": "what position does Roberto Di Matteo play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Roberto Di Matteo"], "answer_entity_name": null, "predicted_answer": "midfielder", "extracted_entity": "Roberto_Di_Matteo"}
{"question": "what position does Danny Trevathan play?", "answer": "linebacker", "dataset": "entity_questions", "split": "test", "answer_aliases": ["linebacker"], "entity_annotations": ["Danny Trevathan"], "answer_entity_name": null, "predicted_answer": "Inside linebacker", "extracted_entity": "Danny_Trevathan"}
{"question": "what position does Rivaldo play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Rivaldo"], "answer_entity_name": null, "predicted_answer": "Rivaldo is a midfielder", "extracted_entity": "Rivaldo"}
{"question": "what position does Victor Hedman play?", "answer": "defenceman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["defenceman"], "entity_annotations": ["Victor Hedman"], "answer_entity_name": null, "predicted_answer": "Defenseman", "extracted_entity": "Victor_Hedman"}
{"question": "what position does Warren Spahn play?", "answer": "pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pitcher"], "entity_annotations": ["Warren Spahn"], "answer_entity_name": null, "predicted_answer": "He is a pitcher", "extracted_entity": "Warren_Spahn"}
{"question": "what position does Tim Lincecum play?", "answer": "pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pitcher"], "entity_annotations": ["Tim Lincecum"], "answer_entity_name": null, "predicted_answer": "itcher", "extracted_entity": "Tim_Lincecum"}
{"question": "what position does Rick Porcello play?", "answer": "pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pitcher"], "entity_annotations": ["Rick Porcello"], "answer_entity_name": null, "predicted_answer": "Pitcher", "extracted_entity": "Rick_Porcello"}
{"question": "what position does Kelvim Escobar play?", "answer": "pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pitcher"], "entity_annotations": ["Kelvim Escobar"], "answer_entity_name": null, "predicted_answer": "Kelvim Escobar is a baseball player (Pitch", "extracted_entity": "Kelvim_Escobar"}
{"question": "what position does Wayne Burnett play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Wayne Burnett"], "answer_entity_name": null, "predicted_answer": "Wayne Burnett plays in the Midfield position", "extracted_entity": "Wayne_Burnett"}
{"question": "what position does O. J. Simpson play?", "answer": "running back", "dataset": "entity_questions", "split": "test", "answer_aliases": ["running back"], "entity_annotations": ["O. J. Simpson"], "answer_entity_name": null, "predicted_answer": "He plays running back.", "extracted_entity": "O._J._Simpson"}
{"question": "what position does Jeff Rutledge play?", "answer": "quarterback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["quarterback"], "entity_annotations": ["Jeff Rutledge"], "answer_entity_name": null, "predicted_answer": "quarterback", "extracted_entity": "Jeff_Rutledge"}
{"question": "what position does Kimmo Timonen play?", "answer": "defenceman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["defenceman"], "entity_annotations": ["Kimmo Timonen"], "answer_entity_name": null, "predicted_answer": "Kimmo Timonen plays Defenseman", "extracted_entity": "Kimmo_Timonen"}
{"question": "what position does Darren McFadden play?", "answer": "running back", "dataset": "entity_questions", "split": "test", "answer_aliases": ["running back"], "entity_annotations": ["Darren McFadden"], "answer_entity_name": null, "predicted_answer": "running back", "extracted_entity": "Darren_McFadden"}
{"question": "what position does Jyrki Lumme play?", "answer": "defenceman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["defenceman"], "entity_annotations": ["Jyrki Lumme"], "answer_entity_name": null, "predicted_answer": "Jyrki Lumme plays Defenseman.", "extracted_entity": "Jyrki_Lumme"}
{"question": "what position does Josh Gibson play?", "answer": "catcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["catcher"], "entity_annotations": ["Josh Gibson"], "answer_entity_name": null, "predicted_answer": "He plays catcher.", "extracted_entity": "Josh_Gibson"}
{"question": "what position does Larry Hughes play?", "answer": "shooting guard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["shooting guard"], "entity_annotations": ["Larry Hughes"], "answer_entity_name": null, "predicted_answer": "point guard", "extracted_entity": "Larry_Hughes"}
{"question": "what position does Juan Cuadrado play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Juan Cuadrado"], "answer_entity_name": null, "predicted_answer": "Juan Cuadrado plays as a winger.", "extracted_entity": "Juan_Cuadrado"}
{"question": "what position does Micheal Spurlock play?", "answer": "wide receiver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["wide receiver"], "entity_annotations": ["Micheal Spurlock"], "answer_entity_name": null, "predicted_answer": "Micheal Spurlock plays Wide Receiver.", "extracted_entity": "Micheal_Spurlock"}
{"question": "what position does Darron Gibson play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Darron Gibson"], "answer_entity_name": null, "predicted_answer": "midfielder", "extracted_entity": "Darron_Gibson"}
{"question": "what position does Alex Smith play?", "answer": "quarterback", "dataset": "entity_questions", "split": "test", "answer_aliases": ["quarterback"], "entity_annotations": ["Alex Smith"], "answer_entity_name": null, "predicted_answer": "He is a quarterback", "extracted_entity": "Alex_Smith"}
{"question": "what position does Dave Martinez play?", "answer": "outfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["outfielder"], "entity_annotations": ["Dave Martinez"], "answer_entity_name": null, "predicted_answer": "outfielder", "extracted_entity": "Dave_Martinez"}
{"question": "what position does Christy Mathewson play?", "answer": "pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["pitcher"], "entity_annotations": ["Christy Mathewson"], "answer_entity_name": null, "predicted_answer": "he is a baseball player", "extracted_entity": "Christy_Mathewson"}
{"question": "what position does David Givens play?", "answer": "wide receiver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["wide receiver"], "entity_annotations": ["David Givens"], "answer_entity_name": null, "predicted_answer": "wide receiver", "extracted_entity": "David_Givens"}
{"question": "what position does Jake Diekman play?", "answer": "relief pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["relief pitcher"], "entity_annotations": ["Jake Diekman"], "answer_entity_name": null, "predicted_answer": "Jake Diekman plays as a Pitcher.", "extracted_entity": "Jake_Diekman"}
{"question": "what position does Tommy McLean play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Tommy McLean"], "answer_entity_name": null, "predicted_answer": "He played as a midfielder.", "extracted_entity": "Tommy_McLean"}
{"question": "what position does Moussa Sissoko play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Moussa Sissoko"], "answer_entity_name": null, "predicted_answer": "He plays as midfielder for club Nantes. He", "extracted_entity": "Moussa_Sissoko"}
{"question": "what position does Leon Osman play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Leon Osman"], "answer_entity_name": null, "predicted_answer": "midfielder", "extracted_entity": "Leon_Osman"}
{"question": "what position does Tiny Thompson play?", "answer": "goaltender", "dataset": "entity_questions", "split": "test", "answer_aliases": ["goaltender"], "entity_annotations": ["Tiny Thompson"], "answer_entity_name": null, "predicted_answer": "he plays as a goaltender", "extracted_entity": "Tiny_Thompson"}
{"question": "what position does A. J. Ellis play?", "answer": "catcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["catcher"], "entity_annotations": ["A. J. Ellis"], "answer_entity_name": null, "predicted_answer": "atcher", "extracted_entity": "A._J._Ellis"}
{"question": "what position does Craig Noone play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Craig Noone"], "answer_entity_name": null, "predicted_answer": "winger", "extracted_entity": "Craig_Noone"}
{"question": "what position does Mile Sterjovski play?", "answer": "midfielder", "dataset": "entity_questions", "split": "test", "answer_aliases": ["midfielder"], "entity_annotations": ["Mile Sterjovski"], "answer_entity_name": null, "predicted_answer": "Mile Sterjovski plays as a forward.", "extracted_entity": "Mile_Sterjovski"}
{"question": "what position does Brent Seabrook play?", "answer": "defenceman", "dataset": "entity_questions", "split": "test", "answer_aliases": ["defenceman"], "entity_annotations": ["Brent Seabrook"], "answer_entity_name": null, "predicted_answer": "he plays as a defenceman", "extracted_entity": "Brent_Seabrook"}
{"question": "what position does Adam Wainwright play?", "answer": "starting pitcher", "dataset": "entity_questions", "split": "test", "answer_aliases": ["starting pitcher"], "entity_annotations": ["Adam Wainwright"], "answer_entity_name": null, "predicted_answer": "Pitcher", "extracted_entity": "Adam_Wainwright"}
{"question": "where was Bill Sharman educated?", "answer": "University of Southern California", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Southern California"], "entity_annotations": ["Bill Sharman"], "answer_entity_name": null, "predicted_answer": "University of Southern California", "extracted_entity": "Bill_Sharman"}
{"question": "where was Chris Sanders educated?", "answer": "Ohio State University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ohio State University"], "entity_annotations": ["Chris Sanders"], "answer_entity_name": null, "predicted_answer": "He was educated at California Institute of the Arts.", "extracted_entity": "Chris_Sanders"}
{"question": "where was Pehr Evind Svinhufvud educated?", "answer": "University of Helsinki", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Helsinki"], "entity_annotations": ["Pehr Evind Svinhufvud"], "answer_entity_name": null, "predicted_answer": "Pehr Evind Svinhufvud", "extracted_entity": "Pehr_Evind_Svinhufvud"}
{"question": "where was Joseph Kabila educated?", "answer": "Makerere University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Makerere University"], "entity_annotations": ["Joseph Kabila"], "answer_entity_name": null, "predicted_answer": "Joseph Kabila was educated in the Democratic Republic of", "extracted_entity": "Joseph_Kabila"}
{"question": "where was Reuben Fine educated?", "answer": "University of Southern California", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Southern California", "City College of New York"], "entity_annotations": ["Reuben Fine"], "answer_entity_name": null, "predicted_answer": "Fine was educated at the City College of New York", "extracted_entity": "Reuben_Fine"}
{"question": "where was Paul Finebaum educated?", "answer": "University of Tennessee", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Tennessee"], "entity_annotations": ["Paul Finebaum"], "answer_entity_name": null, "predicted_answer": "Paul Finebaum was educated at the University of Alabama", "extracted_entity": "Paul_Finebaum"}
{"question": "where was Jack Clancy educated?", "answer": "University of Michigan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Michigan"], "entity_annotations": ["Jack Clancy"], "answer_entity_name": null, "predicted_answer": "University of Michigan", "extracted_entity": "Jack_Clancy"}
{"question": "where was Carl St\u00e5l educated?", "answer": "Uppsala University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Uppsala University"], "entity_annotations": ["Carl St\u00e5l"], "answer_entity_name": null, "predicted_answer": "Uppsala University", "extracted_entity": "Carl_St\u00e5l"}
{"question": "where was Fred Coe educated?", "answer": "Yale School of Drama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yale School of Drama", "Peabody College"], "entity_annotations": ["Fred Coe"], "answer_entity_name": null, "predicted_answer": "He attended Peabody Demonstration School in Nashville", "extracted_entity": "Fred_Coe"}
{"question": "where was Eugene Talmadge educated?", "answer": "University of Georgia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Georgia"], "entity_annotations": ["Eugene Talmadge"], "answer_entity_name": null, "predicted_answer": "University of Georgia", "extracted_entity": "Eugene_Talmadge"}
{"question": "where was Channing H. Cox educated?", "answer": "Dartmouth College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dartmouth College"], "entity_annotations": ["Channing H. Cox"], "answer_entity_name": null, "predicted_answer": "Channing H. Cox attended the Manchester public schools", "extracted_entity": "Channing_H._Cox"}
{"question": "where was Archibald Primrose, 5th Earl of Rosebery educated?", "answer": "Eton College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eton College"], "entity_annotations": ["Archibald Primrose, 5th Earl of Rosebery"], "answer_entity_name": null, "predicted_answer": "Eton College", "extracted_entity": "Archibald_Primrose,_5th_Earl_of_Rosebery"}
{"question": "where was John Mills educated?", "answer": "Merton College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Merton College"], "entity_annotations": ["John Mills"], "answer_entity_name": null, "predicted_answer": "Mills was educated at Balham Grammar School in London", "extracted_entity": "John_Mills"}
{"question": "where was Paul Herget educated?", "answer": "University of Cincinnati", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Cincinnati"], "entity_annotations": ["Paul Herget"], "answer_entity_name": null, "predicted_answer": "Paul Herget was educated at the University of Cincinnati", "extracted_entity": "Paul_Herget"}
{"question": "where was Greg Fischer educated?", "answer": "Vanderbilt University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vanderbilt University"], "entity_annotations": ["Greg Fischer"], "answer_entity_name": null, "predicted_answer": "Greg Fischer was educated at Trinity High School and Vanderbilt", "extracted_entity": "Greg_Fischer"}
{"question": "where was Marvin Stamm educated?", "answer": "University of North Texas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of North Texas"], "entity_annotations": ["Marvin Stamm"], "answer_entity_name": null, "predicted_answer": "Marvin Stamm was educated at North Texas State University", "extracted_entity": "Marvin_Stamm"}
{"question": "where was Steven Levitt educated?", "answer": "Harvard University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harvard University"], "entity_annotations": ["Steven Levitt"], "answer_entity_name": null, "predicted_answer": "Steven Levitt was educated at St. Paul Academy", "extracted_entity": "Steven_Levitt"}
{"question": "where was Patrick Balfour, 3rd Baron Kinross educated?", "answer": "Winchester College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Winchester College"], "entity_annotations": ["Patrick Balfour, 3rd Baron Kinross"], "answer_entity_name": null, "predicted_answer": "Patrick Balfour, 3rd Baron Kin", "extracted_entity": "Patrick_Balfour,_3rd_Baron_Kinross"}
{"question": "where was Sydney Johnson educated?", "answer": "Princeton University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Princeton University"], "entity_annotations": ["Sydney Johnson"], "answer_entity_name": null, "predicted_answer": "He was educated at Princeton University.", "extracted_entity": "Sydney_Johnson"}
{"question": "where was Dennis Brown educated?", "answer": "University of Michigan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Michigan"], "entity_annotations": ["Dennis Brown"], "answer_entity_name": null, "predicted_answer": "Dennis Brown was educated at the Victoria Jubilee Hospital", "extracted_entity": "Dennis_Brown"}
{"question": "where was Greg Henderson educated?", "answer": "University of Otago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Otago"], "entity_annotations": ["Greg Henderson"], "answer_entity_name": null, "predicted_answer": "Greg Henderson was educated at\u00a0University of Otag", "extracted_entity": "Greg_Henderson"}
{"question": "where was Walter Smith educated?", "answer": "United States Military Academy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States Military Academy"], "entity_annotations": ["Walter Smith"], "answer_entity_name": null, "predicted_answer": "Walter Smith was educated at St Mungo's", "extracted_entity": "Walter_Smith"}
{"question": "where was Marvin Davis educated?", "answer": "Southern University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Southern University"], "entity_annotations": ["Marvin Davis"], "answer_entity_name": null, "predicted_answer": "New York University", "extracted_entity": "Marvin_Davis"}
{"question": "where was Sydney Smith educated?", "answer": "University of Edinburgh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Edinburgh"], "entity_annotations": ["Sydney Smith"], "answer_entity_name": null, "predicted_answer": "He was educated at Woodford, Essex, England", "extracted_entity": "Sydney_Smith"}
{"question": "where was Rasmus Rask educated?", "answer": "University of Copenhagen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Copenhagen"], "entity_annotations": ["Rasmus Rask"], "answer_entity_name": null, "predicted_answer": "Rasmus Rask was educated at the Odense", "extracted_entity": "Rasmus_Rask"}
{"question": "where was Millicent Shelton educated?", "answer": "Princeton University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Princeton University"], "entity_annotations": ["Millicent Shelton"], "answer_entity_name": null, "predicted_answer": "Princeton University and New York University\u2019s Tisch School", "extracted_entity": "Millicent_Shelton"}
{"question": "where was John Berryman educated?", "answer": "Columbia University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia University"], "entity_annotations": ["John Berryman"], "answer_entity_name": null, "predicted_answer": "John Berryman was educated at Columbia College.", "extracted_entity": "John_Berryman"}
{"question": "where was Simone Young educated?", "answer": "Sydney Conservatorium of Music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sydney Conservatorium of Music"], "entity_annotations": ["Simone Young"], "answer_entity_name": null, "predicted_answer": "the Sydney Conservatorium of Music.", "extracted_entity": "Simone_Young"}
{"question": "where was Tom Varner educated?", "answer": "New England Conservatory of Music", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New England Conservatory of Music", "City College of New York"], "entity_annotations": ["Tom Varner"], "answer_entity_name": null, "predicted_answer": "Tom Varner was educated at New England Conservatory", "extracted_entity": "Tom_Varner"}
{"question": "where was Charles W. Bryan educated?", "answer": "Illinois College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Illinois College"], "entity_annotations": ["Charles W. Bryan"], "answer_entity_name": null, "predicted_answer": "University of Chicago and Illinois College", "extracted_entity": "Charles_W._Bryan"}
{"question": "where was Dwyane Wade educated?", "answer": "Marquette University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Marquette University"], "entity_annotations": ["Dwyane Wade"], "answer_entity_name": null, "predicted_answer": "Dwyane Wade was educated in Chicago, Illinois", "extracted_entity": "Dwyane_Wade"}
{"question": "where was Ted Cruz educated?", "answer": "Harvard Law School", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harvard Law School", "Princeton University"], "entity_annotations": ["Ted Cruz"], "answer_entity_name": null, "predicted_answer": "Ted Cruz was educated at Princeton University and Harvard Law", "extracted_entity": "Ted_Cruz"}
{"question": "where was Sam Nunn educated?", "answer": "Emory University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Emory University"], "entity_annotations": ["Sam Nunn"], "answer_entity_name": null, "predicted_answer": "He received his undergraduate degree in 1961 and", "extracted_entity": "Sam_Nunn"}
{"question": "where was James Welling educated?", "answer": "California Institute of the Arts", "dataset": "entity_questions", "split": "test", "answer_aliases": ["California Institute of the Arts"], "entity_annotations": ["James Welling"], "answer_entity_name": null, "predicted_answer": "James Welling attended Carnegie-Mellon University where", "extracted_entity": "James_Welling"}
{"question": "where was Darren Aronofsky educated?", "answer": "Harvard University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harvard University"], "entity_annotations": ["Darren Aronofsky"], "answer_entity_name": null, "predicted_answer": "Aronofsky studied film and social anthropology at", "extracted_entity": "Darren_Aronofsky"}
{"question": "where was Nathan Jacobson educated?", "answer": "Princeton University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Princeton University"], "entity_annotations": ["Nathan Jacobson"], "answer_entity_name": null, "predicted_answer": "Nathan Jacobson graduated from the University of Alabama in", "extracted_entity": "Nathan_Jacobson"}
{"question": "where was Sergey Oldenburg educated?", "answer": "Saint Petersburg State University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Saint Petersburg State University"], "entity_annotations": ["Sergey Oldenburg"], "answer_entity_name": null, "predicted_answer": "St. Petersburg University", "extracted_entity": "Sergey_Oldenburg"}
{"question": "where was Lorenzo White educated?", "answer": "Dillard High School", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dillard High School"], "entity_annotations": ["Lorenzo White"], "answer_entity_name": null, "predicted_answer": "Michigan State University", "extracted_entity": "Lorenzo_White"}
{"question": "where was Don Weis educated?", "answer": "University of Southern California", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Southern California"], "entity_annotations": ["Don Weis"], "answer_entity_name": null, "predicted_answer": "the University of Southern California", "extracted_entity": "Don_Weis"}
{"question": "where was Robert Jameson educated?", "answer": "University of Edinburgh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Edinburgh"], "entity_annotations": ["Robert Jameson"], "answer_entity_name": null, "predicted_answer": "University of Edinburgh", "extracted_entity": "Robert_Jameson"}
{"question": "where was Clay Walker educated?", "answer": "University of Southern California", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Southern California"], "entity_annotations": ["Clay Walker"], "answer_entity_name": null, "predicted_answer": "He was educated in Vidor, Texas.", "extracted_entity": "Clay_Walker"}
{"question": "where was Ray Hnatyshyn educated?", "answer": "University of Saskatchewan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Saskatchewan"], "entity_annotations": ["Ray Hnatyshyn"], "answer_entity_name": null, "predicted_answer": "Ray Hnatyshyn was educated in Saskatchewan", "extracted_entity": "Ray_Hnatyshyn"}
{"question": "where was Ami Bou\u00e9 educated?", "answer": "University of Edinburgh", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Edinburgh"], "entity_annotations": ["Ami Bou\u00e9"], "answer_entity_name": null, "predicted_answer": "Edinburgh and Geneva", "extracted_entity": "Ami_Bou\u00e9"}
{"question": "where was Ben Shephard educated?", "answer": "Diocesan College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Diocesan College", "Westminster School"], "entity_annotations": ["Ben Shephard"], "answer_entity_name": null, "predicted_answer": "Chigwell School", "extracted_entity": "Ben_Shephard"}
{"question": "where was Arthur Balfour educated?", "answer": "Eton College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eton College"], "entity_annotations": ["Arthur Balfour"], "answer_entity_name": null, "predicted_answer": "Eton College and Trinity College, Cambridge", "extracted_entity": "Arthur_Balfour"}
{"question": "where was Ludovico Einaudi educated?", "answer": "Milan Conservatory", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milan Conservatory"], "entity_annotations": ["Ludovico Einaudi"], "answer_entity_name": null, "predicted_answer": "Ludovico Einaudi was educated at the", "extracted_entity": "Ludovico_Einaudi"}
{"question": "where was Lev Vygotsky educated?", "answer": "Moscow State University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moscow State University"], "entity_annotations": ["Lev Vygotsky"], "answer_entity_name": null, "predicted_answer": "He was educated in the city of Gomel", "extracted_entity": "Lev_Vygotsky"}
{"question": "where was Edmund Phelps educated?", "answer": "Yale University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yale University"], "entity_annotations": ["Edmund Phelps"], "answer_entity_name": null, "predicted_answer": "Amherst College", "extracted_entity": "Edmund_Phelps"}
{"question": "where was John Quincy Adams educated?", "answer": "Harvard University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harvard University"], "entity_annotations": ["John Quincy Adams"], "answer_entity_name": null, "predicted_answer": "he was educated in Europe", "extracted_entity": "John_Quincy_Adams"}
{"question": "where was Gerard 't Hooft educated?", "answer": "Utrecht University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Utrecht University"], "entity_annotations": ["Gerard 't Hooft"], "answer_entity_name": null, "predicted_answer": "Utrecht University", "extracted_entity": "Gerard_'t_Hooft"}
{"question": "where was Chiwetel Ejiofor educated?", "answer": "Dulwich College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dulwich College"], "entity_annotations": ["Chiwetel Ejiofor"], "answer_entity_name": null, "predicted_answer": "He was educated at Dulwich College and the London", "extracted_entity": "Chiwetel_Ejiofor"}
{"question": "where was Ghulam Ishaq Khan educated?", "answer": "University of Peshawar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Peshawar"], "entity_annotations": ["Ghulam Ishaq Khan"], "answer_entity_name": null, "predicted_answer": "Peshawar University", "extracted_entity": "Ghulam_Ishaq_Khan"}
{"question": "where was Bren\u00e9 Brown educated?", "answer": "University of Houston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Houston"], "entity_annotations": ["Bren\u00e9 Brown"], "answer_entity_name": null, "predicted_answer": "Bren\u00e9 Brown was educated at the University of Texas", "extracted_entity": "Bren\u00e9_Brown"}
{"question": "where was Alexander H. Smith educated?", "answer": "University of Michigan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Michigan"], "entity_annotations": ["Alexander H. Smith"], "answer_entity_name": null, "predicted_answer": "he graduated from high school in West De Pere,", "extracted_entity": "Alexander_H._Smith"}
{"question": "where was Henry Vassall-Fox, 3rd Baron Holland educated?", "answer": "Eton College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eton College"], "entity_annotations": ["Henry Vassall-Fox, 3rd Baron Holland"], "answer_entity_name": null, "predicted_answer": "Eton and Christ Church, Oxford", "extracted_entity": "Henry_Vassall-Fox,_3rd_Baron_Holland"}
{"question": "where was Kosaku Yamada educated?", "answer": "Tokyo University of the Arts", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tokyo University of the Arts"], "entity_annotations": ["Kosaku Yamada"], "answer_entity_name": null, "predicted_answer": "In Tokyo, Japan.", "extracted_entity": "Kosaku_Yamada"}
{"question": "where was John Horton Conway educated?", "answer": "University of Cambridge", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Cambridge"], "entity_annotations": ["John Horton Conway"], "answer_entity_name": null, "predicted_answer": "Cambridge", "extracted_entity": "John_Horton_Conway"}
{"question": "where was Tom Mboya educated?", "answer": "Ruskin College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ruskin College"], "entity_annotations": ["Tom Mboya"], "answer_entity_name": null, "predicted_answer": "He was educated in Nairobi, Kenya, and at", "extracted_entity": "Tom_Mboya"}
{"question": "where was Brent Johnson educated?", "answer": "Ohio State University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ohio State University"], "entity_annotations": ["Brent Johnson"], "answer_entity_name": null, "predicted_answer": "He was educated at Michigan State University.", "extracted_entity": "Brent_Johnson"}
{"question": "where was Thomas B. Kyle educated?", "answer": "Dartmouth College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dartmouth College"], "entity_annotations": ["Thomas B. Kyle"], "answer_entity_name": null, "predicted_answer": "Thomas B. Kyle attended the public schools and Dart", "extracted_entity": "Thomas_B._Kyle"}
{"question": "where was Stephen Breyer educated?", "answer": "Harvard Law School", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Harvard Law School"], "entity_annotations": ["Stephen Breyer"], "answer_entity_name": null, "predicted_answer": "Stephen Breyer was educated at Stanford University,", "extracted_entity": "Stephen_Breyer"}
{"question": "where was Konstantin Igumnov educated?", "answer": "Moscow Conservatory", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moscow Conservatory"], "entity_annotations": ["Konstantin Igumnov"], "answer_entity_name": null, "predicted_answer": "Moscow Conservatory", "extracted_entity": "Konstantin_Igumnov"}
{"question": "where was Beau Willimon educated?", "answer": "Columbia University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Columbia University"], "entity_annotations": ["Beau Willimon"], "answer_entity_name": null, "predicted_answer": "He was educated at Columbia University.", "extracted_entity": "Beau_Willimon"}
{"question": "where was Jonathan Borofsky educated?", "answer": "Carnegie Mellon University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carnegie Mellon University"], "entity_annotations": ["Jonathan Borofsky"], "answer_entity_name": null, "predicted_answer": "Jonathan Borofsky was educated in Carnegie Mellon University", "extracted_entity": "Jonathan_Borofsky"}
{"question": "where was William Wilde educated?", "answer": "Royal College of Surgeons in Ireland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Royal College of Surgeons in Ireland"], "entity_annotations": ["William Wilde"], "answer_entity_name": null, "predicted_answer": "Elphin Diocesan School", "extracted_entity": "William_Wilde"}
{"question": "where was Ian Hislop educated?", "answer": "Ardingly College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ardingly College"], "entity_annotations": ["Ian Hislop"], "answer_entity_name": null, "predicted_answer": "Ardingly College, an independent boarding school", "extracted_entity": "Ian_Hislop"}
{"question": "where was Neville Chamberlain educated?", "answer": "University of Nottingham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Nottingham"], "entity_annotations": ["Neville Chamberlain"], "answer_entity_name": null, "predicted_answer": "Neville Chamberlain was educated at Rugby School and University", "extracted_entity": "Neville_Chamberlain"}
{"question": "where was Finn Wittrock educated?", "answer": "Juilliard School", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Juilliard School"], "entity_annotations": ["Finn Wittrock"], "answer_entity_name": null, "predicted_answer": "he was educated at the Juilliard School", "extracted_entity": "Finn_Wittrock"}
{"question": "where was Philip Hershkovitz educated?", "answer": "University of Michigan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Michigan"], "entity_annotations": ["Philip Hershkovitz"], "answer_entity_name": null, "predicted_answer": "The University of Pittsburgh, the University of Michigan,", "extracted_entity": "Philip_Hershkovitz"}
{"question": "where was Danilo T\u00fcrk educated?", "answer": "University of Ljubljana", "dataset": "entity_questions", "split": "test", "answer_aliases": ["University of Ljubljana"], "entity_annotations": ["Danilo T\u00fcrk"], "answer_entity_name": null, "predicted_answer": "He attended Maribor Grammar School No.", "extracted_entity": "Danilo_T\u00fcrk"}
{"question": "where was Pietro Mascagni educated?", "answer": "Milan Conservatory", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milan Conservatory"], "entity_annotations": ["Pietro Mascagni"], "answer_entity_name": null, "predicted_answer": "Istituto Cherubini", "extracted_entity": "Pietro_Mascagni"}
{"question": "where was The Jackson 5 founded?", "answer": "Gary", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gary"], "entity_annotations": ["The Jackson 5"], "answer_entity_name": null, "predicted_answer": "Gary, Indiana", "extracted_entity": "The_Jackson_5"}
{"question": "where was Toploader founded?", "answer": "Eastbourne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Eastbourne"], "entity_annotations": ["Toploader"], "answer_entity_name": null, "predicted_answer": "Toploader was founded in Eastbourne, East Sussex", "extracted_entity": "Toploader"}
{"question": "where was Angel Witch founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Angel Witch"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Angel_Witch"}
{"question": "where was Campbell Soup Company founded?", "answer": "Camden", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Camden"], "entity_annotations": ["Campbell Soup Company"], "answer_entity_name": null, "predicted_answer": "in 1869 in Bridgeton, New", "extracted_entity": "Campbell_Soup_Company"}
{"question": "where was Goodie Mob founded?", "answer": "Atlanta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlanta"], "entity_annotations": ["Goodie Mob"], "answer_entity_name": null, "predicted_answer": "Atlanta, Georgia, United States", "extracted_entity": "Goodie_Mob"}
{"question": "where was The Wombats founded?", "answer": "Liverpool", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Liverpool"], "entity_annotations": ["The Wombats"], "answer_entity_name": null, "predicted_answer": "Liverpool, England", "extracted_entity": "The_Wombats"}
{"question": "where was Decadence founded?", "answer": "Stockholm", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stockholm"], "entity_annotations": ["Decadence"], "answer_entity_name": null, "predicted_answer": "Medieval Latin", "extracted_entity": "Decadence"}
{"question": "where was The Quireboys founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["The Quireboys"], "answer_entity_name": null, "predicted_answer": "London, England", "extracted_entity": "The_Quireboys"}
{"question": "where was Steiner Studios founded?", "answer": "Brooklyn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brooklyn"], "entity_annotations": ["Steiner Studios"], "answer_entity_name": null, "predicted_answer": "Steiner Studios was founded in 1999.", "extracted_entity": "Steiner_Studios"}
{"question": "where was Kodaline founded?", "answer": "Swords", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Swords"], "entity_annotations": ["Kodaline"], "answer_entity_name": null, "predicted_answer": "Kodaline was founded in Swords, Dublin,", "extracted_entity": "Kodaline"}
{"question": "where was Inditex founded?", "answer": "Arteixo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arteixo"], "entity_annotations": ["Inditex"], "answer_entity_name": null, "predicted_answer": "Spain", "extracted_entity": "Inditex"}
{"question": "where was Raven-Symon\u00e9 founded?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Raven-Symon\u00e9"], "answer_entity_name": null, "predicted_answer": "Raven-Symon\u00e9 was founded in 198", "extracted_entity": "Raven-Symon\u00e9"}
{"question": "where was Martha founded?", "answer": "County Durham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["County Durham"], "entity_annotations": ["Martha"], "answer_entity_name": null, "predicted_answer": "", "extracted_entity": "Martha"}
{"question": "where was The Jam founded?", "answer": "Woking", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Woking"], "entity_annotations": ["The Jam"], "answer_entity_name": null, "predicted_answer": "in Woking, Surrey", "extracted_entity": "The_Jam"}
{"question": "where was Bristol Commercial Vehicles founded?", "answer": "Bristol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bristol"], "entity_annotations": ["Bristol Commercial Vehicles"], "answer_entity_name": null, "predicted_answer": "Bristol, England", "extracted_entity": "Bristol_Commercial_Vehicles"}
{"question": "where was Locomotive founded?", "answer": "Birmingham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Birmingham"], "entity_annotations": ["Locomotive"], "answer_entity_name": null, "predicted_answer": "Locomotive was founded in United States of America", "extracted_entity": "Locomotive"}
{"question": "where was The Zombies founded?", "answer": "St Albans", "dataset": "entity_questions", "split": "test", "answer_aliases": ["St Albans"], "entity_annotations": ["The Zombies"], "answer_entity_name": null, "predicted_answer": "The Zombies were founded in St Albans.", "extracted_entity": "The_Zombies"}
{"question": "where was Iskra founded?", "answer": "Victoria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Victoria"], "entity_annotations": ["Iskra"], "answer_entity_name": null, "predicted_answer": "Russia", "extracted_entity": "Iskra"}
{"question": "where was Cathedral founded?", "answer": "Coventry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Coventry"], "entity_annotations": ["Cathedral"], "answer_entity_name": null, "predicted_answer": "thedral was founded in.", "extracted_entity": "Cathedral"}
{"question": "where was Cock Sparrer founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Cock Sparrer"], "answer_entity_name": null, "predicted_answer": "East End of London", "extracted_entity": "Cock_Sparrer"}
{"question": "where was British Sea Power founded?", "answer": "Brighton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brighton"], "entity_annotations": ["British Sea Power"], "answer_entity_name": null, "predicted_answer": "British Sea Power was founded in Kendal, C", "extracted_entity": "British_Sea_Power"}
{"question": "where was Hot Toys founded?", "answer": "Hong Kong", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hong Kong"], "entity_annotations": ["Hot Toys"], "answer_entity_name": null, "predicted_answer": "Hong Kong", "extracted_entity": "Hot_Toys"}
{"question": "where was Groupon founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Groupon"], "answer_entity_name": null, "predicted_answer": "Chicago, IL", "extracted_entity": "Groupon"}
{"question": "where was Neon Indian founded?", "answer": "Denton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Denton"], "entity_annotations": ["Neon Indian"], "answer_entity_name": null, "predicted_answer": "Denton, Texas", "extracted_entity": "Neon_Indian"}
{"question": "where was Planeta DeAgostini founded?", "answer": "Barcelona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barcelona"], "entity_annotations": ["Planeta DeAgostini"], "answer_entity_name": null, "predicted_answer": "Spain", "extracted_entity": "Planeta_DeAgostini"}
{"question": "where was Mesa Boogie founded?", "answer": "Petaluma", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Petaluma"], "entity_annotations": ["Mesa Boogie"], "answer_entity_name": null, "predicted_answer": "Mesa Boogie was founded in Petaluma,", "extracted_entity": "Mesa_Boogie"}
{"question": "where was Deacon Blue founded?", "answer": "Glasgow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Glasgow"], "entity_annotations": ["Deacon Blue"], "answer_entity_name": null, "predicted_answer": "Glasgow", "extracted_entity": "Deacon_Blue"}
{"question": "where was Bal-Sagoth founded?", "answer": "Sheffield", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sheffield"], "entity_annotations": ["Bal-Sagoth"], "answer_entity_name": null, "predicted_answer": "Sheffield, Yorkshire, England", "extracted_entity": "Bal-Sagoth"}
{"question": "where was Fastbacks founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Fastbacks"], "answer_entity_name": null, "predicted_answer": "Seattle, Washington, punk rock band.", "extracted_entity": "Fastbacks"}
{"question": "where was Daimler Company founded?", "answer": "Coventry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Coventry"], "entity_annotations": ["Daimler Company"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Daimler_Company"}
{"question": "where was MxPx founded?", "answer": "Bremerton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bremerton"], "entity_annotations": ["MxPx"], "answer_entity_name": null, "predicted_answer": "Bremerton, Washington", "extracted_entity": "MxPx"}
{"question": "where was Apple Inc. founded?", "answer": "Cupertino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cupertino"], "entity_annotations": ["Apple Inc."], "answer_entity_name": null, "predicted_answer": "Apple Inc. was founded in Cupertino, California.", "extracted_entity": "Apple_Inc."}
{"question": "where was Zion & Lennox founded?", "answer": "Carolina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carolina"], "entity_annotations": ["Zion & Lennox"], "answer_entity_name": null, "predicted_answer": "Puerto Rico", "extracted_entity": "Zion_&_Lennox"}
{"question": "where was Wild Beasts founded?", "answer": "Kendal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kendal"], "entity_annotations": ["Wild Beasts"], "answer_entity_name": null, "predicted_answer": "Kendal", "extracted_entity": "Wild_Beasts"}
{"question": "where was True Value founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["True Value"], "answer_entity_name": null, "predicted_answer": "Chicago", "extracted_entity": "True_Value"}
{"question": "where was Anamanaguchi founded?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Anamanaguchi"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "Anamanaguchi"}
{"question": "where was Paizo Publishing founded?", "answer": "Redmond", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Redmond"], "entity_annotations": ["Paizo Publishing"], "answer_entity_name": null, "predicted_answer": "Redmond, Washington", "extracted_entity": "Paizo_Publishing"}
{"question": "where was Kreator founded?", "answer": "Essen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Essen"], "entity_annotations": ["Kreator"], "answer_entity_name": null, "predicted_answer": "Essen, Germany", "extracted_entity": "Kreator"}
{"question": "where was Pedro the Lion founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Pedro the Lion"], "answer_entity_name": null, "predicted_answer": "Pedro the Lion was founded in Seattle, Washington,", "extracted_entity": "Pedro_the_Lion"}
{"question": "where was YMCA founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["YMCA"], "answer_entity_name": null, "predicted_answer": "London, UK", "extracted_entity": "YMCA"}
{"question": "where was Moon Taxi founded?", "answer": "Nashville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nashville"], "entity_annotations": ["Moon Taxi"], "answer_entity_name": null, "predicted_answer": "Moon Taxi was founded in 2006 by Trevor", "extracted_entity": "Moon_Taxi"}
{"question": "where was Sixx:A.M. founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Sixx:A.M."], "answer_entity_name": null, "predicted_answer": "Los Angeles", "extracted_entity": "Sixx:A.M."}
{"question": "where was Fnac founded?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Fnac"], "answer_entity_name": null, "predicted_answer": "Fnac was founded in 1954.", "extracted_entity": "Fnac"}
{"question": "where was Leeway founded?", "answer": "Astoria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Astoria"], "entity_annotations": ["Leeway"], "answer_entity_name": null, "predicted_answer": "Leeway was founded in 2007", "extracted_entity": "Leeway"}
{"question": "where was Kanjani Eight founded?", "answer": "\u014csaka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["\u014csaka"], "entity_annotations": ["Kanjani Eight"], "answer_entity_name": null, "predicted_answer": "Kansai", "extracted_entity": "Kanjani_Eight"}
{"question": "where was Kappa founded?", "answer": "Turin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Turin"], "entity_annotations": ["Kappa"], "answer_entity_name": null, "predicted_answer": "Kappa was founded in 1869 by William", "extracted_entity": "Kappa"}
{"question": "where was General Electric Company plc founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["General Electric Company plc"], "answer_entity_name": null, "predicted_answer": "1886", "extracted_entity": "General_Electric_Company_plc"}
{"question": "where was Queenadreena founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Queenadreena"], "answer_entity_name": null, "predicted_answer": "London, England", "extracted_entity": "Queenadreena"}
{"question": "where was Westinghouse Electric Company founded?", "answer": "Monroeville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Monroeville"], "entity_annotations": ["Westinghouse Electric Company"], "answer_entity_name": null, "predicted_answer": "Pittsburgh", "extracted_entity": "Westinghouse_Electric_Company"}
{"question": "where was Princeton founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Princeton"], "answer_entity_name": null, "predicted_answer": "in 1746 in Elizabeth", "extracted_entity": "Princeton"}
{"question": "where was Digital Research founded?", "answer": "Pacific Grove", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pacific Grove"], "entity_annotations": ["Digital Research"], "answer_entity_name": null, "predicted_answer": "Pacific Grove, California", "extracted_entity": "Digital_Research"}
{"question": "where was Parques Reunidos founded?", "answer": "Madrid", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Madrid"], "entity_annotations": ["Parques Reunidos"], "answer_entity_name": null, "predicted_answer": "Madrid", "extracted_entity": "Parques_Reunidos"}
{"question": "where was Matia Bazar founded?", "answer": "Genoa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Genoa"], "entity_annotations": ["Matia Bazar"], "answer_entity_name": null, "predicted_answer": "Genoa, Italy", "extracted_entity": "Matia_Bazar"}
{"question": "where was Gaye Bykers on Acid founded?", "answer": "Leicester", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leicester"], "entity_annotations": ["Gaye Bykers on Acid"], "answer_entity_name": null, "predicted_answer": "Gaye Bykers on Acid was founded in Leicester", "extracted_entity": "Gaye_Bykers_on_Acid"}
{"question": "where was Bungie founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Bungie"], "answer_entity_name": null, "predicted_answer": "May 1991 by Alex Seropian, who", "extracted_entity": "Bungie"}
{"question": "where was McIntosh Laboratory founded?", "answer": "Binghamton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Binghamton"], "entity_annotations": ["McIntosh Laboratory"], "answer_entity_name": null, "predicted_answer": "Binghamton, New York", "extracted_entity": "McIntosh_Laboratory"}
{"question": "where was Edward Sharpe and the Magnetic Zeros founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Edward Sharpe and the Magnetic Zeros"], "answer_entity_name": null, "predicted_answer": "Los Angeles, California, in 2005.", "extracted_entity": "Edward_Sharpe_and_the_Magnetic_Zeros"}
{"question": "where was Fleet Foxes founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Fleet Foxes"], "answer_entity_name": null, "predicted_answer": "Seattle, Washington", "extracted_entity": "Fleet_Foxes"}
{"question": "where was Chobani founded?", "answer": "New Berlin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Berlin"], "entity_annotations": ["Chobani"], "answer_entity_name": null, "predicted_answer": "In 2005 by Hamdi Ulukaya", "extracted_entity": "Chobani"}
{"question": "where was Bomb the Music Industry! founded?", "answer": "Baldwin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Baldwin"], "entity_annotations": ["Bomb the Music Industry!"], "answer_entity_name": null, "predicted_answer": "Baldwin, Nassau County, New York, United", "extracted_entity": "Bomb_the_Music_Industry!"}
{"question": "where was Destiny's Child founded?", "answer": "Houston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Houston"], "entity_annotations": ["Destiny's Child"], "answer_entity_name": null, "predicted_answer": "Houston, Texas", "extracted_entity": "Destiny's_Child"}
{"question": "where was Sum 41 founded?", "answer": "Ajax", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ajax"], "entity_annotations": ["Sum 41"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Sum_41"}
{"question": "where was InMe founded?", "answer": "Brentwood", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brentwood"], "entity_annotations": ["InMe"], "answer_entity_name": null, "predicted_answer": "Brentwood, Essex", "extracted_entity": "InMe"}
{"question": "where was Silvercup Studios founded?", "answer": "Queens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Queens"], "entity_annotations": ["Silvercup Studios"], "answer_entity_name": null, "predicted_answer": "Silvercup Studios was founded in 1983.", "extracted_entity": "Silvercup_Studios"}
{"question": "where was Harland and Wolff founded?", "answer": "Belfast", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belfast"], "entity_annotations": ["Harland and Wolff"], "answer_entity_name": null, "predicted_answer": "Belfast", "extracted_entity": "Harland_and_Wolff"}
{"question": "where was Letraset founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Letraset"], "answer_entity_name": null, "predicted_answer": "London, England", "extracted_entity": "Letraset"}
{"question": "where was Wax founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Wax"], "answer_entity_name": null, "predicted_answer": "Wax was founded in 2010.", "extracted_entity": "Wax"}
{"question": "where was Vedanta Resources founded?", "answer": "Mumbai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mumbai"], "entity_annotations": ["Vedanta Resources"], "answer_entity_name": null, "predicted_answer": "Mumbai", "extracted_entity": "Vedanta_Resources"}
{"question": "where was Wells Fargo founded?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["Wells Fargo"], "answer_entity_name": null, "predicted_answer": "San Francisco, California", "extracted_entity": "Wells_Fargo"}
{"question": "where was Meitetsu founded?", "answer": "Nagoya", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nagoya"], "entity_annotations": ["Meitetsu"], "answer_entity_name": null, "predicted_answer": "ichi Prefecture and Gifu Prefecture of", "extracted_entity": "Meitetsu"}
{"question": "where was Earth founded?", "answer": "Olympia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Olympia"], "entity_annotations": ["Earth"], "answer_entity_name": null, "predicted_answer": "the Sun", "extracted_entity": "Earth"}
{"question": "where was UB40 founded?", "answer": "Birmingham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Birmingham"], "entity_annotations": ["UB40"], "answer_entity_name": null, "predicted_answer": "Birmingham, England", "extracted_entity": "UB40"}
{"question": "where was Delta Chi founded?", "answer": "Cornell University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cornell University"], "entity_annotations": ["Delta Chi"], "answer_entity_name": null, "predicted_answer": "Cornell University", "extracted_entity": "Delta_Chi"}
{"question": "where was Glitterhouse Records founded?", "answer": "Beverungen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Beverungen"], "entity_annotations": ["Glitterhouse Records"], "answer_entity_name": null, "predicted_answer": "itterhouse Records was founded in the mid-", "extracted_entity": "Glitterhouse_Records"}
{"question": "where was Kim Junsu founded?", "answer": "South Korea", "dataset": "entity_questions", "split": "test", "answer_aliases": ["South Korea"], "entity_annotations": ["Kim Junsu"], "answer_entity_name": null, "predicted_answer": "South Korea", "extracted_entity": "Kim_Junsu"}
{"question": "where was Bethlehem Steel founded?", "answer": "Bethlehem", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bethlehem"], "entity_annotations": ["Bethlehem Steel"], "answer_entity_name": null, "predicted_answer": "Bethlehem, Pennsylvania", "extracted_entity": "Bethlehem_Steel"}
{"question": "where was 98 Degrees founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["98 Degrees"], "answer_entity_name": null, "predicted_answer": "Los Angeles, California", "extracted_entity": "98_Degrees"}
{"question": "where was Champion founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Champion"], "answer_entity_name": null, "predicted_answer": "Champion was founded in 1889.", "extracted_entity": "Champion"}
{"question": "where was Tantrum founded?", "answer": "Sri Lanka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sri Lanka"], "entity_annotations": ["Tantrum"], "answer_entity_name": null, "predicted_answer": "Tantrum was founded in 1998.", "extracted_entity": "Tantrum"}
{"question": "where was Loggins and Messina founded?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Loggins and Messina"], "answer_entity_name": null, "predicted_answer": "in the United States.", "extracted_entity": "Loggins_and_Messina"}
{"question": "where was The Yardbirds founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["The Yardbirds"], "answer_entity_name": null, "predicted_answer": "London in 1963.", "extracted_entity": "The_Yardbirds"}
{"question": "where was Tindersticks founded?", "answer": "Nottingham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nottingham"], "entity_annotations": ["Tindersticks"], "answer_entity_name": null, "predicted_answer": "Tindersticks were founded in Nottingham in 1991", "extracted_entity": "Tindersticks"}
{"question": "where was Van Hool founded?", "answer": "Lier", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lier"], "entity_annotations": ["Van Hool"], "answer_entity_name": null, "predicted_answer": "Koningshooikt, near Lier, Belgium", "extracted_entity": "Van_Hool"}
{"question": "where was Dominion founded?", "answer": "Toronto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toronto"], "entity_annotations": ["Dominion"], "answer_entity_name": null, "predicted_answer": "1. Canada", "extracted_entity": "Dominion"}
{"question": "where was Sri Venkateswara Creations founded?", "answer": "Hyderabad", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hyderabad"], "entity_annotations": ["Sri Venkateswara Creations"], "answer_entity_name": null, "predicted_answer": "Sri Venkateswara Creations was founded", "extracted_entity": "Sri_Venkateswara_Creations"}
{"question": "where was Boi-1da founded?", "answer": "Toronto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Toronto"], "entity_annotations": ["Boi-1da"], "answer_entity_name": null, "predicted_answer": "Boi-1da was founded in 201", "extracted_entity": "Boi-1da"}
{"question": "where was Servite Order founded?", "answer": "Florence", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florence"], "entity_annotations": ["Servite Order"], "answer_entity_name": null, "predicted_answer": "in Italy", "extracted_entity": "Servite_Order"}
{"question": "where was Air France founded?", "answer": "Gothenburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gothenburg"], "entity_annotations": ["Air France"], "answer_entity_name": null, "predicted_answer": "Paris", "extracted_entity": "Air_France"}
{"question": "where was Blind Melon founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Blind Melon"], "answer_entity_name": null, "predicted_answer": "Los Angeles", "extracted_entity": "Blind_Melon"}
{"question": "where was MTU Friedrichshafen founded?", "answer": "Friedrichshafen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Friedrichshafen"], "entity_annotations": ["MTU Friedrichshafen"], "answer_entity_name": null, "predicted_answer": "Germany", "extracted_entity": "MTU_Friedrichshafen"}
{"question": "where was IM Global founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["IM Global"], "answer_entity_name": null, "predicted_answer": "IM Global was founded in April 2007", "extracted_entity": "IM_Global"}
{"question": "where was Train founded?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["Train"], "answer_entity_name": null, "predicted_answer": "rain was founded in the United States.", "extracted_entity": "Train"}
{"question": "where was Relish founded?", "answer": "Fullerton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Fullerton"], "entity_annotations": ["Relish"], "answer_entity_name": null, "predicted_answer": "Relish was founded in", "extracted_entity": "Relish"}
{"question": "where was Hewlett-Packard founded?", "answer": "Palo Alto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Palo Alto"], "entity_annotations": ["Hewlett-Packard"], "answer_entity_name": null, "predicted_answer": "Palo Alto, California.", "extracted_entity": "Hewlett-Packard"}
{"question": "where was Clutch founded?", "answer": "Germantown", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Germantown"], "entity_annotations": ["Clutch"], "answer_entity_name": null, "predicted_answer": "Clutch was founded in 2006.", "extracted_entity": "Clutch"}
{"question": "where was Dominion Energy founded?", "answer": "Virginia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Virginia"], "entity_annotations": ["Dominion Energy"], "answer_entity_name": null, "predicted_answer": "Dominion Energy was founded in 1885.", "extracted_entity": "Dominion_Energy"}
{"question": "where was Insomnium founded?", "answer": "Joensuu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Joensuu"], "entity_annotations": ["Insomnium"], "answer_entity_name": null, "predicted_answer": "Joensuu", "extracted_entity": "Insomnium"}
{"question": "where was The Screamers founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["The Screamers"], "answer_entity_name": null, "predicted_answer": "in 1975", "extracted_entity": "The_Screamers"}
{"question": "where was Investec founded?", "answer": "Johannesburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Johannesburg"], "entity_annotations": ["Investec"], "answer_entity_name": null, "predicted_answer": "South Africa", "extracted_entity": "Investec"}
{"question": "where was United Aircraft Corporation founded?", "answer": "Moscow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moscow"], "entity_annotations": ["United Aircraft Corporation"], "answer_entity_name": null, "predicted_answer": "Moscow", "extracted_entity": "United_Aircraft_Corporation"}
{"question": "where was Temple of the Dog founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Temple of the Dog"], "answer_entity_name": null, "predicted_answer": "Seattle, Washington", "extracted_entity": "Temple_of_the_Dog"}
{"question": "where was Sidley Austin founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Sidley Austin"], "answer_entity_name": null, "predicted_answer": "Chicago, Illinois", "extracted_entity": "Sidley_Austin"}
{"question": "where was Absurd founded?", "answer": "Sondershausen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sondershausen"], "entity_annotations": ["Absurd"], "answer_entity_name": null, "predicted_answer": "Absurd was founded in Absurd.", "extracted_entity": "Absurd"}
{"question": "where was Marionette founded?", "answer": "Gothenburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gothenburg"], "entity_annotations": ["Marionette"], "answer_entity_name": null, "predicted_answer": "Marionette was founded in France", "extracted_entity": "Marionette"}
{"question": "where was Commonwealth Bank founded?", "answer": "Melbourne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne"], "entity_annotations": ["Commonwealth Bank"], "answer_entity_name": null, "predicted_answer": "in 1911", "extracted_entity": "Commonwealth_Bank"}
{"question": "where was Winton Motor Carriage Company founded?", "answer": "Cleveland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cleveland"], "entity_annotations": ["Winton Motor Carriage Company"], "answer_entity_name": null, "predicted_answer": "Cleveland, Ohio", "extracted_entity": "Winton_Motor_Carriage_Company"}
{"question": "where was Dead Sara founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Dead Sara"], "answer_entity_name": null, "predicted_answer": "Los Angeles", "extracted_entity": "Dead_Sara"}
{"question": "where was Cardiacs founded?", "answer": "Kingston upon Thames", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kingston upon Thames"], "entity_annotations": ["Cardiacs"], "answer_entity_name": null, "predicted_answer": "Kingston upon Thames", "extracted_entity": "Cardiacs"}
{"question": "where was Stooshe founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Stooshe"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Stooshe"}
{"question": "where was Frankfurt School founded?", "answer": "Frankfurt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Frankfurt"], "entity_annotations": ["Frankfurt School"], "answer_entity_name": null, "predicted_answer": "Frankfurt School was founded at Goethe University Frankfurt in", "extracted_entity": "Frankfurt_School"}
{"question": "where was Tapes 'n Tapes founded?", "answer": "Minneapolis", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Minneapolis"], "entity_annotations": ["Tapes 'n Tapes"], "answer_entity_name": null, "predicted_answer": "Minneapolis, Minnesota.", "extracted_entity": "Tapes_'n_Tapes"}
{"question": "where was Edison Lighthouse founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Edison Lighthouse"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Edison_Lighthouse"}
{"question": "where was The Bravery founded?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["The Bravery"], "answer_entity_name": null, "predicted_answer": "New York City in 2003.", "extracted_entity": "The_Bravery"}
{"question": "where was Sears founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Sears"], "answer_entity_name": null, "predicted_answer": "Chicago", "extracted_entity": "Sears"}
{"question": "where was Vincent Motorcycles founded?", "answer": "Stevenage", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stevenage"], "entity_annotations": ["Vincent Motorcycles"], "answer_entity_name": null, "predicted_answer": "Vincent Motorcycles was founded in Stevenage.", "extracted_entity": "Vincent_Motorcycles"}
{"question": "where was 1990s founded?", "answer": "Glasgow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Glasgow"], "entity_annotations": ["1990s"], "answer_entity_name": null, "predicted_answer": "1990s was founded in 1990", "extracted_entity": "1990s"}
{"question": "where was The Rifles founded?", "answer": "Chingford", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chingford"], "entity_annotations": ["The Rifles"], "answer_entity_name": null, "predicted_answer": "The Rifles was founded in 2007", "extracted_entity": "The_Rifles"}
{"question": "where was NTL Ireland founded?", "answer": "Dublin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dublin"], "entity_annotations": ["NTL Ireland"], "answer_entity_name": null, "predicted_answer": "Ireland", "extracted_entity": "NTL_Ireland"}
{"question": "where was Ocean Colour Scene founded?", "answer": "Birmingham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Birmingham"], "entity_annotations": ["Ocean Colour Scene"], "answer_entity_name": null, "predicted_answer": "in Birmingham", "extracted_entity": "Ocean_Colour_Scene"}
{"question": "where was Alex Kapranos founded?", "answer": "Glasgow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Glasgow"], "entity_annotations": ["Alex Kapranos"], "answer_entity_name": null, "predicted_answer": "Alex Kapranos was founded in 1972", "extracted_entity": "Alex_Kapranos"}
{"question": "where was Intronaut founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Intronaut"], "answer_entity_name": null, "predicted_answer": "Intronaut was founded in Los Angeles, California", "extracted_entity": "Intronaut"}
{"question": "where was Krewella founded?", "answer": "Northbrook", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Northbrook"], "entity_annotations": ["Krewella"], "answer_entity_name": null, "predicted_answer": "Krewella is an American electronic dance music band", "extracted_entity": "Krewella"}
{"question": "where was Doctor and the Medics founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Doctor and the Medics"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Doctor_and_the_Medics"}
{"question": "where was Helmond Sport founded?", "answer": "Helmond", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Helmond"], "entity_annotations": ["Helmond Sport"], "answer_entity_name": null, "predicted_answer": "Helmond", "extracted_entity": "Helmond_Sport"}
{"question": "where was Routledge founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Routledge"], "answer_entity_name": null, "predicted_answer": "in 1836 by George Routledge, and", "extracted_entity": "Routledge"}
{"question": "where was The Cars founded?", "answer": "Boston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Boston"], "entity_annotations": ["The Cars"], "answer_entity_name": null, "predicted_answer": "Boston", "extracted_entity": "The_Cars"}
{"question": "where was Wrigley Company founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Wrigley Company"], "answer_entity_name": null, "predicted_answer": "Chicago, Illinois", "extracted_entity": "Wrigley_Company"}
{"question": "where was Publicis founded?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Publicis"], "answer_entity_name": null, "predicted_answer": "Paris", "extracted_entity": "Publicis"}
{"question": "where was Heritage Auctions founded?", "answer": "Dallas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dallas"], "entity_annotations": ["Heritage Auctions"], "answer_entity_name": null, "predicted_answer": "Heritage Auctions was founded in Dallas, Texas.", "extracted_entity": "Heritage_Auctions"}
{"question": "where was Matchless founded?", "answer": "Plumstead", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Plumstead"], "entity_annotations": ["Matchless"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Matchless"}
{"question": "where was Balance and Composure founded?", "answer": "Doylestown", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Doylestown"], "entity_annotations": ["Balance and Composure"], "answer_entity_name": null, "predicted_answer": "Balance and Composure was founded in Doylestown,", "extracted_entity": "Balance_and_Composure"}
{"question": "where was Tredegar founded?", "answer": "Wales", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wales"], "entity_annotations": ["Tredegar"], "answer_entity_name": null, "predicted_answer": "Tredegar was founded in 1800", "extracted_entity": "Tredegar"}
{"question": "where was A Day to Remember founded?", "answer": "Ocala", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ocala"], "entity_annotations": ["A Day to Remember"], "answer_entity_name": null, "predicted_answer": "A Day to Remember was founded in Ocala,", "extracted_entity": "A_Day_to_Remember"}
{"question": "where was Spiderweb Software founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Spiderweb Software"], "answer_entity_name": null, "predicted_answer": "Seattle, Washington", "extracted_entity": "Spiderweb_Software"}
{"question": "where was The Membranes founded?", "answer": "Blackpool", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Blackpool"], "entity_annotations": ["The Membranes"], "answer_entity_name": null, "predicted_answer": "The Membranes were founded in Blackpool,", "extracted_entity": "The_Membranes"}
{"question": "where was Vitol founded?", "answer": "Rotterdam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rotterdam"], "entity_annotations": ["Vitol"], "answer_entity_name": null, "predicted_answer": "Rotterdam", "extracted_entity": "Vitol"}
{"question": "where was Kim Hyo-yeon founded?", "answer": "South Korea", "dataset": "entity_questions", "split": "test", "answer_aliases": ["South Korea"], "entity_annotations": ["Kim Hyo-yeon"], "answer_entity_name": null, "predicted_answer": "she was founded in South Korea", "extracted_entity": "Kim_Hyo-yeon"}
{"question": "where was The Raconteurs founded?", "answer": "Detroit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Detroit"], "entity_annotations": ["The Raconteurs"], "answer_entity_name": null, "predicted_answer": "The Raconteurs was founded in Detroit, Michigan", "extracted_entity": "The_Raconteurs"}
{"question": "where was Agence France-Presse founded?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Agence France-Presse"], "answer_entity_name": null, "predicted_answer": "in 1835 in Paris, France", "extracted_entity": "Agence_France-Presse"}
{"question": "where was Buell Motorcycle Company founded?", "answer": "East Troy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["East Troy"], "entity_annotations": ["Buell Motorcycle Company"], "answer_entity_name": null, "predicted_answer": "in 1983 by ex-Harley-D", "extracted_entity": "Buell_Motorcycle_Company"}
{"question": "where was D\u00e5\u00e5th founded?", "answer": "Atlanta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlanta"], "entity_annotations": ["D\u00e5\u00e5th"], "answer_entity_name": null, "predicted_answer": "Atlanta", "extracted_entity": "D\u00e5\u00e5th"}
{"question": "where was The Blind Boys of Alabama founded?", "answer": "Alabama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alabama"], "entity_annotations": ["The Blind Boys of Alabama"], "answer_entity_name": null, "predicted_answer": "in 1939 in Talladega, Alabama", "extracted_entity": "The_Blind_Boys_of_Alabama"}
{"question": "where was Gaza founded?", "answer": "Salt Lake City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Salt Lake City"], "entity_annotations": ["Gaza"], "answer_entity_name": null, "predicted_answer": "Gaza was founded in the 5th century BC", "extracted_entity": "Gaza"}
{"question": "where was Abstinence founded?", "answer": "Belmar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belmar"], "entity_annotations": ["Abstinence"], "answer_entity_name": null, "predicted_answer": "Abstinence was founded in", "extracted_entity": "Abstinence"}
{"question": "where was Anberlin founded?", "answer": "Winter Haven", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Winter Haven"], "entity_annotations": ["Anberlin"], "answer_entity_name": null, "predicted_answer": "Winter Haven, Florida", "extracted_entity": "Anberlin"}
{"question": "where was Straylight Run founded?", "answer": "Baldwin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Baldwin"], "entity_annotations": ["Straylight Run"], "answer_entity_name": null, "predicted_answer": "Baldwin, Nassau County, New York.", "extracted_entity": "Straylight_Run"}
{"question": "where was Graphis Inc. founded?", "answer": "Switzerland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Switzerland"], "entity_annotations": ["Graphis Inc."], "answer_entity_name": null, "predicted_answer": "Graphis Inc. was founded in 1944", "extracted_entity": "Graphis_Inc."}
{"question": "where was Air Traffic founded?", "answer": "Bournemouth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bournemouth"], "entity_annotations": ["Air Traffic"], "answer_entity_name": null, "predicted_answer": "Bournemouth", "extracted_entity": "Air_Traffic"}
{"question": "where was Harvey Nichols founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Harvey Nichols"], "answer_entity_name": null, "predicted_answer": "Knightsbridge, London.", "extracted_entity": "Harvey_Nichols"}
{"question": "where was Reclam founded?", "answer": "Leipzig", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leipzig"], "entity_annotations": ["Reclam"], "answer_entity_name": null, "predicted_answer": "Leipzig", "extracted_entity": "Reclam"}
{"question": "where was RAI founded?", "answer": "Rome", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rome"], "entity_annotations": ["RAI"], "answer_entity_name": null, "predicted_answer": "RAI was founded in 1924", "extracted_entity": "RAI"}
{"question": "where was Kero Kero Bonito founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Kero Kero Bonito"], "answer_entity_name": null, "predicted_answer": "South London in 2011.", "extracted_entity": "Kero_Kero_Bonito"}
{"question": "where was Institut de Droit International founded?", "answer": "Ghent", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ghent"], "entity_annotations": ["Institut de Droit International"], "answer_entity_name": null, "predicted_answer": "Belgium", "extracted_entity": "Institut_de_Droit_International"}
{"question": "where was Screaming Trees founded?", "answer": "Ellensburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ellensburg"], "entity_annotations": ["Screaming Trees"], "answer_entity_name": null, "predicted_answer": "Screaming Trees were an American rock band formed in", "extracted_entity": "Screaming_Trees"}
{"question": "where was Citigroup founded?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Citigroup"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "Citigroup"}
{"question": "where was The Dickies founded?", "answer": "San Fernando Valley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Fernando Valley"], "entity_annotations": ["The Dickies"], "answer_entity_name": null, "predicted_answer": "The Dickies were founded in the San Fernando Valley", "extracted_entity": "The_Dickies"}
{"question": "where was News Corp founded?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["News Corp"], "answer_entity_name": null, "predicted_answer": "2013", "extracted_entity": "News_Corp"}
{"question": "where was Panic! at the Disco founded?", "answer": "Las Vegas", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Las Vegas"], "entity_annotations": ["Panic! at the Disco"], "answer_entity_name": null, "predicted_answer": "Las Vegas, Nevada", "extracted_entity": "Panic!_at_the_Disco"}
{"question": "where was Hasselblad founded?", "answer": "Gothenburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gothenburg"], "entity_annotations": ["Hasselblad"], "answer_entity_name": null, "predicted_answer": "Gothenburg, Sweden", "extracted_entity": "Hasselblad"}
{"question": "where was Royal Mint founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Royal Mint"], "answer_entity_name": null, "predicted_answer": "The Royal Mint was founded in the second century BC", "extracted_entity": "Royal_Mint"}
{"question": "where was The Jesus and Mary Chain founded?", "answer": "East Kilbride", "dataset": "entity_questions", "split": "test", "answer_aliases": ["East Kilbride"], "entity_annotations": ["The Jesus and Mary Chain"], "answer_entity_name": null, "predicted_answer": "East Kilbride", "extracted_entity": "The_Jesus_and_Mary_Chain"}
{"question": "where was Upon a Burning Body founded?", "answer": "San Antonio", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Antonio"], "entity_annotations": ["Upon a Burning Body"], "answer_entity_name": null, "predicted_answer": "San Antonio, Texas.", "extracted_entity": "Upon_a_Burning_Body"}
{"question": "where was In Fear and Faith founded?", "answer": "San Diego", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Diego"], "entity_annotations": ["In Fear and Faith"], "answer_entity_name": null, "predicted_answer": "San Diego, California", "extracted_entity": "In_Fear_and_Faith"}
{"question": "where was Swan Hunter founded?", "answer": "Wallsend", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wallsend"], "entity_annotations": ["Swan Hunter"], "answer_entity_name": null, "predicted_answer": "Swan Hunter was founded in 1880.", "extracted_entity": "Swan_Hunter"}
{"question": "where was Nankai Electric Railway founded?", "answer": "Kudoyama", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kudoyama"], "entity_annotations": ["Nankai Electric Railway"], "answer_entity_name": null, "predicted_answer": "Nankai Electric Railway was founded in Osaka.", "extracted_entity": "Nankai_Electric_Railway"}
{"question": "where was Secret Chiefs 3 founded?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["Secret Chiefs 3"], "answer_entity_name": null, "predicted_answer": "in the mid-1990s", "extracted_entity": "Secret_Chiefs_3"}
{"question": "where was Honeybus founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Honeybus"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Honeybus"}
{"question": "where was Star Film Company founded?", "answer": "Montreuil", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Montreuil"], "entity_annotations": ["Star Film Company"], "answer_entity_name": null, "predicted_answer": "France", "extracted_entity": "Star_Film_Company"}
{"question": "where was Medici Bank founded?", "answer": "Florence", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florence"], "entity_annotations": ["Medici Bank"], "answer_entity_name": null, "predicted_answer": "Florence", "extracted_entity": "Medici_Bank"}
{"question": "where was Nakamichi founded?", "answer": "Tokyo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tokyo"], "entity_annotations": ["Nakamichi"], "answer_entity_name": null, "predicted_answer": "Tokyo, Japan", "extracted_entity": "Nakamichi"}
{"question": "where was Cocteau Twins founded?", "answer": "Scotland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Scotland"], "entity_annotations": ["Cocteau Twins"], "answer_entity_name": null, "predicted_answer": "in Grangemouth", "extracted_entity": "Cocteau_Twins"}
{"question": "where was Torch founded?", "answer": "Trondheim", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Trondheim"], "entity_annotations": ["Torch"], "answer_entity_name": null, "predicted_answer": "In the United States", "extracted_entity": "Torch"}
{"question": "where was Partibrejkers founded?", "answer": "Belgrade", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belgrade"], "entity_annotations": ["Partibrejkers"], "answer_entity_name": null, "predicted_answer": "Belgrade", "extracted_entity": "Partibrejkers"}
{"question": "where was China National Nuclear Corporation founded?", "answer": "Beijing", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Beijing"], "entity_annotations": ["China National Nuclear Corporation"], "answer_entity_name": null, "predicted_answer": "Beijing", "extracted_entity": "China_National_Nuclear_Corporation"}
{"question": "where was Otis Williams founded?", "answer": "Detroit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Detroit"], "entity_annotations": ["Otis Williams"], "answer_entity_name": null, "predicted_answer": "Otis Williams was founded in Texarkana,", "extracted_entity": "Otis_Williams"}
{"question": "where was The Magnetic Fields founded?", "answer": "Boston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Boston"], "entity_annotations": ["The Magnetic Fields"], "answer_entity_name": null, "predicted_answer": "The Magnetic Fields was founded in 1991 in", "extracted_entity": "The_Magnetic_Fields"}
{"question": "where was Pearson Yachts founded?", "answer": "Bristol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bristol"], "entity_annotations": ["Pearson Yachts"], "answer_entity_name": null, "predicted_answer": "in 1956", "extracted_entity": "Pearson_Yachts"}
{"question": "where was Eve 6 founded?", "answer": "La Crescenta-Montrose", "dataset": "entity_questions", "split": "test", "answer_aliases": ["La Crescenta-Montrose"], "entity_annotations": ["Eve 6"], "answer_entity_name": null, "predicted_answer": "Southern California", "extracted_entity": "Eve_6"}
{"question": "where was Switchblade founded?", "answer": "Sydney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sydney"], "entity_annotations": ["Switchblade"], "answer_entity_name": null, "predicted_answer": "United States", "extracted_entity": "Switchblade"}
{"question": "where was Blind Pig Records founded?", "answer": "Ann Arbor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ann Arbor"], "entity_annotations": ["Blind Pig Records"], "answer_entity_name": null, "predicted_answer": "Ann Arbor, Michigan", "extracted_entity": "Blind_Pig_Records"}
{"question": "where was Soci\u00e9t\u00e9 Alsacienne de Constructions M\u00e9caniques founded?", "answer": "Mulhouse", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mulhouse"], "entity_annotations": ["Soci\u00e9t\u00e9 Alsacienne de Constructions M\u00e9caniques"], "answer_entity_name": null, "predicted_answer": "in 1826", "extracted_entity": "Soci\u00e9t\u00e9_Alsacienne_de_Constructions_M\u00e9caniques"}
{"question": "where was White Sewing Machine Company founded?", "answer": "Templeton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Templeton"], "entity_annotations": ["White Sewing Machine Company"], "answer_entity_name": null, "predicted_answer": "Templeton, Massachusetts", "extracted_entity": "White_Sewing_Machine_Company"}
{"question": "where was Channel Awesome founded?", "answer": "Lombard", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lombard"], "entity_annotations": ["Channel Awesome"], "answer_entity_name": null, "predicted_answer": "Illinois", "extracted_entity": "Channel_Awesome"}
{"question": "where was Mastodon founded?", "answer": "Atlanta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlanta"], "entity_annotations": ["Mastodon"], "answer_entity_name": null, "predicted_answer": "New York", "extracted_entity": "Mastodon"}
{"question": "where was Pink Fairies founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Pink Fairies"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Pink_Fairies"}
{"question": "where was Expatriate founded?", "answer": "Sydney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sydney"], "entity_annotations": ["Expatriate"], "answer_entity_name": null, "predicted_answer": "Expatriate was founded in", "extracted_entity": "Expatriate"}
{"question": "where was The Rakes founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["The Rakes"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "The_Rakes"}
{"question": "where was RPG Group founded?", "answer": "Mumbai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mumbai"], "entity_annotations": ["RPG Group"], "answer_entity_name": null, "predicted_answer": "Mumbai, Maharashtra.", "extracted_entity": "RPG_Group"}
{"question": "where was Marathon Oil founded?", "answer": "Houston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Houston"], "entity_annotations": ["Marathon Oil"], "answer_entity_name": null, "predicted_answer": "Ohio", "extracted_entity": "Marathon_Oil"}
{"question": "where was Harvey Danger founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Harvey Danger"], "answer_entity_name": null, "predicted_answer": "Seattle, Washington", "extracted_entity": "Harvey_Danger"}
{"question": "where was Savatage founded?", "answer": "Florida", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Florida"], "entity_annotations": ["Savatage"], "answer_entity_name": null, "predicted_answer": "Savatage was founded in Tarpon Springs,", "extracted_entity": "Savatage"}
{"question": "where was Massachusetts Mutual Life Insurance Company founded?", "answer": "Springfield", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Springfield"], "entity_annotations": ["Massachusetts Mutual Life Insurance Company"], "answer_entity_name": null, "predicted_answer": "Massachusetts", "extracted_entity": "Massachusetts_Mutual_Life_Insurance_Company"}
{"question": "where was The Parlotones founded?", "answer": "Johannesburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Johannesburg"], "entity_annotations": ["The Parlotones"], "answer_entity_name": null, "predicted_answer": "Johannesburg", "extracted_entity": "The_Parlotones"}
{"question": "where was The Four Aces founded?", "answer": "Chester", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chester"], "entity_annotations": ["The Four Aces"], "answer_entity_name": null, "predicted_answer": "The Four Aces were founded in Philadelphia.", "extracted_entity": "The_Four_Aces"}
{"question": "where was Verona founded?", "answer": "Punto Fijo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Punto Fijo"], "entity_annotations": ["Verona"], "answer_entity_name": null, "predicted_answer": "in 89 BC", "extracted_entity": "Verona"}
{"question": "where was The Drums founded?", "answer": "Brooklyn", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brooklyn"], "entity_annotations": ["The Drums"], "answer_entity_name": null, "predicted_answer": "The Drums was founded in New York City.", "extracted_entity": "The_Drums"}
{"question": "where was Fishbone founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Fishbone"], "answer_entity_name": null, "predicted_answer": "Los Angeles, California", "extracted_entity": "Fishbone"}
{"question": "where was Dromedary founded?", "answer": "Athens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Athens"], "entity_annotations": ["Dromedary"], "answer_entity_name": null, "predicted_answer": "he dromedary was probably first domesticated", "extracted_entity": "Dromedary"}
{"question": "where was Augie March founded?", "answer": "Melbourne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne"], "entity_annotations": ["Augie March"], "answer_entity_name": null, "predicted_answer": "Augie March was founded in Shepparton,", "extracted_entity": "Augie_March"}
{"question": "where was Angus & Robertson founded?", "answer": "Sydney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sydney"], "entity_annotations": ["Angus & Robertson"], "answer_entity_name": null, "predicted_answer": "110\u00bd Market Street, Sydney", "extracted_entity": "Angus_&_Robertson"}
{"question": "where was National Iranian Oil Company founded?", "answer": "Tehran", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tehran"], "entity_annotations": ["National Iranian Oil Company"], "answer_entity_name": null, "predicted_answer": "National Iranian Oil Company was founded in 1948", "extracted_entity": "National_Iranian_Oil_Company"}
{"question": "where was The Afghan Whigs founded?", "answer": "Cincinnati", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cincinnati"], "entity_annotations": ["The Afghan Whigs"], "answer_entity_name": null, "predicted_answer": "Cincinnati, Ohio.", "extracted_entity": "The_Afghan_Whigs"}
{"question": "where was Thirty Seconds to Mars founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Thirty Seconds to Mars"], "answer_entity_name": null, "predicted_answer": "Los Angeles, California", "extracted_entity": "Thirty_Seconds_to_Mars"}
{"question": "where was \u00c9lectricit\u00e9 de France founded?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["\u00c9lectricit\u00e9 de France"], "answer_entity_name": null, "predicted_answer": "Paris", "extracted_entity": "\u00c9lectricit\u00e9_de_France"}
{"question": "where was Mongols Motorcycle Club founded?", "answer": "Montebello", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Montebello"], "entity_annotations": ["Mongols Motorcycle Club"], "answer_entity_name": null, "predicted_answer": "Mongols Motorcycle Club was founded in Montebello", "extracted_entity": "Mongols_Motorcycle_Club"}
{"question": "where was Mocedades founded?", "answer": "Bilbao", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bilbao"], "entity_annotations": ["Mocedades"], "answer_entity_name": null, "predicted_answer": "the Basque Country", "extracted_entity": "Mocedades"}
{"question": "where was Band of Horses founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Band of Horses"], "answer_entity_name": null, "predicted_answer": "Seattle, Washington", "extracted_entity": "Band_of_Horses"}
{"question": "where was Intamin founded?", "answer": "Wollerau", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wollerau"], "entity_annotations": ["Intamin"], "answer_entity_name": null, "predicted_answer": "Liechtenstein", "extracted_entity": "Intamin"}
{"question": "where was Ill Ni\u00f1o founded?", "answer": "New Jersey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Jersey"], "entity_annotations": ["Ill Ni\u00f1o"], "answer_entity_name": null, "predicted_answer": "Union City, New Jersey, United States", "extracted_entity": "Ill_Ni\u00f1o"}
{"question": "where was Hinterland founded?", "answer": "Vancouver", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vancouver"], "entity_annotations": ["Hinterland"], "answer_entity_name": null, "predicted_answer": "in Germany", "extracted_entity": "Hinterland"}
{"question": "where was Veil of Maya founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Veil of Maya"], "answer_entity_name": null, "predicted_answer": "Veil of Maya was founded in Chicago, Illinois", "extracted_entity": "Veil_of_Maya"}
{"question": "where was Kings of Rhythm founded?", "answer": "Clarksdale", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clarksdale"], "entity_annotations": ["Kings of Rhythm"], "answer_entity_name": null, "predicted_answer": "Clarksdale, Mississippi", "extracted_entity": "Kings_of_Rhythm"}
{"question": "where was HarperCollins founded?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["HarperCollins"], "answer_entity_name": null, "predicted_answer": "HarperCollins was founded in New York City,", "extracted_entity": "HarperCollins"}
{"question": "where was The Exies founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["The Exies"], "answer_entity_name": null, "predicted_answer": "Los Angeles, California", "extracted_entity": "The_Exies"}
{"question": "where was Sons of Champlin founded?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["Sons of Champlin"], "answer_entity_name": null, "predicted_answer": "Marin County, California, in the San Francisco Bay", "extracted_entity": "Sons_of_Champlin"}
{"question": "where was The Ritchie Family founded?", "answer": "Philadelphia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Philadelphia"], "entity_annotations": ["The Ritchie Family"], "answer_entity_name": null, "predicted_answer": "The Ritchie Family were founded in Philadelphia.", "extracted_entity": "The_Ritchie_Family"}
{"question": "where was Tesla founded?", "answer": "Palo Alto", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Palo Alto"], "entity_annotations": ["Tesla"], "answer_entity_name": null, "predicted_answer": "Colorado", "extracted_entity": "Tesla"}
{"question": "where was Fear founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Fear"], "answer_entity_name": null, "predicted_answer": "Fear was founded in Fear.", "extracted_entity": "Fear"}
{"question": "where was Kakao M founded?", "answer": "Seoul", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seoul"], "entity_annotations": ["Kakao M"], "answer_entity_name": null, "predicted_answer": "Seoul", "extracted_entity": "Kakao_M"}
{"question": "where was Chromeo founded?", "answer": "Montreal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Montreal"], "entity_annotations": ["Chromeo"], "answer_entity_name": null, "predicted_answer": "Canada", "extracted_entity": "Chromeo"}
{"question": "where was Eldorado Resorts founded?", "answer": "Reno", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Reno"], "entity_annotations": ["Eldorado Resorts"], "answer_entity_name": null, "predicted_answer": "Reno, Nevada", "extracted_entity": "Eldorado_Resorts"}
{"question": "where was Kontor Records founded?", "answer": "Hamburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hamburg"], "entity_annotations": ["Kontor Records"], "answer_entity_name": null, "predicted_answer": "Kontor Records was founded in Hamburg, Germany.", "extracted_entity": "Kontor_Records"}
{"question": "where was Sobeys founded?", "answer": "Stellarton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stellarton"], "entity_annotations": ["Sobeys"], "answer_entity_name": null, "predicted_answer": "Stellarton, Nova Scotia", "extracted_entity": "Sobeys"}
{"question": "where was Little Birdy founded?", "answer": "Perth", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Perth"], "entity_annotations": ["Little Birdy"], "answer_entity_name": null, "predicted_answer": "Perth, Western Australia", "extracted_entity": "Little_Birdy"}
{"question": "where was University of Macau founded?", "answer": "Macau", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Macau"], "entity_annotations": ["University of Macau"], "answer_entity_name": null, "predicted_answer": "University of Macau was founded in Macau", "extracted_entity": "University_of_Macau"}
{"question": "where was Tiger founded?", "answer": "Princes Risborough", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Princes Risborough"], "entity_annotations": ["Tiger"], "answer_entity_name": null, "predicted_answer": "India", "extracted_entity": "Tiger"}
{"question": "where was Marillion founded?", "answer": "Aylesbury", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aylesbury"], "entity_annotations": ["Marillion"], "answer_entity_name": null, "predicted_answer": "Marillion was founded in Aylesbury, Buckingham", "extracted_entity": "Marillion"}
{"question": "where was Letlive founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Letlive"], "answer_entity_name": null, "predicted_answer": "Los Angeles, California", "extracted_entity": "Letlive"}
{"question": "where was Strawbs founded?", "answer": "England", "dataset": "entity_questions", "split": "test", "answer_aliases": ["England"], "entity_annotations": ["Strawbs"], "answer_entity_name": null, "predicted_answer": "Strawbs was founded in 1964 as the", "extracted_entity": "Strawbs"}
{"question": "where was Guster founded?", "answer": "Boston", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Boston"], "entity_annotations": ["Guster"], "answer_entity_name": null, "predicted_answer": "Boston, Massachusetts", "extracted_entity": "Guster"}
{"question": "where was Dunelm Group founded?", "answer": "Leicester", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leicester"], "entity_annotations": ["Dunelm Group"], "answer_entity_name": null, "predicted_answer": "Dunelm Group was founded in 1979 by", "extracted_entity": "Dunelm_Group"}
{"question": "where was Rescue founded?", "answer": "St Albans", "dataset": "entity_questions", "split": "test", "answer_aliases": ["St Albans"], "entity_annotations": ["Rescue"], "answer_entity_name": null, "predicted_answer": "Wythenshawe", "extracted_entity": "Rescue"}
{"question": "where was Nevermore founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Nevermore"], "answer_entity_name": null, "predicted_answer": "Seattle, Washington", "extracted_entity": "Nevermore"}
{"question": "where was TBWA Worldwide founded?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["TBWA Worldwide"], "answer_entity_name": null, "predicted_answer": "TBWA Worldwide was founded in 1970 in", "extracted_entity": "TBWA_Worldwide"}
{"question": "where was Coldrain founded?", "answer": "Nagoya", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nagoya"], "entity_annotations": ["Coldrain"], "answer_entity_name": null, "predicted_answer": "Nagoya", "extracted_entity": "Coldrain"}
{"question": "where was Revlon founded?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Revlon"], "answer_entity_name": null, "predicted_answer": "New York City", "extracted_entity": "Revlon"}
{"question": "where was Witness founded?", "answer": "Wigan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wigan"], "entity_annotations": ["Witness"], "answer_entity_name": null, "predicted_answer": "Witness was founded in 1997.", "extracted_entity": "Witness"}
{"question": "where was Cantieri Riuniti dell'Adriatico founded?", "answer": "Trieste", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Trieste"], "entity_annotations": ["Cantieri Riuniti dell'Adriatico"], "answer_entity_name": null, "predicted_answer": "Trieste", "extracted_entity": "Cantieri_Riuniti_dell'Adriatico"}
{"question": "where was Ozomatli founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Ozomatli"], "answer_entity_name": null, "predicted_answer": "Los Angeles", "extracted_entity": "Ozomatli"}
{"question": "where was Every Avenue founded?", "answer": "Marysville, Michigan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Marysville, Michigan"], "entity_annotations": ["Every Avenue"], "answer_entity_name": null, "predicted_answer": "Marysville, Michigan", "extracted_entity": "Every_Avenue"}
{"question": "where was Ell & Nikki founded?", "answer": "Baku", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Baku"], "entity_annotations": ["Ell & Nikki"], "answer_entity_name": null, "predicted_answer": "Ell & Nikki was founded in Azerbaijan.", "extracted_entity": "Ell_&_Nikki"}
{"question": "where was ZF Sachs founded?", "answer": "Schweinfurt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Schweinfurt"], "entity_annotations": ["ZF Sachs"], "answer_entity_name": null, "predicted_answer": "ZF Sachs was founded in Schweinfurt.", "extracted_entity": "ZF_Sachs"}
{"question": "where was Young Marble Giants founded?", "answer": "Cardiff", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cardiff"], "entity_annotations": ["Young Marble Giants"], "answer_entity_name": null, "predicted_answer": "Cardiff, Wales, in 1978.", "extracted_entity": "Young_Marble_Giants"}
{"question": "where was The Fleetwoods founded?", "answer": "Olympia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Olympia"], "entity_annotations": ["The Fleetwoods"], "answer_entity_name": null, "predicted_answer": "The Fleetwoods was founded in Olympia, Washington.", "extracted_entity": "The_Fleetwoods"}
{"question": "where was Karmin founded?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Karmin"], "answer_entity_name": null, "predicted_answer": "Karmin was founded in 2008 in Boston", "extracted_entity": "Karmin"}
{"question": "where was Palladium Books founded?", "answer": "Detroit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Detroit"], "entity_annotations": ["Palladium Books"], "answer_entity_name": null, "predicted_answer": "In Detroit, Michigan", "extracted_entity": "Palladium_Books"}
{"question": "where was Poco founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Poco"], "answer_entity_name": null, "predicted_answer": "Poco was founded in 1968 in Los", "extracted_entity": "Poco"}
{"question": "where was Wounded Bird Records founded?", "answer": "Guilderland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guilderland"], "entity_annotations": ["Wounded Bird Records"], "answer_entity_name": null, "predicted_answer": "Wounded Bird Records was founded in Guilderland", "extracted_entity": "Wounded_Bird_Records"}
{"question": "where was Admiral founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Admiral"], "answer_entity_name": null, "predicted_answer": "iral was founded in the United States", "extracted_entity": "Admiral"}
{"question": "where was Eden's Crush founded?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Eden's Crush"], "answer_entity_name": null, "predicted_answer": "Eden's Crush was founded in California", "extracted_entity": "Eden's_Crush"}
{"question": "where was The Railway Children founded?", "answer": "Wigan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wigan"], "entity_annotations": ["The Railway Children"], "answer_entity_name": null, "predicted_answer": "The Railway Children is a children's book by Ed", "extracted_entity": "The_Railway_Children"}
{"question": "where was Astellas Pharma founded?", "answer": "Tokyo", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tokyo"], "entity_annotations": ["Astellas Pharma"], "answer_entity_name": null, "predicted_answer": "in 1894", "extracted_entity": "Astellas_Pharma"}
{"question": "where was Dell Publishing founded?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Dell Publishing"], "answer_entity_name": null, "predicted_answer": "New York City, New York", "extracted_entity": "Dell_Publishing"}
{"question": "where was Mark Ronson founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Mark Ronson"], "answer_entity_name": null, "predicted_answer": "Mark Ronson founded in London.", "extracted_entity": "Mark_Ronson"}
{"question": "where was Artery founded?", "answer": "Sheffield", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sheffield"], "entity_annotations": ["Artery"], "answer_entity_name": null, "predicted_answer": "Artery was founded in 2014.", "extracted_entity": "Artery"}
{"question": "where was The Hertz Corporation founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["The Hertz Corporation"], "answer_entity_name": null, "predicted_answer": "Chicago, Illinois", "extracted_entity": "The_Hertz_Corporation"}
{"question": "where was The Horrors founded?", "answer": "Southend-on-Sea", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Southend-on-Sea"], "entity_annotations": ["The Horrors"], "answer_entity_name": null, "predicted_answer": "Southend-on-Sea", "extracted_entity": "The_Horrors"}
{"question": "where was Borland founded?", "answer": "Cupertino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cupertino"], "entity_annotations": ["Borland"], "answer_entity_name": null, "predicted_answer": "Borland was founded in 1983 by Ni", "extracted_entity": "Borland"}
{"question": "where was Electric Wizard founded?", "answer": "Dorset", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dorset"], "entity_annotations": ["Electric Wizard"], "answer_entity_name": null, "predicted_answer": "Dorset, England", "extracted_entity": "Electric_Wizard"}
{"question": "where was Mosaic founded?", "answer": "United States of America", "dataset": "entity_questions", "split": "test", "answer_aliases": ["United States of America"], "entity_annotations": ["Mosaic"], "answer_entity_name": null, "predicted_answer": "Mosaic was founded in Abra", "extracted_entity": "Mosaic"}
{"question": "where was Mokoma founded?", "answer": "Lappeenranta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lappeenranta"], "entity_annotations": ["Mokoma"], "answer_entity_name": null, "predicted_answer": "Lappeenranta", "extracted_entity": "Mokoma"}
{"question": "where was Sweetbox founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Sweetbox"], "answer_entity_name": null, "predicted_answer": "Sweetbox was founded in 1995 by executive", "extracted_entity": "Sweetbox"}
{"question": "where was Goatsnake founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Goatsnake"], "answer_entity_name": null, "predicted_answer": "Goatsnake was founded in Los Angeles.", "extracted_entity": "Goatsnake"}
{"question": "where was Angelic Upstarts founded?", "answer": "South Shields", "dataset": "entity_questions", "split": "test", "answer_aliases": ["South Shields"], "entity_annotations": ["Angelic Upstarts"], "answer_entity_name": null, "predicted_answer": "Angelic Upstarts was founded in South Shields in", "extracted_entity": "Angelic_Upstarts"}
{"question": "where was Banca Commerciale Italiana founded?", "answer": "Milan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milan"], "entity_annotations": ["Banca Commerciale Italiana"], "answer_entity_name": null, "predicted_answer": "Italy", "extracted_entity": "Banca_Commerciale_Italiana"}
{"question": "where was Sunn O))) founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Sunn O)))"], "answer_entity_name": null, "predicted_answer": "Seattle, Washington.", "extracted_entity": "Sunn_O)))"}
{"question": "where was Warner Music Group founded?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Warner Music Group"], "answer_entity_name": null, "predicted_answer": "The company was founded in 1958.", "extracted_entity": "Warner_Music_Group"}
{"question": "where was 4 Non Blondes founded?", "answer": "San Francisco", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Francisco"], "entity_annotations": ["4 Non Blondes"], "answer_entity_name": null, "predicted_answer": "San Francisco", "extracted_entity": "4_Non_Blondes"}
{"question": "where was The Comsat Angels founded?", "answer": "Sheffield", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sheffield"], "entity_annotations": ["The Comsat Angels"], "answer_entity_name": null, "predicted_answer": "Sheffield", "extracted_entity": "The_Comsat_Angels"}
{"question": "where was The Academy Is... founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["The Academy Is..."], "answer_entity_name": null, "predicted_answer": "The Academy Is... was founded in Chicago, Illinois", "extracted_entity": "The_Academy_Is..."}
{"question": "where was Innocenti founded?", "answer": "Milan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milan"], "entity_annotations": ["Innocenti"], "answer_entity_name": null, "predicted_answer": "in Italy", "extracted_entity": "Innocenti"}
{"question": "where was Suntory founded?", "answer": "\u014csaka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["\u014csaka"], "entity_annotations": ["Suntory"], "answer_entity_name": null, "predicted_answer": "was founded in Osaka, Japan in", "extracted_entity": "Suntory"}
{"question": "where was Sainsbury's founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Sainsbury's"], "answer_entity_name": null, "predicted_answer": "Sainsbury's was founded in 1869", "extracted_entity": "Sainsbury's"}
{"question": "where was Ateliers et Chantiers de la Loire founded?", "answer": "Nantes", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nantes"], "entity_annotations": ["Ateliers et Chantiers de la Loire"], "answer_entity_name": null, "predicted_answer": "Nantes", "extracted_entity": "Ateliers_et_Chantiers_de_la_Loire"}
{"question": "where was Louisiana Voodoo founded?", "answer": "Louisiana", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Louisiana"], "entity_annotations": ["Louisiana Voodoo"], "answer_entity_name": null, "predicted_answer": "Louisiana", "extracted_entity": "Louisiana_Voodoo"}
{"question": "where was Murder by Death founded?", "answer": "Bloomington", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bloomington"], "entity_annotations": ["Murder by Death"], "answer_entity_name": null, "predicted_answer": "Murder by Death was founded in 1976 in", "extracted_entity": "Murder_by_Death"}
{"question": "where was Candlebox founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Candlebox"], "answer_entity_name": null, "predicted_answer": "Seattle, Washington", "extracted_entity": "Candlebox"}
{"question": "where was Narrows founded?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["Narrows"], "answer_entity_name": null, "predicted_answer": "Narrows was founded in 2006", "extracted_entity": "Narrows"}
{"question": "where was Deep Purple founded?", "answer": "Hertford", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hertford"], "entity_annotations": ["Deep Purple"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Deep_Purple"}
{"question": "where was Kubota founded?", "answer": "\u014csaka", "dataset": "entity_questions", "split": "test", "answer_aliases": ["\u014csaka"], "entity_annotations": ["Kubota"], "answer_entity_name": null, "predicted_answer": "Japan", "extracted_entity": "Kubota"}
{"question": "where was Fieseler founded?", "answer": "Kassel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kassel"], "entity_annotations": ["Fieseler"], "answer_entity_name": null, "predicted_answer": "in Kassel", "extracted_entity": "Fieseler"}
{"question": "where was Was (Not Was) founded?", "answer": "Detroit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Detroit"], "entity_annotations": ["Was (Not Was)"], "answer_entity_name": null, "predicted_answer": "Was (Not Was) was founded in Detroit,", "extracted_entity": "Was_(Not_Was)"}
{"question": "where was Google founded?", "answer": "Menlo Park", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Menlo Park"], "entity_annotations": ["Google"], "answer_entity_name": null, "predicted_answer": "United States of America", "extracted_entity": "Google"}
{"question": "where was Mudcrutch founded?", "answer": "Gainesville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gainesville"], "entity_annotations": ["Mudcrutch"], "answer_entity_name": null, "predicted_answer": "Gainesville, Florida", "extracted_entity": "Mudcrutch"}
{"question": "where was Murderdolls founded?", "answer": "Hollywood", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hollywood"], "entity_annotations": ["Murderdolls"], "answer_entity_name": null, "predicted_answer": "Hollywood, California in 2002.", "extracted_entity": "Murderdolls"}
{"question": "where was Esperanto founded?", "answer": "Warsaw", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Warsaw"], "entity_annotations": ["Esperanto"], "answer_entity_name": null, "predicted_answer": "Esperanto was founded in Warsaw.", "extracted_entity": "Esperanto"}
{"question": "where was The Music Machine founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["The Music Machine"], "answer_entity_name": null, "predicted_answer": "Los Angeles, California", "extracted_entity": "The_Music_Machine"}
{"question": "where was Echo & the Bunnymen founded?", "answer": "Liverpool", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Liverpool"], "entity_annotations": ["Echo & the Bunnymen"], "answer_entity_name": null, "predicted_answer": "Liverpool", "extracted_entity": "Echo_&_the_Bunnymen"}
{"question": "where was Le Butcherettes founded?", "answer": "Guadalajara", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Guadalajara"], "entity_annotations": ["Le Butcherettes"], "answer_entity_name": null, "predicted_answer": "Guadalajara", "extracted_entity": "Le_Butcherettes"}
{"question": "where was Kula Shaker founded?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Kula Shaker"], "answer_entity_name": null, "predicted_answer": "Kula Shaker was founded in London, England", "extracted_entity": "Kula_Shaker"}
{"question": "where was Wright Aeronautical founded?", "answer": "New Jersey", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Jersey"], "entity_annotations": ["Wright Aeronautical"], "answer_entity_name": null, "predicted_answer": "Paterson, New Jersey", "extracted_entity": "Wright_Aeronautical"}
{"question": "where was Theory of a Deadman founded?", "answer": "Delta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Delta"], "entity_annotations": ["Theory of a Deadman"], "answer_entity_name": null, "predicted_answer": "North Delta, British Columbia, Canada", "extracted_entity": "Theory_of_a_Deadman"}
{"question": "where was The Easybeats founded?", "answer": "Sydney", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sydney"], "entity_annotations": ["The Easybeats"], "answer_entity_name": null, "predicted_answer": "in Sydney", "extracted_entity": "The_Easybeats"}
{"question": "where was Costume National founded?", "answer": "Milan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Milan"], "entity_annotations": ["Costume National"], "answer_entity_name": null, "predicted_answer": "in 1986 in Milan by Ennio Cap", "extracted_entity": "Costume_National"}
{"question": "where was Rain Parade founded?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Rain Parade"], "answer_entity_name": null, "predicted_answer": "Los Angeles", "extracted_entity": "Rain_Parade"}
{"question": "where was Carrozzeria Ghia founded?", "answer": "Turin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Turin"], "entity_annotations": ["Carrozzeria Ghia"], "answer_entity_name": null, "predicted_answer": "Turin", "extracted_entity": "Carrozzeria_Ghia"}
{"question": "where was BarlowGirl founded?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["BarlowGirl"], "answer_entity_name": null, "predicted_answer": "Elgin, Illinois.", "extracted_entity": "BarlowGirl"}
{"question": "where is Battle of Asiago located?", "answer": "Asiago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Asiago"], "entity_annotations": ["Battle of Asiago"], "answer_entity_name": null, "predicted_answer": "Battle of Asiago is located in Italy", "extracted_entity": "Battle_of_Asiago"}
{"question": "where is Brendon Hills located?", "answer": "Exmoor", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Exmoor"], "entity_annotations": ["Brendon Hills"], "answer_entity_name": null, "predicted_answer": "Brendon Hills is located in the following regions:", "extracted_entity": "Brendon_Hills"}
{"question": "where is Dana\u00eb located?", "answer": "Museo del Prado", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Museo del Prado"], "entity_annotations": ["Dana\u00eb"], "answer_entity_name": null, "predicted_answer": "In Greek mythology, Dana\u00eb (, ; ;", "extracted_entity": "Dana\u00eb"}
{"question": "where is Dar\u00fc\u015f\u015fafaka S.K. located?", "answer": "Istanbul", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Istanbul"], "entity_annotations": ["Dar\u00fc\u015f\u015fafaka S.K."], "answer_entity_name": null, "predicted_answer": "Dar\u00fc\u015f\u015fafaka S.K. is located", "extracted_entity": "Dar\u00fc\u015f\u015fafaka_S.K."}
{"question": "where is Camden Underworld located?", "answer": "Camden Town", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Camden Town"], "entity_annotations": ["Camden Underworld"], "answer_entity_name": null, "predicted_answer": "Camden Town, London, England", "extracted_entity": "Camden_Underworld"}
{"question": "where is Tartessos located?", "answer": "Iberian Peninsula", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Iberian Peninsula"], "entity_annotations": ["Tartessos"], "answer_entity_name": null, "predicted_answer": "Tartessos is located in the southern Iber", "extracted_entity": "Tartessos"}
{"question": "where is Royal Armouries Museum located?", "answer": "Leeds Dock", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leeds Dock"], "entity_annotations": ["Royal Armouries Museum"], "answer_entity_name": null, "predicted_answer": "Leeds, West Yorkshire, England, UK", "extracted_entity": "Royal_Armouries_Museum"}
{"question": "where is Agony in the Garden located?", "answer": "National Gallery", "dataset": "entity_questions", "split": "test", "answer_aliases": ["National Gallery"], "entity_annotations": ["Agony in the Garden"], "answer_entity_name": null, "predicted_answer": "Agony in the Garden is located in Geth", "extracted_entity": "Agony_in_the_Garden"}
{"question": "where is Operation Overlord located?", "answer": "Normandy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Normandy"], "entity_annotations": ["Operation Overlord"], "answer_entity_name": null, "predicted_answer": "Normandy", "extracted_entity": "Operation_Overlord"}
{"question": "where is Saint Sebastian located?", "answer": "Madrid", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Madrid"], "entity_annotations": ["Saint Sebastian"], "answer_entity_name": null, "predicted_answer": "Saint Sebastian is located in the Vatican City", "extracted_entity": "Saint_Sebastian"}
{"question": "where is Shibboleth located?", "answer": "Tate Modern", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tate Modern"], "entity_annotations": ["Shibboleth"], "answer_entity_name": null, "predicted_answer": "Shibboleth is located in United States", "extracted_entity": "Shibboleth"}
{"question": "where is 2012 Summer Paralympics opening ceremony located?", "answer": "London Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London Stadium"], "entity_annotations": ["2012 Summer Paralympics opening ceremony"], "answer_entity_name": null, "predicted_answer": "The ceremony was performed in the Olympic stadium in London", "extracted_entity": "2012_Summer_Paralympics_opening_ceremony"}
{"question": "where is Battle of Arsuf located?", "answer": "Arsuf", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arsuf"], "entity_annotations": ["Battle of Arsuf"], "answer_entity_name": null, "predicted_answer": "Battle of Arsuf is located in the Middle East", "extracted_entity": "Battle_of_Arsuf"}
{"question": "where is World Conference on Human Rights located?", "answer": "Vienna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vienna"], "entity_annotations": ["World Conference on Human Rights"], "answer_entity_name": null, "predicted_answer": "The World Conference on Human Rights was held by the", "extracted_entity": "World_Conference_on_Human_Rights"}
{"question": "where is Padri War located?", "answer": "Sumatra", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sumatra"], "entity_annotations": ["Padri War"], "answer_entity_name": null, "predicted_answer": "Padri War is located in West Sumatra,", "extracted_entity": "Padri_War"}
{"question": "where is S\u00f6dert\u00f6rn University located?", "answer": "Flemingsberg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Flemingsberg"], "entity_annotations": ["S\u00f6dert\u00f6rn University"], "answer_entity_name": null, "predicted_answer": "S\u00f6dert\u00f6rn University is located in", "extracted_entity": "S\u00f6dert\u00f6rn_University"}
{"question": "where is Battle of Alma located?", "answer": "Alma River", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alma River"], "entity_annotations": ["Battle of Alma"], "answer_entity_name": null, "predicted_answer": "Crimea", "extracted_entity": "Battle_of_Alma"}
{"question": "where is 2012 World Series located?", "answer": "Comerica Park", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Comerica Park", "Oracle Park"], "entity_annotations": ["2012 World Series"], "answer_entity_name": null, "predicted_answer": "2012 World Series is located in San Francisco", "extracted_entity": "2012_World_Series"}
{"question": "where is 2009 Australian Grand Prix located?", "answer": "Melbourne Grand Prix Circuit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne Grand Prix Circuit"], "entity_annotations": ["2009 Australian Grand Prix"], "answer_entity_name": null, "predicted_answer": "2009 Australian Grand Prix is located in Melbourne", "extracted_entity": "2009_Australian_Grand_Prix"}
{"question": "where is 74th Academy Awards located?", "answer": "Dolby Theatre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dolby Theatre"], "entity_annotations": ["74th Academy Awards"], "answer_entity_name": null, "predicted_answer": "The 74th Academy Awards ceremony, presented by", "extracted_entity": "74th_Academy_Awards"}
{"question": "where is Battle of Wittstock located?", "answer": "Wittstock/Dosse", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wittstock/Dosse"], "entity_annotations": ["Battle of Wittstock"], "answer_entity_name": null, "predicted_answer": "Battle of Wittstock is located in Germany", "extracted_entity": "Battle_of_Wittstock"}
{"question": "where is New York Underground Film Festival located?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["New York Underground Film Festival"], "answer_entity_name": null, "predicted_answer": "New York Underground Film Festival is located in New York", "extracted_entity": "New_York_Underground_Film_Festival"}
{"question": "where is Magnapop located?", "answer": "Atlanta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Atlanta"], "entity_annotations": ["Magnapop"], "answer_entity_name": null, "predicted_answer": "Atlanta, Georgia", "extracted_entity": "Magnapop"}
{"question": "where is Battle of Passchendaele located?", "answer": "Passendale", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Passendale"], "entity_annotations": ["Battle of Passchendaele"], "answer_entity_name": null, "predicted_answer": "The battle took place on the Western Front, from", "extracted_entity": "Battle_of_Passchendaele"}
{"question": "where is Environmental Modification Convention located?", "answer": "Geneva", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Geneva"], "entity_annotations": ["Environmental Modification Convention"], "answer_entity_name": null, "predicted_answer": "Environmental Modification Convention is located in Geneva", "extracted_entity": "Environmental_Modification_Convention"}
{"question": "where is 2013 AFL Grand Final located?", "answer": "Melbourne Cricket Ground", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne Cricket Ground"], "entity_annotations": ["2013 AFL Grand Final"], "answer_entity_name": null, "predicted_answer": "Melbourne Cricket Ground", "extracted_entity": "2013_AFL_Grand_Final"}
{"question": "where is 2014 FIBA Europe Under-20 Championship located?", "answer": "Crete", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Crete"], "entity_annotations": ["2014 FIBA Europe Under-20 Championship"], "answer_entity_name": null, "predicted_answer": "Greece", "extracted_entity": "2014_FIBA_Europe_Under-20_Championship"}
{"question": "where is Battle of Talavera located?", "answer": "Talavera de la Reina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Talavera de la Reina"], "entity_annotations": ["Battle of Talavera"], "answer_entity_name": null, "predicted_answer": "Talavera de la Reina, Spain", "extracted_entity": "Battle_of_Talavera"}
{"question": "where is Chernobyl disaster located?", "answer": "Pripyat", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Pripyat"], "entity_annotations": ["Chernobyl disaster"], "answer_entity_name": null, "predicted_answer": "Chernobyl disaster is located in the north of", "extracted_entity": "Chernobyl_disaster"}
{"question": "where is Thammasat University massacre located?", "answer": "Thammasat University", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thammasat University"], "entity_annotations": ["Thammasat University massacre"], "answer_entity_name": null, "predicted_answer": "Thammasat University massacre is located in Thailand.", "extracted_entity": "Thammasat_University_massacre"}
{"question": "where is Battle of Angaur located?", "answer": "Angaur", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Angaur"], "entity_annotations": ["Battle of Angaur"], "answer_entity_name": null, "predicted_answer": "Battle of Angaur is located in the Palau", "extracted_entity": "Battle_of_Angaur"}
{"question": "where is OKK Beograd located?", "answer": "Belgrade", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Belgrade"], "entity_annotations": ["OKK Beograd"], "answer_entity_name": null, "predicted_answer": "Belgrade", "extracted_entity": "OKK_Beograd"}
{"question": "where is War of the Fourth Coalition located?", "answer": "Prussia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Prussia", "East Prussia"], "entity_annotations": ["War of the Fourth Coalition"], "answer_entity_name": null, "predicted_answer": "War of the Fourth Coalition is located in Europe.", "extracted_entity": "War_of_the_Fourth_Coalition"}
{"question": "where is Parrish Art Museum located?", "answer": "Water Mill", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Water Mill"], "entity_annotations": ["Parrish Art Museum"], "answer_entity_name": null, "predicted_answer": "Water Mill, New York", "extracted_entity": "Parrish_Art_Museum"}
{"question": "where is Super Bowl XLVIII located?", "answer": "MetLife Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["MetLife Stadium"], "entity_annotations": ["Super Bowl XLVIII"], "answer_entity_name": null, "predicted_answer": "MetLife Stadium at the Meadowlands Sports Complex in", "extracted_entity": "Super_Bowl_XLVIII"}
{"question": "where is 1920 Republican National Convention located?", "answer": "Chicago Coliseum", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago Coliseum"], "entity_annotations": ["1920 Republican National Convention"], "answer_entity_name": null, "predicted_answer": "The 1920 Republican National Convention nominated Ohio Senator", "extracted_entity": "1920_Republican_National_Convention"}
{"question": "where is Batak languages located?", "answer": "Dairi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dairi"], "entity_annotations": ["Batak languages"], "answer_entity_name": null, "predicted_answer": "Batak languages is located in Indonesia", "extracted_entity": "Batak_languages"}
{"question": "where is BT Tower located?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["BT Tower"], "answer_entity_name": null, "predicted_answer": "BT Tower is located in Fitzrovia, London", "extracted_entity": "BT_Tower"}
{"question": "where is 2001 FA Cup Final located?", "answer": "Millennium Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Millennium Stadium"], "entity_annotations": ["2001 FA Cup Final"], "answer_entity_name": null, "predicted_answer": "Millennium Stadium, Cardiff.", "extracted_entity": "2001_FA_Cup_Final"}
{"question": "where is Hatley Park National Historic Site located?", "answer": "Royal Roads Military College", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Royal Roads Military College", "Royal Roads University"], "entity_annotations": ["Hatley Park National Historic Site"], "answer_entity_name": null, "predicted_answer": "Hatley Park National Historic Site is located in Col", "extracted_entity": "Hatley_Park_National_Historic_Site"}
{"question": "where is Battle of Taejon located?", "answer": "Daejeon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Daejeon"], "entity_annotations": ["Battle of Taejon"], "answer_entity_name": null, "predicted_answer": "Battle of Taejon is located in Korea", "extracted_entity": "Battle_of_Taejon"}
{"question": "where is Flora located?", "answer": "Hermitage Museum", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hermitage Museum"], "entity_annotations": ["Flora"], "answer_entity_name": null, "predicted_answer": "Flora is located in the Netherlands.", "extracted_entity": "Flora"}
{"question": "where is 65th Academy Awards located?", "answer": "Dorothy Chandler Pavilion", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dorothy Chandler Pavilion"], "entity_annotations": ["65th Academy Awards"], "answer_entity_name": null, "predicted_answer": "The 65th Academy Awards ceremony, presented by", "extracted_entity": "65th_Academy_Awards"}
{"question": "where is 1992 Belgian Grand Prix located?", "answer": "Spa-Francorchamps", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spa-Francorchamps"], "entity_annotations": ["1992 Belgian Grand Prix"], "answer_entity_name": null, "predicted_answer": "1992 Belgian Grand Prix is located in Belgium", "extracted_entity": "1992_Belgian_Grand_Prix"}
{"question": "where is Battle of Monte Cassino located?", "answer": "Monte Cassino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Monte Cassino"], "entity_annotations": ["Battle of Monte Cassino"], "answer_entity_name": null, "predicted_answer": "Italy", "extracted_entity": "Battle_of_Monte_Cassino"}
{"question": "where is 2012 Belgian Grand Prix located?", "answer": "Spa-Francorchamps", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spa-Francorchamps"], "entity_annotations": ["2012 Belgian Grand Prix"], "answer_entity_name": null, "predicted_answer": "2012 Belgian Grand Prix is located in Belgium", "extracted_entity": "2012_Belgian_Grand_Prix"}
{"question": "where is Athens Polytechnic uprising located?", "answer": "Athens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Athens"], "entity_annotations": ["Athens Polytechnic uprising"], "answer_entity_name": null, "predicted_answer": "Athens Polytechnic uprising is located in Athens,", "extracted_entity": "Athens_Polytechnic_uprising"}
{"question": "where is 1996 Republican National Convention located?", "answer": "San Diego Convention Center", "dataset": "entity_questions", "split": "test", "answer_aliases": ["San Diego Convention Center"], "entity_annotations": ["1996 Republican National Convention"], "answer_entity_name": null, "predicted_answer": "San Diego Convention Center (SDCC) in San", "extracted_entity": "1996_Republican_National_Convention"}
{"question": "where is 2012 AFL Grand Final located?", "answer": "Melbourne Cricket Ground", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne Cricket Ground"], "entity_annotations": ["2012 AFL Grand Final"], "answer_entity_name": null, "predicted_answer": "012 AFL Grand Final is located in Melbourne", "extracted_entity": "2012_AFL_Grand_Final"}
{"question": "where is Second Italo-Ethiopian War located?", "answer": "Ethiopia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ethiopia"], "entity_annotations": ["Second Italo-Ethiopian War"], "answer_entity_name": null, "predicted_answer": "Ethiopia", "extracted_entity": "Second_Italo-Ethiopian_War"}
{"question": "where is Battle of Slankamen located?", "answer": "Stari Slankamen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Stari Slankamen"], "entity_annotations": ["Battle of Slankamen"], "answer_entity_name": null, "predicted_answer": "near Slankamen in the Ottoman Sanjak of", "extracted_entity": "Battle_of_Slankamen"}
{"question": "where is 2006 Bahrain Grand Prix located?", "answer": "Bahrain International Circuit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bahrain International Circuit"], "entity_annotations": ["2006 Bahrain Grand Prix"], "answer_entity_name": null, "predicted_answer": "2006 Bahrain Grand Prix is located in S", "extracted_entity": "2006_Bahrain_Grand_Prix"}
{"question": "where is Canada Soccer Hall of Fame located?", "answer": "Vaughan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vaughan"], "entity_annotations": ["Canada Soccer Hall of Fame"], "answer_entity_name": null, "predicted_answer": "Canada Soccer Hall of Fame is located in Vaughan,", "extracted_entity": "Canada_Soccer_Hall_of_Fame"}
{"question": "where is Soma mine disaster located?", "answer": "Soma", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Soma"], "entity_annotations": ["Soma mine disaster"], "answer_entity_name": null, "predicted_answer": "Soma mine disaster is located in Soma,", "extracted_entity": "Soma_mine_disaster"}
{"question": "where is 1873 FA Cup Final located?", "answer": "Lillie Bridge Grounds", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lillie Bridge Grounds"], "entity_annotations": ["1873 FA Cup Final"], "answer_entity_name": null, "predicted_answer": "1873 FA Cup Final is located in London", "extracted_entity": "1873_FA_Cup_Final"}
{"question": "where is Temple in Jerusalem located?", "answer": "Temple Mount", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Temple Mount"], "entity_annotations": ["Temple in Jerusalem"], "answer_entity_name": null, "predicted_answer": "emple in Jerusalem is located in Jerusalem", "extracted_entity": "Temple_in_Jerusalem"}
{"question": "where is Knickerbocker Club located?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["Knickerbocker Club"], "answer_entity_name": null, "predicted_answer": "Knickerbocker Club is located in New York", "extracted_entity": "Knickerbocker_Club"}
{"question": "where is Chicago International Film Festival located?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Chicago International Film Festival"], "answer_entity_name": null, "predicted_answer": "Chicago International Film Festival is located in Chicago, USA", "extracted_entity": "Chicago_International_Film_Festival"}
{"question": "where is Goodwood Circuit located?", "answer": "Goodwood House", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Goodwood House"], "entity_annotations": ["Goodwood Circuit"], "answer_entity_name": null, "predicted_answer": "oodwood Circuit is located in the United Kingdom.", "extracted_entity": "Goodwood_Circuit"}
{"question": "where is Eurovision Song Contest 1998 located?", "answer": "Arena Birmingham", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arena Birmingham"], "entity_annotations": ["Eurovision Song Contest 1998"], "answer_entity_name": null, "predicted_answer": "Song Contest 1998 is located in", "extracted_entity": "Eurovision_Song_Contest_1998"}
{"question": "where is K.A.A. Gent located?", "answer": "Ghent", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ghent"], "entity_annotations": ["K.A.A. Gent"], "answer_entity_name": null, "predicted_answer": "K.A.A. Gent is located in Gentbr", "extracted_entity": "K.A.A._Gent"}
{"question": "where is Proctor located?", "answer": "Noachis quadrangle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Noachis quadrangle"], "entity_annotations": ["Proctor"], "answer_entity_name": null, "predicted_answer": "Proctor is located in United States", "extracted_entity": "Proctor"}
{"question": "where is 26th Chess Olympiad located?", "answer": "Thessaloniki", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thessaloniki"], "entity_annotations": ["26th Chess Olympiad"], "answer_entity_name": null, "predicted_answer": "26th Chess Olympiad is located in Th", "extracted_entity": "26th_Chess_Olympiad"}
{"question": "where is Battle of Lone Pine located?", "answer": "Gallipoli", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gallipoli"], "entity_annotations": ["Battle of Lone Pine"], "answer_entity_name": null, "predicted_answer": "Battle of Lone Pine is located in Turkey", "extracted_entity": "Battle_of_Lone_Pine"}
{"question": "where is Battle of Langport located?", "answer": "Langport", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Langport"], "entity_annotations": ["Battle of Langport"], "answer_entity_name": null, "predicted_answer": "Battle of Langport is located in England", "extracted_entity": "Battle_of_Langport"}
{"question": "where is 1975 Ryder Cup located?", "answer": "Laurel Valley Golf Club", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Laurel Valley Golf Club"], "entity_annotations": ["1975 Ryder Cup"], "answer_entity_name": null, "predicted_answer": "1975 Ryder Cup is located in Ligon", "extracted_entity": "1975_Ryder_Cup"}
{"question": "where is Odeon Leicester Square located?", "answer": "Leicester Square", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Leicester Square"], "entity_annotations": ["Odeon Leicester Square"], "answer_entity_name": null, "predicted_answer": "Odeon Leicester Square is located in the West", "extracted_entity": "Odeon_Leicester_Square"}
{"question": "where is Galdakao located?", "answer": "Aeolis quadrangle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Aeolis quadrangle"], "entity_annotations": ["Galdakao"], "answer_entity_name": null, "predicted_answer": "Galdakao is located in the province of", "extracted_entity": "Galdakao"}
{"question": "where is Peace of Travendal located?", "answer": "Traventhal", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Traventhal"], "entity_annotations": ["Peace of Travendal"], "answer_entity_name": null, "predicted_answer": "Peace of Travendal is located in Europe", "extracted_entity": "Peace_of_Travendal"}
{"question": "where is Antwerp Mannerism located?", "answer": "Antwerp", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Antwerp"], "entity_annotations": ["Antwerp Mannerism"], "answer_entity_name": null, "predicted_answer": "Antwerp Mannerism is located in the Southern", "extracted_entity": "Antwerp_Mannerism"}
{"question": "where is Cambodian Civil War located?", "answer": "Khmer Republic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Khmer Republic"], "entity_annotations": ["Cambodian Civil War"], "answer_entity_name": null, "predicted_answer": "Cambodia", "extracted_entity": "Cambodian_Civil_War"}
{"question": "where is Disco Demolition Night located?", "answer": "Comiskey Park", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Comiskey Park"], "entity_annotations": ["Disco Demolition Night"], "answer_entity_name": null, "predicted_answer": "Comiskey Park", "extracted_entity": "Disco_Demolition_Night"}
{"question": "where is Super Bowl XXIX located?", "answer": "Hard Rock Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hard Rock Stadium"], "entity_annotations": ["Super Bowl XXIX"], "answer_entity_name": null, "predicted_answer": "Miami, Florida", "extracted_entity": "Super_Bowl_XXIX"}
{"question": "where is Treaty 8 located?", "answer": "Alberta", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alberta"], "entity_annotations": ["Treaty 8"], "answer_entity_name": null, "predicted_answer": "Treaty 8 is located in northern Alberta, north", "extracted_entity": "Treaty_8"}
{"question": "where is Battle of Velbazhd located?", "answer": "Kyustendil", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kyustendil"], "entity_annotations": ["Battle of Velbazhd"], "answer_entity_name": null, "predicted_answer": "The Battle of Velbazhd (; ) took place", "extracted_entity": "Battle_of_Velbazhd"}
{"question": "where is 51st Academy Awards located?", "answer": "Dorothy Chandler Pavilion", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dorothy Chandler Pavilion"], "entity_annotations": ["51st Academy Awards"], "answer_entity_name": null, "predicted_answer": "The 51st Academy Awards ceremony, organized by", "extracted_entity": "51st_Academy_Awards"}
{"question": "where is Lyons Township High School located?", "answer": "La Grange", "dataset": "entity_questions", "split": "test", "answer_aliases": ["La Grange"], "entity_annotations": ["Lyons Township High School"], "answer_entity_name": null, "predicted_answer": "Lyons Township High School is located in Western Springs,", "extracted_entity": "Lyons_Township_High_School"}
{"question": "where is 2002 Ryder Cup located?", "answer": "The Belfry", "dataset": "entity_questions", "split": "test", "answer_aliases": ["The Belfry"], "entity_annotations": ["2002 Ryder Cup"], "answer_entity_name": null, "predicted_answer": "The Belfry in Wishaw, Warwickshire", "extracted_entity": "2002_Ryder_Cup"}
{"question": "where is The Bitter End located?", "answer": "Greenwich Village", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Greenwich Village"], "entity_annotations": ["The Bitter End"], "answer_entity_name": null, "predicted_answer": "The Bitter End is a 230-person capacity", "extracted_entity": "The_Bitter_End"}
{"question": "where is 1904 Summer Olympics located?", "answer": "Francis Field", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Francis Field"], "entity_annotations": ["1904 Summer Olympics"], "answer_entity_name": null, "predicted_answer": "1904 Summer Olympics is located in St.", "extracted_entity": "1904_Summer_Olympics"}
{"question": "where is Shriekfest located?", "answer": "Los Angeles", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Los Angeles"], "entity_annotations": ["Shriekfest"], "answer_entity_name": null, "predicted_answer": "Los Angeles, California", "extracted_entity": "Shriekfest"}
{"question": "where is Samuel P. Harn Museum of Art located?", "answer": "Gainesville", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gainesville"], "entity_annotations": ["Samuel P. Harn Museum of Art"], "answer_entity_name": null, "predicted_answer": "Samuel P. Harn Museum of Art is located", "extracted_entity": "Samuel_P._Harn_Museum_of_Art"}
{"question": "where is Great Plague of London located?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Great Plague of London"], "answer_entity_name": null, "predicted_answer": "Great Plague of London is located in London,", "extracted_entity": "Great_Plague_of_London"}
{"question": "where is Piccadilly located?", "answer": "Mayfair", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mayfair"], "entity_annotations": ["Piccadilly"], "answer_entity_name": null, "predicted_answer": "Piccadilly is located in the City of Westminster", "extracted_entity": "Piccadilly"}
{"question": "where is Ronde van Drenthe located?", "answer": "Drenthe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Drenthe"], "entity_annotations": ["Ronde van Drenthe"], "answer_entity_name": null, "predicted_answer": "Netherlands", "extracted_entity": "Ronde_van_Drenthe"}
{"question": "where is 2014 European Men's Handball Championship located?", "answer": "Denmark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Denmark"], "entity_annotations": ["2014 European Men's Handball Championship"], "answer_entity_name": null, "predicted_answer": "2014 European Men's Handball Championship is", "extracted_entity": "2014_European_Men's_Handball_Championship"}
{"question": "where is Battle of Castlebar located?", "answer": "Castlebar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Castlebar"], "entity_annotations": ["Battle of Castlebar"], "answer_entity_name": null, "predicted_answer": "Castlebar", "extracted_entity": "Battle_of_Castlebar"}
{"question": "where is Sinagua located?", "answer": "Arizona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arizona"], "entity_annotations": ["Sinagua"], "answer_entity_name": null, "predicted_answer": "central Arizona", "extracted_entity": "Sinagua"}
{"question": "where is 2015 World Championships in Athletics located?", "answer": "Beijing National Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Beijing National Stadium"], "entity_annotations": ["2015 World Championships in Athletics"], "answer_entity_name": null, "predicted_answer": "2015 World Championships in Athletics is located in", "extracted_entity": "2015_World_Championships_in_Athletics"}
{"question": "where is South Manitou Island located?", "answer": "Sleeping Bear Dunes National Lakeshore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sleeping Bear Dunes National Lakeshore", "Lake Michigan"], "entity_annotations": ["South Manitou Island"], "answer_entity_name": null, "predicted_answer": "South Manitou Island is located in Lake Michigan,", "extracted_entity": "South_Manitou_Island"}
{"question": "where is 2012 National League Wild Card Game located?", "answer": "Turner Field", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Turner Field"], "entity_annotations": ["2012 National League Wild Card Game"], "answer_entity_name": null, "predicted_answer": "The 2012 National League Wild Card Game was", "extracted_entity": "2012_National_League_Wild_Card_Game"}
{"question": "where is King of the Ring located?", "answer": "Spectrum", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Spectrum"], "entity_annotations": ["King of the Ring"], "answer_entity_name": null, "predicted_answer": "King of the Ring was a professional wrestling pay-per", "extracted_entity": "King_of_the_Ring"}
{"question": "where is Labourd located?", "answer": "Basque Country", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Basque Country"], "entity_annotations": ["Labourd"], "answer_entity_name": null, "predicted_answer": "Labourd extends from the Pyrenees to the", "extracted_entity": "Labourd"}
{"question": "where is Battle of Leuthen located?", "answer": "Lutynia, \u015aroda \u015al\u0105ska County", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lutynia, \u015aroda \u015al\u0105ska County"], "entity_annotations": ["Battle of Leuthen"], "answer_entity_name": null, "predicted_answer": "Battle of Leuthen is located in Europe", "extracted_entity": "Battle_of_Leuthen"}
{"question": "where is 1901 FA Cup Final located?", "answer": "Crystal Palace National Sports Centre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Crystal Palace National Sports Centre"], "entity_annotations": ["1901 FA Cup Final"], "answer_entity_name": null, "predicted_answer": "1901 FA Cup Final is located in United", "extracted_entity": "1901_FA_Cup_Final"}
{"question": "where is Melbourne International Film Festival located?", "answer": "Melbourne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne"], "entity_annotations": ["Melbourne International Film Festival"], "answer_entity_name": null, "predicted_answer": "Melbourne, Australia.", "extracted_entity": "Melbourne_International_Film_Festival"}
{"question": "where is Eurovision Song Contest 1986 located?", "answer": "Grieg Hall", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Grieg Hall"], "entity_annotations": ["Eurovision Song Contest 1986"], "answer_entity_name": null, "predicted_answer": "The Eurovision Song Contest 1986 was located", "extracted_entity": "Eurovision_Song_Contest_1986"}
{"question": "where is Treaty of Waitangi located?", "answer": "Waitangi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Waitangi"], "entity_annotations": ["Treaty of Waitangi"], "answer_entity_name": null, "predicted_answer": "The Treaty of Waitangi is located at the Wait", "extracted_entity": "Treaty_of_Waitangi"}
{"question": "where is Chicago Rockets located?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Chicago Rockets"], "answer_entity_name": null, "predicted_answer": "Chicago", "extracted_entity": "Chicago_Rockets"}
{"question": "where is Ironbridge Gorge located?", "answer": "Ironbridge", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ironbridge"], "entity_annotations": ["Ironbridge Gorge"], "answer_entity_name": null, "predicted_answer": "Shropshire, England", "extracted_entity": "Ironbridge_Gorge"}
{"question": "where is Sago Mine disaster located?", "answer": "Sago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sago"], "entity_annotations": ["Sago Mine disaster"], "answer_entity_name": null, "predicted_answer": "Sago Mine disaster is located in Sago,", "extracted_entity": "Sago_Mine_disaster"}
{"question": "where is 2018 FIFA World Cup located?", "answer": "Luzhniki Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Luzhniki Stadium", "Nizhny Novgorod Stadium", "Central Stadium Yekaterinburg"], "entity_annotations": ["2018 FIFA World Cup"], "answer_entity_name": null, "predicted_answer": "Russia", "extracted_entity": "2018_FIFA_World_Cup"}
{"question": "where is Day of the Barricades located?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["Day of the Barricades"], "answer_entity_name": null, "predicted_answer": "In the French Wars of Religion, the Day of", "extracted_entity": "Day_of_the_Barricades"}
{"question": "where is Battle of Barnet located?", "answer": "Barnet", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Barnet"], "entity_annotations": ["Battle of Barnet"], "answer_entity_name": null, "predicted_answer": "near Barnet, then a small Hertford", "extracted_entity": "Battle_of_Barnet"}
{"question": "where is Tara Brooch located?", "answer": "National Museum of Ireland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["National Museum of Ireland"], "entity_annotations": ["Tara Brooch"], "answer_entity_name": null, "predicted_answer": "Ireland", "extracted_entity": "Tara_Brooch"}
{"question": "where is Molotov\u2013Ribbentrop Pact located?", "answer": "Moscow", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Moscow"], "entity_annotations": ["Molotov\u2013Ribbentrop Pact"], "answer_entity_name": null, "predicted_answer": "Molotov\u2013Ribbentrop Pact is", "extracted_entity": "Molotov\u2013Ribbentrop_Pact"}
{"question": "where is 1991 World Aquatics Championships located?", "answer": "Perth Superdrome", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Perth Superdrome"], "entity_annotations": ["1991 World Aquatics Championships"], "answer_entity_name": null, "predicted_answer": "1991 World Aquatics Championships is located in", "extracted_entity": "1991_World_Aquatics_Championships"}
{"question": "where is Parsley Massacre located?", "answer": "Dominican Republic", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Dominican Republic", "Haiti"], "entity_annotations": ["Parsley Massacre"], "answer_entity_name": null, "predicted_answer": "Parsley Massacre is located in the Dominican Republic", "extracted_entity": "Parsley_Massacre"}
{"question": "where is Akhisar Belediyespor located?", "answer": "Akhisar", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Akhisar"], "entity_annotations": ["Akhisar Belediyespor"], "answer_entity_name": null, "predicted_answer": "Akhisar Belediyespor is located in", "extracted_entity": "Akhisar_Belediyespor"}
{"question": "where is Battle of Ulundi located?", "answer": "Ulundi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ulundi"], "entity_annotations": ["Battle of Ulundi"], "answer_entity_name": null, "predicted_answer": "Ulundi", "extracted_entity": "Battle_of_Ulundi"}
{"question": "where is Battle of the Yser located?", "answer": "Yser", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Yser"], "entity_annotations": ["Battle of the Yser"], "answer_entity_name": null, "predicted_answer": "Battle of the Yser is located in Belgium", "extracted_entity": "Battle_of_the_Yser"}
{"question": "where is 2004 Summer Olympics located?", "answer": "Olympic Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Olympic Stadium"], "entity_annotations": ["2004 Summer Olympics"], "answer_entity_name": null, "predicted_answer": "Athens, Greece", "extracted_entity": "2004_Summer_Olympics"}
{"question": "where is Royal Institution of Cornwall located?", "answer": "Truro", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Truro"], "entity_annotations": ["Royal Institution of Cornwall"], "answer_entity_name": null, "predicted_answer": "Royal Institution of Cornwall is located in Truro", "extracted_entity": "Royal_Institution_of_Cornwall"}
{"question": "where is Duke of Kent located?", "answer": "Ealing", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ealing"], "entity_annotations": ["Duke of Kent"], "answer_entity_name": null, "predicted_answer": "Duke of Kent is located in United Kingdom", "extracted_entity": "Duke_of_Kent"}
{"question": "where is 51st Annual Grammy Awards located?", "answer": "Staples Center", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Staples Center", "Los Angeles"], "entity_annotations": ["51st Annual Grammy Awards"], "answer_entity_name": null, "predicted_answer": "The 51st Annual Grammy Awards took place at", "extracted_entity": "51st_Annual_Grammy_Awards"}
{"question": "where is 2011 Sundance Film Festival located?", "answer": "Park City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Park City"], "entity_annotations": ["2011 Sundance Film Festival"], "answer_entity_name": null, "predicted_answer": "2011 Sundance Film Festival is located in", "extracted_entity": "2011_Sundance_Film_Festival"}
{"question": "where is 2008 Singapore Grand Prix located?", "answer": "Marina Bay Street Circuit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Marina Bay Street Circuit"], "entity_annotations": ["2008 Singapore Grand Prix"], "answer_entity_name": null, "predicted_answer": "2008 Singapore Grand Prix is located in Marina", "extracted_entity": "2008_Singapore_Grand_Prix"}
{"question": "where is 1929 Hebron massacre located?", "answer": "Hebron", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hebron"], "entity_annotations": ["1929 Hebron massacre"], "answer_entity_name": null, "predicted_answer": "1929 Hebron massacre is located in the", "extracted_entity": "1929_Hebron_massacre"}
{"question": "where is UA2 experiment located?", "answer": "CERN", "dataset": "entity_questions", "split": "test", "answer_aliases": ["CERN", "Super Proton Synchrotron"], "entity_annotations": ["UA2 experiment"], "answer_entity_name": null, "predicted_answer": "CERN", "extracted_entity": "UA2_experiment"}
{"question": "where is 2015 World Archery Championships located?", "answer": "Copenhagen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Copenhagen"], "entity_annotations": ["2015 World Archery Championships"], "answer_entity_name": null, "predicted_answer": "2015 World Archery Championships is located in", "extracted_entity": "2015_World_Archery_Championships"}
{"question": "where is Bnei Herzliya located?", "answer": "Herzliya", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Herzliya"], "entity_annotations": ["Bnei Herzliya"], "answer_entity_name": null, "predicted_answer": "Herzliya, in the Sharon district in Israel", "extracted_entity": "Bnei_Herzliya"}
{"question": "where is Palm wine located?", "answer": "Ghana", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ghana", "Mexico"], "entity_annotations": ["Palm wine"], "answer_entity_name": null, "predicted_answer": "Africa, the Caribbean, South America, South Asia", "extracted_entity": "Palm_wine"}
{"question": "where is 1928 Summer Olympics located?", "answer": "Olympic Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Olympic Stadium"], "entity_annotations": ["1928 Summer Olympics"], "answer_entity_name": null, "predicted_answer": "Amsterdam, Netherlands.", "extracted_entity": "1928_Summer_Olympics"}
{"question": "where is Battle of Mactan located?", "answer": "Cebu", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cebu"], "entity_annotations": ["Battle of Mactan"], "answer_entity_name": null, "predicted_answer": "Philippines", "extracted_entity": "Battle_of_Mactan"}
{"question": "where is Hagia Sophia located?", "answer": "Istanbul", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Istanbul"], "entity_annotations": ["Hagia Sophia"], "answer_entity_name": null, "predicted_answer": "Istanbul, Turkey.", "extracted_entity": "Hagia_Sophia"}
{"question": "where is The Shard located?", "answer": "Southwark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Southwark"], "entity_annotations": ["The Shard"], "answer_entity_name": null, "predicted_answer": "The Shard is located in Southwark, London", "extracted_entity": "The_Shard"}
{"question": "where is Miss World 2012 located?", "answer": "Ordos City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ordos City"], "entity_annotations": ["Miss World 2012"], "answer_entity_name": null, "predicted_answer": "Miss World 2012 is located in Ordos", "extracted_entity": "Miss_World_2012"}
{"question": "where is Battle of Fraustadt located?", "answer": "Wschowa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wschowa"], "entity_annotations": ["Battle of Fraustadt"], "answer_entity_name": null, "predicted_answer": "Battle of Fraustadt is located in Poland", "extracted_entity": "Battle_of_Fraustadt"}
{"question": "where is Pallacanestro Varese located?", "answer": "Varese", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Varese"], "entity_annotations": ["Pallacanestro Varese"], "answer_entity_name": null, "predicted_answer": "Varese, Lombardy.", "extracted_entity": "Pallacanestro_Varese"}
{"question": "where is Battle of Thermopylae located?", "answer": "Thermopylae", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Thermopylae"], "entity_annotations": ["Battle of Thermopylae"], "answer_entity_name": null, "predicted_answer": "Battle of Thermopylae is located in Greece", "extracted_entity": "Battle_of_Thermopylae"}
{"question": "where is Valles Marineris located?", "answer": "Coprates quadrangle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Coprates quadrangle", "Margaritifer Sinus quadrangle"], "entity_annotations": ["Valles Marineris"], "answer_entity_name": null, "predicted_answer": "along the Martian surface east of the Tharsis", "extracted_entity": "Valles_Marineris"}
{"question": "where is International Documentary Film Festival Amsterdam located?", "answer": "Amsterdam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amsterdam"], "entity_annotations": ["International Documentary Film Festival Amsterdam"], "answer_entity_name": null, "predicted_answer": "International Documentary Film Festival Amsterdam is located in Amsterdam.", "extracted_entity": "International_Documentary_Film_Festival_Amsterdam"}
{"question": "where is George Washington located?", "answer": "Union Square", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Union Square"], "entity_annotations": ["George Washington"], "answer_entity_name": null, "predicted_answer": "George Washington is located in the United States.", "extracted_entity": "George_Washington"}
{"question": "where is Battle of Le Transloy located?", "answer": "Le Transloy", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Le Transloy"], "entity_annotations": ["Battle of Le Transloy"], "answer_entity_name": null, "predicted_answer": "Battle of Le Transloy is located in France", "extracted_entity": "Battle_of_Le_Transloy"}
{"question": "where is Kyshtym disaster located?", "answer": "Mayak", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mayak"], "entity_annotations": ["Kyshtym disaster"], "answer_entity_name": null, "predicted_answer": "Mayak, a plutonium production site for nuclear", "extracted_entity": "Kyshtym_disaster"}
{"question": "where is 2004 Ryder Cup located?", "answer": "Oakland Hills Country Club", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Oakland Hills Country Club"], "entity_annotations": ["2004 Ryder Cup"], "answer_entity_name": null, "predicted_answer": "Oakland Hills Country Club, Bloomfield Township, Michigan", "extracted_entity": "2004_Ryder_Cup"}
{"question": "where is Dana\u00eb located?", "answer": "Hermitage Museum", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hermitage Museum"], "entity_annotations": ["Dana\u00eb"], "answer_entity_name": null, "predicted_answer": "Dana\u00eb is located in Argos, Greece.", "extracted_entity": "Dana\u00eb"}
{"question": "where is Battle of Lonato located?", "answer": "Lonato del Garda", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lonato del Garda"], "entity_annotations": ["Battle of Lonato"], "answer_entity_name": null, "predicted_answer": "Lonato del Garda is located near the SP", "extracted_entity": "Battle_of_Lonato"}
{"question": "where is Battle of Williamsburg located?", "answer": "Williamsburg", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Williamsburg"], "entity_annotations": ["Battle of Williamsburg"], "answer_entity_name": null, "predicted_answer": "York County, James City County, and Williamsburg", "extracted_entity": "Battle_of_Williamsburg"}
{"question": "where is 2014 Ryder Cup located?", "answer": "Gleneagles Hotel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gleneagles Hotel"], "entity_annotations": ["2014 Ryder Cup"], "answer_entity_name": null, "predicted_answer": "The 2014 Ryder Cup matches were held", "extracted_entity": "2014_Ryder_Cup"}
{"question": "where is First Battle of St Albans located?", "answer": "St Albans", "dataset": "entity_questions", "split": "test", "answer_aliases": ["St Albans"], "entity_annotations": ["First Battle of St Albans"], "answer_entity_name": null, "predicted_answer": "St Albans", "extracted_entity": "First_Battle_of_St_Albans"}
{"question": "where is 1900 Democratic National Convention located?", "answer": "Convention Hall", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Convention Hall"], "entity_annotations": ["1900 Democratic National Convention"], "answer_entity_name": null, "predicted_answer": "1900 Democratic National Convention is located in Kansas", "extracted_entity": "1900_Democratic_National_Convention"}
{"question": "where is Bridge School Benefit located?", "answer": "Mountain View", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mountain View"], "entity_annotations": ["Bridge School Benefit"], "answer_entity_name": null, "predicted_answer": "Bridge School Benefit is located in Mountain View, California", "extracted_entity": "Bridge_School_Benefit"}
{"question": "where is French invasion of Russia located?", "answer": "Russian Empire", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Russian Empire"], "entity_annotations": ["French invasion of Russia"], "answer_entity_name": null, "predicted_answer": "French invasion of Russia is located in Russia", "extracted_entity": "French_invasion_of_Russia"}
{"question": "where is 1994 Australian Grand Prix located?", "answer": "Adelaide Street Circuit", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Adelaide Street Circuit"], "entity_annotations": ["1994 Australian Grand Prix"], "answer_entity_name": null, "predicted_answer": "1994 Australian Grand Prix is located in Adelaide", "extracted_entity": "1994_Australian_Grand_Prix"}
{"question": "where is Night of the Murdered Poets located?", "answer": "Lubyanka Building", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lubyanka Building"], "entity_annotations": ["Night of the Murdered Poets"], "answer_entity_name": null, "predicted_answer": "Night of the Murdered Poets is located in", "extracted_entity": "Night_of_the_Murdered_Poets"}
{"question": "where is Tripartite Pact located?", "answer": "Berlin", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Berlin"], "entity_annotations": ["Tripartite Pact"], "answer_entity_name": null, "predicted_answer": "Tripartite Pact is located in Berlin, Germany", "extracted_entity": "Tripartite_Pact"}
{"question": "where is Singapore International Film Festival located?", "answer": "Singapore", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Singapore"], "entity_annotations": ["Singapore International Film Festival"], "answer_entity_name": null, "predicted_answer": "Singapore International Film Festival is located in Singapore.", "extracted_entity": "Singapore_International_Film_Festival"}
{"question": "where is New Orleans located?", "answer": "Rotterdam", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rotterdam"], "entity_annotations": ["New Orleans"], "answer_entity_name": null, "predicted_answer": "ew Orleans is located in Louisiana", "extracted_entity": "New_Orleans"}
{"question": "where is 2012 Shanghai Masters located?", "answer": "Shanghai", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shanghai"], "entity_annotations": ["2012 Shanghai Masters"], "answer_entity_name": null, "predicted_answer": "2012 Shanghai Masters is located in Shanghai", "extracted_entity": "2012_Shanghai_Masters"}
{"question": "where is 1995 World Championships in Athletics located?", "answer": "Ullevi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ullevi"], "entity_annotations": ["1995 World Championships in Athletics"], "answer_entity_name": null, "predicted_answer": "1995 World Championships in Athletics is located in", "extracted_entity": "1995_World_Championships_in_Athletics"}
{"question": "where is Cuban Revolution located?", "answer": "Cuba", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cuba"], "entity_annotations": ["Cuban Revolution"], "answer_entity_name": null, "predicted_answer": "Cuba", "extracted_entity": "Cuban_Revolution"}
{"question": "where is Mad War located?", "answer": "Kingdom of France", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kingdom of France"], "entity_annotations": ["Mad War"], "answer_entity_name": null, "predicted_answer": "Mad War is located in France.", "extracted_entity": "Mad_War"}
{"question": "where is 56th Annual Grammy Awards located?", "answer": "Staples Center", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Staples Center"], "entity_annotations": ["56th Annual Grammy Awards"], "answer_entity_name": null, "predicted_answer": "The 56th Annual Grammy Awards presentation was held", "extracted_entity": "56th_Annual_Grammy_Awards"}
{"question": "where is Eritrean\u2013Ethiopian War located?", "answer": "Ethiopia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ethiopia", "Eritrea"], "entity_annotations": ["Eritrean\u2013Ethiopian War"], "answer_entity_name": null, "predicted_answer": "Eritrea and Ethiopia", "extracted_entity": "Eritrean\u2013Ethiopian_War"}
{"question": "where is Gulf War located?", "answer": "Kuwait", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kuwait", "Iraq", "Saudi Arabia", "Israel"], "entity_annotations": ["Gulf War"], "answer_entity_name": null, "predicted_answer": "the gulf war is located in the middle east", "extracted_entity": "Gulf_War"}
{"question": "where is Kinotavr located?", "answer": "Sochi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sochi"], "entity_annotations": ["Kinotavr"], "answer_entity_name": null, "predicted_answer": "Kinotavr is located in Sochi, Russia", "extracted_entity": "Kinotavr"}
{"question": "where is 7th Academy Awards located?", "answer": "Millennium Biltmore Hotel", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Millennium Biltmore Hotel"], "entity_annotations": ["7th Academy Awards"], "answer_entity_name": null, "predicted_answer": "7th Academy Awards is located in the United", "extracted_entity": "7th_Academy_Awards"}
{"question": "where is Stadsholmen located?", "answer": "Gamla stan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gamla stan"], "entity_annotations": ["Stadsholmen"], "answer_entity_name": null, "predicted_answer": "the historical name of an island in the centre of", "extracted_entity": "Stadsholmen"}
{"question": "where is 2008 World Snooker Championship located?", "answer": "Crucible Theatre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Crucible Theatre", "Sheffield"], "entity_annotations": ["2008 World Snooker Championship"], "answer_entity_name": null, "predicted_answer": "The 2008 World Snooker Championship was", "extracted_entity": "2008_World_Snooker_Championship"}
{"question": "where is Colorado River Indian Tribes located?", "answer": "Arizona", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Arizona", "California"], "entity_annotations": ["Colorado River Indian Tribes"], "answer_entity_name": null, "predicted_answer": "Colorado River Indian Tribes is located in United States", "extracted_entity": "Colorado_River_Indian_Tribes"}
{"question": "where is Fort Jesus located?", "answer": "Mombasa", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mombasa"], "entity_annotations": ["Fort Jesus"], "answer_entity_name": null, "predicted_answer": "Mombasa Island", "extracted_entity": "Fort_Jesus"}
{"question": "where is Battle of Lagos located?", "answer": "Lagos", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lagos"], "entity_annotations": ["Battle of Lagos"], "answer_entity_name": null, "predicted_answer": "Battle of Lagos is located in the Gulf of C", "extracted_entity": "Battle_of_Lagos"}
{"question": "where is First War of Scottish Independence located?", "answer": "Kingdom of Scotland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Kingdom of Scotland", "Kingdom of England"], "entity_annotations": ["First War of Scottish Independence"], "answer_entity_name": null, "predicted_answer": "First War of Scottish Independence is located in Scotland", "extracted_entity": "First_War_of_Scottish_Independence"}
{"question": "where is Miss World 2009 located?", "answer": "Gallagher Convention Centre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Gallagher Convention Centre"], "entity_annotations": ["Miss World 2009"], "answer_entity_name": null, "predicted_answer": "Johannesburg, South Africa", "extracted_entity": "Miss_World_2009"}
{"question": "where is 2013 Indian Open located?", "answer": "New Delhi", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New Delhi"], "entity_annotations": ["2013 Indian Open"], "answer_entity_name": null, "predicted_answer": "New Delhi. Dismiss.", "extracted_entity": "2013_Indian_Open"}
{"question": "where is United Nations Convention on Contracts for the International Sale of Goods located?", "answer": "Vienna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Vienna"], "entity_annotations": ["United Nations Convention on Contracts for the International Sale of Goods"], "answer_entity_name": null, "predicted_answer": "United Nations Convention on Contracts for the International Sale of", "extracted_entity": "United_Nations_Convention_on_Contracts_for_the_International_Sale_of_Goods"}
{"question": "where is 67th Academy Awards located?", "answer": "Shrine Auditorium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Shrine Auditorium"], "entity_annotations": ["67th Academy Awards"], "answer_entity_name": null, "predicted_answer": "67th Academy Awards is located in the United", "extracted_entity": "67th_Academy_Awards"}
{"question": "where is 1960 Summer Paralympics located?", "answer": "Rome", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Rome"], "entity_annotations": ["1960 Summer Paralympics"], "answer_entity_name": null, "predicted_answer": "Rome, Italy", "extracted_entity": "1960_Summer_Paralympics"}
{"question": "where is Taormina Film Fest located?", "answer": "Taormina", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Taormina"], "entity_annotations": ["Taormina Film Fest"], "answer_entity_name": null, "predicted_answer": "Taormina", "extracted_entity": "Taormina_Film_Fest"}
{"question": "where is Stansted Express located?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London"], "entity_annotations": ["Stansted Express"], "answer_entity_name": null, "predicted_answer": "Stansted Express is located in the United Kingdom", "extracted_entity": "Stansted_Express"}
{"question": "where is Gundestrup cauldron located?", "answer": "National Museum of Denmark", "dataset": "entity_questions", "split": "test", "answer_aliases": ["National Museum of Denmark"], "entity_annotations": ["Gundestrup cauldron"], "answer_entity_name": null, "predicted_answer": "Denmark", "extracted_entity": "Gundestrup_cauldron"}
{"question": "where is Mount Lemmon Observatory located?", "answer": "Mount Lemmon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mount Lemmon"], "entity_annotations": ["Mount Lemmon Observatory"], "answer_entity_name": null, "predicted_answer": "Mount Lemmon Observatory is located in Mount Lemmon", "extracted_entity": "Mount_Lemmon_Observatory"}
{"question": "where is First Battle of Passchendaele located?", "answer": "Passendale", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Passendale"], "entity_annotations": ["First Battle of Passchendaele"], "answer_entity_name": null, "predicted_answer": "The First Battle of Passchendaele took", "extracted_entity": "First_Battle_of_Passchendaele"}
{"question": "where is Sack of Amorium located?", "answer": "Amorium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Amorium"], "entity_annotations": ["Sack of Amorium"], "answer_entity_name": null, "predicted_answer": "Sack of Amorium is located in Turkey", "extracted_entity": "Sack_of_Amorium"}
{"question": "where is Topkap\u0131 Palace located?", "answer": "Istanbul", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Istanbul"], "entity_annotations": ["Topkap\u0131 Palace"], "answer_entity_name": null, "predicted_answer": "in the east of the Fatih district of Istanbul", "extracted_entity": "Topkap\u0131_Palace"}
{"question": "where is Battle of Hill 70 located?", "answer": "Lens", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lens"], "entity_annotations": ["Battle of Hill 70"], "answer_entity_name": null, "predicted_answer": "The Battle of Hill 70 took place in the", "extracted_entity": "Battle_of_Hill_70"}
{"question": "where is Battle of Scimitar Hill located?", "answer": "Suvla", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Suvla"], "entity_annotations": ["Battle of Scimitar Hill"], "answer_entity_name": null, "predicted_answer": "Gallipoli, Turkey", "extracted_entity": "Battle_of_Scimitar_Hill"}
{"question": "where is 2004 World Snooker Championship located?", "answer": "Sheffield", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sheffield", "Crucible Theatre"], "entity_annotations": ["2004 World Snooker Championship"], "answer_entity_name": null, "predicted_answer": "Sheffield, England. Answered By: Anonymous", "extracted_entity": "2004_World_Snooker_Championship"}
{"question": "where is 1895 FA Cup Final located?", "answer": "Crystal Palace National Sports Centre", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Crystal Palace National Sports Centre"], "entity_annotations": ["1895 FA Cup Final"], "answer_entity_name": null, "predicted_answer": "1895 FA Cup Final is located in England", "extracted_entity": "1895_FA_Cup_Final"}
{"question": "where is Battle of Castillon located?", "answer": "Castillon-la-Bataille", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Castillon-la-Bataille"], "entity_annotations": ["Battle of Castillon"], "answer_entity_name": null, "predicted_answer": "near the town of Castillon-sur-Dordogne", "extracted_entity": "Battle_of_Castillon"}
{"question": "where is Operation Banner located?", "answer": "Northern Ireland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Northern Ireland"], "entity_annotations": ["Operation Banner"], "answer_entity_name": null, "predicted_answer": "Northern Ireland", "extracted_entity": "Operation_Banner"}
{"question": "where is 1910 FA Cup Final located?", "answer": "Goodison Park", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Goodison Park", "Crystal Palace National Sports Centre"], "entity_annotations": ["1910 FA Cup Final"], "answer_entity_name": null, "predicted_answer": "1910 FA Cup Final is located in", "extracted_entity": "1910_FA_Cup_Final"}
{"question": "where is Methuen Treaty located?", "answer": "Lisbon", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lisbon"], "entity_annotations": ["Methuen Treaty"], "answer_entity_name": null, "predicted_answer": "Methuen Treaty is located in Portugal.", "extracted_entity": "Methuen_Treaty"}
{"question": "where is 1975 Open Championship located?", "answer": "Carnoustie Golf Links", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Carnoustie Golf Links"], "entity_annotations": ["1975 Open Championship"], "answer_entity_name": null, "predicted_answer": "1975 Open Championship is located at Carnoust", "extracted_entity": "1975_Open_Championship"}
{"question": "where is 1919 Stanley Cup Finals located?", "answer": "Seattle", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seattle"], "entity_annotations": ["1919 Stanley Cup Finals"], "answer_entity_name": null, "predicted_answer": "1919 Stanley Cup Finals is located in United", "extracted_entity": "1919_Stanley_Cup_Finals"}
{"question": "where is 1991 Paris Peace Accords located?", "answer": "Paris", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paris"], "entity_annotations": ["1991 Paris Peace Accords"], "answer_entity_name": null, "predicted_answer": "1991 Paris Peace Accords is located in", "extracted_entity": "1991_Paris_Peace_Accords"}
{"question": "where is Clydebank Blitz located?", "answer": "Clydebank", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Clydebank"], "entity_annotations": ["Clydebank Blitz"], "answer_entity_name": null, "predicted_answer": "Clydebank Blitz is located in the Scotland", "extracted_entity": "Clydebank_Blitz"}
{"question": "where is 2002 FIFA World Cup located?", "answer": "Seoul World Cup Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Seoul World Cup Stadium", "Shizuoka Stadium", "International Stadium Yokohama", "Busan Asiad Main Stadium", "Gwangju World Cup Stadium", "Tohoku Electric Power Big Swan Stadium", "Daejeon World Cup Stadium", "Daegu Stadium", "Kashima Soccer Stadium", "Saitama Stadium 2002", "Miyagi Stadium"], "entity_annotations": ["2002 FIFA World Cup"], "answer_entity_name": null, "predicted_answer": "2002 FIFA World Cup is located in Asia", "extracted_entity": "2002_FIFA_World_Cup"}
{"question": "where is Battle of Nicopolis located?", "answer": "Nikopol", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Nikopol"], "entity_annotations": ["Battle of Nicopolis"], "answer_entity_name": null, "predicted_answer": "Nicopolis", "extracted_entity": "Battle_of_Nicopolis"}
{"question": "where is Battle of Tory Island located?", "answer": "Tory Island", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Tory Island"], "entity_annotations": ["Battle of Tory Island"], "answer_entity_name": null, "predicted_answer": "Battle of Tory Island is located in Donegal", "extracted_entity": "Battle_of_Tory_Island"}
{"question": "where is Ashland Independent Film Festival located?", "answer": "Ashland", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ashland"], "entity_annotations": ["Ashland Independent Film Festival"], "answer_entity_name": null, "predicted_answer": "Ashland, Oregon, United States", "extracted_entity": "Ashland_Independent_Film_Festival"}
{"question": "where is 2008 Bucharest summit located?", "answer": "Bucharest", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bucharest"], "entity_annotations": ["2008 Bucharest summit"], "answer_entity_name": null, "predicted_answer": "Bucharest, Romania.", "extracted_entity": "2008_Bucharest_summit"}
{"question": "where is 2005 European Athletics U23 Championships located?", "answer": "Erfurt", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Erfurt"], "entity_annotations": ["2005 European Athletics U23 Championships"], "answer_entity_name": null, "predicted_answer": "2005 European Athletics U23 Championships is located", "extracted_entity": "2005_European_Athletics_U23_Championships"}
{"question": "where is Battle of Cable Street located?", "answer": "Cable Street", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cable Street"], "entity_annotations": ["Battle of Cable Street"], "answer_entity_name": null, "predicted_answer": "Battle of Cable Street is located in the United Kingdom", "extracted_entity": "Battle_of_Cable_Street"}
{"question": "where is Eurovision Song Contest 2007 located?", "answer": "Hartwall Arena", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hartwall Arena"], "entity_annotations": ["Eurovision Song Contest 2007"], "answer_entity_name": null, "predicted_answer": "nland. The Eurovision Song Contest 2007", "extracted_entity": "Eurovision_Song_Contest_2007"}
{"question": "where is Battle of Sinop located?", "answer": "Sinop", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Sinop"], "entity_annotations": ["Battle of Sinop"], "answer_entity_name": null, "predicted_answer": "Russia", "extracted_entity": "Battle_of_Sinop"}
{"question": "where is 1954 FIFA World Cup located?", "answer": "Wankdorf Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Wankdorf Stadium", "Hardturm"], "entity_annotations": ["1954 FIFA World Cup"], "answer_entity_name": null, "predicted_answer": "Switzerland", "extracted_entity": "1954_FIFA_World_Cup"}
{"question": "where is 2010 FIFA World Cup located?", "answer": "Mbombela Stadium", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Mbombela Stadium", "FNB Stadium", "Free State Stadium", "Peter Mokaba Stadium", "Moses Mabhida Stadium", "Cape Town Stadium", "Nelson Mandela Bay Stadium", "Loftus Versfeld Stadium", "Royal Bafokeng Stadium"], "entity_annotations": ["2010 FIFA World Cup"], "answer_entity_name": null, "predicted_answer": "South Africa", "extracted_entity": "2010_FIFA_World_Cup"}
{"question": "where is Harvard T.H. Chan School of Public Health located?", "answer": "Longwood Medical and Academic Area", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Longwood Medical and Academic Area"], "entity_annotations": ["Harvard T.H. Chan School of Public Health"], "answer_entity_name": null, "predicted_answer": "The Harvard T.H. Chan School of Public Health", "extracted_entity": "Harvard_T.H._Chan_School_of_Public_Health"}
{"question": "where is Able Archer 83 located?", "answer": "Western Europe", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Western Europe"], "entity_annotations": ["Able Archer 83"], "answer_entity_name": null, "predicted_answer": "Able Archer 83 was located in Casteau", "extracted_entity": "Able_Archer_83"}
{"question": "where is Wimbledon Championships located?", "answer": "All England Lawn Tennis and Croquet Club", "dataset": "entity_questions", "split": "test", "answer_aliases": ["All England Lawn Tennis and Croquet Club"], "entity_annotations": ["Wimbledon Championships"], "answer_entity_name": null, "predicted_answer": "The Wimbledon Championships is located at the All England Lawn", "extracted_entity": "Wimbledon_Championships"}
{"question": "where is Biarritz Film Festival located?", "answer": "Biarritz", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Biarritz"], "entity_annotations": ["Biarritz Film Festival"], "answer_entity_name": null, "predicted_answer": "Biarritz", "extracted_entity": "Biarritz_Film_Festival"}
{"question": "where is European Fantastic Film Festivals Federation located?", "answer": "Brussels-Capital Region", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Brussels-Capital Region"], "entity_annotations": ["European Fantastic Film Festivals Federation"], "answer_entity_name": null, "predicted_answer": "European Fantastic Film Festivals Federation is located in Brussels", "extracted_entity": "European_Fantastic_Film_Festivals_Federation"}
{"question": "where is Operation Red Wings located?", "answer": "Korangal Valley", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Korangal Valley"], "entity_annotations": ["Operation Red Wings"], "answer_entity_name": null, "predicted_answer": "Operation Red Wings is located in Pech District of", "extracted_entity": "Operation_Red_Wings"}
{"question": "where is Royal Institute of Painters in Water Colours located?", "answer": "London", "dataset": "entity_questions", "split": "test", "answer_aliases": ["London", "Federation of British Artists"], "entity_annotations": ["Royal Institute of Painters in Water Colours"], "answer_entity_name": null, "predicted_answer": "London. Edit.", "extracted_entity": "Royal_Institute_of_Painters_in_Water_Colours"}
{"question": "where is 1880 Democratic National Convention located?", "answer": "Cincinnati Music Hall", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Cincinnati Music Hall"], "entity_annotations": ["1880 Democratic National Convention"], "answer_entity_name": null, "predicted_answer": "Cincinnati, Ohio", "extracted_entity": "1880_Democratic_National_Convention"}
{"question": "where is Trooping the Colour located?", "answer": "Horse Guards Parade", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Horse Guards Parade"], "entity_annotations": ["Trooping the Colour"], "answer_entity_name": null, "predicted_answer": "London", "extracted_entity": "Trooping_the_Colour"}
{"question": "where is Great Gable located?", "answer": "Lake District", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lake District"], "entity_annotations": ["Great Gable"], "answer_entity_name": null, "predicted_answer": "Great Gable is a mountain in the Lake District", "extracted_entity": "Great_Gable"}
{"question": "where is Gotthard Base Tunnel located?", "answer": "Ticino", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Ticino"], "entity_annotations": ["Gotthard Base Tunnel"], "answer_entity_name": null, "predicted_answer": "tthard Base Tunnel is located in Switzerland.", "extracted_entity": "Gotthard_Base_Tunnel"}
{"question": "where is Convention on preventing and combating violence against women and domestic violence located?", "answer": "Istanbul", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Istanbul"], "entity_annotations": ["Convention on preventing and combating violence against women and domestic violence"], "answer_entity_name": null, "predicted_answer": "Convention on preventing and combating violence against women and domestic", "extracted_entity": "Convention_on_preventing_and_combating_violence_against_women_and_domestic_violence"}
{"question": "where is University of Groningen located?", "answer": "Groningen", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Groningen"], "entity_annotations": ["University of Groningen"], "answer_entity_name": null, "predicted_answer": "University of Groningen is located in Netherlands", "extracted_entity": "University_of_Groningen"}
{"question": "where is UEFA Euro 1996 located?", "answer": "Old Trafford", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Old Trafford", "Anfield", "Wembley Stadium"], "entity_annotations": ["UEFA Euro 1996"], "answer_entity_name": null, "predicted_answer": "England", "extracted_entity": "UEFA_Euro_1996"}
{"question": "where is Eastern Fells located?", "answer": "Lake District", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lake District"], "entity_annotations": ["Eastern Fells"], "answer_entity_name": null, "predicted_answer": "Eastern Fells is located in England.", "extracted_entity": "Eastern_Fells"}
{"question": "where is 2007 Australian Open located?", "answer": "Melbourne", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne"], "entity_annotations": ["2007 Australian Open"], "answer_entity_name": null, "predicted_answer": "Melbourne, Australia", "extracted_entity": "2007_Australian_Open"}
{"question": "where is Old Man of Coniston located?", "answer": "Lake District", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lake District"], "entity_annotations": ["Old Man of Coniston"], "answer_entity_name": null, "predicted_answer": "he Furness Fells of the Lake District", "extracted_entity": "Old_Man_of_Coniston"}
{"question": "where is 2012 European Men's Handball Championship located?", "answer": "Serbia", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Serbia"], "entity_annotations": ["2012 European Men's Handball Championship"], "answer_entity_name": null, "predicted_answer": "Serbia.", "extracted_entity": "2012_European_Men's_Handball_Championship"}
{"question": "where is Empire State Building located?", "answer": "Midtown Manhattan", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Midtown Manhattan"], "entity_annotations": ["Empire State Building"], "answer_entity_name": null, "predicted_answer": "Empire State Building is located in Midtown Manhattan,", "extracted_entity": "Empire_State_Building"}
{"question": "where is Battersea Park located?", "answer": "Battersea", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Battersea"], "entity_annotations": ["Battersea Park"], "answer_entity_name": null, "predicted_answer": "it is located in the London Borough of Wandsworth", "extracted_entity": "Battersea_Park"}
{"question": "where is New York Film Academy located?", "answer": "New York City", "dataset": "entity_questions", "split": "test", "answer_aliases": ["New York City"], "entity_annotations": ["New York Film Academy"], "answer_entity_name": null, "predicted_answer": "New York Film Academy is located at 17 Battery", "extracted_entity": "New_York_Film_Academy"}
{"question": "where is American-led intervention in Iraq (2014\u2013present) located?", "answer": "Iraq", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Iraq"], "entity_annotations": ["American-led intervention in Iraq (2014\u2013present)"], "answer_entity_name": null, "predicted_answer": "Iraq", "extracted_entity": "American-led_intervention_in_Iraq_(2014\u2013present)"}
{"question": "where is County Cricket Ground, Northampton located?", "answer": "Northampton", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Northampton"], "entity_annotations": ["County Cricket Ground, Northampton"], "answer_entity_name": null, "predicted_answer": "County Cricket Ground, Northampton is located in the", "extracted_entity": "County_Cricket_Ground,_Northampton"}
{"question": "where is Halicarnassus located?", "answer": "Caria", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Caria"], "entity_annotations": ["Halicarnassus"], "answer_entity_name": null, "predicted_answer": "Halicarnassus is located in southwest Car", "extracted_entity": "Halicarnassus"}
{"question": "where is Chicago Freedom Movement located?", "answer": "Chicago", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Chicago"], "entity_annotations": ["Chicago Freedom Movement"], "answer_entity_name": null, "predicted_answer": "Chicago Freedom Movement is located in Chicago.", "extracted_entity": "Chicago_Freedom_Movement"}
{"question": "where is Battle of Hochkirch located?", "answer": "Hochkirch", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Hochkirch"], "entity_annotations": ["Battle of Hochkirch"], "answer_entity_name": null, "predicted_answer": "The Battle of Hochkirch took place on", "extracted_entity": "Battle_of_Hochkirch"}
{"question": "where is Helvellyn located?", "answer": "Lake District", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Lake District"], "entity_annotations": ["Helvellyn"], "answer_entity_name": null, "predicted_answer": "Helvellyn is a mountain in the English Lake", "extracted_entity": "Helvellyn"}
{"question": "where is Il Cinema Ritrovato located?", "answer": "Bologna", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Bologna"], "entity_annotations": ["Il Cinema Ritrovato"], "answer_entity_name": null, "predicted_answer": "Il Cinema Ritrovato is located in Bologna", "extracted_entity": "Il_Cinema_Ritrovato"}
{"question": "where is Siege of the Alamo located?", "answer": "Alamo Mission in San Antonio", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Alamo Mission in San Antonio"], "entity_annotations": ["Siege of the Alamo"], "answer_entity_name": null, "predicted_answer": "The siege of the Alamo (February 23", "extracted_entity": "Siege_of_the_Alamo"}
{"question": "where is 2009 AFL Grand Final located?", "answer": "Melbourne Cricket Ground", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Melbourne Cricket Ground"], "entity_annotations": ["2009 AFL Grand Final"], "answer_entity_name": null, "predicted_answer": "Melbourne Cricket Ground", "extracted_entity": "2009_AFL_Grand_Final"}
{"question": "where is Battle of the Paracel Islands located?", "answer": "Paracel Islands", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Paracel Islands"], "entity_annotations": ["Battle of the Paracel Islands"], "answer_entity_name": null, "predicted_answer": "The Paracel Islands, called Xisha Islands", "extracted_entity": "Battle_of_the_Paracel_Islands"}
{"question": "where is Battle of Quiberon Bay located?", "answer": "Quiberon Bay", "dataset": "entity_questions", "split": "test", "answer_aliases": ["Quiberon Bay"], "entity_annotations": ["Battle of Quiberon Bay"], "answer_entity_name": null, "predicted_answer": "off the coast of France near St. Nazaire", "extracted_entity": "Battle_of_Quiberon_Bay"}
